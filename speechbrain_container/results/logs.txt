2024/06/05 23:32:42 http2: server: error reading preface from client //./pipe/docker_engine: file has already been closed
#0 building with "default" instance using docker driver

#1 [internal] load .dockerignore
#1 transferring context: 2B done
#1 DONE 0.1s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 305B 0.0s done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/python:3.12
#3 DONE 1.9s

#4 [1/6] FROM docker.io/library/python:3.12@sha256:3966b81808d864099f802080d897cef36c01550472ab3955fdd716d1c665acd6
#4 resolve docker.io/library/python:3.12@sha256:3966b81808d864099f802080d897cef36c01550472ab3955fdd716d1c665acd6 0.0s done
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 778.25kB 0.1s done
#5 DONE 2.7s

#6 [2/6] WORKDIR /app
#6 CACHED

#7 [3/6] COPY requirements.txt .
#7 DONE 0.2s

#8 [4/6] RUN pip install --no-cache-dir -r requirements.txt
#8 5.693 Collecting speechbrain (from -r requirements.txt (line 1))
#8 5.846   Downloading speechbrain-1.0.0-py3-none-any.whl.metadata (23 kB)
#8 5.929 Collecting flask (from -r requirements.txt (line 2))
#8 5.958   Downloading flask-3.0.3-py3-none-any.whl.metadata (3.2 kB)
#8 6.116 Collecting torchaudio (from -r requirements.txt (line 3))
#8 6.161   Downloading torchaudio-2.3.1-cp312-cp312-manylinux1_x86_64.whl.metadata (6.4 kB)
#8 6.292 Collecting torch (from -r requirements.txt (line 4))
#8 6.318   Downloading torch-2.3.1-cp312-cp312-manylinux1_x86_64.whl.metadata (26 kB)
#8 6.470 Collecting torchvision (from -r requirements.txt (line 5))
#8 6.497   Downloading torchvision-0.18.1-cp312-cp312-manylinux1_x86_64.whl.metadata (6.6 kB)
#8 6.545 Collecting nltk (from -r requirements.txt (line 6))
#8 6.589   Downloading nltk-3.8.1-py3-none-any.whl.metadata (2.8 kB)
#8 6.733 Collecting transformers (from -r requirements.txt (line 7))
#8 6.776   Downloading transformers-4.41.2-py3-none-any.whl.metadata (43 kB)
#8 6.823      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 43.8/43.8 kB 72.5 MB/s eta 0:00:00
#8 6.873 Collecting librosa (from -r requirements.txt (line 8))
#8 6.925   Downloading librosa-0.10.2.post1-py3-none-any.whl.metadata (8.6 kB)
#8 6.979 Collecting soundfile (from -r requirements.txt (line 9))
#8 7.010   Downloading soundfile-0.12.1-py2.py3-none-manylinux_2_31_x86_64.whl.metadata (14 kB)
#8 7.070 Collecting hyperpyyaml (from speechbrain->-r requirements.txt (line 1))
#8 7.106   Downloading HyperPyYAML-1.2.2-py3-none-any.whl.metadata (7.6 kB)
#8 7.161 Collecting joblib (from speechbrain->-r requirements.txt (line 1))
#8 7.193   Downloading joblib-1.4.2-py3-none-any.whl.metadata (5.4 kB)
#8 7.691 Collecting numpy (from speechbrain->-r requirements.txt (line 1))
#8 7.729   Downloading numpy-1.26.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (61 kB)
#8 7.740      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 61.0/61.0 kB 12.4 MB/s eta 0:00:00
#8 7.811 Collecting packaging (from speechbrain->-r requirements.txt (line 1))
#8 7.843   Downloading packaging-24.0-py3-none-any.whl.metadata (3.2 kB)
#8 8.233 Collecting scipy (from speechbrain->-r requirements.txt (line 1))
#8 8.270   Downloading scipy-1.13.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (60 kB)
#8 8.279      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 60.6/60.6 kB 8.3 MB/s eta 0:00:00
#8 8.415 Collecting sentencepiece (from speechbrain->-r requirements.txt (line 1))
#8 8.443   Downloading sentencepiece-0.2.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (7.7 kB)
#8 8.552 Collecting tqdm (from speechbrain->-r requirements.txt (line 1))
#8 8.588   Downloading tqdm-4.66.4-py3-none-any.whl.metadata (57 kB)
#8 8.593      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 57.6/57.6 kB 18.5 MB/s eta 0:00:00
#8 8.691 Collecting huggingface-hub (from speechbrain->-r requirements.txt (line 1))
#8 8.718   Downloading huggingface_hub-0.23.3-py3-none-any.whl.metadata (12 kB)
#8 8.807 Collecting Werkzeug>=3.0.0 (from flask->-r requirements.txt (line 2))
#8 8.838   Downloading werkzeug-3.0.3-py3-none-any.whl.metadata (3.7 kB)
#8 8.886 Collecting Jinja2>=3.1.2 (from flask->-r requirements.txt (line 2))
#8 8.905   Downloading jinja2-3.1.4-py3-none-any.whl.metadata (2.6 kB)
#8 8.977 Collecting itsdangerous>=2.1.2 (from flask->-r requirements.txt (line 2))
#8 9.002   Downloading itsdangerous-2.2.0-py3-none-any.whl.metadata (1.9 kB)
#8 9.086 Collecting click>=8.1.3 (from flask->-r requirements.txt (line 2))
#8 9.135   Downloading click-8.1.7-py3-none-any.whl.metadata (3.0 kB)
#8 9.174 Collecting blinker>=1.6.2 (from flask->-r requirements.txt (line 2))
#8 9.197   Downloading blinker-1.8.2-py3-none-any.whl.metadata (1.6 kB)
#8 9.327 Collecting filelock (from torch->-r requirements.txt (line 4))
#8 9.359   Downloading filelock-3.14.0-py3-none-any.whl.metadata (2.8 kB)
#8 9.406 Collecting typing-extensions>=4.8.0 (from torch->-r requirements.txt (line 4))
#8 9.428   Downloading typing_extensions-4.12.1-py3-none-any.whl.metadata (3.0 kB)
#8 9.491 Collecting sympy (from torch->-r requirements.txt (line 4))
#8 9.515   Downloading sympy-1.12.1-py3-none-any.whl.metadata (12 kB)
#8 9.583 Collecting networkx (from torch->-r requirements.txt (line 4))
#8 9.611   Downloading networkx-3.3-py3-none-any.whl.metadata (5.1 kB)
#8 9.681 Collecting fsspec (from torch->-r requirements.txt (line 4))
#8 9.705   Downloading fsspec-2024.6.0-py3-none-any.whl.metadata (11 kB)
#8 9.772 Collecting nvidia-cuda-nvrtc-cu12==12.1.105 (from torch->-r requirements.txt (line 4))
#8 9.801   Downloading nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)
#8 9.862 Collecting nvidia-cuda-runtime-cu12==12.1.105 (from torch->-r requirements.txt (line 4))
#8 9.888   Downloading nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)
#8 9.960 Collecting nvidia-cuda-cupti-cu12==12.1.105 (from torch->-r requirements.txt (line 4))
#8 9.986   Downloading nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)
#8 10.05 Collecting nvidia-cudnn-cu12==8.9.2.26 (from torch->-r requirements.txt (line 4))
#8 10.07   Downloading nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)
#8 10.13 Collecting nvidia-cublas-cu12==12.1.3.1 (from torch->-r requirements.txt (line 4))
#8 10.15   Downloading nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)
#8 10.22 Collecting nvidia-cufft-cu12==11.0.2.54 (from torch->-r requirements.txt (line 4))
#8 10.25   Downloading nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)
#8 10.30 Collecting nvidia-curand-cu12==10.3.2.106 (from torch->-r requirements.txt (line 4))
#8 10.32   Downloading nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)
#8 10.37 Collecting nvidia-cusolver-cu12==11.4.5.107 (from torch->-r requirements.txt (line 4))
#8 10.40   Downloading nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)
#8 10.46 Collecting nvidia-cusparse-cu12==12.1.0.106 (from torch->-r requirements.txt (line 4))
#8 10.48   Downloading nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)
#8 10.56 Collecting nvidia-nccl-cu12==2.20.5 (from torch->-r requirements.txt (line 4))
#8 10.58   Downloading nvidia_nccl_cu12-2.20.5-py3-none-manylinux2014_x86_64.whl.metadata (1.8 kB)
#8 10.64 Collecting nvidia-nvtx-cu12==12.1.105 (from torch->-r requirements.txt (line 4))
#8 10.67   Downloading nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.7 kB)
#8 10.73 Collecting nvidia-nvjitlink-cu12 (from nvidia-cusolver-cu12==11.4.5.107->torch->-r requirements.txt (line 4))
#8 10.77   Downloading nvidia_nvjitlink_cu12-12.5.40-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)
#8 11.38 Collecting pillow!=8.3.*,>=5.3.0 (from torchvision->-r requirements.txt (line 5))
#8 11.40   Downloading pillow-10.3.0-cp312-cp312-manylinux_2_28_x86_64.whl.metadata (9.2 kB)
#8 12.54 Collecting regex>=2021.8.3 (from nltk->-r requirements.txt (line 6))
#8 12.57   Downloading regex-2024.5.15-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (40 kB)
#8 12.57      ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 40.9/40.9 kB 26.0 MB/s eta 0:00:00
#8 12.99 Collecting pyyaml>=5.1 (from transformers->-r requirements.txt (line 7))
#8 13.02   Downloading PyYAML-6.0.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.1 kB)
#8 13.15 Collecting requests (from transformers->-r requirements.txt (line 7))
#8 13.17   Downloading requests-2.32.3-py3-none-any.whl.metadata (4.6 kB)
#8 13.60 Collecting tokenizers<0.20,>=0.19 (from transformers->-r requirements.txt (line 7))
#8 13.63   Downloading tokenizers-0.19.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.7 kB)
#8 13.93 Collecting safetensors>=0.4.1 (from transformers->-r requirements.txt (line 7))
#8 13.95   Downloading safetensors-0.4.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.8 kB)
#8 14.05 Collecting audioread>=2.1.9 (from librosa->-r requirements.txt (line 8))
#8 14.09   Downloading audioread-3.0.1-py3-none-any.whl.metadata (8.4 kB)
#8 14.33 Collecting scikit-learn>=0.20.0 (from librosa->-r requirements.txt (line 8))
#8 14.35   Downloading scikit_learn-1.5.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)
#8 14.40 Collecting decorator>=4.3.0 (from librosa->-r requirements.txt (line 8))
#8 14.42   Downloading decorator-5.1.1-py3-none-any.whl.metadata (4.0 kB)
#8 14.64 Collecting numba>=0.51.0 (from librosa->-r requirements.txt (line 8))
#8 14.68   Downloading numba-0.59.1-cp312-cp312-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (2.7 kB)
#8 14.75 Collecting pooch>=1.1 (from librosa->-r requirements.txt (line 8))
#8 14.77   Downloading pooch-1.8.1-py3-none-any.whl.metadata (9.5 kB)
#8 14.93 Collecting soxr>=0.3.2 (from librosa->-r requirements.txt (line 8))
#8 14.97   Downloading soxr-0.3.7-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.5 kB)
#8 15.02 Collecting lazy-loader>=0.1 (from librosa->-r requirements.txt (line 8))
#8 15.04   Downloading lazy_loader-0.4-py3-none-any.whl.metadata (7.6 kB)
#8 15.21 Collecting msgpack>=1.0 (from librosa->-r requirements.txt (line 8))
#8 15.25   Downloading msgpack-1.0.8-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.1 kB)
#8 15.57 Collecting cffi>=1.0 (from soundfile->-r requirements.txt (line 9))
#8 15.63   Downloading cffi-1.16.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.5 kB)
#8 15.68 Collecting pycparser (from cffi>=1.0->soundfile->-r requirements.txt (line 9))
#8 15.71   Downloading pycparser-2.22-py3-none-any.whl.metadata (943 bytes)
#8 16.00 Collecting MarkupSafe>=2.0 (from Jinja2>=3.1.2->flask->-r requirements.txt (line 2))
#8 16.02   Downloading MarkupSafe-2.1.5-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.0 kB)
#8 16.25 Collecting llvmlite<0.43,>=0.42.0dev0 (from numba>=0.51.0->librosa->-r requirements.txt (line 8))
#8 16.28   Downloading llvmlite-0.42.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.8 kB)
#8 16.40 Collecting platformdirs>=2.5.0 (from pooch>=1.1->librosa->-r requirements.txt (line 8))
#8 16.42   Downloading platformdirs-4.2.2-py3-none-any.whl.metadata (11 kB)
#8 16.64 Collecting charset-normalizer<4,>=2 (from requests->transformers->-r requirements.txt (line 7))
#8 16.67   Downloading charset_normalizer-3.3.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (33 kB)
#8 16.72 Collecting idna<4,>=2.5 (from requests->transformers->-r requirements.txt (line 7))
#8 16.74   Downloading idna-3.7-py3-none-any.whl.metadata (9.9 kB)
#8 16.84 Collecting urllib3<3,>=1.21.1 (from requests->transformers->-r requirements.txt (line 7))
#8 16.87   Downloading urllib3-2.2.1-py3-none-any.whl.metadata (6.4 kB)
#8 16.94 Collecting certifi>=2017.4.17 (from requests->transformers->-r requirements.txt (line 7))
#8 16.97   Downloading certifi-2024.6.2-py3-none-any.whl.metadata (2.2 kB)
#8 17.13 Collecting threadpoolctl>=3.1.0 (from scikit-learn>=0.20.0->librosa->-r requirements.txt (line 8))
#8 17.16   Downloading threadpoolctl-3.5.0-py3-none-any.whl.metadata (13 kB)
#8 17.83 Collecting ruamel.yaml>=0.17.28 (from hyperpyyaml->speechbrain->-r requirements.txt (line 1))
#8 17.85   Downloading ruamel.yaml-0.18.6-py3-none-any.whl.metadata (23 kB)
#8 18.10 Collecting mpmath<1.4.0,>=1.1.0 (from sympy->torch->-r requirements.txt (line 4))
#8 18.15   Downloading mpmath-1.3.0-py3-none-any.whl.metadata (8.6 kB)
#8 18.29 Collecting ruamel.yaml.clib>=0.2.7 (from ruamel.yaml>=0.17.28->hyperpyyaml->speechbrain->-r requirements.txt (line 1))
#8 18.32   Downloading ruamel.yaml.clib-0.2.8-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl.metadata (2.2 kB)
#8 18.42 Downloading speechbrain-1.0.0-py3-none-any.whl (760 kB)
#8 18.59    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 760.1/760.1 kB 4.6 MB/s eta 0:00:00
#8 18.62 Downloading flask-3.0.3-py3-none-any.whl (101 kB)
#8 18.62    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 101.7/101.7 kB 22.7 MB/s eta 0:00:00
#8 18.65 Downloading torchaudio-2.3.1-cp312-cp312-manylinux1_x86_64.whl (3.4 MB)
#8 19.20    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.4/3.4 MB 6.1 MB/s eta 0:00:00
#8 19.23 Downloading torch-2.3.1-cp312-cp312-manylinux1_x86_64.whl (779.1 MB)
#8 108.9    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 779.1/779.1 MB 7.9 MB/s eta 0:00:00
#8 109.0 Downloading nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl (410.6 MB)
#8 149.1    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 410.6/410.6 MB 13.1 MB/s eta 0:00:00
#8 149.2 Downloading nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (14.1 MB)
#8 150.4    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 14.1/14.1 MB 12.6 MB/s eta 0:00:00
#8 150.4 Downloading nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (23.7 MB)
#8 152.7    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 23.7/23.7 MB 10.7 MB/s eta 0:00:00
#8 152.7 Downloading nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (823 kB)
#8 152.8    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 823.6/823.6 kB 8.7 MB/s eta 0:00:00
#8 152.8 Downloading nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl (731.7 MB)
#8 229.3    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 731.7/731.7 MB 8.6 MB/s eta 0:00:00
#8 229.4 Downloading nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl (121.6 MB)
#8 242.4    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 121.6/121.6 MB 12.0 MB/s eta 0:00:00
#8 242.4 Downloading nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl (56.5 MB)
#8 247.6    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 56.5/56.5 MB 11.3 MB/s eta 0:00:00
#8 247.6 Downloading nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl (124.2 MB)
#8 258.4    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 124.2/124.2 MB 10.0 MB/s eta 0:00:00
#8 258.5 Downloading nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl (196.0 MB)
#8 279.0    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 196.0/196.0 MB 7.4 MB/s eta 0:00:00
#8 279.1 Downloading nvidia_nccl_cu12-2.20.5-py3-none-manylinux2014_x86_64.whl (176.2 MB)
#8 299.0    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 176.2/176.2 MB 7.2 MB/s eta 0:00:00
#8 299.0 Downloading nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (99 kB)
#8 299.0    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 99.1/99.1 kB 21.0 MB/s eta 0:00:00
#8 299.1 Downloading torchvision-0.18.1-cp312-cp312-manylinux1_x86_64.whl (7.0 MB)
#8 299.9    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 7.0/7.0 MB 8.4 MB/s eta 0:00:00
#8 299.9 Downloading nltk-3.8.1-py3-none-any.whl (1.5 MB)
#8 300.1    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.5/1.5 MB 8.4 MB/s eta 0:00:00
#8 300.1 Downloading transformers-4.41.2-py3-none-any.whl (9.1 MB)
#8 301.2    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 9.1/9.1 MB 8.9 MB/s eta 0:00:00
#8 301.2 Downloading librosa-0.10.2.post1-py3-none-any.whl (260 kB)
#8 301.2    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 260.1/260.1 kB 15.7 MB/s eta 0:00:00
#8 301.2 Downloading soundfile-0.12.1-py2.py3-none-manylinux_2_31_x86_64.whl (1.2 MB)
#8 301.4    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 10.6 MB/s eta 0:00:00
#8 301.4 Downloading audioread-3.0.1-py3-none-any.whl (23 kB)
#8 301.4 Downloading blinker-1.8.2-py3-none-any.whl (9.5 kB)
#8 301.4 Downloading cffi-1.16.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (477 kB)
#8 301.5    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 477.6/477.6 kB 7.1 MB/s eta 0:00:00
#8 301.6 Downloading click-8.1.7-py3-none-any.whl (97 kB)
#8 301.6    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 97.9/97.9 kB 15.0 MB/s eta 0:00:00
#8 301.6 Downloading decorator-5.1.1-py3-none-any.whl (9.1 kB)
#8 301.6 Downloading huggingface_hub-0.23.3-py3-none-any.whl (401 kB)
#8 301.7    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 401.7/401.7 kB 13.5 MB/s eta 0:00:00
#8 301.7 Downloading fsspec-2024.6.0-py3-none-any.whl (176 kB)
#8 301.7    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 176.9/176.9 kB 12.6 MB/s eta 0:00:00
#8 301.7 Downloading itsdangerous-2.2.0-py3-none-any.whl (16 kB)
#8 301.8 Downloading jinja2-3.1.4-py3-none-any.whl (133 kB)
#8 301.8    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 133.3/133.3 kB 17.0 MB/s eta 0:00:00
#8 301.8 Downloading joblib-1.4.2-py3-none-any.whl (301 kB)
#8 301.9    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 301.8/301.8 kB 3.9 MB/s eta 0:00:00
#8 301.9 Downloading lazy_loader-0.4-py3-none-any.whl (12 kB)
#8 301.9 Downloading msgpack-1.0.8-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (408 kB)
#8 302.0    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 408.3/408.3 kB 14.5 MB/s eta 0:00:00
#8 302.0 Downloading numba-0.59.1-cp312-cp312-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (3.7 MB)
#8 302.4    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.7/3.7 MB 10.6 MB/s eta 0:00:00
#8 302.4 Downloading numpy-1.26.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (18.0 MB)
#8 304.2    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 18.0/18.0 MB 8.9 MB/s eta 0:00:00
#8 304.3 Downloading packaging-24.0-py3-none-any.whl (53 kB)
#8 304.3    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 53.5/53.5 kB 7.0 MB/s eta 0:00:00
#8 304.3 Downloading pillow-10.3.0-cp312-cp312-manylinux_2_28_x86_64.whl (4.5 MB)
#8 304.8    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.5/4.5 MB 9.0 MB/s eta 0:00:00
#8 304.8 Downloading pooch-1.8.1-py3-none-any.whl (62 kB)
#8 304.8    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 63.0/63.0 kB 11.5 MB/s eta 0:00:00
#8 304.9 Downloading PyYAML-6.0.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (724 kB)
#8 304.9    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 725.0/725.0 kB 13.9 MB/s eta 0:00:00
#8 305.0 Downloading regex-2024.5.15-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (788 kB)
#8 305.1    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 788.8/788.8 kB 13.1 MB/s eta 0:00:00
#8 305.1 Downloading requests-2.32.3-py3-none-any.whl (64 kB)
#8 305.1    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 64.9/64.9 kB 39.6 MB/s eta 0:00:00
#8 305.1 Downloading safetensors-0.4.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.2 MB)
#8 305.3    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 6.6 MB/s eta 0:00:00
#8 305.3 Downloading scikit_learn-1.5.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.1 MB)
#8 306.6    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 13.1/13.1 MB 10.6 MB/s eta 0:00:00
#8 306.7 Downloading scipy-1.13.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (38.2 MB)
#8 310.5    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 38.2/38.2 MB 10.3 MB/s eta 0:00:00
#8 310.5 Downloading soxr-0.3.7-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)
#8 310.7    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 11.9 MB/s eta 0:00:00
#8 310.7 Downloading tokenizers-0.19.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.6 MB)
#8 311.1    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.6/3.6 MB 8.3 MB/s eta 0:00:00
#8 311.2 Downloading tqdm-4.66.4-py3-none-any.whl (78 kB)
#8 311.2    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 78.3/78.3 kB 14.0 MB/s eta 0:00:00
#8 311.2 Downloading typing_extensions-4.12.1-py3-none-any.whl (37 kB)
#8 311.2 Downloading werkzeug-3.0.3-py3-none-any.whl (227 kB)
#8 311.3    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 227.3/227.3 kB 16.8 MB/s eta 0:00:00
#8 311.3 Downloading filelock-3.14.0-py3-none-any.whl (12 kB)
#8 311.3 Downloading HyperPyYAML-1.2.2-py3-none-any.whl (16 kB)
#8 311.3 Downloading networkx-3.3-py3-none-any.whl (1.7 MB)
#8 311.5    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.7/1.7 MB 9.9 MB/s eta 0:00:00
#8 311.5 Downloading sentencepiece-0.2.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)
#8 311.7    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 8.8 MB/s eta 0:00:00
#8 311.7 Downloading sympy-1.12.1-py3-none-any.whl (5.7 MB)
#8 312.3    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 5.7/5.7 MB 10.6 MB/s eta 0:00:00
#8 312.3 Downloading certifi-2024.6.2-py3-none-any.whl (164 kB)
#8 312.3    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 164.4/164.4 kB 14.6 MB/s eta 0:00:00
#8 312.3 Downloading charset_normalizer-3.3.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (141 kB)
#8 312.3    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 141.9/141.9 kB 18.0 MB/s eta 0:00:00
#8 312.4 Downloading idna-3.7-py3-none-any.whl (66 kB)
#8 312.4    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 66.8/66.8 kB 27.3 MB/s eta 0:00:00
#8 312.4 Downloading llvmlite-0.42.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (43.8 MB)
#8 316.7    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 43.8/43.8 MB 9.9 MB/s eta 0:00:00
#8 316.7 Downloading MarkupSafe-2.1.5-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (28 kB)
#8 316.7 Downloading mpmath-1.3.0-py3-none-any.whl (536 kB)
#8 316.8    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 536.2/536.2 kB 12.3 MB/s eta 0:00:00
#8 316.8 Downloading platformdirs-4.2.2-py3-none-any.whl (18 kB)
#8 316.8 Downloading ruamel.yaml-0.18.6-py3-none-any.whl (117 kB)
#8 316.9    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 117.8/117.8 kB 31.2 MB/s eta 0:00:00
#8 316.9 Downloading threadpoolctl-3.5.0-py3-none-any.whl (18 kB)
#8 316.9 Downloading urllib3-2.2.1-py3-none-any.whl (121 kB)
#8 316.9    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 121.1/121.1 kB 47.2 MB/s eta 0:00:00
#8 316.9 Downloading nvidia_nvjitlink_cu12-12.5.40-py3-none-manylinux2014_x86_64.whl (21.3 MB)
#8 319.1    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 21.3/21.3 MB 10.1 MB/s eta 0:00:00
#8 319.1 Downloading pycparser-2.22-py3-none-any.whl (117 kB)
#8 319.1    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 117.6/117.6 kB 4.9 MB/s eta 0:00:00
#8 319.1 Downloading ruamel.yaml.clib-0.2.8-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl (734 kB)
#8 319.2    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 734.6/734.6 kB 9.8 MB/s eta 0:00:00
#8 327.1 Installing collected packages: sentencepiece, mpmath, urllib3, typing-extensions, tqdm, threadpoolctl, sympy, safetensors, ruamel.yaml.clib, regex, pyyaml, pycparser, platformdirs, pillow, packaging, nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, numpy, networkx, msgpack, MarkupSafe, llvmlite, joblib, itsdangerous, idna, fsspec, filelock, decorator, click, charset-normalizer, certifi, blinker, audioread, Werkzeug, soxr, scipy, ruamel.yaml, requests, nvidia-cusparse-cu12, nvidia-cudnn-cu12, numba, nltk, lazy-loader, Jinja2, cffi, soundfile, scikit-learn, pooch, nvidia-cusolver-cu12, hyperpyyaml, huggingface-hub, flask, torch, tokenizers, librosa, transformers, torchvision, torchaudio, speechbrain
#8 445.7 Successfully installed Jinja2-3.1.4 MarkupSafe-2.1.5 Werkzeug-3.0.3 audioread-3.0.1 blinker-1.8.2 certifi-2024.6.2 cffi-1.16.0 charset-normalizer-3.3.2 click-8.1.7 decorator-5.1.1 filelock-3.14.0 flask-3.0.3 fsspec-2024.6.0 huggingface-hub-0.23.3 hyperpyyaml-1.2.2 idna-3.7 itsdangerous-2.2.0 joblib-1.4.2 lazy-loader-0.4 librosa-0.10.2.post1 llvmlite-0.42.0 mpmath-1.3.0 msgpack-1.0.8 networkx-3.3 nltk-3.8.1 numba-0.59.1 numpy-1.26.4 nvidia-cublas-cu12-12.1.3.1 nvidia-cuda-cupti-cu12-12.1.105 nvidia-cuda-nvrtc-cu12-12.1.105 nvidia-cuda-runtime-cu12-12.1.105 nvidia-cudnn-cu12-8.9.2.26 nvidia-cufft-cu12-11.0.2.54 nvidia-curand-cu12-10.3.2.106 nvidia-cusolver-cu12-11.4.5.107 nvidia-cusparse-cu12-12.1.0.106 nvidia-nccl-cu12-2.20.5 nvidia-nvjitlink-cu12-12.5.40 nvidia-nvtx-cu12-12.1.105 packaging-24.0 pillow-10.3.0 platformdirs-4.2.2 pooch-1.8.1 pycparser-2.22 pyyaml-6.0.1 regex-2024.5.15 requests-2.32.3 ruamel.yaml-0.18.6 ruamel.yaml.clib-0.2.8 safetensors-0.4.3 scikit-learn-1.5.0 scipy-1.13.1 sentencepiece-0.2.0 soundfile-0.12.1 soxr-0.3.7 speechbrain-1.0.0 sympy-1.12.1 threadpoolctl-3.5.0 tokenizers-0.19.1 torch-2.3.1 torchaudio-2.3.1 torchvision-0.18.1 tqdm-4.66.4 transformers-4.41.2 typing-extensions-4.12.1 urllib3-2.2.1
#8 445.7 WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
#8 DONE 449.6s

#9 [5/6] RUN apt-get update &&     apt-get install -y ffmpeg
#9 1.598 Get:1 http://deb.debian.org/debian bookworm InRelease [151 kB]
#9 1.687 Get:2 http://deb.debian.org/debian bookworm-updates InRelease [55.4 kB]
#9 1.760 Get:3 http://deb.debian.org/debian-security bookworm-security InRelease [48.0 kB]
#9 1.889 Get:4 http://deb.debian.org/debian bookworm/main amd64 Packages [8786 kB]
#9 3.240 Get:5 http://deb.debian.org/debian bookworm-updates/main amd64 Packages [13.8 kB]
#9 3.281 Get:6 http://deb.debian.org/debian-security bookworm-security/main amd64 Packages [158 kB]
#9 4.130 Fetched 9213 kB in 3s (3455 kB/s)
#9 4.130 Reading package lists...
#9 4.811 Reading package lists...
#9 5.332 Building dependency tree...
#9 5.445 Reading state information...
#9 5.675 The following additional packages will be installed:
#9 5.675   alsa-topology-conf alsa-ucm-conf dbus dbus-bin dbus-daemon
#9 5.676   dbus-session-bus-common dbus-system-bus-common i965-va-driver
#9 5.676   intel-media-va-driver libaacs0 libapparmor1 libasound2 libasound2-data
#9 5.676   libass9 libasyncns0 libavc1394-0 libavcodec59 libavdevice59 libavfilter8
#9 5.676   libavformat59 libavutil57 libbdplus0 libblas3 libbluray2 libbs2b0 libcaca0
#9 5.677   libcdio-cdda2 libcdio-paranoia2 libcdio19 libchromaprint1 libcjson1
#9 5.677   libcodec2-1.0 libdbus-1-3 libdc1394-25 libdecor-0-0
#9 5.677   libdecor-0-plugin-1-cairo libdrm-amdgpu1 libdrm-common libdrm-intel1
#9 5.677   libdrm-nouveau2 libdrm-radeon1 libdrm2 libepoxy0 libflac12 libflite1 libgbm1
#9 5.677   libgfortran5 libgl1 libgl1-mesa-dri libglapi-mesa libglvnd0 libglx-mesa0
#9 5.677   libglx0 libgme0 libgsm1 libhwy1 libiec61883-0 libigdgmm12 libjack-jackd2-0
#9 5.678   libjxl0.7 liblapack3 liblilv-0-0 libllvm15 libmbedcrypto7 libmfx1
#9 5.678   libmp3lame0 libmpg123-0 libmysofa1 libnorm1 libogg0 libopenal-data
#9 5.678   libopenal1 libopenmpt0 libopus0 libpciaccess0 libpgm-5.3-0 libplacebo208
#9 5.678   libpocketsphinx3 libpostproc56 libpulse0 librabbitmq4 librav1e0
#9 5.678   libraw1394-11 librist4 librubberband2 libsamplerate0 libsdl2-2.0-0
#9 5.678   libsensors-config libsensors5 libserd-0-0 libshine3 libslang2 libsnappy1v5
#9 5.678   libsndfile1 libsndio7.0 libsodium23 libsord-0-0 libsoxr0 libspeex1
#9 5.679   libsphinxbase3 libsratom-0-0 libsrt1.5-gnutls libssh-gcrypt-4 libsvtav1enc1
#9 5.679   libswresample4 libswscale6 libtheora0 libtwolame0 libudfread0 libusb-1.0-0
#9 5.679   libva-drm2 libva-x11-2 libva2 libvdpau-va-gl1 libvdpau1 libvidstab1.1
#9 5.679   libvorbis0a libvorbisenc2 libvorbisfile3 libvpx7 libvulkan1
#9 5.679   libwayland-client0 libwayland-cursor0 libwayland-egl1 libwayland-server0
#9 5.679   libx11-xcb1 libx264-164 libxcb-dri2-0 libxcb-dri3-0 libxcb-glx0
#9 5.679   libxcb-present0 libxcb-randr0 libxcb-shape0 libxcb-sync1 libxcb-xfixes0
#9 5.679   libxcursor1 libxfixes3 libxi6 libxkbcommon0 libxrandr2 libxshmfence1 libxv1
#9 5.679   libxvidcore4 libxxf86vm1 libz3-4 libzimg2 libzmq5 libzvbi-common libzvbi0
#9 5.679   mesa-va-drivers mesa-vdpau-drivers mesa-vulkan-drivers ocl-icd-libopencl1
#9 5.680   pocketsphinx-en-us va-driver-all vdpau-driver-all xkb-data
#9 5.683 Suggested packages:
#9 5.683   default-dbus-session-bus | dbus-session-bus ffmpeg-doc
#9 5.683   i965-va-driver-shaders libasound2-plugins alsa-utils libcuda1 libnvcuvid1
#9 5.683   libnvidia-encode1 libbluray-bdj jackd2 libportaudio2 opus-tools pciutils
#9 5.683   pulseaudio libraw1394-doc xdg-utils lm-sensors serdi sndiod sordi speex
#9 5.683   opencl-icd nvidia-vdpau-driver nvidia-tesla-440-vdpau-driver
#9 5.683   nvidia-tesla-418-vdpau-driver nvidia-legacy-390xx-vdpau-driver
#9 5.683   nvidia-legacy-340xx-vdpau-driver
#9 6.283 The following NEW packages will be installed:
#9 6.283   alsa-topology-conf alsa-ucm-conf dbus dbus-bin dbus-daemon
#9 6.283   dbus-session-bus-common dbus-system-bus-common ffmpeg i965-va-driver
#9 6.283   intel-media-va-driver libaacs0 libapparmor1 libasound2 libasound2-data
#9 6.283   libass9 libasyncns0 libavc1394-0 libavcodec59 libavdevice59 libavfilter8
#9 6.283   libavformat59 libavutil57 libbdplus0 libblas3 libbluray2 libbs2b0 libcaca0
#9 6.283   libcdio-cdda2 libcdio-paranoia2 libcdio19 libchromaprint1 libcjson1
#9 6.283   libcodec2-1.0 libdbus-1-3 libdc1394-25 libdecor-0-0
#9 6.283   libdecor-0-plugin-1-cairo libdrm-amdgpu1 libdrm-common libdrm-intel1
#9 6.283   libdrm-nouveau2 libdrm-radeon1 libdrm2 libepoxy0 libflac12 libflite1 libgbm1
#9 6.284   libgfortran5 libgl1 libgl1-mesa-dri libglapi-mesa libglvnd0 libglx-mesa0
#9 6.284   libglx0 libgme0 libgsm1 libhwy1 libiec61883-0 libigdgmm12 libjack-jackd2-0
#9 6.284   libjxl0.7 liblapack3 liblilv-0-0 libllvm15 libmbedcrypto7 libmfx1
#9 6.284   libmp3lame0 libmpg123-0 libmysofa1 libnorm1 libogg0 libopenal-data
#9 6.284   libopenal1 libopenmpt0 libopus0 libpciaccess0 libpgm-5.3-0 libplacebo208
#9 6.284   libpocketsphinx3 libpostproc56 libpulse0 librabbitmq4 librav1e0
#9 6.285   libraw1394-11 librist4 librubberband2 libsamplerate0 libsdl2-2.0-0
#9 6.285   libsensors-config libsensors5 libserd-0-0 libshine3 libslang2 libsnappy1v5
#9 6.285   libsndfile1 libsndio7.0 libsodium23 libsord-0-0 libsoxr0 libspeex1
#9 6.285   libsphinxbase3 libsratom-0-0 libsrt1.5-gnutls libssh-gcrypt-4 libsvtav1enc1
#9 6.285   libswresample4 libswscale6 libtheora0 libtwolame0 libudfread0 libusb-1.0-0
#9 6.285   libva-drm2 libva-x11-2 libva2 libvdpau-va-gl1 libvdpau1 libvidstab1.1
#9 6.285   libvorbis0a libvorbisenc2 libvorbisfile3 libvpx7 libvulkan1
#9 6.285   libwayland-client0 libwayland-cursor0 libwayland-egl1 libwayland-server0
#9 6.285   libx11-xcb1 libx264-164 libxcb-dri2-0 libxcb-dri3-0 libxcb-glx0
#9 6.285   libxcb-present0 libxcb-randr0 libxcb-shape0 libxcb-sync1 libxcb-xfixes0
#9 6.285   libxcursor1 libxfixes3 libxi6 libxkbcommon0 libxrandr2 libxshmfence1 libxv1
#9 6.286   libxvidcore4 libxxf86vm1 libz3-4 libzimg2 libzmq5 libzvbi-common libzvbi0
#9 6.286   mesa-va-drivers mesa-vdpau-drivers mesa-vulkan-drivers ocl-icd-libopencl1
#9 6.287   pocketsphinx-en-us va-driver-all vdpau-driver-all xkb-data
#9 6.350 0 upgraded, 158 newly installed, 0 to remove and 0 not upgraded.
#9 6.350 Need to get 144 MB of archives.
#9 6.350 After this operation, 480 MB of additional disk space will be used.
#9 6.350 Get:1 http://deb.debian.org/debian bookworm/main amd64 libdbus-1-3 amd64 1.14.10-1~deb12u1 [201 kB]
#9 6.470 Get:2 http://deb.debian.org/debian bookworm/main amd64 dbus-bin amd64 1.14.10-1~deb12u1 [105 kB]
#9 6.571 Get:3 http://deb.debian.org/debian bookworm/main amd64 dbus-session-bus-common all 1.14.10-1~deb12u1 [78.2 kB]
#9 6.649 Get:4 http://deb.debian.org/debian bookworm/main amd64 libapparmor1 amd64 3.0.8-3 [41.2 kB]
#9 6.706 Get:5 http://deb.debian.org/debian bookworm/main amd64 dbus-daemon amd64 1.14.10-1~deb12u1 [184 kB]
#9 6.818 Get:6 http://deb.debian.org/debian bookworm/main amd64 dbus-system-bus-common all 1.14.10-1~deb12u1 [79.3 kB]
#9 6.902 Get:7 http://deb.debian.org/debian bookworm/main amd64 dbus amd64 1.14.10-1~deb12u1 [97.4 kB]
#9 6.966 Get:8 http://deb.debian.org/debian bookworm/main amd64 alsa-topology-conf all 1.2.5.1-2 [15.2 kB]
#9 7.029 Get:9 http://deb.debian.org/debian bookworm/main amd64 libasound2-data all 1.2.8-1 [20.5 kB]
#9 7.071 Get:10 http://deb.debian.org/debian bookworm/main amd64 libasound2 amd64 1.2.8-1+b1 [362 kB]
#9 7.251 Get:11 http://deb.debian.org/debian bookworm/main amd64 alsa-ucm-conf all 1.2.8-1 [51.7 kB]
#9 7.319 Get:12 http://deb.debian.org/debian bookworm/main amd64 libdrm-common all 2.4.114-1 [7112 B]
#9 7.366 Get:13 http://deb.debian.org/debian bookworm/main amd64 libdrm2 amd64 2.4.114-1+b1 [37.5 kB]
#9 7.414 Get:14 http://deb.debian.org/debian bookworm/main amd64 libva2 amd64 2.17.0-1 [69.2 kB]
#9 7.476 Get:15 http://deb.debian.org/debian bookworm/main amd64 libmfx1 amd64 22.5.4-1 [3219 kB]
#9 7.947 Get:16 http://deb.debian.org/debian bookworm/main amd64 libva-drm2 amd64 2.17.0-1 [16.4 kB]
#9 7.989 Get:17 http://deb.debian.org/debian bookworm/main amd64 libx11-xcb1 amd64 2:1.8.4-2+deb12u2 [192 kB]
#9 8.091 Get:18 http://deb.debian.org/debian bookworm/main amd64 libxcb-dri3-0 amd64 1.15-1 [107 kB]
#9 8.186 Get:19 http://deb.debian.org/debian bookworm/main amd64 libxfixes3 amd64 1:6.0.0-2 [22.7 kB]
#9 8.246 Get:20 http://deb.debian.org/debian bookworm/main amd64 libva-x11-2 amd64 2.17.0-1 [21.0 kB]
#9 8.370 Get:21 http://deb.debian.org/debian bookworm/main amd64 libvdpau1 amd64 1.5-2 [26.1 kB]
#9 8.418 Get:22 http://deb.debian.org/debian bookworm/main amd64 ocl-icd-libopencl1 amd64 2.3.1-1 [43.0 kB]
#9 8.470 Get:23 http://deb.debian.org/debian bookworm/main amd64 libavutil57 amd64 7:5.1.4-0+deb12u1 [360 kB]
#9 8.587 Get:24 http://deb.debian.org/debian bookworm/main amd64 libcodec2-1.0 amd64 1.0.5-1 [8171 kB]
#9 9.457 Get:25 http://deb.debian.org/debian bookworm/main amd64 libgsm1 amd64 1.0.22-1 [30.9 kB]
#9 9.511 Get:26 http://deb.debian.org/debian bookworm/main amd64 libhwy1 amd64 1.0.3-3+deb12u1 [348 kB]
#9 9.699 Get:27 http://deb.debian.org/debian bookworm/main amd64 libjxl0.7 amd64 0.7.0-10 [1046 kB]
#9 9.921 Get:28 http://deb.debian.org/debian bookworm/main amd64 libmp3lame0 amd64 3.100-6 [365 kB]
#9 10.07 Get:29 http://deb.debian.org/debian bookworm/main amd64 libopus0 amd64 1.3.1-3 [195 kB]
#9 10.18 Get:30 http://deb.debian.org/debian bookworm/main amd64 librav1e0 amd64 0.5.1-6 [763 kB]
#9 10.34 Get:31 http://deb.debian.org/debian bookworm/main amd64 libshine3 amd64 3.1.1-2 [23.6 kB]
#9 10.38 Get:32 http://deb.debian.org/debian bookworm/main amd64 libsnappy1v5 amd64 1.1.9-3 [26.0 kB]
#9 10.43 Get:33 http://deb.debian.org/debian bookworm/main amd64 libspeex1 amd64 1.2.1-2 [54.6 kB]
#9 10.54 Get:34 http://deb.debian.org/debian bookworm/main amd64 libsvtav1enc1 amd64 1.4.1+dfsg-1 [2121 kB]
#9 10.94 Get:35 http://deb.debian.org/debian bookworm/main amd64 libsoxr0 amd64 0.1.3-4 [77.8 kB]
#9 11.01 Get:36 http://deb.debian.org/debian bookworm/main amd64 libswresample4 amd64 7:5.1.4-0+deb12u1 [94.5 kB]
#9 11.09 Get:37 http://deb.debian.org/debian bookworm/main amd64 libogg0 amd64 1.3.5-3 [23.4 kB]
#9 11.18 Get:38 http://deb.debian.org/debian bookworm/main amd64 libtheora0 amd64 1.1.1+dfsg.1-16.1+b1 [154 kB]
#9 11.28 Get:39 http://deb.debian.org/debian bookworm/main amd64 libtwolame0 amd64 0.4.0-2 [51.1 kB]
#9 11.34 Get:40 http://deb.debian.org/debian bookworm/main amd64 libvorbis0a amd64 1.3.7-1 [93.0 kB]
#9 11.42 Get:41 http://deb.debian.org/debian bookworm/main amd64 libvorbisenc2 amd64 1.3.7-1 [80.6 kB]
#9 11.47 Get:42 http://deb.debian.org/debian bookworm/main amd64 libvpx7 amd64 1.12.0-1+deb12u2 [1003 kB]
#9 11.71 Get:43 http://deb.debian.org/debian bookworm/main amd64 libx264-164 amd64 2:0.164.3095+gitbaee400-3 [547 kB]
#9 11.86 Get:44 http://deb.debian.org/debian bookworm/main amd64 libxvidcore4 amd64 2:1.3.7-1 [242 kB]
#9 11.98 Get:45 http://deb.debian.org/debian bookworm/main amd64 libzvbi-common all 0.2.41-1 [69.7 kB]
#9 12.05 Get:46 http://deb.debian.org/debian bookworm/main amd64 libzvbi0 amd64 0.2.41-1 [274 kB]
#9 12.16 Get:47 http://deb.debian.org/debian bookworm/main amd64 libavcodec59 amd64 7:5.1.4-0+deb12u1 [5219 kB]
#9 12.84 Get:48 http://deb.debian.org/debian bookworm/main amd64 libraw1394-11 amd64 2.1.2-2 [41.1 kB]
#9 12.89 Get:49 http://deb.debian.org/debian bookworm/main amd64 libavc1394-0 amd64 0.5.4-5 [19.9 kB]
#9 12.95 Get:50 http://deb.debian.org/debian bookworm/main amd64 libass9 amd64 1:0.17.1-1 [107 kB]
#9 13.03 Get:51 http://deb.debian.org/debian bookworm/main amd64 libudfread0 amd64 1.1.2-1 [16.5 kB]
#9 13.09 Get:52 http://deb.debian.org/debian bookworm/main amd64 libbluray2 amd64 1:1.3.4-1 [138 kB]
#9 13.17 Get:53 http://deb.debian.org/debian bookworm/main amd64 libchromaprint1 amd64 1.5.1-2+b1 [41.0 kB]
#9 13.23 Get:54 http://deb.debian.org/debian bookworm/main amd64 libgme0 amd64 0.6.3-6 [130 kB]
#9 13.36 Get:55 http://deb.debian.org/debian bookworm/main amd64 libmpg123-0 amd64 1.31.2-1 [147 kB]
#9 13.45 Get:56 http://deb.debian.org/debian bookworm/main amd64 libvorbisfile3 amd64 1.3.7-1 [26.1 kB]
#9 13.51 Get:57 http://deb.debian.org/debian bookworm/main amd64 libopenmpt0 amd64 0.6.9-1 [693 kB]
#9 13.71 Get:58 http://deb.debian.org/debian bookworm/main amd64 librabbitmq4 amd64 0.11.0-1+b1 [43.5 kB]
#9 13.77 Get:59 http://deb.debian.org/debian bookworm/main amd64 libcjson1 amd64 1.7.15-1 [22.9 kB]
#9 13.82 Get:60 http://deb.debian.org/debian bookworm/main amd64 libmbedcrypto7 amd64 2.28.3-1 [277 kB]
#9 13.96 Get:61 http://deb.debian.org/debian bookworm/main amd64 librist4 amd64 0.2.7+dfsg-1 [73.9 kB]
#9 14.03 Get:62 http://deb.debian.org/debian bookworm/main amd64 libsrt1.5-gnutls amd64 1.5.1-1 [313 kB]
#9 14.30 Get:63 http://deb.debian.org/debian bookworm/main amd64 libssh-gcrypt-4 amd64 0.10.6-0+deb12u1 [219 kB]
#9 14.41 Get:64 http://deb.debian.org/debian bookworm/main amd64 libnorm1 amd64 1.5.9+dfsg-2 [221 kB]
#9 14.51 Get:65 http://deb.debian.org/debian bookworm/main amd64 libpgm-5.3-0 amd64 5.3.128~dfsg-2 [161 kB]
#9 14.60 Get:66 http://deb.debian.org/debian bookworm/main amd64 libsodium23 amd64 1.0.18-1 [161 kB]
#9 14.69 Get:67 http://deb.debian.org/debian bookworm/main amd64 libzmq5 amd64 4.3.4-6 [273 kB]
#9 14.81 Get:68 http://deb.debian.org/debian bookworm/main amd64 libavformat59 amd64 7:5.1.4-0+deb12u1 [1098 kB]
#9 15.04 Get:69 http://deb.debian.org/debian bookworm/main amd64 libbs2b0 amd64 3.1.0+dfsg-7 [11.5 kB]
#9 15.09 Get:70 http://deb.debian.org/debian bookworm/main amd64 libflite1 amd64 2.2-5 [12.8 MB]
#9 16.46 Get:71 http://deb.debian.org/debian bookworm/main amd64 libserd-0-0 amd64 0.30.16-1 [47.5 kB]
#9 16.51 Get:72 http://deb.debian.org/debian bookworm/main amd64 libsord-0-0 amd64 0.16.14+git221008-1 [20.8 kB]
#9 16.57 Get:73 http://deb.debian.org/debian bookworm/main amd64 libsratom-0-0 amd64 0.6.14-1 [17.7 kB]
#9 16.62 Get:74 http://deb.debian.org/debian bookworm/main amd64 liblilv-0-0 amd64 0.24.14-1 [49.4 kB]
#9 16.68 Get:75 http://deb.debian.org/debian bookworm/main amd64 libmysofa1 amd64 1.3.1~dfsg0-1 [1158 kB]
#9 16.89 Get:76 http://deb.debian.org/debian bookworm/main amd64 libepoxy0 amd64 1.5.10-1 [189 kB]
#9 17.00 Get:77 http://deb.debian.org/debian bookworm/main amd64 libvulkan1 amd64 1.3.239.0-1 [116 kB]
#9 17.08 Get:78 http://deb.debian.org/debian bookworm/main amd64 libplacebo208 amd64 4.208.0-3 [2239 kB]
#9 17.43 Get:79 http://deb.debian.org/debian bookworm/main amd64 libblas3 amd64 3.11.0-2 [149 kB]
#9 17.51 Get:80 http://deb.debian.org/debian bookworm/main amd64 libgfortran5 amd64 12.2.0-14 [793 kB]
#9 17.67 Get:81 http://deb.debian.org/debian bookworm/main amd64 liblapack3 amd64 3.11.0-2 [2323 kB]
#9 18.01 Get:82 http://deb.debian.org/debian bookworm/main amd64 libasyncns0 amd64 0.8-6+b3 [12.9 kB]
#9 18.05 Get:83 http://deb.debian.org/debian bookworm/main amd64 libflac12 amd64 1.4.2+ds-2 [198 kB]
#9 18.15 Get:84 http://deb.debian.org/debian bookworm/main amd64 libsndfile1 amd64 1.2.0-1 [196 kB]
#9 18.36 Get:85 http://deb.debian.org/debian bookworm/main amd64 libpulse0 amd64 16.1+dfsg1-2+b1 [274 kB]
#9 18.50 Get:86 http://deb.debian.org/debian bookworm/main amd64 libsphinxbase3 amd64 0.8+5prealpha+1-16 [118 kB]
#9 18.58 Get:87 http://deb.debian.org/debian bookworm/main amd64 libpocketsphinx3 amd64 0.8+5prealpha+1-15 [125 kB]
#9 18.72 Get:88 http://deb.debian.org/debian bookworm/main amd64 libpostproc56 amd64 7:5.1.4-0+deb12u1 [91.1 kB]
#9 18.80 Get:89 http://deb.debian.org/debian bookworm/main amd64 librubberband2 amd64 3.1.2+dfsg0-1 [137 kB]
#9 18.89 Get:90 http://deb.debian.org/debian bookworm/main amd64 libswscale6 amd64 7:5.1.4-0+deb12u1 [212 kB]
#9 18.99 Get:91 http://deb.debian.org/debian bookworm/main amd64 libvidstab1.1 amd64 1.1.0-2+b1 [37.8 kB]
#9 19.03 Get:92 http://deb.debian.org/debian bookworm/main amd64 libzimg2 amd64 3.0.4+ds1-1 [227 kB]
#9 19.14 Get:93 http://deb.debian.org/debian bookworm/main amd64 libavfilter8 amd64 7:5.1.4-0+deb12u1 [3699 kB]
#9 19.66 Get:94 http://deb.debian.org/debian bookworm/main amd64 libslang2 amd64 2.3.3-3 [554 kB]
#9 19.80 Get:95 http://deb.debian.org/debian bookworm/main amd64 libcaca0 amd64 0.99.beta20-3 [205 kB]
#9 19.90 Get:96 http://deb.debian.org/debian bookworm/main amd64 libcdio19 amd64 2.1.0-4 [203 kB]
#9 19.99 Get:97 http://deb.debian.org/debian bookworm/main amd64 libcdio-cdda2 amd64 10.2+2.0.1-1 [20.9 kB]
#9 20.02 Get:98 http://deb.debian.org/debian bookworm/main amd64 libcdio-paranoia2 amd64 10.2+2.0.1-1 [20.4 kB]
#9 20.07 Get:99 http://deb.debian.org/debian bookworm/main amd64 libusb-1.0-0 amd64 2:1.0.26-1 [62.6 kB]
#9 20.13 Get:100 http://deb.debian.org/debian bookworm/main amd64 libdc1394-25 amd64 2.2.6-4 [109 kB]
#9 20.22 Get:101 http://deb.debian.org/debian bookworm/main amd64 libglvnd0 amd64 1.6.0-1 [51.8 kB]
#9 20.27 Get:102 http://deb.debian.org/debian bookworm/main amd64 libglapi-mesa amd64 22.3.6-1+deb12u1 [35.7 kB]
#9 20.32 Get:103 http://deb.debian.org/debian bookworm/main amd64 libxcb-dri2-0 amd64 1.15-1 [107 kB]
#9 20.39 Get:104 http://deb.debian.org/debian bookworm/main amd64 libxcb-glx0 amd64 1.15-1 [122 kB]
#9 20.47 Get:105 http://deb.debian.org/debian bookworm/main amd64 libxcb-present0 amd64 1.15-1 [105 kB]
#9 20.54 Get:106 http://deb.debian.org/debian bookworm/main amd64 libxcb-randr0 amd64 1.15-1 [117 kB]
#9 20.62 Get:107 http://deb.debian.org/debian bookworm/main amd64 libxcb-sync1 amd64 1.15-1 [109 kB]
#9 20.67 Get:108 http://deb.debian.org/debian bookworm/main amd64 libxcb-xfixes0 amd64 1.15-1 [109 kB]
#9 20.75 Get:109 http://deb.debian.org/debian bookworm/main amd64 libxshmfence1 amd64 1.3-1 [8820 B]
#9 20.78 Get:110 http://deb.debian.org/debian bookworm/main amd64 libxxf86vm1 amd64 1:1.1.4-1+b2 [20.8 kB]
#9 20.82 Get:111 http://deb.debian.org/debian bookworm/main amd64 libdrm-amdgpu1 amd64 2.4.114-1+b1 [20.9 kB]
#9 20.88 Get:112 http://deb.debian.org/debian bookworm/main amd64 libpciaccess0 amd64 0.17-2 [51.4 kB]
#9 20.96 Get:113 http://deb.debian.org/debian bookworm/main amd64 libdrm-intel1 amd64 2.4.114-1+b1 [64.0 kB]
#9 21.01 Get:114 http://deb.debian.org/debian bookworm/main amd64 libdrm-nouveau2 amd64 2.4.114-1+b1 [19.1 kB]
#9 21.05 Get:115 http://deb.debian.org/debian bookworm/main amd64 libdrm-radeon1 amd64 2.4.114-1+b1 [21.8 kB]
#9 21.09 Get:116 http://deb.debian.org/debian bookworm/main amd64 libz3-4 amd64 4.8.12-3.1 [7216 kB]
#9 22.22 Get:117 http://deb.debian.org/debian bookworm/main amd64 libllvm15 amd64 1:15.0.6-4+b1 [23.1 MB]
#9 24.81 Get:118 http://deb.debian.org/debian bookworm/main amd64 libsensors-config all 1:3.6.0-7.1 [14.3 kB]
#9 24.86 Get:119 http://deb.debian.org/debian bookworm/main amd64 libsensors5 amd64 1:3.6.0-7.1 [34.2 kB]
#9 24.91 Get:120 http://deb.debian.org/debian bookworm/main amd64 libgl1-mesa-dri amd64 22.3.6-1+deb12u1 [7239 kB]
#9 25.99 Get:121 http://deb.debian.org/debian bookworm/main amd64 libglx-mesa0 amd64 22.3.6-1+deb12u1 [147 kB]
#9 26.09 Get:122 http://deb.debian.org/debian bookworm/main amd64 libglx0 amd64 1.6.0-1 [34.4 kB]
#9 26.14 Get:123 http://deb.debian.org/debian bookworm/main amd64 libgl1 amd64 1.6.0-1 [88.4 kB]
#9 26.21 Get:124 http://deb.debian.org/debian bookworm/main amd64 libiec61883-0 amd64 1.2.0-6+b1 [30.5 kB]
#9 26.27 Get:125 http://deb.debian.org/debian bookworm/main amd64 libsamplerate0 amd64 0.2.2-3 [952 kB]
#9 26.46 Get:126 http://deb.debian.org/debian bookworm/main amd64 libjack-jackd2-0 amd64 1.9.21~dfsg-3 [281 kB]
#9 26.56 Get:127 http://deb.debian.org/debian bookworm/main amd64 libopenal-data all 1:1.19.1-2 [170 kB]
#9 26.66 Get:128 http://deb.debian.org/debian bookworm/main amd64 libsndio7.0 amd64 1.9.0-0.3+b2 [27.3 kB]
#9 26.70 Get:129 http://deb.debian.org/debian bookworm/main amd64 libopenal1 amd64 1:1.19.1-2 [501 kB]
#9 26.85 Get:130 http://deb.debian.org/debian bookworm/main amd64 libwayland-client0 amd64 1.21.0-1 [28.3 kB]
#9 26.89 Get:131 http://deb.debian.org/debian bookworm/main amd64 libdecor-0-0 amd64 0.1.1-2 [14.6 kB]
#9 26.95 Get:132 http://deb.debian.org/debian bookworm/main amd64 libwayland-server0 amd64 1.21.0-1 [35.9 kB]
#9 26.99 Get:133 http://deb.debian.org/debian bookworm/main amd64 libgbm1 amd64 22.3.6-1+deb12u1 [38.0 kB]
#9 27.05 Get:134 http://deb.debian.org/debian bookworm/main amd64 libwayland-cursor0 amd64 1.21.0-1 [14.4 kB]
#9 27.09 Get:135 http://deb.debian.org/debian bookworm/main amd64 libwayland-egl1 amd64 1.21.0-1 [8640 B]
#9 27.13 Get:136 http://deb.debian.org/debian bookworm/main amd64 libxcursor1 amd64 1:1.2.1-1 [40.9 kB]
#9 27.22 Get:137 http://deb.debian.org/debian bookworm/main amd64 libxi6 amd64 2:1.8-1+b1 [84.2 kB]
#9 27.27 Get:138 http://deb.debian.org/debian bookworm/main amd64 xkb-data all 2.35.1-1 [764 kB]
#9 27.44 Get:139 http://deb.debian.org/debian bookworm/main amd64 libxkbcommon0 amd64 1.5.0-1 [106 kB]
#9 27.51 Get:140 http://deb.debian.org/debian bookworm/main amd64 libxrandr2 amd64 2:1.5.2-2+b1 [39.2 kB]
#9 27.59 Get:141 http://deb.debian.org/debian bookworm/main amd64 libsdl2-2.0-0 amd64 2.26.5+dfsg-1 [629 kB]
#9 27.75 Get:142 http://deb.debian.org/debian bookworm/main amd64 libxcb-shape0 amd64 1.15-1 [106 kB]
#9 27.85 Get:143 http://deb.debian.org/debian bookworm/main amd64 libxv1 amd64 2:1.0.11-1.1 [24.8 kB]
#9 27.90 Get:144 http://deb.debian.org/debian bookworm/main amd64 libavdevice59 amd64 7:5.1.4-0+deb12u1 [111 kB]
#9 28.00 Get:145 http://deb.debian.org/debian bookworm/main amd64 ffmpeg amd64 7:5.1.4-0+deb12u1 [1811 kB]
#9 28.40 Get:146 http://deb.debian.org/debian bookworm/main amd64 i965-va-driver amd64 2.4.1+dfsg1-1 [309 kB]
#9 28.53 Get:147 http://deb.debian.org/debian bookworm/main amd64 libigdgmm12 amd64 22.3.3+ds1-1 [139 kB]
#9 28.63 Get:148 http://deb.debian.org/debian bookworm/main amd64 intel-media-va-driver amd64 23.1.1+dfsg1-1 [2882 kB]
#9 29.03 Get:149 http://deb.debian.org/debian bookworm/main amd64 libaacs0 amd64 0.11.1-2 [57.1 kB]
#9 29.09 Get:150 http://deb.debian.org/debian bookworm/main amd64 libbdplus0 amd64 0.2.0-3 [52.6 kB]
#9 29.16 Get:151 http://deb.debian.org/debian bookworm/main amd64 libdecor-0-plugin-1-cairo amd64 0.1.1-2 [20.1 kB]
#9 29.21 Get:152 http://deb.debian.org/debian bookworm/main amd64 libvdpau-va-gl1 amd64 0.4.2-1+b1 [71.3 kB]
#9 29.29 Get:153 http://deb.debian.org/debian bookworm/main amd64 mesa-va-drivers amd64 22.3.6-1+deb12u1 [3299 kB]
#9 29.74 Get:154 http://deb.debian.org/debian bookworm/main amd64 mesa-vdpau-drivers amd64 22.3.6-1+deb12u1 [3181 kB]
#9 30.13 Get:155 http://deb.debian.org/debian bookworm/main amd64 mesa-vulkan-drivers amd64 22.3.6-1+deb12u1 [8000 kB]
#9 30.98 Get:156 http://deb.debian.org/debian bookworm/main amd64 pocketsphinx-en-us all 0.8+5prealpha+1-15 [24.3 MB]
#9 33.44 Get:157 http://deb.debian.org/debian bookworm/main amd64 va-driver-all amd64 2.17.0-1 [12.8 kB]
#9 33.50 Get:158 http://deb.debian.org/debian bookworm/main amd64 vdpau-driver-all amd64 1.5-2 [4348 B]
#9 33.79 debconf: delaying package configuration, since apt-utils is not installed
#9 33.85 Fetched 144 MB in 27s (5297 kB/s)
#9 33.94 Selecting previously unselected package libdbus-1-3:amd64.
#9 33.94 (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 23963 files and directories currently installed.)
#9 34.05 Preparing to unpack .../000-libdbus-1-3_1.14.10-1~deb12u1_amd64.deb ...
#9 34.08 Unpacking libdbus-1-3:amd64 (1.14.10-1~deb12u1) ...
#9 34.19 Selecting previously unselected package dbus-bin.
#9 34.19 Preparing to unpack .../001-dbus-bin_1.14.10-1~deb12u1_amd64.deb ...
#9 34.20 Unpacking dbus-bin (1.14.10-1~deb12u1) ...
#9 34.29 Selecting previously unselected package dbus-session-bus-common.
#9 34.29 Preparing to unpack .../002-dbus-session-bus-common_1.14.10-1~deb12u1_all.deb ...
#9 34.30 Unpacking dbus-session-bus-common (1.14.10-1~deb12u1) ...
#9 34.42 Selecting previously unselected package libapparmor1:amd64.
#9 34.42 Preparing to unpack .../003-libapparmor1_3.0.8-3_amd64.deb ...
#9 34.43 Unpacking libapparmor1:amd64 (3.0.8-3) ...
#9 34.53 Selecting previously unselected package dbus-daemon.
#9 34.53 Preparing to unpack .../004-dbus-daemon_1.14.10-1~deb12u1_amd64.deb ...
#9 34.55 Unpacking dbus-daemon (1.14.10-1~deb12u1) ...
#9 34.65 Selecting previously unselected package dbus-system-bus-common.
#9 34.65 Preparing to unpack .../005-dbus-system-bus-common_1.14.10-1~deb12u1_all.deb ...
#9 34.67 Unpacking dbus-system-bus-common (1.14.10-1~deb12u1) ...
#9 34.81 Selecting previously unselected package dbus.
#9 34.81 Preparing to unpack .../006-dbus_1.14.10-1~deb12u1_amd64.deb ...
#9 34.83 Unpacking dbus (1.14.10-1~deb12u1) ...
#9 34.93 Selecting previously unselected package alsa-topology-conf.
#9 34.94 Preparing to unpack .../007-alsa-topology-conf_1.2.5.1-2_all.deb ...
#9 34.95 Unpacking alsa-topology-conf (1.2.5.1-2) ...
#9 35.04 Selecting previously unselected package libasound2-data.
#9 35.04 Preparing to unpack .../008-libasound2-data_1.2.8-1_all.deb ...
#9 35.06 Unpacking libasound2-data (1.2.8-1) ...
#9 35.28 Selecting previously unselected package libasound2:amd64.
#9 35.28 Preparing to unpack .../009-libasound2_1.2.8-1+b1_amd64.deb ...
#9 35.30 Unpacking libasound2:amd64 (1.2.8-1+b1) ...
#9 35.40 Selecting previously unselected package alsa-ucm-conf.
#9 35.40 Preparing to unpack .../010-alsa-ucm-conf_1.2.8-1_all.deb ...
#9 35.42 Unpacking alsa-ucm-conf (1.2.8-1) ...
#9 35.60 Selecting previously unselected package libdrm-common.
#9 35.60 Preparing to unpack .../011-libdrm-common_2.4.114-1_all.deb ...
#9 35.61 Unpacking libdrm-common (2.4.114-1) ...
#9 35.72 Selecting previously unselected package libdrm2:amd64.
#9 35.72 Preparing to unpack .../012-libdrm2_2.4.114-1+b1_amd64.deb ...
#9 35.74 Unpacking libdrm2:amd64 (2.4.114-1+b1) ...
#9 35.83 Selecting previously unselected package libva2:amd64.
#9 35.84 Preparing to unpack .../013-libva2_2.17.0-1_amd64.deb ...
#9 35.85 Unpacking libva2:amd64 (2.17.0-1) ...
#9 35.97 Selecting previously unselected package libmfx1:amd64.
#9 35.97 Preparing to unpack .../014-libmfx1_22.5.4-1_amd64.deb ...
#9 35.98 Unpacking libmfx1:amd64 (22.5.4-1) ...
#9 36.61 Selecting previously unselected package libva-drm2:amd64.
#9 36.61 Preparing to unpack .../015-libva-drm2_2.17.0-1_amd64.deb ...
#9 36.62 Unpacking libva-drm2:amd64 (2.17.0-1) ...
#9 36.72 Selecting previously unselected package libx11-xcb1:amd64.
#9 36.72 Preparing to unpack .../016-libx11-xcb1_2%3a1.8.4-2+deb12u2_amd64.deb ...
#9 36.73 Unpacking libx11-xcb1:amd64 (2:1.8.4-2+deb12u2) ...
#9 36.83 Selecting previously unselected package libxcb-dri3-0:amd64.
#9 36.83 Preparing to unpack .../017-libxcb-dri3-0_1.15-1_amd64.deb ...
#9 36.85 Unpacking libxcb-dri3-0:amd64 (1.15-1) ...
#9 36.96 Selecting previously unselected package libxfixes3:amd64.
#9 36.97 Preparing to unpack .../018-libxfixes3_1%3a6.0.0-2_amd64.deb ...
#9 36.98 Unpacking libxfixes3:amd64 (1:6.0.0-2) ...
#9 37.08 Selecting previously unselected package libva-x11-2:amd64.
#9 37.08 Preparing to unpack .../019-libva-x11-2_2.17.0-1_amd64.deb ...
#9 37.09 Unpacking libva-x11-2:amd64 (2.17.0-1) ...
#9 37.20 Selecting previously unselected package libvdpau1:amd64.
#9 37.21 Preparing to unpack .../020-libvdpau1_1.5-2_amd64.deb ...
#9 37.22 Unpacking libvdpau1:amd64 (1.5-2) ...
#9 37.33 Selecting previously unselected package ocl-icd-libopencl1:amd64.
#9 37.33 Preparing to unpack .../021-ocl-icd-libopencl1_2.3.1-1_amd64.deb ...
#9 37.35 Unpacking ocl-icd-libopencl1:amd64 (2.3.1-1) ...
#9 37.46 Selecting previously unselected package libavutil57:amd64.
#9 37.46 Preparing to unpack .../022-libavutil57_7%3a5.1.4-0+deb12u1_amd64.deb ...
#9 37.47 Unpacking libavutil57:amd64 (7:5.1.4-0+deb12u1) ...
#9 37.59 Selecting previously unselected package libcodec2-1.0:amd64.
#9 37.59 Preparing to unpack .../023-libcodec2-1.0_1.0.5-1_amd64.deb ...
#9 37.61 Unpacking libcodec2-1.0:amd64 (1.0.5-1) ...
#9 38.27 Selecting previously unselected package libgsm1:amd64.
#9 38.27 Preparing to unpack .../024-libgsm1_1.0.22-1_amd64.deb ...
#9 38.29 Unpacking libgsm1:amd64 (1.0.22-1) ...
#9 38.39 Selecting previously unselected package libhwy1:amd64.
#9 38.40 Preparing to unpack .../025-libhwy1_1.0.3-3+deb12u1_amd64.deb ...
#9 38.41 Unpacking libhwy1:amd64 (1.0.3-3+deb12u1) ...
#9 38.54 Selecting previously unselected package libjxl0.7:amd64.
#9 38.55 Preparing to unpack .../026-libjxl0.7_0.7.0-10_amd64.deb ...
#9 38.56 Unpacking libjxl0.7:amd64 (0.7.0-10) ...
#9 38.76 Selecting previously unselected package libmp3lame0:amd64.
#9 38.76 Preparing to unpack .../027-libmp3lame0_3.100-6_amd64.deb ...
#9 38.77 Unpacking libmp3lame0:amd64 (3.100-6) ...
#9 38.91 Selecting previously unselected package libopus0:amd64.
#9 38.91 Preparing to unpack .../028-libopus0_1.3.1-3_amd64.deb ...
#9 38.93 Unpacking libopus0:amd64 (1.3.1-3) ...
#9 39.05 Selecting previously unselected package librav1e0:amd64.
#9 39.05 Preparing to unpack .../029-librav1e0_0.5.1-6_amd64.deb ...
#9 39.06 Unpacking librav1e0:amd64 (0.5.1-6) ...
#9 39.28 Selecting previously unselected package libshine3:amd64.
#9 39.28 Preparing to unpack .../030-libshine3_3.1.1-2_amd64.deb ...
#9 39.29 Unpacking libshine3:amd64 (3.1.1-2) ...
#9 39.40 Selecting previously unselected package libsnappy1v5:amd64.
#9 39.40 Preparing to unpack .../031-libsnappy1v5_1.1.9-3_amd64.deb ...
#9 39.42 Unpacking libsnappy1v5:amd64 (1.1.9-3) ...
#9 39.51 Selecting previously unselected package libspeex1:amd64.
#9 39.51 Preparing to unpack .../032-libspeex1_1.2.1-2_amd64.deb ...
#9 39.53 Unpacking libspeex1:amd64 (1.2.1-2) ...
#9 39.63 Selecting previously unselected package libsvtav1enc1:amd64.
#9 39.63 Preparing to unpack .../033-libsvtav1enc1_1.4.1+dfsg-1_amd64.deb ...
#9 39.65 Unpacking libsvtav1enc1:amd64 (1.4.1+dfsg-1) ...
#9 39.90 Selecting previously unselected package libsoxr0:amd64.
#9 39.90 Preparing to unpack .../034-libsoxr0_0.1.3-4_amd64.deb ...
#9 39.92 Unpacking libsoxr0:amd64 (0.1.3-4) ...
#9 40.03 Selecting previously unselected package libswresample4:amd64.
#9 40.03 Preparing to unpack .../035-libswresample4_7%3a5.1.4-0+deb12u1_amd64.deb ...
#9 40.04 Unpacking libswresample4:amd64 (7:5.1.4-0+deb12u1) ...
#9 40.16 Selecting previously unselected package libogg0:amd64.
#9 40.16 Preparing to unpack .../036-libogg0_1.3.5-3_amd64.deb ...
#9 40.17 Unpacking libogg0:amd64 (1.3.5-3) ...
#9 40.28 Selecting previously unselected package libtheora0:amd64.
#9 40.28 Preparing to unpack .../037-libtheora0_1.1.1+dfsg.1-16.1+b1_amd64.deb ...
#9 40.29 Unpacking libtheora0:amd64 (1.1.1+dfsg.1-16.1+b1) ...
#9 40.44 Selecting previously unselected package libtwolame0:amd64.
#9 40.44 Preparing to unpack .../038-libtwolame0_0.4.0-2_amd64.deb ...
#9 40.45 Unpacking libtwolame0:amd64 (0.4.0-2) ...
#9 40.57 Selecting previously unselected package libvorbis0a:amd64.
#9 40.57 Preparing to unpack .../039-libvorbis0a_1.3.7-1_amd64.deb ...
#9 40.59 Unpacking libvorbis0a:amd64 (1.3.7-1) ...
#9 40.70 Selecting previously unselected package libvorbisenc2:amd64.
#9 40.70 Preparing to unpack .../040-libvorbisenc2_1.3.7-1_amd64.deb ...
#9 40.71 Unpacking libvorbisenc2:amd64 (1.3.7-1) ...
#9 40.83 Selecting previously unselected package libvpx7:amd64.
#9 40.84 Preparing to unpack .../041-libvpx7_1.12.0-1+deb12u2_amd64.deb ...
#9 40.85 Unpacking libvpx7:amd64 (1.12.0-1+deb12u2) ...
#9 41.02 Selecting previously unselected package libx264-164:amd64.
#9 41.02 Preparing to unpack .../042-libx264-164_2%3a0.164.3095+gitbaee400-3_amd64.deb ...
#9 41.04 Unpacking libx264-164:amd64 (2:0.164.3095+gitbaee400-3) ...
#9 41.21 Selecting previously unselected package libxvidcore4:amd64.
#9 41.21 Preparing to unpack .../043-libxvidcore4_2%3a1.3.7-1_amd64.deb ...
#9 41.23 Unpacking libxvidcore4:amd64 (2:1.3.7-1) ...
#9 41.33 Selecting previously unselected package libzvbi-common.
#9 41.34 Preparing to unpack .../044-libzvbi-common_0.2.41-1_all.deb ...
#9 41.35 Unpacking libzvbi-common (0.2.41-1) ...
#9 41.47 Selecting previously unselected package libzvbi0:amd64.
#9 41.47 Preparing to unpack .../045-libzvbi0_0.2.41-1_amd64.deb ...
#9 41.48 Unpacking libzvbi0:amd64 (0.2.41-1) ...
#9 41.61 Selecting previously unselected package libavcodec59:amd64.
#9 41.61 Preparing to unpack .../046-libavcodec59_7%3a5.1.4-0+deb12u1_amd64.deb ...
#9 41.63 Unpacking libavcodec59:amd64 (7:5.1.4-0+deb12u1) ...
#9 42.12 Selecting previously unselected package libraw1394-11:amd64.
#9 42.12 Preparing to unpack .../047-libraw1394-11_2.1.2-2_amd64.deb ...
#9 42.13 Unpacking libraw1394-11:amd64 (2.1.2-2) ...
#9 42.24 Selecting previously unselected package libavc1394-0:amd64.
#9 42.24 Preparing to unpack .../048-libavc1394-0_0.5.4-5_amd64.deb ...
#9 42.26 Unpacking libavc1394-0:amd64 (0.5.4-5) ...
#9 42.38 Selecting previously unselected package libass9:amd64.
#9 42.38 Preparing to unpack .../049-libass9_1%3a0.17.1-1_amd64.deb ...
#9 42.39 Unpacking libass9:amd64 (1:0.17.1-1) ...
#9 42.52 Selecting previously unselected package libudfread0:amd64.
#9 42.52 Preparing to unpack .../050-libudfread0_1.1.2-1_amd64.deb ...
#9 42.53 Unpacking libudfread0:amd64 (1.1.2-1) ...
#9 42.64 Selecting previously unselected package libbluray2:amd64.
#9 42.64 Preparing to unpack .../051-libbluray2_1%3a1.3.4-1_amd64.deb ...
#9 42.66 Unpacking libbluray2:amd64 (1:1.3.4-1) ...
#9 42.77 Selecting previously unselected package libchromaprint1:amd64.
#9 42.77 Preparing to unpack .../052-libchromaprint1_1.5.1-2+b1_amd64.deb ...
#9 42.79 Unpacking libchromaprint1:amd64 (1.5.1-2+b1) ...
#9 42.90 Selecting previously unselected package libgme0:amd64.
#9 42.90 Preparing to unpack .../053-libgme0_0.6.3-6_amd64.deb ...
#9 42.92 Unpacking libgme0:amd64 (0.6.3-6) ...
#9 43.33 Selecting previously unselected package libmpg123-0:amd64.
#9 43.33 Preparing to unpack .../054-libmpg123-0_1.31.2-1_amd64.deb ...
#9 43.41 Unpacking libmpg123-0:amd64 (1.31.2-1) ...
#9 44.01 Selecting previously unselected package libvorbisfile3:amd64.
#9 44.01 Preparing to unpack .../055-libvorbisfile3_1.3.7-1_amd64.deb ...
#9 44.10 Unpacking libvorbisfile3:amd64 (1.3.7-1) ...
#9 44.34 Selecting previously unselected package libopenmpt0:amd64.
#9 44.34 Preparing to unpack .../056-libopenmpt0_0.6.9-1_amd64.deb ...
#9 44.35 Unpacking libopenmpt0:amd64 (0.6.9-1) ...
#9 44.51 Selecting previously unselected package librabbitmq4:amd64.
#9 44.51 Preparing to unpack .../057-librabbitmq4_0.11.0-1+b1_amd64.deb ...
#9 44.53 Unpacking librabbitmq4:amd64 (0.11.0-1+b1) ...
#9 44.63 Selecting previously unselected package libcjson1:amd64.
#9 44.63 Preparing to unpack .../058-libcjson1_1.7.15-1_amd64.deb ...
#9 44.65 Unpacking libcjson1:amd64 (1.7.15-1) ...
#9 44.76 Selecting previously unselected package libmbedcrypto7:amd64.
#9 44.76 Preparing to unpack .../059-libmbedcrypto7_2.28.3-1_amd64.deb ...
#9 44.77 Unpacking libmbedcrypto7:amd64 (2.28.3-1) ...
#9 44.90 Selecting previously unselected package librist4:amd64.
#9 44.90 Preparing to unpack .../060-librist4_0.2.7+dfsg-1_amd64.deb ...
#9 44.91 Unpacking librist4:amd64 (0.2.7+dfsg-1) ...
#9 45.01 Selecting previously unselected package libsrt1.5-gnutls:amd64.
#9 45.01 Preparing to unpack .../061-libsrt1.5-gnutls_1.5.1-1_amd64.deb ...
#9 45.03 Unpacking libsrt1.5-gnutls:amd64 (1.5.1-1) ...
#9 45.16 Selecting previously unselected package libssh-gcrypt-4:amd64.
#9 45.16 Preparing to unpack .../062-libssh-gcrypt-4_0.10.6-0+deb12u1_amd64.deb ...
#9 45.17 Unpacking libssh-gcrypt-4:amd64 (0.10.6-0+deb12u1) ...
#9 45.30 Selecting previously unselected package libnorm1:amd64.
#9 45.30 Preparing to unpack .../063-libnorm1_1.5.9+dfsg-2_amd64.deb ...
#9 45.31 Unpacking libnorm1:amd64 (1.5.9+dfsg-2) ...
#9 45.43 Selecting previously unselected package libpgm-5.3-0:amd64.
#9 45.43 Preparing to unpack .../064-libpgm-5.3-0_5.3.128~dfsg-2_amd64.deb ...
#9 45.45 Unpacking libpgm-5.3-0:amd64 (5.3.128~dfsg-2) ...
#9 45.56 Selecting previously unselected package libsodium23:amd64.
#9 45.56 Preparing to unpack .../065-libsodium23_1.0.18-1_amd64.deb ...
#9 45.58 Unpacking libsodium23:amd64 (1.0.18-1) ...
#9 45.69 Selecting previously unselected package libzmq5:amd64.
#9 45.69 Preparing to unpack .../066-libzmq5_4.3.4-6_amd64.deb ...
#9 45.71 Unpacking libzmq5:amd64 (4.3.4-6) ...
#9 45.83 Selecting previously unselected package libavformat59:amd64.
#9 45.84 Preparing to unpack .../067-libavformat59_7%3a5.1.4-0+deb12u1_amd64.deb ...
#9 45.85 Unpacking libavformat59:amd64 (7:5.1.4-0+deb12u1) ...
#9 46.02 Selecting previously unselected package libbs2b0:amd64.
#9 46.02 Preparing to unpack .../068-libbs2b0_3.1.0+dfsg-7_amd64.deb ...
#9 46.04 Unpacking libbs2b0:amd64 (3.1.0+dfsg-7) ...
#9 46.17 Selecting previously unselected package libflite1:amd64.
#9 46.17 Preparing to unpack .../069-libflite1_2.2-5_amd64.deb ...
#9 46.19 Unpacking libflite1:amd64 (2.2-5) ...
#9 47.06 Selecting previously unselected package libserd-0-0:amd64.
#9 47.07 Preparing to unpack .../070-libserd-0-0_0.30.16-1_amd64.deb ...
#9 47.08 Unpacking libserd-0-0:amd64 (0.30.16-1) ...
#9 47.20 Selecting previously unselected package libsord-0-0:amd64.
#9 47.21 Preparing to unpack .../071-libsord-0-0_0.16.14+git221008-1_amd64.deb ...
#9 47.22 Unpacking libsord-0-0:amd64 (0.16.14+git221008-1) ...
#9 47.32 Selecting previously unselected package libsratom-0-0:amd64.
#9 47.33 Preparing to unpack .../072-libsratom-0-0_0.6.14-1_amd64.deb ...
#9 47.34 Unpacking libsratom-0-0:amd64 (0.6.14-1) ...
#9 47.46 Selecting previously unselected package liblilv-0-0:amd64.
#9 47.47 Preparing to unpack .../073-liblilv-0-0_0.24.14-1_amd64.deb ...
#9 47.48 Unpacking liblilv-0-0:amd64 (0.24.14-1) ...
#9 47.60 Selecting previously unselected package libmysofa1:amd64.
#9 47.60 Preparing to unpack .../074-libmysofa1_1.3.1~dfsg0-1_amd64.deb ...
#9 47.62 Unpacking libmysofa1:amd64 (1.3.1~dfsg0-1) ...
#9 47.76 Selecting previously unselected package libepoxy0:amd64.
#9 47.77 Preparing to unpack .../075-libepoxy0_1.5.10-1_amd64.deb ...
#9 47.78 Unpacking libepoxy0:amd64 (1.5.10-1) ...
#9 47.90 Selecting previously unselected package libvulkan1:amd64.
#9 47.90 Preparing to unpack .../076-libvulkan1_1.3.239.0-1_amd64.deb ...
#9 47.91 Unpacking libvulkan1:amd64 (1.3.239.0-1) ...
#9 48.04 Selecting previously unselected package libplacebo208:amd64.
#9 48.04 Preparing to unpack .../077-libplacebo208_4.208.0-3_amd64.deb ...
#9 48.05 Unpacking libplacebo208:amd64 (4.208.0-3) ...
#9 48.30 Selecting previously unselected package libblas3:amd64.
#9 48.30 Preparing to unpack .../078-libblas3_3.11.0-2_amd64.deb ...
#9 48.31 Unpacking libblas3:amd64 (3.11.0-2) ...
#9 48.42 Selecting previously unselected package libgfortran5:amd64.
#9 48.42 Preparing to unpack .../079-libgfortran5_12.2.0-14_amd64.deb ...
#9 48.44 Unpacking libgfortran5:amd64 (12.2.0-14) ...
#9 48.67 Selecting previously unselected package liblapack3:amd64.
#9 48.67 Preparing to unpack .../080-liblapack3_3.11.0-2_amd64.deb ...
#9 48.68 Unpacking liblapack3:amd64 (3.11.0-2) ...
#9 48.98 Selecting previously unselected package libasyncns0:amd64.
#9 48.98 Preparing to unpack .../081-libasyncns0_0.8-6+b3_amd64.deb ...
#9 48.99 Unpacking libasyncns0:amd64 (0.8-6+b3) ...
#9 49.10 Selecting previously unselected package libflac12:amd64.
#9 49.10 Preparing to unpack .../082-libflac12_1.4.2+ds-2_amd64.deb ...
#9 49.11 Unpacking libflac12:amd64 (1.4.2+ds-2) ...
#9 49.23 Selecting previously unselected package libsndfile1:amd64.
#9 49.24 Preparing to unpack .../083-libsndfile1_1.2.0-1_amd64.deb ...
#9 49.30 Unpacking libsndfile1:amd64 (1.2.0-1) ...
#9 49.46 Selecting previously unselected package libpulse0:amd64.
#9 49.46 Preparing to unpack .../084-libpulse0_16.1+dfsg1-2+b1_amd64.deb ...
#9 49.48 Unpacking libpulse0:amd64 (16.1+dfsg1-2+b1) ...
#9 49.62 Selecting previously unselected package libsphinxbase3:amd64.
#9 49.62 Preparing to unpack .../085-libsphinxbase3_0.8+5prealpha+1-16_amd64.deb ...
#9 49.64 Unpacking libsphinxbase3:amd64 (0.8+5prealpha+1-16) ...
#9 49.75 Selecting previously unselected package libpocketsphinx3:amd64.
#9 49.75 Preparing to unpack .../086-libpocketsphinx3_0.8+5prealpha+1-15_amd64.deb ...
#9 49.77 Unpacking libpocketsphinx3:amd64 (0.8+5prealpha+1-15) ...
#9 49.90 Selecting previously unselected package libpostproc56:amd64.
#9 49.90 Preparing to unpack .../087-libpostproc56_7%3a5.1.4-0+deb12u1_amd64.deb ...
#9 49.92 Unpacking libpostproc56:amd64 (7:5.1.4-0+deb12u1) ...
#9 50.03 Selecting previously unselected package librubberband2:amd64.
#9 50.03 Preparing to unpack .../088-librubberband2_3.1.2+dfsg0-1_amd64.deb ...
#9 50.05 Unpacking librubberband2:amd64 (3.1.2+dfsg0-1) ...
#9 50.18 Selecting previously unselected package libswscale6:amd64.
#9 50.18 Preparing to unpack .../089-libswscale6_7%3a5.1.4-0+deb12u1_amd64.deb ...
#9 50.19 Unpacking libswscale6:amd64 (7:5.1.4-0+deb12u1) ...
#9 50.32 Selecting previously unselected package libvidstab1.1:amd64.
#9 50.32 Preparing to unpack .../090-libvidstab1.1_1.1.0-2+b1_amd64.deb ...
#9 50.34 Unpacking libvidstab1.1:amd64 (1.1.0-2+b1) ...
#9 50.45 Selecting previously unselected package libzimg2:amd64.
#9 50.45 Preparing to unpack .../091-libzimg2_3.0.4+ds1-1_amd64.deb ...
#9 50.46 Unpacking libzimg2:amd64 (3.0.4+ds1-1) ...
#9 50.58 Selecting previously unselected package libavfilter8:amd64.
#9 50.58 Preparing to unpack .../092-libavfilter8_7%3a5.1.4-0+deb12u1_amd64.deb ...
#9 50.60 Unpacking libavfilter8:amd64 (7:5.1.4-0+deb12u1) ...
#9 50.93 Selecting previously unselected package libslang2:amd64.
#9 50.93 Preparing to unpack .../093-libslang2_2.3.3-3_amd64.deb ...
#9 50.95 Unpacking libslang2:amd64 (2.3.3-3) ...
#9 51.11 Selecting previously unselected package libcaca0:amd64.
#9 51.11 Preparing to unpack .../094-libcaca0_0.99.beta20-3_amd64.deb ...
#9 51.12 Unpacking libcaca0:amd64 (0.99.beta20-3) ...
#9 51.24 Selecting previously unselected package libcdio19:amd64.
#9 51.24 Preparing to unpack .../095-libcdio19_2.1.0-4_amd64.deb ...
#9 51.26 Unpacking libcdio19:amd64 (2.1.0-4) ...
#9 51.37 Selecting previously unselected package libcdio-cdda2:amd64.
#9 51.37 Preparing to unpack .../096-libcdio-cdda2_10.2+2.0.1-1_amd64.deb ...
#9 51.38 Unpacking libcdio-cdda2:amd64 (10.2+2.0.1-1) ...
#9 51.50 Selecting previously unselected package libcdio-paranoia2:amd64.
#9 51.50 Preparing to unpack .../097-libcdio-paranoia2_10.2+2.0.1-1_amd64.deb ...
#9 51.51 Unpacking libcdio-paranoia2:amd64 (10.2+2.0.1-1) ...
#9 51.62 Selecting previously unselected package libusb-1.0-0:amd64.
#9 51.62 Preparing to unpack .../098-libusb-1.0-0_2%3a1.0.26-1_amd64.deb ...
#9 51.64 Unpacking libusb-1.0-0:amd64 (2:1.0.26-1) ...
#9 51.74 Selecting previously unselected package libdc1394-25:amd64.
#9 51.75 Preparing to unpack .../099-libdc1394-25_2.2.6-4_amd64.deb ...
#9 51.76 Unpacking libdc1394-25:amd64 (2.2.6-4) ...
#9 51.88 Selecting previously unselected package libglvnd0:amd64.
#9 51.88 Preparing to unpack .../100-libglvnd0_1.6.0-1_amd64.deb ...
#9 51.90 Unpacking libglvnd0:amd64 (1.6.0-1) ...
#9 52.01 Selecting previously unselected package libglapi-mesa:amd64.
#9 52.01 Preparing to unpack .../101-libglapi-mesa_22.3.6-1+deb12u1_amd64.deb ...
#9 52.03 Unpacking libglapi-mesa:amd64 (22.3.6-1+deb12u1) ...
#9 52.14 Selecting previously unselected package libxcb-dri2-0:amd64.
#9 52.14 Preparing to unpack .../102-libxcb-dri2-0_1.15-1_amd64.deb ...
#9 52.16 Unpacking libxcb-dri2-0:amd64 (1.15-1) ...
#9 52.27 Selecting previously unselected package libxcb-glx0:amd64.
#9 52.27 Preparing to unpack .../103-libxcb-glx0_1.15-1_amd64.deb ...
#9 52.28 Unpacking libxcb-glx0:amd64 (1.15-1) ...
#9 52.41 Selecting previously unselected package libxcb-present0:amd64.
#9 52.41 Preparing to unpack .../104-libxcb-present0_1.15-1_amd64.deb ...
#9 52.42 Unpacking libxcb-present0:amd64 (1.15-1) ...
#9 52.54 Selecting previously unselected package libxcb-randr0:amd64.
#9 52.54 Preparing to unpack .../105-libxcb-randr0_1.15-1_amd64.deb ...
#9 52.55 Unpacking libxcb-randr0:amd64 (1.15-1) ...
#9 52.66 Selecting previously unselected package libxcb-sync1:amd64.
#9 52.66 Preparing to unpack .../106-libxcb-sync1_1.15-1_amd64.deb ...
#9 52.68 Unpacking libxcb-sync1:amd64 (1.15-1) ...
#9 52.79 Selecting previously unselected package libxcb-xfixes0:amd64.
#9 52.79 Preparing to unpack .../107-libxcb-xfixes0_1.15-1_amd64.deb ...
#9 52.80 Unpacking libxcb-xfixes0:amd64 (1.15-1) ...
#9 52.93 Selecting previously unselected package libxshmfence1:amd64.
#9 52.93 Preparing to unpack .../108-libxshmfence1_1.3-1_amd64.deb ...
#9 52.94 Unpacking libxshmfence1:amd64 (1.3-1) ...
#9 53.04 Selecting previously unselected package libxxf86vm1:amd64.
#9 53.04 Preparing to unpack .../109-libxxf86vm1_1%3a1.1.4-1+b2_amd64.deb ...
#9 53.05 Unpacking libxxf86vm1:amd64 (1:1.1.4-1+b2) ...
#9 53.16 Selecting previously unselected package libdrm-amdgpu1:amd64.
#9 53.16 Preparing to unpack .../110-libdrm-amdgpu1_2.4.114-1+b1_amd64.deb ...
#9 53.17 Unpacking libdrm-amdgpu1:amd64 (2.4.114-1+b1) ...
#9 53.28 Selecting previously unselected package libpciaccess0:amd64.
#9 53.29 Preparing to unpack .../111-libpciaccess0_0.17-2_amd64.deb ...
#9 53.30 Unpacking libpciaccess0:amd64 (0.17-2) ...
#9 53.41 Selecting previously unselected package libdrm-intel1:amd64.
#9 53.41 Preparing to unpack .../112-libdrm-intel1_2.4.114-1+b1_amd64.deb ...
#9 53.42 Unpacking libdrm-intel1:amd64 (2.4.114-1+b1) ...
#9 53.53 Selecting previously unselected package libdrm-nouveau2:amd64.
#9 53.53 Preparing to unpack .../113-libdrm-nouveau2_2.4.114-1+b1_amd64.deb ...
#9 53.54 Unpacking libdrm-nouveau2:amd64 (2.4.114-1+b1) ...
#9 53.65 Selecting previously unselected package libdrm-radeon1:amd64.
#9 53.65 Preparing to unpack .../114-libdrm-radeon1_2.4.114-1+b1_amd64.deb ...
#9 53.66 Unpacking libdrm-radeon1:amd64 (2.4.114-1+b1) ...
#9 53.76 Selecting previously unselected package libz3-4:amd64.
#9 53.76 Preparing to unpack .../115-libz3-4_4.8.12-3.1_amd64.deb ...
#9 53.78 Unpacking libz3-4:amd64 (4.8.12-3.1) ...
#9 54.33 Selecting previously unselected package libllvm15:amd64.
#9 54.33 Preparing to unpack .../116-libllvm15_1%3a15.0.6-4+b1_amd64.deb ...
#9 54.34 Unpacking libllvm15:amd64 (1:15.0.6-4+b1) ...
#9 55.26 Selecting previously unselected package libsensors-config.
#9 55.27 Preparing to unpack .../117-libsensors-config_1%3a3.6.0-7.1_all.deb ...
#9 55.28 Unpacking libsensors-config (1:3.6.0-7.1) ...
#9 55.40 Selecting previously unselected package libsensors5:amd64.
#9 55.40 Preparing to unpack .../118-libsensors5_1%3a3.6.0-7.1_amd64.deb ...
#9 55.45 Unpacking libsensors5:amd64 (1:3.6.0-7.1) ...
#9 55.57 Selecting previously unselected package libgl1-mesa-dri:amd64.
#9 55.57 Preparing to unpack .../119-libgl1-mesa-dri_22.3.6-1+deb12u1_amd64.deb ...
#9 55.59 Unpacking libgl1-mesa-dri:amd64 (22.3.6-1+deb12u1) ...
#9 56.15 Selecting previously unselected package libglx-mesa0:amd64.
#9 56.15 Preparing to unpack .../120-libglx-mesa0_22.3.6-1+deb12u1_amd64.deb ...
#9 56.16 Unpacking libglx-mesa0:amd64 (22.3.6-1+deb12u1) ...
#9 56.28 Selecting previously unselected package libglx0:amd64.
#9 56.29 Preparing to unpack .../121-libglx0_1.6.0-1_amd64.deb ...
#9 56.30 Unpacking libglx0:amd64 (1.6.0-1) ...
#9 56.41 Selecting previously unselected package libgl1:amd64.
#9 56.41 Preparing to unpack .../122-libgl1_1.6.0-1_amd64.deb ...
#9 56.43 Unpacking libgl1:amd64 (1.6.0-1) ...
#9 56.54 Selecting previously unselected package libiec61883-0:amd64.
#9 56.54 Preparing to unpack .../123-libiec61883-0_1.2.0-6+b1_amd64.deb ...
#9 56.56 Unpacking libiec61883-0:amd64 (1.2.0-6+b1) ...
#9 56.66 Selecting previously unselected package libsamplerate0:amd64.
#9 56.66 Preparing to unpack .../124-libsamplerate0_0.2.2-3_amd64.deb ...
#9 56.68 Unpacking libsamplerate0:amd64 (0.2.2-3) ...
#9 56.85 Selecting previously unselected package libjack-jackd2-0:amd64.
#9 56.85 Preparing to unpack .../125-libjack-jackd2-0_1.9.21~dfsg-3_amd64.deb ...
#9 56.87 Unpacking libjack-jackd2-0:amd64 (1.9.21~dfsg-3) ...
#9 56.97 Selecting previously unselected package libopenal-data.
#9 56.97 Preparing to unpack .../126-libopenal-data_1%3a1.19.1-2_all.deb ...
#9 56.98 Unpacking libopenal-data (1:1.19.1-2) ...
#9 57.11 Selecting previously unselected package libsndio7.0:amd64.
#9 57.11 Preparing to unpack .../127-libsndio7.0_1.9.0-0.3+b2_amd64.deb ...
#9 57.12 Unpacking libsndio7.0:amd64 (1.9.0-0.3+b2) ...
#9 57.23 Selecting previously unselected package libopenal1:amd64.
#9 57.24 Preparing to unpack .../128-libopenal1_1%3a1.19.1-2_amd64.deb ...
#9 57.25 Unpacking libopenal1:amd64 (1:1.19.1-2) ...
#9 57.39 Selecting previously unselected package libwayland-client0:amd64.
#9 57.39 Preparing to unpack .../129-libwayland-client0_1.21.0-1_amd64.deb ...
#9 57.41 Unpacking libwayland-client0:amd64 (1.21.0-1) ...
#9 57.52 Selecting previously unselected package libdecor-0-0:amd64.
#9 57.52 Preparing to unpack .../130-libdecor-0-0_0.1.1-2_amd64.deb ...
#9 57.54 Unpacking libdecor-0-0:amd64 (0.1.1-2) ...
#9 57.64 Selecting previously unselected package libwayland-server0:amd64.
#9 57.65 Preparing to unpack .../131-libwayland-server0_1.21.0-1_amd64.deb ...
#9 57.66 Unpacking libwayland-server0:amd64 (1.21.0-1) ...
#9 57.76 Selecting previously unselected package libgbm1:amd64.
#9 57.76 Preparing to unpack .../132-libgbm1_22.3.6-1+deb12u1_amd64.deb ...
#9 57.78 Unpacking libgbm1:amd64 (22.3.6-1+deb12u1) ...
#9 57.89 Selecting previously unselected package libwayland-cursor0:amd64.
#9 57.90 Preparing to unpack .../133-libwayland-cursor0_1.21.0-1_amd64.deb ...
#9 57.91 Unpacking libwayland-cursor0:amd64 (1.21.0-1) ...
#9 58.02 Selecting previously unselected package libwayland-egl1:amd64.
#9 58.02 Preparing to unpack .../134-libwayland-egl1_1.21.0-1_amd64.deb ...
#9 58.03 Unpacking libwayland-egl1:amd64 (1.21.0-1) ...
#9 58.13 Selecting previously unselected package libxcursor1:amd64.
#9 58.13 Preparing to unpack .../135-libxcursor1_1%3a1.2.1-1_amd64.deb ...
#9 58.15 Unpacking libxcursor1:amd64 (1:1.2.1-1) ...
#9 58.25 Selecting previously unselected package libxi6:amd64.
#9 58.25 Preparing to unpack .../136-libxi6_2%3a1.8-1+b1_amd64.deb ...
#9 58.27 Unpacking libxi6:amd64 (2:1.8-1+b1) ...
#9 58.37 Selecting previously unselected package xkb-data.
#9 58.37 Preparing to unpack .../137-xkb-data_2.35.1-1_all.deb ...
#9 58.38 Unpacking xkb-data (2.35.1-1) ...
#9 58.61 Selecting previously unselected package libxkbcommon0:amd64.
#9 58.61 Preparing to unpack .../138-libxkbcommon0_1.5.0-1_amd64.deb ...
#9 58.62 Unpacking libxkbcommon0:amd64 (1.5.0-1) ...
#9 58.73 Selecting previously unselected package libxrandr2:amd64.
#9 58.73 Preparing to unpack .../139-libxrandr2_2%3a1.5.2-2+b1_amd64.deb ...
#9 58.74 Unpacking libxrandr2:amd64 (2:1.5.2-2+b1) ...
#9 58.83 Selecting previously unselected package libsdl2-2.0-0:amd64.
#9 58.83 Preparing to unpack .../140-libsdl2-2.0-0_2.26.5+dfsg-1_amd64.deb ...
#9 58.85 Unpacking libsdl2-2.0-0:amd64 (2.26.5+dfsg-1) ...
#9 59.02 Selecting previously unselected package libxcb-shape0:amd64.
#9 59.02 Preparing to unpack .../141-libxcb-shape0_1.15-1_amd64.deb ...
#9 59.04 Unpacking libxcb-shape0:amd64 (1.15-1) ...
#9 59.14 Selecting previously unselected package libxv1:amd64.
#9 59.14 Preparing to unpack .../142-libxv1_2%3a1.0.11-1.1_amd64.deb ...
#9 59.16 Unpacking libxv1:amd64 (2:1.0.11-1.1) ...
#9 59.27 Selecting previously unselected package libavdevice59:amd64.
#9 59.27 Preparing to unpack .../143-libavdevice59_7%3a5.1.4-0+deb12u1_amd64.deb ...
#9 59.28 Unpacking libavdevice59:amd64 (7:5.1.4-0+deb12u1) ...
#9 59.37 Selecting previously unselected package ffmpeg.
#9 59.37 Preparing to unpack .../144-ffmpeg_7%3a5.1.4-0+deb12u1_amd64.deb ...
#9 59.39 Unpacking ffmpeg (7:5.1.4-0+deb12u1) ...
#9 59.56 Selecting previously unselected package i965-va-driver:amd64.
#9 59.56 Preparing to unpack .../145-i965-va-driver_2.4.1+dfsg1-1_amd64.deb ...
#9 59.57 Unpacking i965-va-driver:amd64 (2.4.1+dfsg1-1) ...
#9 59.70 Selecting previously unselected package libigdgmm12:amd64.
#9 59.70 Preparing to unpack .../146-libigdgmm12_22.3.3+ds1-1_amd64.deb ...
#9 59.71 Unpacking libigdgmm12:amd64 (22.3.3+ds1-1) ...
#9 59.80 Selecting previously unselected package intel-media-va-driver:amd64.
#9 59.81 Preparing to unpack .../147-intel-media-va-driver_23.1.1+dfsg1-1_amd64.deb ...
#9 59.82 Unpacking intel-media-va-driver:amd64 (23.1.1+dfsg1-1) ...
#9 60.10 Selecting previously unselected package libaacs0:amd64.
#9 60.10 Preparing to unpack .../148-libaacs0_0.11.1-2_amd64.deb ...
#9 60.11 Unpacking libaacs0:amd64 (0.11.1-2) ...
#9 60.22 Selecting previously unselected package libbdplus0:amd64.
#9 60.22 Preparing to unpack .../149-libbdplus0_0.2.0-3_amd64.deb ...
#9 60.24 Unpacking libbdplus0:amd64 (0.2.0-3) ...
#9 60.31 Selecting previously unselected package libdecor-0-plugin-1-cairo:amd64.
#9 60.31 Preparing to unpack .../150-libdecor-0-plugin-1-cairo_0.1.1-2_amd64.deb ...
#9 60.33 Unpacking libdecor-0-plugin-1-cairo:amd64 (0.1.1-2) ...
#9 60.42 Selecting previously unselected package libvdpau-va-gl1:amd64.
#9 60.42 Preparing to unpack .../151-libvdpau-va-gl1_0.4.2-1+b1_amd64.deb ...
#9 60.44 Unpacking libvdpau-va-gl1:amd64 (0.4.2-1+b1) ...
#9 60.51 Selecting previously unselected package mesa-va-drivers:amd64.
#9 60.51 Preparing to unpack .../152-mesa-va-drivers_22.3.6-1+deb12u1_amd64.deb ...
#9 60.53 Unpacking mesa-va-drivers:amd64 (22.3.6-1+deb12u1) ...
#9 60.83 Selecting previously unselected package mesa-vdpau-drivers:amd64.
#9 60.83 Preparing to unpack .../153-mesa-vdpau-drivers_22.3.6-1+deb12u1_amd64.deb ...
#9 60.84 Unpacking mesa-vdpau-drivers:amd64 (22.3.6-1+deb12u1) ...
#9 61.13 Selecting previously unselected package mesa-vulkan-drivers:amd64.
#9 61.13 Preparing to unpack .../154-mesa-vulkan-drivers_22.3.6-1+deb12u1_amd64.deb ...
#9 61.15 Unpacking mesa-vulkan-drivers:amd64 (22.3.6-1+deb12u1) ...
#9 61.69 Selecting previously unselected package pocketsphinx-en-us.
#9 61.70 Preparing to unpack .../155-pocketsphinx-en-us_0.8+5prealpha+1-15_all.deb ...
#9 61.71 Unpacking pocketsphinx-en-us (0.8+5prealpha+1-15) ...
#9 62.84 Selecting previously unselected package va-driver-all:amd64.
#9 62.84 Preparing to unpack .../156-va-driver-all_2.17.0-1_amd64.deb ...
#9 62.85 Unpacking va-driver-all:amd64 (2.17.0-1) ...
#9 62.93 Selecting previously unselected package vdpau-driver-all:amd64.
#9 62.94 Preparing to unpack .../157-vdpau-driver-all_1.5-2_amd64.deb ...
#9 62.95 Unpacking vdpau-driver-all:amd64 (1.5-2) ...
#9 63.05 Setting up libgme0:amd64 (0.6.3-6) ...
#9 63.09 Setting up libssh-gcrypt-4:amd64 (0.10.6-0+deb12u1) ...
#9 63.13 Setting up libxcb-dri3-0:amd64 (1.15-1) ...
#9 63.18 Setting up libudfread0:amd64 (1.1.2-1) ...
#9 63.22 Setting up libwayland-server0:amd64 (1.21.0-1) ...
#9 63.26 Setting up libx11-xcb1:amd64 (2:1.8.4-2+deb12u2) ...
#9 63.31 Setting up libpciaccess0:amd64 (0.17-2) ...
#9 63.35 Setting up librabbitmq4:amd64 (0.11.0-1+b1) ...
#9 63.39 Setting up libraw1394-11:amd64 (2.1.2-2) ...
#9 63.43 Setting up libapparmor1:amd64 (3.0.8-3) ...
#9 63.48 Setting up libcodec2-1.0:amd64 (1.0.5-1) ...
#9 63.52 Setting up libsodium23:amd64 (1.0.18-1) ...
#9 63.56 Setting up libmpg123-0:amd64 (1.31.2-1) ...
#9 63.60 Setting up libxcb-xfixes0:amd64 (1.15-1) ...
#9 63.65 Setting up libogg0:amd64 (1.3.5-3) ...
#9 63.69 Setting up libspeex1:amd64 (1.2.1-2) ...
#9 63.73 Setting up libshine3:amd64 (3.1.1-2) ...
#9 63.77 Setting up libxi6:amd64 (2:1.8-1+b1) ...
#9 63.81 Setting up libx264-164:amd64 (2:0.164.3095+gitbaee400-3) ...
#9 63.86 Setting up libtwolame0:amd64 (0.4.0-2) ...
#9 63.90 Setting up libgsm1:amd64 (1.0.22-1) ...
#9 63.95 Setting up libsoxr0:amd64 (0.1.3-4) ...
#9 63.99 Setting up libglvnd0:amd64 (1.6.0-1) ...
#9 64.03 Setting up libpgm-5.3-0:amd64 (5.3.128~dfsg-2) ...
#9 64.07 Setting up libxcb-glx0:amd64 (1.15-1) ...
#9 64.11 Setting up libnorm1:amd64 (1.5.9+dfsg-2) ...
#9 64.15 Setting up libmysofa1:amd64 (1.3.1~dfsg0-1) ...
#9 64.19 Setting up libxcb-shape0:amd64 (1.15-1) ...
#9 64.23 Setting up libsensors-config (1:3.6.0-7.1) ...
#9 64.30 Setting up xkb-data (2.35.1-1) ...
#9 64.34 Setting up libhwy1:amd64 (1.0.3-3+deb12u1) ...
#9 64.38 Setting up libigdgmm12:amd64 (22.3.3+ds1-1) ...
#9 64.41 Setting up libsvtav1enc1:amd64 (1.4.1+dfsg-1) ...
#9 64.45 Setting up libcdio19:amd64 (2.1.0-4) ...
#9 64.50 Setting up libcjson1:amd64 (1.7.15-1) ...
#9 64.54 Setting up libxvidcore4:amd64 (2:1.3.7-1) ...
#9 64.58 Setting up librav1e0:amd64 (0.5.1-6) ...
#9 64.62 Setting up libxxf86vm1:amd64 (1:1.1.4-1+b2) ...
#9 64.66 Setting up libsnappy1v5:amd64 (1.1.9-3) ...
#9 64.69 Setting up libxcb-present0:amd64 (1.15-1) ...
#9 64.73 Setting up libasound2-data (1.2.8-1) ...
#9 64.78 Setting up libz3-4:amd64 (4.8.12-3.1) ...
#9 64.82 Setting up libblas3:amd64 (3.11.0-2) ...
#9 64.86 update-alternatives: using /usr/lib/x86_64-linux-gnu/blas/libblas.so.3 to provide /usr/lib/x86_64-linux-gnu/libblas.so.3 (libblas.so.3-x86_64-linux-gnu) in auto mode
#9 64.88 Setting up libflac12:amd64 (1.4.2+ds-2) ...
#9 64.92 Setting up libass9:amd64 (1:0.17.1-1) ...
#9 64.96 Setting up libslang2:amd64 (2.3.3-3) ...
#9 65.00 Setting up libva2:amd64 (2.17.0-1) ...
#9 65.04 Setting up libmbedcrypto7:amd64 (2.28.3-1) ...
#9 65.08 Setting up libepoxy0:amd64 (1.5.10-1) ...
#9 65.12 Setting up libxfixes3:amd64 (1:6.0.0-2) ...
#9 65.16 Setting up libxcb-sync1:amd64 (1.15-1) ...
#9 65.19 Setting up libdbus-1-3:amd64 (1.14.10-1~deb12u1) ...
#9 65.23 Setting up libopus0:amd64 (1.3.1-3) ...
#9 65.27 Setting up intel-media-va-driver:amd64 (23.1.1+dfsg1-1) ...
#9 65.31 Setting up libxv1:amd64 (2:1.0.11-1.1) ...
#9 65.35 Setting up libvorbis0a:amd64 (1.3.7-1) ...
#9 65.39 Setting up libxrandr2:amd64 (2:1.5.2-2+b1) ...
#9 65.45 Setting up libsensors5:amd64 (1:3.6.0-7.1) ...
#9 65.49 Setting up libaacs0:amd64 (0.11.1-2) ...
#9 65.53 Setting up libjxl0.7:amd64 (0.7.0-10) ...
#9 65.57 Setting up pocketsphinx-en-us (0.8+5prealpha+1-15) ...
#9 65.61 Setting up libglapi-mesa:amd64 (22.3.6-1+deb12u1) ...
#9 65.65 Setting up libgfortran5:amd64 (12.2.0-14) ...
#9 65.70 Setting up libvulkan1:amd64 (1.3.239.0-1) ...
#9 65.73 Setting up librubberband2:amd64 (3.1.2+dfsg0-1) ...
#9 65.78 Setting up libxcb-dri2-0:amd64 (1.15-1) ...
#9 65.82 Setting up libbdplus0:amd64 (0.2.0-3) ...
#9 65.85 Setting up libvidstab1.1:amd64 (1.1.0-2+b1) ...
#9 65.89 Setting up libsrt1.5-gnutls:amd64 (1.5.1-1) ...
#9 65.93 Setting up alsa-topology-conf (1.2.5.1-2) ...
#9 65.97 Setting up ocl-icd-libopencl1:amd64 (2.3.1-1) ...
#9 66.01 Setting up libasyncns0:amd64 (0.8-6+b3) ...
#9 66.05 Setting up libxshmfence1:amd64 (1.3-1) ...
#9 66.09 Setting up libvdpau1:amd64 (1.5-2) ...
#9 66.14 Setting up libbs2b0:amd64 (3.1.0+dfsg-7) ...
#9 66.18 Setting up libxcb-randr0:amd64 (1.15-1) ...
#9 66.21 Setting up dbus-session-bus-common (1.14.10-1~deb12u1) ...
#9 66.25 Setting up libllvm15:amd64 (1:15.0.6-4+b1) ...
#9 66.30 Setting up libtheora0:amd64 (1.1.1+dfsg.1-16.1+b1) ...
#9 66.34 Setting up libasound2:amd64 (1.2.8-1+b1) ...
#9 66.38 Setting up libzimg2:amd64 (3.0.4+ds1-1) ...
#9 66.42 Setting up libopenal-data (1:1.19.1-2) ...
#9 66.47 Setting up libvpx7:amd64 (1.12.0-1+deb12u2) ...
#9 66.54 Setting up libwayland-egl1:amd64 (1.21.0-1) ...
#9 66.59 Setting up libusb-1.0-0:amd64 (2:1.0.26-1) ...
#9 66.63 Setting up dbus-system-bus-common (1.14.10-1~deb12u1) ...
#9 66.87 Setting up libmfx1:amd64 (22.5.4-1) ...
#9 66.91 Setting up libbluray2:amd64 (1:1.3.4-1) ...
#9 66.95 Setting up libsamplerate0:amd64 (0.2.2-3) ...
#9 66.99 Setting up libdrm-common (2.4.114-1) ...
#9 67.03 Setting up dbus-bin (1.14.10-1~deb12u1) ...
#9 67.07 Setting up libzvbi-common (0.2.41-1) ...
#9 67.11 Setting up libmp3lame0:amd64 (3.100-6) ...
#9 67.15 Setting up libvorbisenc2:amd64 (1.3.7-1) ...
#9 67.19 Setting up libiec61883-0:amd64 (1.2.0-6+b1) ...
#9 67.23 Setting up libserd-0-0:amd64 (0.30.16-1) ...
#9 67.27 Setting up libxkbcommon0:amd64 (1.5.0-1) ...
#9 67.31 Setting up libwayland-client0:amd64 (1.21.0-1) ...
#9 67.35 Setting up libavc1394-0:amd64 (0.5.4-5) ...
#9 67.39 Setting up libzvbi0:amd64 (0.2.41-1) ...
#9 67.43 Setting up liblapack3:amd64 (3.11.0-2) ...
#9 67.46 update-alternatives: using /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3 to provide /usr/lib/x86_64-linux-gnu/liblapack.so.3 (liblapack.so.3-x86_64-linux-gnu) in auto mode
#9 67.47 Setting up libplacebo208:amd64 (4.208.0-3) ...
#9 67.53 Setting up libzmq5:amd64 (4.3.4-6) ...
#9 67.56 Setting up libcaca0:amd64 (0.99.beta20-3) ...
#9 67.61 Setting up alsa-ucm-conf (1.2.8-1) ...
#9 67.65 Setting up libcdio-cdda2:amd64 (10.2+2.0.1-1) ...
#9 67.69 Setting up libcdio-paranoia2:amd64 (10.2+2.0.1-1) ...
#9 67.73 Setting up libxcursor1:amd64 (1:1.2.1-1) ...
#9 67.77 Setting up dbus-daemon (1.14.10-1~deb12u1) ...
#9 67.82 Setting up librist4:amd64 (0.2.7+dfsg-1) ...
#9 67.85 Setting up libvorbisfile3:amd64 (1.3.7-1) ...
#9 67.89 Setting up dbus (1.14.10-1~deb12u1) ...
#9 67.98 invoke-rc.d: could not determine current runlevel
#9 67.99 invoke-rc.d: policy-rc.d denied execution of start.
#9 68.00 Setting up libdc1394-25:amd64 (2.2.6-4) ...
#9 68.05 Setting up libsndio7.0:amd64 (1.9.0-0.3+b2) ...
#9 68.09 Setting up libjack-jackd2-0:amd64 (1.9.21~dfsg-3) ...
#9 68.13 Setting up libdrm2:amd64 (2.4.114-1+b1) ...
#9 68.17 Setting up libflite1:amd64 (2.2-5) ...
#9 68.21 Setting up libva-drm2:amd64 (2.17.0-1) ...
#9 68.25 Setting up libsord-0-0:amd64 (0.16.14+git221008-1) ...
#9 68.28 Setting up libwayland-cursor0:amd64 (1.21.0-1) ...
#9 68.32 Setting up libsratom-0-0:amd64 (0.6.14-1) ...
#9 68.36 Setting up libdecor-0-0:amd64 (0.1.1-2) ...
#9 68.41 Setting up libsndfile1:amd64 (1.2.0-1) ...
#9 68.44 Setting up libva-x11-2:amd64 (2.17.0-1) ...
#9 68.48 Setting up liblilv-0-0:amd64 (0.24.14-1) ...
#9 68.53 Setting up libopenmpt0:amd64 (0.6.9-1) ...
#9 68.56 Setting up libdrm-amdgpu1:amd64 (2.4.114-1+b1) ...
#9 68.61 Setting up mesa-vulkan-drivers:amd64 (22.3.6-1+deb12u1) ...
#9 68.65 Setting up libdrm-nouveau2:amd64 (2.4.114-1+b1) ...
#9 68.69 Setting up libgbm1:amd64 (22.3.6-1+deb12u1) ...
#9 68.72 Setting up libpulse0:amd64 (16.1+dfsg1-2+b1) ...
#9 68.79 Setting up libdrm-radeon1:amd64 (2.4.114-1+b1) ...
#9 68.83 Setting up libdrm-intel1:amd64 (2.4.114-1+b1) ...
#9 68.87 Setting up libgl1-mesa-dri:amd64 (22.3.6-1+deb12u1) ...
#9 68.91 Setting up libopenal1:amd64 (1:1.19.1-2) ...
#9 68.95 Setting up libavutil57:amd64 (7:5.1.4-0+deb12u1) ...
#9 68.99 Setting up libswresample4:amd64 (7:5.1.4-0+deb12u1) ...
#9 69.02 Setting up libdecor-0-plugin-1-cairo:amd64 (0.1.1-2) ...
#9 69.06 Setting up libpostproc56:amd64 (7:5.1.4-0+deb12u1) ...
#9 69.10 Setting up mesa-va-drivers:amd64 (22.3.6-1+deb12u1) ...
#9 69.14 Setting up libavcodec59:amd64 (7:5.1.4-0+deb12u1) ...
#9 69.18 Setting up libsdl2-2.0-0:amd64 (2.26.5+dfsg-1) ...
#9 69.22 Setting up libswscale6:amd64 (7:5.1.4-0+deb12u1) ...
#9 69.26 Setting up i965-va-driver:amd64 (2.4.1+dfsg1-1) ...
#9 69.30 Setting up libchromaprint1:amd64 (1.5.1-2+b1) ...
#9 69.33 Setting up mesa-vdpau-drivers:amd64 (22.3.6-1+deb12u1) ...
#9 69.37 Setting up libglx-mesa0:amd64 (22.3.6-1+deb12u1) ...
#9 69.41 Setting up libavformat59:amd64 (7:5.1.4-0+deb12u1) ...
#9 69.44 Setting up libglx0:amd64 (1.6.0-1) ...
#9 69.48 Setting up libsphinxbase3:amd64 (0.8+5prealpha+1-16) ...
#9 69.53 Setting up libpocketsphinx3:amd64 (0.8+5prealpha+1-15) ...
#9 69.56 Setting up libgl1:amd64 (1.6.0-1) ...
#9 69.60 Setting up va-driver-all:amd64 (2.17.0-1) ...
#9 69.64 Setting up libvdpau-va-gl1:amd64 (0.4.2-1+b1) ...
#9 69.69 Setting up libavfilter8:amd64 (7:5.1.4-0+deb12u1) ...
#9 69.73 Setting up libavdevice59:amd64 (7:5.1.4-0+deb12u1) ...
#9 69.77 Setting up vdpau-driver-all:amd64 (1.5-2) ...
#9 69.82 Setting up ffmpeg (7:5.1.4-0+deb12u1) ...
#9 69.86 Processing triggers for libc-bin (2.36-9+deb12u7) ...
#9 DONE 71.2s

#10 [6/6] COPY . .
#10 DONE 0.2s

#11 exporting to image
#11 exporting layers
#11 exporting layers 44.2s done
#11 writing image sha256:f87b579fe3201df02769dcdd5ee4daef7e101925cb109ca88fd90fc0d3666da1 0.0s done
#11 naming to docker.io/library/speechbrain-demo 0.0s done
#11 DONE 44.2s

What's Next?
  View a summary of image vulnerabilities and recommendations → docker scout quickview
Waiting for the container to be ready...
Container is ready.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  952k    0     0  100  952k      0   780k  0:00:01  0:00:01 --:--:--  781k100  952k    0     0  100  952k      0   427k  0:00:02  0:00:02 --:--:--  427k100  952k    0     0  100  952k      0   294k  0:00:03  0:00:03 --:--:--  294k100  952k    0     0  100  952k      0   224k  0:00:04  0:00:04 --:--:--  224k100  952k    0     0  100  952k      0   181k  0:00:05  0:00:05 --:--:--  181k100  952k    0     0  100  952k      0   152k  0:00:06  0:00:06 --:--:--     0100  952k    0     0  100  952k      0   131k  0:00:07  0:00:07 --:--:--     0100  952k    0     0  100  952k      0   115k  0:00:08  0:00:08 --:--:--     0100  952k    0     0  100  952k      0   102k  0:00:09  0:00:09 --:--:--     0100  952k    0     0  100  952k      0  94807  0:00:10  0:00:10 --:--:--     0100  952k    0     0  100  952k      0  86354  0:00:11  0:00:11 --:--:--     0100  952k    0     0  100  952k      0  79241  0:00:12  0:00:12 --:--:--     0100  952k    0     0  100  952k      0  73278  0:00:13  0:00:13 --:--:--     0100  952k    0     0  100  952k      0  68125  0:00:14  0:00:14 --:--:--     0100  952k    0     0  100  952k      0  63646  0:00:15  0:00:15 --:--:--     0100  952k    0     0  100  952k      0  59745  0:00:16  0:00:16 --:--:--     0100  952k    0     0  100  952k      0  56250  0:00:17  0:00:17 --:--:--     0100  952k    0     0  100  952k      0  53175  0:00:18  0:00:18 --:--:--     0100  952k    0     0  100  952k      0  50386  0:00:19  0:00:19 --:--:--     0100  952k    0     0  100  952k      0  47875  0:00:20  0:00:20 --:--:--     0100  952k    0     0  100  952k      0  45630  0:00:21  0:00:21 --:--:--     0100  952k    0     0  100  952k      0  43563  0:00:22  0:00:22 --:--:--     0100  952k    0     0  100  952k      0  41676  0:00:23  0:00:23 --:--:--     0100  952k    0     0  100  952k      0  39963  0:00:24  0:00:24 --:--:--     0100  952k    0     0  100  952k      0  38372  0:00:25  0:00:25 --:--:--     0100  952k    0     0  100  952k      0  36900  0:00:26  0:00:26 --:--:--     0100  952k    0     0  100  952k      0  35552  0:00:27  0:00:27 --:--:--     0100  952k    0     0  100  952k      0  34297  0:00:28  0:00:28 --:--:--     0100  952k    0     0  100  952k      0  33116  0:00:29  0:00:29 --:--:--     0100  952k    0     0  100  952k      0  32023  0:00:30  0:00:30 --:--:--     0100  952k    0     0  100  952k      0  31003  0:00:31  0:00:31 --:--:--     0100  952k    0     0  100  952k      0  30039  0:00:32  0:00:32 --:--:--     0100  952k    0     0  100  952k      0  29128  0:00:33  0:00:33 --:--:--     0100  952k    0     0  100  952k      0  28273  0:00:34  0:00:34 --:--:--     0100  952k    0     0  100  952k      0  27474  0:00:35  0:00:35 --:--:--     0100  952k    0     0  100  952k      0  26718  0:00:36  0:00:36 --:--:--     0100  952k    0     0  100  952k      0  26005  0:00:37  0:00:37 --:--:--     0100  952k    0     0  100  952k      0  25320  0:00:38  0:00:38 --:--:--     0100  952k    0     0  100  952k      0  24671  0:00:39  0:00:39 --:--:--     0100  952k    0     0  100  952k      0  24062  0:00:40  0:00:40 --:--:--     0100  952k    0     0  100  952k      0  23474  0:00:41  0:00:41 --:--:--     0100  952k    0     0  100  952k      0  22918  0:00:42  0:00:42 --:--:--     0100  952k    0     0  100  952k      0  22385  0:00:43  0:00:43 --:--:--     0100  952k    0     0  100  952k      0  21877  0:00:44  0:00:44 --:--:--     0100  952k    0     0  100  952k      0  21391  0:00:45  0:00:45 --:--:--     0100  952k    0     0  100  952k      0  20931  0:00:46  0:00:46 --:--:--     0100  952k    0     0  100  952k      0  20487  0:00:47  0:00:47 --:--:--     0100  952k    0     0  100  952k      0  20064  0:00:48  0:00:48 --:--:--     0100  952k    0     0  100  952k      0  19659  0:00:49  0:00:49 --:--:--     0100  952k    0     0  100  952k      0  19270  0:00:50  0:00:50 --:--:--     0100  952k    0     0  100  952k      0  18892  0:00:51  0:00:51 --:--:--     0100  952k    0     0  100  952k      0  18532  0:00:52  0:00:52 --:--:--     0100  952k    0     0  100  952k      0  18181  0:00:53  0:00:53 --:--:--     0100  952k    0     0  100  952k      0  17844  0:00:54  0:00:54 --:--:--     0100  952k    0     0  100  952k      0  17519  0:00:55  0:00:55 --:--:--     0100  952k    0     0  100  952k      0  17205  0:00:56  0:00:56 --:--:--     0100  952k    0     0  100  952k      0  16903  0:00:57  0:00:57 --:--:--     0100  952k    0     0  100  952k      0  16615  0:00:58  0:00:58 --:--:--     0100  952k    0     0  100  952k      0  16332  0:00:59  0:00:59 --:--:--     0100  952k    0     0  100  952k      0  16060  0:01:00  0:01:00 --:--:--     0100  952k    0     0  100  952k      0  15796  0:01:01  0:01:01 --:--:--     0100  952k    0     0  100  952k      0  15544  0:01:02  0:01:02 --:--:--     0100  952k    0     0  100  952k      0  15296  0:01:03  0:01:03 --:--:--     0100  952k    0     0  100  952k      0  15057  0:01:04  0:01:04 --:--:--     0100  952k    0     0  100  952k      0  14828  0:01:05  0:01:05 --:--:--     0100  952k    0     0  100  952k      0  14603  0:01:06  0:01:06 --:--:--     0100  952k    0     0  100  952k      0  14385  0:01:07  0:01:07 --:--:--     0100  952k    0     0  100  952k      0  14173  0:01:08  0:01:08 --:--:--     0100  952k    0     0  100  952k      0  13970  0:01:09  0:01:09 --:--:--     0100  952k    0     0  100  952k      0  13770  0:01:10  0:01:10 --:--:--     0100  952k    0     0  100  952k      0  13575  0:01:11  0:01:11 --:--:--     0100  952k    0     0  100  952k      0  13387  0:01:12  0:01:12 --:--:--     0100  952k    0     0  100  952k      0  13203  0:01:13  0:01:13 --:--:--     0100  952k    0     0  100  952k      0  13026  0:01:14  0:01:14 --:--:--     0100  952k    0     0  100  952k      0  12852  0:01:15  0:01:15 --:--:--     0100  952k    0     0  100  952k      0  12684  0:01:16  0:01:16 --:--:--     0100  952k    0     0  100  952k      0  12519  0:01:17  0:01:17 --:--:--     0100  952k    0     0  100  952k      0  12360  0:01:18  0:01:18 --:--:--     0100  952k    0     0  100  952k      0  12203  0:01:19  0:01:19 --:--:--     0100  952k    0     0  100  952k      0  12050  0:01:20  0:01:20 --:--:--     0100  952k    0     0  100  952k      0  11901  0:01:21  0:01:21 --:--:--     0100  952k    0     0  100  952k      0  11757  0:01:22  0:01:22 --:--:--     0100  952k    0     0  100  952k      0  11615  0:01:23  0:01:23 --:--:--     0100  952k    0     0  100  952k      0  11477  0:01:24  0:01:24 --:--:--     0100  952k    0     0  100  952k      0  11343  0:01:25  0:01:25 --:--:--     0100  952k    0     0  100  952k      0  11211  0:01:26  0:01:26 --:--:--     0100  952k    0    18  100  952k      0  11114  0:01:27  0:01:27 --:--:--     3100  952k    0    18  100  952k      0  11114  0:01:27  0:01:27 --:--:--     4
Server response: {"emotion":"ang"}
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  952k    0     0  100  952k      0   778k  0:00:01  0:00:01 --:--:--  779k100  952k    0     0  100  952k      0   425k  0:00:02  0:00:02 --:--:--  426k100  952k    0     0  100  952k      0   294k  0:00:03  0:00:03 --:--:--  294k100  952k    0     0  100  952k      0   223k  0:00:04  0:00:04 --:--:--  224k100  952k    0     0  100  952k      0   180k  0:00:05  0:00:05 --:--:--  180k100  952k    0     0  100  952k      0   151k  0:00:06  0:00:06 --:--:--     0100  952k    0     0  100  952k      0   130k  0:00:07  0:00:07 --:--:--     0100  952k    0     0  100  952k      0   114k  0:00:08  0:00:08 --:--:--     0100  952k    0     0  100  952k      0   102k  0:00:09  0:00:09 --:--:--     0100  952k    0     0  100  952k      0  94660  0:00:10  0:00:10 --:--:--     0100  952k    0     0  100  952k      0  86238  0:00:11  0:00:11 --:--:--     0100  952k  100    59  100  952k      5  84206  0:00:11  0:00:11 --:--:--    13
Server response: {"language":"en: English","likelihood":0.7311094999313354}
Language identification completed successfully.
Predicted language: en: English
Likelihood: 0.7311094999313354
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 1904k    0     0  100 1904k      0  1574k  0:00:01  0:00:01 --:--:-- 1575k100 1904k    0     0  100 1904k      0   860k  0:00:02  0:00:02 --:--:--  860k100 1904k    0     0  100 1904k      0   590k  0:00:03  0:00:03 --:--:--  590k100 1904k    0     0  100 1904k      0   449k  0:00:04  0:00:04 --:--:--  449k100 1904k    0     0  100 1904k      0   362k  0:00:05  0:00:05 --:--:--  362k100 1904k    0     0  100 1904k      0   304k  0:00:06  0:00:06 --:--:--     0100 1904k    0     0  100 1904k      0   262k  0:00:07  0:00:07 --:--:--     0100 1904k    0     0  100 1904k      0   229k  0:00:08  0:00:08 --:--:--     0100 1904k    0     0  100 1904k      0   205k  0:00:09  0:00:09 --:--:--     0100 1904k    0     0  100 1904k      0   184k  0:00:10  0:00:10 --:--:--     0 99 1904k    0     0  100 1904k      0   170k  0:00:11  0:00:11 --:--:--     0100 1904k  100    47  100 1904k      4   170k  0:00:11  0:00:11 --:--:--    12
Server response: {"prediction":true,"score":0.2612878680229187}
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  164k    0     0  100  164k      0   135k  0:00:01  0:00:01 --:--:--  135k100  164k    0     0  100  164k      0  75720  0:00:02  0:00:02 --:--:-- 75740100  164k    0     0  100  164k      0  52039  0:00:03  0:00:03 --:--:-- 52049100  164k    0     0  100  164k      0  39664  0:00:04  0:00:04 --:--:-- 39676100  164k    0     0  100  164k      0  32031  0:00:05  0:00:05 --:--:-- 32037100  164k    0     0  100  164k      0  26871  0:00:06  0:00:06 --:--:--     0100  164k    0     0  100  164k      0  23145  0:00:07  0:00:07 --:--:--     0100  164k    0     0  100  164k      0  20323  0:00:08  0:00:08 --:--:--     0100  164k    0     0  100  164k      0  18112  0:00:09  0:00:09 --:--:--     0100  164k    0     0  100  164k      0  16335  0:00:10  0:00:10 --:--:--     0100  164k    0     0  100  164k      0  14877  0:00:11  0:00:11 --:--:--     0100  164k    0     0  100  164k      0  13672  0:00:12  0:00:12 --:--:--     0100  164k    0     0  100  164k      0  12640  0:00:13  0:00:13 --:--:--     0100  164k    0     0  100  164k      0  11754  0:00:14  0:00:14 --:--:--     0100  164k    0     0  100  164k      0  10979  0:00:15  0:00:15 --:--:--     0100  164k    0     0  100  164k      0  10303  0:00:16  0:00:16 --:--:--     0100  164k    0     0  100  164k      0   9704  0:00:17  0:00:17 --:--:--     0100  164k    0     0  100  164k      0   9172  0:00:18  0:00:18 --:--:--     0100  164k    0     0  100  164k      0   8695  0:00:19  0:00:19 --:--:--     0100  164k    0     0  100  164k      0   8264  0:00:20  0:00:20 --:--:--     0100  164k    0     0  100  164k      0   7876  0:00:21  0:00:21 --:--:--     0100  494k  100  329k  100  164k  15642   7824  0:00:21  0:00:21 --:--:-- 80776
Archive:  ./subroutines/../results/separated_sources.zip
 extracting: ./subroutines/../results/source1.wav  
 extracting: ./subroutines/../results/source2.wav  
Speech separation completed successfully. Separated sources saved in ./subroutines/../results/.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   284    0     0  100   284      0    232  0:00:01  0:00:01 --:--:--   232100   284    0     0  100   284      0    127  0:00:02  0:00:02 --:--:--   127100   284    0     0  100   284      0     87  0:00:03  0:00:03 --:--:--    87100   284    0     0  100   284      0     66  0:00:04  0:00:04 --:--:--    66100   284    0     0  100   284      0     53  0:00:05  0:00:05 --:--:--    53100   284    0     0  100   284      0     45  0:00:06  0:00:06 --:--:--     0100   284    0     0  100   284      0     38  0:00:07  0:00:07 --:--:--     0100   284    0     0  100   284      0     34  0:00:08  0:00:08 --:--:--     0100   284    0     0  100   284      0     30  0:00:09  0:00:09 --:--:--     0100   284    0     0  100   284      0     27  0:00:10  0:00:10 --:--:--     0100   284    0     0  100   284      0     25  0:00:11  0:00:11 --:--:--     0100   284    0     0  100   284      0     22  0:00:12  0:00:12 --:--:--     0100   284    0     0  100   284      0     21  0:00:13  0:00:13 --:--:--     0100   284    0     0  100   284      0     19  0:00:14  0:00:14 --:--:--     0100   284    0     0  100   284      0     18  0:00:15  0:00:15 --:--:--     0100   284    0     0  100   284      0     17  0:00:16  0:00:16 --:--:--     0100   284    0     0  100   284      0     16  0:00:17  0:00:17 --:--:--     0100   284    0     0  100   284      0     15  0:00:18  0:00:18 --:--:--     0100   284    0     0  100   284      0     14  0:00:20  0:00:19  0:00:01     0100   284    0     0  100   284      0     13  0:00:21  0:00:20  0:00:01     0100   284    0     0  100   284      0     13  0:00:21  0:00:21 --:--:--     0100   284    0     0  100   284      0     12  0:00:23  0:00:22  0:00:01     0100   284    0     0  100   284      0     12  0:00:23  0:00:23 --:--:--     0100   284    0     0  100   284      0     11  0:00:25  0:00:24  0:00:01     0  0  319k    0     0  100   284      0     11  0:00:25  0:00:24  0:00:01     0100  319k  100  319k  100   284  13166     11  0:00:25  0:00:24  0:00:01 95434
Text-to-speech completed successfully. Generated audio saved in ./subroutines/../results/tts_result.wav.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  952k    0     0  100  952k      0   782k  0:00:01  0:00:01 --:--:--  783k100  952k    0     0  100  952k      0   427k  0:00:02  0:00:02 --:--:--  428k100  952k    0     0  100  952k      0   294k  0:00:03  0:00:03 --:--:--  294k100  952k    0     0  100  952k      0   224k  0:00:04  0:00:04 --:--:--  224k100  952k    0     0  100  952k      0   181k  0:00:05  0:00:05 --:--:--  181k100  952k    0     0  100  952k      0   151k  0:00:06  0:00:06 --:--:--     0100  952k    0     0  100  952k      0   130k  0:00:07  0:00:07 --:--:--     0100  952k    0     0  100  952k      0   114k  0:00:08  0:00:08 --:--:--     0100  952k    0     0  100  952k      0   102k  0:00:09  0:00:09 --:--:--     0100  952k    0     0  100  952k      0  94479  0:00:10  0:00:10 --:--:--     0100  952k    0     0  100  952k      0  86020  0:00:11  0:00:11 --:--:--     0100  952k    0     0  100  952k      0  78957  0:00:12  0:00:12 --:--:--     0100  952k    0     0  100  952k      0  73023  0:00:13  0:00:13 --:--:--     0100  952k    0     0  100  952k      0  67923  0:00:14  0:00:14 --:--:--     0100  952k    0     0  100  952k      0  63496  0:00:15  0:00:15 --:--:--     0100  952k    0     0  100  952k      0  59561  0:00:16  0:00:16 --:--:--     0100  952k    0     0  100  952k      0  56121  0:00:17  0:00:17 --:--:--     0100  952k    0     0  100  952k      0  53025  0:00:18  0:00:18 --:--:--     0100  952k    0     0  100  952k      0  50255  0:00:19  0:00:19 --:--:--     0100  952k    0     0  100  952k      0  47759  0:00:20  0:00:20 --:--:--     0100  952k    0     0  100  952k      0  45498  0:00:21  0:00:21 --:--:--     0100  952k    0     0  100  952k      0  43441  0:00:22  0:00:22 --:--:--     0100  952k    0     0  100  952k      0  41586  0:00:23  0:00:23 --:--:--     0100  952k    0     0  100  952k      0  39879  0:00:24  0:00:24 --:--:--     0100  952k    0     0  100  952k      0  38310  0:00:25  0:00:25 --:--:--     0100  952k    0     0  100  952k      0  36844  0:00:26  0:00:26 --:--:--     0100  952k    0     0  100  952k      0  35499  0:00:27  0:00:27 --:--:--     0100  952k    0     0  100  952k      0  34248  0:00:28  0:00:28 --:--:--     0100  952k    0     0  100  952k      0  33083  0:00:29  0:00:29 --:--:--     0100  952k    0     0  100  952k      0  31992  0:00:30  0:00:30 --:--:--     0100  952k    0     0  100  952k      0  30970  0:00:31  0:00:31 --:--:--     0100  952k    0     0  100  952k      0  30010  0:00:32  0:00:32 --:--:--     0100  952k    0     0  100  952k      0  29102  0:00:33  0:00:33 --:--:--     0100  952k    0     0  100  952k      0  28255  0:00:34  0:00:34 --:--:--     0100  952k    0     0  100  952k      0  27455  0:00:35  0:00:35 --:--:--     0100  952k    0     0  100  952k      0  26692  0:00:36  0:00:36 --:--:--     0100  952k    0     0  100  952k      0  25972  0:00:37  0:00:37 --:--:--     0100  952k    0     0  100  952k      0  25289  0:00:38  0:00:38 --:--:--     0100  952k    0     0  100  952k      0  24649  0:00:39  0:00:39 --:--:--     0100  952k    0     0  100  952k      0  24034  0:00:40  0:00:40 --:--:--     0100  952k    0     0  100  952k      0  23448  0:00:41  0:00:41 --:--:--     0100  952k    0     0  100  952k      0  22890  0:00:42  0:00:42 --:--:--     0100  952k    0     0  100  952k      0  22357  0:00:43  0:00:43 --:--:--     0100  952k    0     0  100  952k      0  21849  0:00:44  0:00:44 --:--:--     0100  952k    0     0  100  952k      0  21364  0:00:45  0:00:45 --:--:--     0100  952k    0     0  100  952k      0  20906  0:00:46  0:00:46 --:--:--     0100  952k    0     0  100  952k      0  20465  0:00:47  0:00:47 --:--:--     0100  952k    0     0  100  952k      0  20039  0:00:48  0:00:48 --:--:--     0100  952k    0     0  100  952k      0  19630  0:00:49  0:00:49 --:--:--     0100  952k    0     0  100  952k      0  19237  0:00:50  0:00:50 --:--:--     0100  952k    0     0  100  952k      0  18860  0:00:51  0:00:51 --:--:--     0100  952k    0     0  100  952k      0  18497  0:00:52  0:00:52 --:--:--     0100  952k    0     0  100  952k      0  18147  0:00:53  0:00:53 --:--:--     0100  952k    0     0  100  952k      0  17811  0:00:54  0:00:54 --:--:--     0100  952k    0     0  100  952k      0  17487  0:00:55  0:00:55 --:--:--     0100  952k    0     0  100  952k      0  17177  0:00:56  0:00:56 --:--:--     0100  952k    0     0  100  952k      0  16879  0:00:57  0:00:57 --:--:--     0100  952k    0     0  100  952k      0  16591  0:00:58  0:00:58 --:--:--     0100  952k    0     0  100  952k      0  16313  0:00:59  0:00:59 --:--:--     0100  952k    0     0  100  952k      0  16043  0:01:00  0:01:00 --:--:--     0100  952k    0     0  100  952k      0  15783  0:01:01  0:01:01 --:--:--     0100  952k    0     0  100  952k      0  15529  0:01:02  0:01:02 --:--:--     0100  952k    0     0  100  952k      0  15285  0:01:03  0:01:03 --:--:--     0100  952k    0     0  100  952k      0  15047  0:01:04  0:01:04 --:--:--     0100  952k    0     0  100  952k      0  14817  0:01:05  0:01:05 --:--:--     0100  952k    0     0  100  952k      0  14595  0:01:06  0:01:06 --:--:--     0100  952k    0     0  100  952k      0  14377  0:01:07  0:01:07 --:--:--     0100  952k    0     0  100  952k      0  14165  0:01:08  0:01:08 --:--:--     0100  952k    0     0  100  952k      0  13960  0:01:09  0:01:09 --:--:--     0100  952k    0     0  100  952k      0  13761  0:01:10  0:01:10 --:--:--     0100  952k    0     0  100  952k      0  13567  0:01:11  0:01:11 --:--:--     0100  952k    0     0  100  952k      0  13378  0:01:12  0:01:12 --:--:--     0100  952k    0     0  100  952k      0  13195  0:01:13  0:01:13 --:--:--     0100  952k    0     0  100  952k      0  13017  0:01:14  0:01:14 --:--:--     0100  952k    0     0  100  952k      0  12843  0:01:15  0:01:15 --:--:--     0100  952k    0     0  100  952k      0  12676  0:01:16  0:01:16 --:--:--     0100  952k    0     0  100  952k      0  12511  0:01:17  0:01:17 --:--:--     0100  952k    0     0  100  952k      0  12352  0:01:18  0:01:18 --:--:--     0100  952k    0     0  100  952k      0  12195  0:01:19  0:01:19 --:--:--     0100  952k    0     0  100  952k      0  12043  0:01:20  0:01:20 --:--:--     0100  952k    0     0  100  952k      0  11895  0:01:21  0:01:21 --:--:--     0100  952k    0     0  100  952k      0  11750  0:01:22  0:01:22 --:--:--     0100  952k    0     0  100  952k      0  11609  0:01:23  0:01:23 --:--:--     0100  952k    0     0  100  952k      0  11473  0:01:24  0:01:24 --:--:--     0100  952k    0    23  100  952k      0  11471  0:01:25  0:01:25 --:--:--     5
Server response: HULLO MY NAME IS MATTIE
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  952k    0     0  100  952k      0  4560k --:--:-- --:--:-- --:--:-- 4556k100  952k    0     0  100  952k      0   780k  0:00:01  0:00:01 --:--:--  779k100  952k    0     0  100  952k      0   426k  0:00:02  0:00:02 --:--:--  426k100  952k    0     0  100  952k      0   293k  0:00:03  0:00:03 --:--:--  293k100  952k    0     0  100  952k      0   224k  0:00:04  0:00:04 --:--:--  224k100  952k    0     0  100  952k      0   180k  0:00:05  0:00:05 --:--:--     0100  952k    0     0  100  952k      0   151k  0:00:06  0:00:06 --:--:--     0100  952k    0     0  100  952k      0   130k  0:00:07  0:00:07 --:--:--     0100  952k    0     0  100  952k      0   114k  0:00:08  0:00:08 --:--:--     0100  952k    0     0  100  952k      0   102k  0:00:09  0:00:09 --:--:--     0100  952k    0     0  100  952k      0  94525  0:00:10  0:00:10 --:--:--     0100  952k    0     0  100  952k      0  86111  0:00:11  0:00:11 --:--:--     0100  952k  100    55  100  952k      4  80025  0:00:13  0:00:12  0:00:01    11
Server response: {"boundaries":[{"end":5.049999713897705,"start":0.0}]}
Voice activity detection completed successfully.
The cache for model files in Transformers v4.22.0 has been updated. Migrating your old cache. This is a one-time only operation. You can interrupt this and resume the migration later on by calling `transformers.utils.move_cache()`.
0it [00:00, ?it/s]0it [00:00, ?it/s]
/usr/local/lib/python3.12/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/usr/local/lib/python3.12/site-packages/transformers/configuration_utils.py:364: UserWarning: Passing `gradient_checkpointing` to a config initialization is deprecated and will be removed in v5 Transformers. Using `model.gradient_checkpointing_enable()` instead, or if you are using the `Trainer` API, pass `gradient_checkpointing=True` in your `TrainingArguments`.
  warnings.warn(
Some weights of Wav2Vec2Model were not initialized from the model checkpoint at facebook/wav2vec2-base and are newly initialized: ['wav2vec2.encoder.pos_conv_embed.conv.parametrizations.weight.original0', 'wav2vec2.encoder.pos_conv_embed.conv.parametrizations.weight.original1']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[nltk_data] Downloading package punkt to /root/nltk_data...
[nltk_data]   Unzipping tokenizers/punkt.zip.
/usr/local/lib/python3.12/site-packages/torch/nn/utils/weight_norm.py:28: UserWarning: torch.nn.utils.weight_norm is deprecated in favor of torch.nn.utils.parametrizations.weight_norm.
  warnings.warn("torch.nn.utils.weight_norm is deprecated in favor of torch.nn.utils.parametrizations.weight_norm.")
52f24524da2bc608e9498642352d0578a9f66cb2201e00eae635ec433ae42606
52f24524da2bc608e9498642352d0578a9f66cb2201e00eae635ec433ae42606
Untagged: speechbrain-demo:latest
Deleted: sha256:f87b579fe3201df02769dcdd5ee4daef7e101925cb109ca88fd90fc0d3666da1
05fe4c07da84c0b.lock
2024-06-06 03:42:28,379 - DEBUG - Lock 140642523662192 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/2ad855c6656d45159ca0f36a805fe4c07da84c0b.lock
2024-06-06 03:42:28,379 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/snapshots/cca44dffb9c17f16216908030ea7e7de26a92688/hyperparams.yaml
2024-06-06 03:42:28,379 - INFO - Fetch custom_interface.py: Delegating to Huggingface hub, source speechbrain/emotion-recognition-wav2vec2-IEMOCAP.
2024-06-06 03:42:28,451 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/custom_interface.py HTTP/1.1" 200 0
2024-06-06 03:42:28,452 - DEBUG - Attempting to acquire lock 140642589865792 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/eff32a41a23c40acf660f8bd0c8f2efb1a64ba93.lock
2024-06-06 03:42:28,452 - DEBUG - Lock 140642589865792 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/eff32a41a23c40acf660f8bd0c8f2efb1a64ba93.lock
2024-06-06 03:42:28,508 - DEBUG - https://huggingface.co:443 "GET /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/custom_interface.py HTTP/1.1" 200 6016
2024-06-06 03:42:28,509 - DEBUG - Attempting to release lock 140642589865792 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/eff32a41a23c40acf660f8bd0c8f2efb1a64ba93.lock
2024-06-06 03:42:28,509 - DEBUG - Lock 140642589865792 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/eff32a41a23c40acf660f8bd0c8f2efb1a64ba93.lock
2024-06-06 03:42:28,509 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/snapshots/cca44dffb9c17f16216908030ea7e7de26a92688/custom_interface.py
2024-06-06 03:42:29,027 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/config.json HTTP/1.1" 200 0
2024-06-06 03:42:29,030 - DEBUG - Attempting to acquire lock 140642523661664 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/47d7dc533f6d412e1c021eb181615d006e403bed.lock
2024-06-06 03:42:29,031 - DEBUG - Lock 140642523661664 acquired on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/47d7dc533f6d412e1c021eb181615d006e403bed.lock
2024-06-06 03:42:29,109 - DEBUG - https://huggingface.co:443 "GET /facebook/wav2vec2-base/resolve/main/config.json HTTP/1.1" 200 1842
2024-06-06 03:42:29,111 - DEBUG - Attempting to release lock 140642523661664 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/47d7dc533f6d412e1c021eb181615d006e403bed.lock
2024-06-06 03:42:29,111 - DEBUG - Lock 140642523661664 released on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/47d7dc533f6d412e1c021eb181615d006e403bed.lock
2024-06-06 03:42:29,165 - DEBUG - https://huggingface.co:443 "GET /api/models/facebook/wav2vec2-base HTTP/1.1" 200 1614
2024-06-06 03:42:29,347 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/model.safetensors HTTP/1.1" 404 0
2024-06-06 03:42:29,391 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/model.safetensors.index.json HTTP/1.1" 404 0
2024-06-06 03:42:29,467 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/pytorch_model.bin HTTP/1.1" 302 0
2024-06-06 03:42:29,468 - DEBUG - Attempting to acquire lock 140642490064896 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3249fe98bfc62fcbc26067f724716a6ec49d12c4728a2af1df659013905dff21.lock
2024-06-06 03:42:29,468 - DEBUG - Lock 140642490064896 acquired on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3249fe98bfc62fcbc26067f724716a6ec49d12c4728a2af1df659013905dff21.lock
2024-06-06 03:42:29,470 - DEBUG - Starting new HTTPS connection (1): cdn-lfs.huggingface.co:443
2024-06-06 03:42:29,706 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /facebook/wav2vec2-base/3249fe98bfc62fcbc26067f724716a6ec49d12c4728a2af1df659013905dff21?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27pytorch_model.bin%3B+filename%3D%22pytorch_model.bin%22%3B&response-content-type=application%2Foctet-stream&Expires=1717904549&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwNDU0OX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9mYWNlYm9vay93YXYydmVjMi1iYXNlLzMyNDlmZTk4YmZjNjJmY2JjMjYwNjdmNzI0NzE2YTZlYzQ5ZDEyYzQ3MjhhMmFmMWRmNjU5MDEzOTA1ZGZmMjE~cmVzcG9uc2UtY29udGVudC1kaXNwb3NpdGlvbj0qJnJlc3BvbnNlLWNvbnRlbnQtdHlwZT0qIn1dfQ__&Signature=Yn7ia9YPoKo4c20sX9qI4E1cnzz2F8TqRRd1zmSM-SurrQZhLZ5DphxynUUj1qZz8qjGYO-aprPeQjuDtTCxwtQNkazdNZbAxTU4zMpMS2I-UrZdjhddX1hkOCiCsBCgwgRGz8H~fX4IFarPruMaydxrJwkGWQV-il1T58KrHGCo4Nh9Kz9xXkT~39mGuvxhpPvkcO~QaLo6mjJbF3vQ6hfWoXQF28DRMIEjxwQswNXWhhZcsOHPz4rT9BgRdODRKptg7Fo0dnMp-KCy~8IGevwNolYo1Zm9nEMVAt6C5WVXfrZRcf7OtItS10xtWtaUDY3Kx51V4O6MrHGiS~yTgg__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 380267417
2024-06-06 03:43:10,050 - DEBUG - Attempting to release lock 140642490064896 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3249fe98bfc62fcbc26067f724716a6ec49d12c4728a2af1df659013905dff21.lock
2024-06-06 03:43:10,050 - DEBUG - Lock 140642490064896 released on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3249fe98bfc62fcbc26067f724716a6ec49d12c4728a2af1df659013905dff21.lock
2024-06-06 03:43:10,051 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-06-06 03:43:10,279 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/model.safetensors HTTP/1.1" 404 0
2024-06-06 03:43:11,681 - WARNING - speechbrain.lobes.models.huggingface_transformers.huggingface - Wav2Vec2Model is frozen.
2024-06-06 03:43:11,727 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/preprocessor_config.json HTTP/1.1" 200 0
2024-06-06 03:43:11,728 - DEBUG - Attempting to acquire lock 140642494869680 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3f24dc078fcba55ee1d417a413847ead40c093a3.lock
2024-06-06 03:43:11,728 - DEBUG - Lock 140642494869680 acquired on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3f24dc078fcba55ee1d417a413847ead40c093a3.lock
2024-06-06 03:43:11,813 - DEBUG - https://huggingface.co:443 "GET /facebook/wav2vec2-base/resolve/main/preprocessor_config.json HTTP/1.1" 200 159
2024-06-06 03:43:11,814 - DEBUG - Attempting to release lock 140642494869680 on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3f24dc078fcba55ee1d417a413847ead40c093a3.lock
2024-06-06 03:43:11,814 - DEBUG - Lock 140642494869680 released on wav2vec2_checkpoints/.locks/models--facebook--wav2vec2-base/3f24dc078fcba55ee1d417a413847ead40c093a3.lock
2024-06-06 03:43:11,858 - DEBUG - https://huggingface.co:443 "HEAD /facebook/wav2vec2-base/resolve/main/config.json HTTP/1.1" 200 0
2024-06-06 03:43:11,863 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/CustomEncoderWav2vec2Classifier-6d849d67d0260d5a3ea6b156bb50a54b.
2024-06-06 03:43:11,863 - INFO - Fetch wav2vec2.ckpt: Delegating to Huggingface hub, source speechbrain/emotion-recognition-wav2vec2-IEMOCAP.
2024-06-06 03:43:11,919 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/wav2vec2.ckpt HTTP/1.1" 302 0
2024-06-06 03:43:11,920 - DEBUG - Attempting to acquire lock 140642567667248 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/b6db170a487b2912cfe10359fad40dbb7563120656f26f47c521b1c7e578bdd0.lock
2024-06-06 03:43:11,921 - DEBUG - Lock 140642567667248 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/b6db170a487b2912cfe10359fad40dbb7563120656f26f47c521b1c7e578bdd0.lock
2024-06-06 03:43:11,943 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/b6db170a487b2912cfe10359fad40dbb7563120656f26f47c521b1c7e578bdd0?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27wav2vec2.ckpt%3B+filename%3D%22wav2vec2.ckpt%22%3B&Expires=1717904591&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwNDU5MX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9lbW90aW9uLXJlY29nbml0aW9uLXdhdjJ2ZWMyLUlFTU9DQVAvYjZkYjE3MGE0ODdiMjkxMmNmZTEwMzU5ZmFkNDBkYmI3NTYzMTIwNjU2ZjI2ZjQ3YzUyMWIxYzdlNTc4YmRkMD9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=rZuXn1QddzpoRtCSMV2Tvd9gDsmGhhJ-mnV-v6tMCe205cmSS9PLtTofrteNOixWsS8N-zoPNQLllMt-v-B3pSkKKi6BB~l0Fv1DCjWn9SilGZeo5pM28qe4xiRA~HQ4A4ZiFLQ23bBZRCEemRe8dTrgr5KJsw0tKwc8yoQx5~ktp5QFXV9GTNfv1aQzNBSZ0iVV6CR9whIgPn-BMYfoWi5Hixly38VrfmOPNZbDuIuBzaRwjjJKEp53hnR0ssB82yfXZ5lyfegIIwf1~4qAivrxrCDy45pBzE1FtAmbedD6-nw1-gHcuLr6pLzEJgt4WpstpQd6SqfPvq6GGnf-cg__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 377575130
2024-06-06 03:43:52,394 - DEBUG - Attempting to release lock 140642567667248 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/b6db170a487b2912cfe10359fad40dbb7563120656f26f47c521b1c7e578bdd0.lock
2024-06-06 03:43:52,394 - DEBUG - Lock 140642567667248 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/b6db170a487b2912cfe10359fad40dbb7563120656f26f47c521b1c7e578bdd0.lock
2024-06-06 03:43:52,394 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/snapshots/cca44dffb9c17f16216908030ea7e7de26a92688/wav2vec2.ckpt
2024-06-06 03:43:52,395 - INFO - Fetch model.ckpt: Delegating to Huggingface hub, source speechbrain/emotion-recognition-wav2vec2-IEMOCAP.
2024-06-06 03:43:52,451 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/model.ckpt HTTP/1.1" 302 0
2024-06-06 03:43:52,452 - DEBUG - Attempting to acquire lock 140642540360176 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/e351bafc8c0a2699f174e2f43f13e732836731621a8e595b53ddaf5334abcefb.lock
2024-06-06 03:43:52,453 - DEBUG - Lock 140642540360176 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/e351bafc8c0a2699f174e2f43f13e732836731621a8e595b53ddaf5334abcefb.lock
2024-06-06 03:43:52,488 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/e351bafc8c0a2699f174e2f43f13e732836731621a8e595b53ddaf5334abcefb?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27model.ckpt%3B+filename%3D%22model.ckpt%22%3B&Expires=1717904632&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwNDYzMn19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9lbW90aW9uLXJlY29nbml0aW9uLXdhdjJ2ZWMyLUlFTU9DQVAvZTM1MWJhZmM4YzBhMjY5OWYxNzRlMmY0M2YxM2U3MzI4MzY3MzE2MjFhOGU1OTViNTNkZGFmNTMzNGFiY2VmYj9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=DhE~Y-VWkhUuQFbk6QO3TdTAKNr3Lb5xMS6uLsKsKxGMqJZNLb6J7W-TMnLHXpqKOqruKX~jLyDy5jrVv8QQXjTyNLvt-h1Ag0-K5xtsbAFX7LhKwTxC9XyJbF8ssH6M1qugFdyv6Lmwt2g5dywiUWWOclBvoH3m8jbeT2vUqJBGpxnOjJJ9I420e5PUl21~O~NiLvhG4mp5g1gGLsj8h0GCm~AN5lvAYj6q8KnRJU0JRaGqEofNp1UdK996xDjhjl7Hm5WNRmf25VsrQvIR0fSXkhGr6uzjbzP0XUWEzxISpSXtPf0mKR0p5j8g7Ta4iijwqog6O2H6wwkvFo5GBA__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 13176
2024-06-06 03:43:52,489 - DEBUG - Attempting to release lock 140642540360176 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/e351bafc8c0a2699f174e2f43f13e732836731621a8e595b53ddaf5334abcefb.lock
2024-06-06 03:43:52,489 - DEBUG - Lock 140642540360176 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/e351bafc8c0a2699f174e2f43f13e732836731621a8e595b53ddaf5334abcefb.lock
2024-06-06 03:43:52,489 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/snapshots/cca44dffb9c17f16216908030ea7e7de26a92688/model.ckpt
2024-06-06 03:43:52,490 - INFO - Fetch label_encoder.txt: Delegating to Huggingface hub, source speechbrain/emotion-recognition-wav2vec2-IEMOCAP.
2024-06-06 03:43:52,543 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/label_encoder.txt HTTP/1.1" 200 0
2024-06-06 03:43:52,543 - DEBUG - Attempting to acquire lock 140642533558368 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/66e0118b252758ae9f20ad48f2f05652817431f3.lock
2024-06-06 03:43:52,543 - DEBUG - Lock 140642533558368 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/66e0118b252758ae9f20ad48f2f05652817431f3.lock
2024-06-06 03:43:52,599 - DEBUG - https://huggingface.co:443 "GET /speechbrain/emotion-recognition-wav2vec2-IEMOCAP/resolve/main/label_encoder.txt HTTP/1.1" 200 83
2024-06-06 03:43:52,601 - DEBUG - Attempting to release lock 140642533558368 on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/66e0118b252758ae9f20ad48f2f05652817431f3.lock
2024-06-06 03:43:52,601 - DEBUG - Lock 140642533558368 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/66e0118b252758ae9f20ad48f2f05652817431f3.lock
2024-06-06 03:43:52,601 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--emotion-recognition-wav2vec2-IEMOCAP/snapshots/cca44dffb9c17f16216908030ea7e7de26a92688/label_encoder.txt
2024-06-06 03:43:52,601 - INFO - Loading pretrained files for: wav2vec2, model, label_encoder
2024-06-06 03:43:55,178 - DEBUG - Loaded categorical encoding from pretrained_models/CustomEncoderWav2vec2Classifier-6d849d67d0260d5a3ea6b156bb50a54b/label_encoder.ckpt
2024-06-06 03:43:55,185 - INFO - Emotion classification model loaded successfully.
2024-06-06 03:43:55,185 - INFO - Starting emotion classification...
2024-06-06 03:43:55,186 - INFO - Destination tmpy03lzvuz: local file in /tmp/tmpy03lzvuz.
2024-06-06 03:43:55,708 - DEBUG - CategoricalEncoder.expect_len was never called: assuming category count of 4 to be correct! Sanity check your encoder using `.expect_len`. Ensure that downstream code also uses the correct size. If you are sure this does not apply to you, use `.ignore_len`.
2024-06-06 03:43:55,708 - INFO - Emotion classification completed. Predicted emotion: ang
2024-06-06 03:43:55,709 - INFO - 172.17.0.1 - - [06/Jun/2024 03:43:55] "POST /classify_emotion HTTP/1.1" 200 -
2024-06-06 03:43:56,030 - INFO - Received request at /identify_language endpoint
2024-06-06 03:43:56,502 - INFO - Saved audio file to temporary location: /tmp/tmppjagi63z
2024-06-06 03:43:56,502 - INFO - Loading language identification model...
2024-06-06 03:43:56,503 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/lang-id-voxlingua107-ecapa.
2024-06-06 03:43:56,504 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-06-06 03:43:56,615 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/hyperparams.yaml HTTP/1.1" 200 0
2024-06-06 03:43:56,617 - DEBUG - Attempting to acquire lock 140642490332128 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/27d80047d277c45575779937a92cb829d4158528.lock
2024-06-06 03:43:56,617 - DEBUG - Lock 140642490332128 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/27d80047d277c45575779937a92cb829d4158528.lock
2024-06-06 03:43:56,693 - DEBUG - https://huggingface.co:443 "GET /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/hyperparams.yaml HTTP/1.1" 200 1519
2024-06-06 03:43:56,694 - DEBUG - Attempting to release lock 140642490332128 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/27d80047d277c45575779937a92cb829d4158528.lock
2024-06-06 03:43:56,694 - DEBUG - Lock 140642490332128 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/27d80047d277c45575779937a92cb829d4158528.lock
2024-06-06 03:43:56,695 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--lang-id-voxlingua107-ecapa/snapshots/0be82488db3cde1997e24106fa04160322bc3722/hyperparams.yaml
2024-06-06 03:43:56,695 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/lang-id-voxlingua107-ecapa.
2024-06-06 03:43:56,747 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/custom.py HTTP/1.1" 404 0
2024-06-06 03:43:57,601 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/lang-id-voxlingua107-ecapa.
2024-06-06 03:43:57,602 - INFO - Fetch embedding_model.ckpt: Delegating to Huggingface hub, source speechbrain/lang-id-voxlingua107-ecapa.
2024-06-06 03:43:57,657 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/embedding_model.ckpt HTTP/1.1" 302 0
2024-06-06 03:43:57,658 - DEBUG - Attempting to acquire lock 140642491112512 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/ab750d5c06d713477045fa798fab5d33e959dbc0dfe4de510a9a47844c79a19a.lock
2024-06-06 03:43:57,658 - DEBUG - Lock 140642491112512 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/ab750d5c06d713477045fa798fab5d33e959dbc0dfe4de510a9a47844c79a19a.lock
2024-06-06 03:43:57,659 - DEBUG - Starting new HTTPS connection (1): cdn-lfs.huggingface.co:443
2024-06-06 03:43:57,868 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/lang-id-voxlingua107-ecapa/ab750d5c06d713477045fa798fab5d33e959dbc0dfe4de510a9a47844c79a19a?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27embedding_model.ckpt%3B+filename%3D%22embedding_model.ckpt%22%3B&Expires=1717904637&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwNDYzN319LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9sYW5nLWlkLXZveGxpbmd1YTEwNy1lY2FwYS9hYjc1MGQ1YzA2ZDcxMzQ3NzA0NWZhNzk4ZmFiNWQzM2U5NTlkYmMwZGZlNGRlNTEwYTlhNDc4NDRjNzlhMTlhP3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=iDEnoUYj~Kb8hfuuEjn99Z4JReql7YRjCrxaWd69CBhKeBv2rPpxEsYZd5NusowVOtq07BMpD~BdlpLRilr4mfSCGd~uP~3tGSTKQBKry0sezkdeOJ0NopUpazRt7HLh5ep7wLkpBeGvVTLhtqjffuXyuZRAxJ~JrginvXfAWZAQS~kDLNA6q5qhZBLxTA3hmrCZ5W4nEdgVZNulJ0uoebUFZTr0xtGQcjyKLJo710fiJZoFVTgeDJkIHWWKjwarOR5Bbd~iV1EZmlikxeC8-HUHDJfjwKD~85JnCyWSjf9Vxjfff06hJhQNzpR7I7cSD0ffr8RNfNS8s9vITcINRQ__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 84474355
2024-06-06 03:44:06,529 - DEBUG - Attempting to release lock 140642491112512 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/ab750d5c06d713477045fa798fab5d33e959dbc0dfe4de510a9a47844c79a19a.lock
2024-06-06 03:44:06,529 - DEBUG - Lock 140642491112512 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/ab750d5c06d713477045fa798fab5d33e959dbc0dfe4de510a9a47844c79a19a.lock
2024-06-06 03:44:06,529 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--lang-id-voxlingua107-ecapa/snapshots/0be82488db3cde1997e24106fa04160322bc3722/embedding_model.ckpt
2024-06-06 03:44:06,530 - INFO - Fetch classifier.ckpt: Delegating to Huggingface hub, source speechbrain/lang-id-voxlingua107-ecapa.
2024-06-06 03:44:06,588 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/classifier.ckpt HTTP/1.1" 302 0
2024-06-06 03:44:06,589 - DEBUG - Attempting to acquire lock 140642493694368 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/a50d9024ff58d317031c9787d4c6c614d454a87a8ef32f9d36338cd3ff57adbc.lock
2024-06-06 03:44:06,589 - DEBUG - Lock 140642493694368 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/a50d9024ff58d317031c9787d4c6c614d454a87a8ef32f9d36338cd3ff57adbc.lock
2024-06-06 03:44:06,615 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/lang-id-voxlingua107-ecapa/a50d9024ff58d317031c9787d4c6c614d454a87a8ef32f9d36338cd3ff57adbc?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27classifier.ckpt%3B+filename%3D%22classifier.ckpt%22%3B&Expires=1717904646&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwNDY0Nn19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9sYW5nLWlkLXZveGxpbmd1YTEwNy1lY2FwYS9hNTBkOTAyNGZmNThkMzE3MDMxYzk3ODdkNGM2YzYxNGQ0NTRhODdhOGVmMzJmOWQzNjMzOGNkM2ZmNTdhZGJjP3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=oNXiOE8jTjXguZIjKF9KYgNUnl~MOXVvnYtvZDSOTy1pF5GMvsB61C1nVM2hkvFRUR6HEKb3T-5OQuh4up-wjo34tCvY5yZW9VeujkJuo8QKugoILwQVspo-STTw7XBXJrkzDLC4kRQXiIgMpP7n0RTj7Ub9wsTgvoW35du5M5DGnr4WQXVHD1CZeTOnjtiYIelAMoufyTAuNkbDBwANt6OoOmndmUaFxRoM2x8ZScWEawsf9NLxgY7DbyQ9xWhCH~qFgMO7XMZ9BIZoUXfbh2pwDY~L~mW5NXsC~GZUUPlnkex-IBjSYVvidNKLlH8ZA6uZPtwQx5otGCMbwKF8FQ__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 762555
2024-06-06 03:44:06,695 - DEBUG - Attempting to release lock 140642493694368 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/a50d9024ff58d317031c9787d4c6c614d454a87a8ef32f9d36338cd3ff57adbc.lock
2024-06-06 03:44:06,695 - DEBUG - Lock 140642493694368 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/a50d9024ff58d317031c9787d4c6c614d454a87a8ef32f9d36338cd3ff57adbc.lock
2024-06-06 03:44:06,695 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--lang-id-voxlingua107-ecapa/snapshots/0be82488db3cde1997e24106fa04160322bc3722/classifier.ckpt
2024-06-06 03:44:06,695 - INFO - Fetch label_encoder.txt: Delegating to Huggingface hub, source speechbrain/lang-id-voxlingua107-ecapa.
2024-06-06 03:44:06,740 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/label_encoder.txt HTTP/1.1" 200 0
2024-06-06 03:44:06,741 - DEBUG - Attempting to acquire lock 140642502604128 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/addb319892122ba2e7ddb4d01e0c87c4833dab38.lock
2024-06-06 03:44:06,741 - DEBUG - Lock 140642502604128 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/addb319892122ba2e7ddb4d01e0c87c4833dab38.lock
2024-06-06 03:44:06,809 - DEBUG - https://huggingface.co:443 "GET /speechbrain/lang-id-voxlingua107-ecapa/resolve/main/label_encoder.txt HTTP/1.1" 200 2204
2024-06-06 03:44:06,810 - DEBUG - Attempting to release lock 140642502604128 on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/addb319892122ba2e7ddb4d01e0c87c4833dab38.lock
2024-06-06 03:44:06,810 - DEBUG - Lock 140642502604128 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--lang-id-voxlingua107-ecapa/addb319892122ba2e7ddb4d01e0c87c4833dab38.lock
2024-06-06 03:44:06,810 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--lang-id-voxlingua107-ecapa/snapshots/0be82488db3cde1997e24106fa04160322bc3722/label_encoder.txt
2024-06-06 03:44:06,811 - INFO - Loading pretrained files for: embedding_model, classifier, label_encoder
2024-06-06 03:44:07,282 - DEBUG - Loaded categorical encoding from pretrained_models/lang-id-voxlingua107-ecapa/label_encoder.ckpt
2024-06-06 03:44:07,285 - INFO - Language identification model loaded successfully.
2024-06-06 03:44:07,285 - INFO - Starting language identification...
2024-06-06 03:44:07,285 - INFO - Destination tmppjagi63z: local file in /tmp/tmppjagi63z.
2024-06-06 03:44:07,603 - DEBUG - CategoricalEncoder.expect_len was never called: assuming category count of 107 to be correct! Sanity check your encoder using `.expect_len`. Ensure that downstream code also uses the correct size. If you are sure this does not apply to you, use `.ignore_len`.
2024-06-06 03:44:07,604 - INFO - Language identification completed. Predicted language: en: English, Likelihood: 0.7311094999313354
2024-06-06 03:44:07,606 - INFO - 172.17.0.1 - - [06/Jun/2024 03:44:07] "POST /identify_language HTTP/1.1" 200 -
2024-06-06 03:44:08,276 - INFO - Received request at /verify_speaker endpoint
2024-06-06 03:44:08,346 - INFO - Saved enrollment audio to: /tmp/tmpjwhyu8sh
2024-06-06 03:44:08,346 - INFO - Saved verification audio to: /tmp/tmpncgxlske
2024-06-06 03:44:08,347 - INFO - Loading speaker verification model...
2024-06-06 03:44:08,347 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-06-06 03:44:08,391 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/hyperparams.yaml HTTP/1.1" 200 0
2024-06-06 03:44:08,393 - DEBUG - Attempting to acquire lock 140642653190480 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/99d49dbaf2c68699660d729649d87b80ebbd9b9d.lock
2024-06-06 03:44:08,393 - DEBUG - Lock 140642653190480 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/99d49dbaf2c68699660d729649d87b80ebbd9b9d.lock
2024-06-06 03:44:08,437 - DEBUG - https://huggingface.co:443 "GET /speechbrain/spkrec-ecapa-voxceleb/resolve/main/hyperparams.yaml HTTP/1.1" 200 1920
2024-06-06 03:44:08,439 - DEBUG - Attempting to release lock 140642653190480 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/99d49dbaf2c68699660d729649d87b80ebbd9b9d.lock
2024-06-06 03:44:08,439 - DEBUG - Lock 140642653190480 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/99d49dbaf2c68699660d729649d87b80ebbd9b9d.lock
2024-06-06 03:44:08,439 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/eac27266f68caa806381260bd44ace38b136c76a/hyperparams.yaml
2024-06-06 03:44:08,440 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-06-06 03:44:08,476 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/custom.py HTTP/1.1" 404 0
2024-06-06 03:44:08,722 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/spkrec-ecapa-voxceleb.
2024-06-06 03:44:08,722 - INFO - Fetch embedding_model.ckpt: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-06-06 03:44:08,781 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/embedding_model.ckpt HTTP/1.1" 302 0
2024-06-06 03:44:08,783 - DEBUG - Attempting to acquire lock 140642535741760 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/0575cb64845e6b9a10db9bcb74d5ac32b326b8dc90352671d345e2ee3d0126a2.lock
2024-06-06 03:44:08,783 - DEBUG - Lock 140642535741760 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/0575cb64845e6b9a10db9bcb74d5ac32b326b8dc90352671d345e2ee3d0126a2.lock
2024-06-06 03:44:08,810 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/spkrec-ecapa-voxceleb/0575cb64845e6b9a10db9bcb74d5ac32b326b8dc90352671d345e2ee3d0126a2?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27embedding_model.ckpt%3B+filename%3D%22embedding_model.ckpt%22%3B&Expires=1717902757&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwMjc1N319LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9zcGtyZWMtZWNhcGEtdm94Y2VsZWIvMDU3NWNiNjQ4NDVlNmI5YTEwZGI5YmNiNzRkNWFjMzJiMzI2YjhkYzkwMzUyNjcxZDM0NWUyZWUzZDAxMjZhMj9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=RFb7yVoiR8uRsHmTvQt2DjpFr72gb62HwzYKHy-0pY0CXosy0b79dsy3F7F5Hc~PdJg0vi1Z5Ym~-6zE6iRVmBwkfeMRenJeSRGhvoo1EIsx4kiVeFeXGVUbFFqoZg6xGv6a9T2ejCkx1z5QKzXv2Yv68lscAENSFEgvWOj7xc7QEEWZkita8G3nB5i6OVnLap6EY2HT9XvwZxRKcP4UeOE-iCKuRc5TeG-RbD4~y~5BQbPelMfmanylZ3VALjB8pB-8arewOdeQV4orIdkxFxZ-O2F7dfLZMHR8QS0MoHnsDIz~06jsR1BHUGMnfaz-RtSTKMWaESbUR59rwYzjoQ__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 83316686
2024-06-06 03:44:17,417 - DEBUG - Attempting to release lock 140642535741760 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/0575cb64845e6b9a10db9bcb74d5ac32b326b8dc90352671d345e2ee3d0126a2.lock
2024-06-06 03:44:17,417 - DEBUG - Lock 140642535741760 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/0575cb64845e6b9a10db9bcb74d5ac32b326b8dc90352671d345e2ee3d0126a2.lock
2024-06-06 03:44:17,417 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/eac27266f68caa806381260bd44ace38b136c76a/embedding_model.ckpt
2024-06-06 03:44:17,419 - INFO - Fetch mean_var_norm_emb.ckpt: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-06-06 03:44:17,465 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/mean_var_norm_emb.ckpt HTTP/1.1" 200 0
2024-06-06 03:44:17,466 - DEBUG - Attempting to acquire lock 140642503048752 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/1978c5e7f20d5ffd14c8a932a7e85a09816f3da9.lock
2024-06-06 03:44:17,467 - DEBUG - Lock 140642503048752 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/1978c5e7f20d5ffd14c8a932a7e85a09816f3da9.lock
2024-06-06 03:44:17,518 - DEBUG - https://huggingface.co:443 "GET /speechbrain/spkrec-ecapa-voxceleb/resolve/main/mean_var_norm_emb.ckpt HTTP/1.1" 200 1921
2024-06-06 03:44:17,519 - DEBUG - Attempting to release lock 140642503048752 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/1978c5e7f20d5ffd14c8a932a7e85a09816f3da9.lock
2024-06-06 03:44:17,519 - DEBUG - Lock 140642503048752 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/1978c5e7f20d5ffd14c8a932a7e85a09816f3da9.lock
2024-06-06 03:44:17,519 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/eac27266f68caa806381260bd44ace38b136c76a/mean_var_norm_emb.ckpt
2024-06-06 03:44:17,520 - INFO - Fetch classifier.ckpt: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-06-06 03:44:17,562 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/classifier.ckpt HTTP/1.1" 302 0
2024-06-06 03:44:17,563 - DEBUG - Attempting to acquire lock 140642524087744 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/fd9e3634fe68bd0a427c95e354c0c677374f62b3f434e45b78599950d860d535.lock
2024-06-06 03:44:17,564 - DEBUG - Lock 140642524087744 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/fd9e3634fe68bd0a427c95e354c0c677374f62b3f434e45b78599950d860d535.lock
2024-06-06 03:44:17,589 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/spkrec-ecapa-voxceleb/fd9e3634fe68bd0a427c95e354c0c677374f62b3f434e45b78599950d860d535?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27classifier.ckpt%3B+filename%3D%22classifier.ckpt%22%3B&Expires=1717904657&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwNDY1N319LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9zcGtyZWMtZWNhcGEtdm94Y2VsZWIvZmQ5ZTM2MzRmZTY4YmQwYTQyN2M5NWUzNTRjMGM2NzczNzRmNjJiM2Y0MzRlNDViNzg1OTk5NTBkODYwZDUzNT9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=KF8o8s~vLm0PcraNZXKVSXa6LhhnQaTUR~vVOnlc3pCexpaBKbq5X0ayf-8tokw97-q4dt7Pocn6jbHsGhpojHVkZDnG2q7Oj0B1H2PhNziEXEMDlF3RsdbfTVGebozuNR9PDeBI1PE3BcHynJ1ybVbCkzeONjnMwI14HkD2EwIZtRajisijQXyPY09qP31pTX13NfLonjN0HG1juuDG8n-o~1CSOH8907WFpl2B7QF1ZMVdf0EFQrwO0IjofwyXVga-8xz1h8cgd1cNV-2m9KGO3fvN6RrzeDwPzd~4QnXETLUfdQVmhcp1w~PrSPu32tu-zXmS-OBh-Y6LU047sw__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 5534328
2024-06-06 03:44:18,189 - DEBUG - Attempting to release lock 140642524087744 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/fd9e3634fe68bd0a427c95e354c0c677374f62b3f434e45b78599950d860d535.lock
2024-06-06 03:44:18,189 - DEBUG - Lock 140642524087744 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/fd9e3634fe68bd0a427c95e354c0c677374f62b3f434e45b78599950d860d535.lock
2024-06-06 03:44:18,189 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/eac27266f68caa806381260bd44ace38b136c76a/classifier.ckpt
2024-06-06 03:44:18,190 - INFO - Fetch label_encoder.txt: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2024-06-06 03:44:18,383 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/label_encoder.txt HTTP/1.1" 200 0
2024-06-06 03:44:18,384 - DEBUG - Attempting to acquire lock 140642491903600 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/72c6fa7b170cbfd169df5e09326cd97febdf086a.lock
2024-06-06 03:44:18,385 - DEBUG - Lock 140642491903600 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/72c6fa7b170cbfd169df5e09326cd97febdf086a.lock
2024-06-06 03:44:18,444 - DEBUG - https://huggingface.co:443 "GET /speechbrain/spkrec-ecapa-voxceleb/resolve/main/label_encoder.txt HTTP/1.1" 200 128619
2024-06-06 03:44:18,476 - DEBUG - Attempting to release lock 140642491903600 on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/72c6fa7b170cbfd169df5e09326cd97febdf086a.lock
2024-06-06 03:44:18,476 - DEBUG - Lock 140642491903600 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--spkrec-ecapa-voxceleb/72c6fa7b170cbfd169df5e09326cd97febdf086a.lock
2024-06-06 03:44:18,476 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/eac27266f68caa806381260bd44ace38b136c76a/label_encoder.txt
2024-06-06 03:44:18,477 - INFO - Loading pretrained files for: embedding_model, mean_var_norm_emb, classifier, label_encoder
2024-06-06 03:44:18,710 - DEBUG - Loaded categorical encoding from pretrained_models/spkrec-ecapa-voxceleb/label_encoder.ckpt
2024-06-06 03:44:18,715 - INFO - Speaker verification model loaded successfully.
2024-06-06 03:44:18,715 - INFO - Starting speaker verification...
2024-06-06 03:44:18,716 - INFO - Destination tmpjwhyu8sh: local file in /tmp/tmpjwhyu8sh.
2024-06-06 03:44:18,729 - INFO - Destination tmpncgxlske: local file in /tmp/tmpncgxlske.
2024-06-06 03:44:19,407 - INFO - Speaker verification completed. Score: 0.2612878680229187, Prediction: True
2024-06-06 03:44:19,409 - INFO - 172.17.0.1 - - [06/Jun/2024 03:44:19] "POST /verify_speaker HTTP/1.1" 200 -
2024-06-06 03:44:19,604 - INFO - Received request at /separate_speech endpoint
Loading SpeechBrain model...
2024-06-06 03:44:19,605 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/sepformer-wsj02mix.
2024-06-06 03:44:19,606 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-06-06 03:44:19,761 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/sepformer-wsj02mix/resolve/main/hyperparams.yaml HTTP/1.1" 200 0
2024-06-06 03:44:19,767 - DEBUG - Attempting to acquire lock 140642463460784 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/167b5c2253db3e725bdecd071bc777da74fb606d.lock
2024-06-06 03:44:19,767 - DEBUG - Lock 140642463460784 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/167b5c2253db3e725bdecd071bc777da74fb606d.lock
2024-06-06 03:44:19,824 - DEBUG - https://huggingface.co:443 "GET /speechbrain/sepformer-wsj02mix/resolve/main/hyperparams.yaml HTTP/1.1" 200 1515
2024-06-06 03:44:19,827 - DEBUG - Attempting to release lock 140642463460784 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/167b5c2253db3e725bdecd071bc777da74fb606d.lock
2024-06-06 03:44:19,827 - DEBUG - Lock 140642463460784 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/167b5c2253db3e725bdecd071bc777da74fb606d.lock
2024-06-06 03:44:19,827 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--sepformer-wsj02mix/snapshots/3a2826343a10e2d2e8a75f79aeab5ff3a2473531/hyperparams.yaml
2024-06-06 03:44:19,827 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/sepformer-wsj02mix.
2024-06-06 03:44:19,894 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/sepformer-wsj02mix/resolve/main/custom.py HTTP/1.1" 404 0
2024-06-06 03:44:20,120 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/SepformerSeparation-2c9839ff08323bf97969e56e78b11972.
2024-06-06 03:44:20,121 - INFO - Fetch masknet.ckpt: Delegating to Huggingface hub, source speechbrain/sepformer-wsj02mix.
2024-06-06 03:44:20,175 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/sepformer-wsj02mix/resolve/main/masknet.ckpt HTTP/1.1" 302 0
2024-06-06 03:44:20,176 - DEBUG - Attempting to acquire lock 140642463464240 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/57dd5f49bf21c5a2101bb4e46648d05d34d517a59e26f0b06646d0bebe8214c7.lock
2024-06-06 03:44:20,177 - DEBUG - Lock 140642463464240 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/57dd5f49bf21c5a2101bb4e46648d05d34d517a59e26f0b06646d0bebe8214c7.lock
2024-06-06 03:44:20,178 - DEBUG - Starting new HTTPS connection (1): cdn-lfs.huggingface.co:443
2024-06-06 03:44:20,363 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/sepformer-wsj02mix/57dd5f49bf21c5a2101bb4e46648d05d34d517a59e26f0b06646d0bebe8214c7?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27masknet.ckpt%3B+filename%3D%22masknet.ckpt%22%3B&Expires=1717904660&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwNDY2MH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9zZXBmb3JtZXItd3NqMDJtaXgvNTdkZDVmNDliZjIxYzVhMjEwMWJiNGU0NjY0OGQwNWQzNGQ1MTdhNTllMjZmMGIwNjY0NmQwYmViZTgyMTRjNz9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=kb7z7pMfkU-UelcZnIl4pvQuqnxiNo36pWYvxIcqecpeJAiCOzmPl~ty2nkMtVkcel~VxTZ7~LD-X2H16~9NCNaN-Z~Ivqy-D9wszRLgo2avfAvINIbBSNR1ayqXCZRQP7jD6rU-Tr~KQu6trkRqtueOKbPdzBpd2wwUuz4Dglh9PBzWFtDczPG6mqGtAEcI6p~1IQMpUndv03Y0w982umRmymtLyAlYjvbS-eLOd0JbAyGUd3cOeZsUApPxWqhMioIDkn4nh6QInfj4yrkpzJ8sQbi2deD5bfxSk-IrFipFPEm7r7vPUBv7Lu6tztZXNC-6ATbb5IVSOhw-YdtDDw__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 113108458
2024-06-06 03:44:32,019 - DEBUG - Attempting to release lock 140642463464240 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/57dd5f49bf21c5a2101bb4e46648d05d34d517a59e26f0b06646d0bebe8214c7.lock
2024-06-06 03:44:32,019 - DEBUG - Lock 140642463464240 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/57dd5f49bf21c5a2101bb4e46648d05d34d517a59e26f0b06646d0bebe8214c7.lock
2024-06-06 03:44:32,019 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--sepformer-wsj02mix/snapshots/3a2826343a10e2d2e8a75f79aeab5ff3a2473531/masknet.ckpt
2024-06-06 03:44:32,021 - INFO - Fetch encoder.ckpt: Delegating to Huggingface hub, source speechbrain/sepformer-wsj02mix.
2024-06-06 03:44:32,115 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/sepformer-wsj02mix/resolve/main/encoder.ckpt HTTP/1.1" 302 0
2024-06-06 03:44:32,116 - DEBUG - Attempting to acquire lock 140642463462128 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/3139bb880b29ea77ae8a168b8f2ad6e8eb5c2c0904289676c223d0e93cd2a35d.lock
2024-06-06 03:44:32,117 - DEBUG - Lock 140642463462128 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/3139bb880b29ea77ae8a168b8f2ad6e8eb5c2c0904289676c223d0e93cd2a35d.lock
2024-06-06 03:44:32,147 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/sepformer-wsj02mix/3139bb880b29ea77ae8a168b8f2ad6e8eb5c2c0904289676c223d0e93cd2a35d?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27encoder.ckpt%3B+filename%3D%22encoder.ckpt%22%3B&Expires=1717904672&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwNDY3Mn19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9zZXBmb3JtZXItd3NqMDJtaXgvMzEzOWJiODgwYjI5ZWE3N2FlOGExNjhiOGYyYWQ2ZThlYjVjMmMwOTA0Mjg5Njc2YzIyM2QwZTkzY2QyYTM1ZD9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=CIfdTaGzGfq18W6R6KTA7qBBGtDpYuwyhH6oI1HmW7x4a05wagu0ZZHf4eofx4jk46SlMENuaNg~8-9RU8E6ne4Lmjma2P3sj1Bj8NDIlBwi~MZyTBUP0ya--U0dqgms7stp9aVXHVszcttou0Yq05c8cnqmSz10nxsk~aHiN4HjVh~5b1qcdpsKzL2Ks49MsFODiTDQ1vzNkEFhdhKYQJxOwSACQndVwLqko0MabXs-s~RCyrGS64~8KJ7eV4DEdaox57tr71pFJomQYFURdLLh3GsBQAoJLkQw~Zrpt~QbmRckf58H6IsDjHyDhiif5ZahkqVkAtEdd9xQ1oGmXw__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 17267
2024-06-06 03:44:32,150 - DEBUG - Attempting to release lock 140642463462128 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/3139bb880b29ea77ae8a168b8f2ad6e8eb5c2c0904289676c223d0e93cd2a35d.lock
2024-06-06 03:44:32,150 - DEBUG - Lock 140642463462128 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/3139bb880b29ea77ae8a168b8f2ad6e8eb5c2c0904289676c223d0e93cd2a35d.lock
2024-06-06 03:44:32,150 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--sepformer-wsj02mix/snapshots/3a2826343a10e2d2e8a75f79aeab5ff3a2473531/encoder.ckpt
2024-06-06 03:44:32,151 - INFO - Fetch decoder.ckpt: Delegating to Huggingface hub, source speechbrain/sepformer-wsj02mix.
2024-06-06 03:44:32,198 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/sepformer-wsj02mix/resolve/main/decoder.ckpt HTTP/1.1" 302 0
2024-06-06 03:44:32,199 - DEBUG - Attempting to acquire lock 140642463463616 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/abea1a2d41151331b4c36071d1b3205aed940a189721f008b12a703e9c63e7e4.lock
2024-06-06 03:44:32,200 - DEBUG - Lock 140642463463616 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/abea1a2d41151331b4c36071d1b3205aed940a189721f008b12a703e9c63e7e4.lock
2024-06-06 03:44:32,230 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/sepformer-wsj02mix/abea1a2d41151331b4c36071d1b3205aed940a189721f008b12a703e9c63e7e4?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27decoder.ckpt%3B+filename%3D%22decoder.ckpt%22%3B&Expires=1717904672&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwNDY3Mn19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9zZXBmb3JtZXItd3NqMDJtaXgvYWJlYTFhMmQ0MTE1MTMzMWI0YzM2MDcxZDFiMzIwNWFlZDk0MGExODk3MjFmMDA4YjEyYTcwM2U5YzYzZTdlND9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=NFAYHfltp-7A-8nTLLvIIcNI2LCf4icBlvzBr8n5tw0hSTGo0H~NU965IMmBjdqFuOAD2r7VJQHA~FiSKW2b1EGHhdX~jbHaI6srCmzJh6MKVTL33AeEhHEdh9ExmXVPl1Xeq~oggDWN9cxfdIjtlpYlTa0jllhDVvckoLqKejbKJ-Z1jICG90JehArvpSilw1LxNO~z9nu94NE68zd4ksZJXx3vvit6KJ~nASy3MFtTb5K5QSf8zoJW~HgV-polOhtGgYHWC9Ak1BcpaYVox4bejmKwrvicYJVr6PTNLtvJVLvM9pEf0b-Nj8EwaVs9kNfzBo8YYmLbNXq5-IhMtA__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 17202
2024-06-06 03:44:32,232 - DEBUG - Attempting to release lock 140642463463616 on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/abea1a2d41151331b4c36071d1b3205aed940a189721f008b12a703e9c63e7e4.lock
2024-06-06 03:44:32,232 - DEBUG - Lock 140642463463616 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--sepformer-wsj02mix/abea1a2d41151331b4c36071d1b3205aed940a189721f008b12a703e9c63e7e4.lock
2024-06-06 03:44:32,232 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--sepformer-wsj02mix/snapshots/3a2826343a10e2d2e8a75f79aeab5ff3a2473531/decoder.ckpt
2024-06-06 03:44:32,233 - INFO - Loading pretrained files for: masknet, encoder, decoder
2024-06-06 03:44:32,749 - INFO - SpeechBrain model loaded successfully.
2024-06-06 03:44:32,755 - INFO - Saved audio file to temporary location: /tmp/tmp6yvxoi7l
2024-06-06 03:44:32,755 - INFO - Starting speech separation...
2024-06-06 03:44:32,757 - INFO - Destination tmp6yvxoi7l: local file in /tmp/tmp6yvxoi7l.
2024-06-06 03:44:41,165 - INFO - Speech separation completed.
2024-06-06 03:44:41,179 - INFO - 172.17.0.1 - - [06/Jun/2024 03:44:41] "POST /separate_speech HTTP/1.1" 200 -
2024-06-06 03:44:41,468 - INFO - Received request at /text-to-speech endpoint
Loading NLTK punkt model...
2024-06-06 03:44:43,644 - INFO - NLTK punkt model loaded successfully.
2024-06-06 03:44:43,654 - INFO - Loading Tacotron2 TTS model...
2024-06-06 03:44:43,656 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/tts-tacotron2-ljspeech.
2024-06-06 03:44:43,699 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-tacotron2-ljspeech/resolve/main/hyperparams.yaml HTTP/1.1" 200 0
2024-06-06 03:44:43,705 - DEBUG - Attempting to acquire lock 140642462722304 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/016ddca048059e921ec689e195ec0709c387f264.lock
2024-06-06 03:44:43,705 - DEBUG - Lock 140642462722304 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/016ddca048059e921ec689e195ec0709c387f264.lock
2024-06-06 03:44:43,751 - DEBUG - https://huggingface.co:443 "GET /speechbrain/tts-tacotron2-ljspeech/resolve/main/hyperparams.yaml HTTP/1.1" 200 2199
2024-06-06 03:44:43,754 - DEBUG - Attempting to release lock 140642462722304 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/016ddca048059e921ec689e195ec0709c387f264.lock
2024-06-06 03:44:43,754 - DEBUG - Lock 140642462722304 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/016ddca048059e921ec689e195ec0709c387f264.lock
2024-06-06 03:44:43,754 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--tts-tacotron2-ljspeech/snapshots/d01e530d6d8e1b388c04b882305867addbed4389/hyperparams.yaml
2024-06-06 03:44:43,755 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/tts-tacotron2-ljspeech.
2024-06-06 03:44:43,803 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-tacotron2-ljspeech/resolve/main/custom.py HTTP/1.1" 404 0
2024-06-06 03:44:44,056 - DEBUG - Collecting files (or symlinks) for pretraining in /app/tmpdir_tts.
2024-06-06 03:44:44,056 - INFO - Fetch model.ckpt: Delegating to Huggingface hub, source speechbrain/tts-tacotron2-ljspeech.
2024-06-06 03:44:44,107 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-tacotron2-ljspeech/resolve/main/model.ckpt HTTP/1.1" 302 0
2024-06-06 03:44:44,109 - DEBUG - Attempting to acquire lock 140642489900624 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/02d1aa3fc1cc8fb0981895c765e9d0017416bb78861b5450e458dda92e567856.lock
2024-06-06 03:44:44,110 - DEBUG - Lock 140642489900624 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/02d1aa3fc1cc8fb0981895c765e9d0017416bb78861b5450e458dda92e567856.lock
2024-06-06 03:44:44,130 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /repos/53/aa/53aa9731ffa60d07c730d5cf43b26f43ed3e81d8af2fcd171871b27ef602797f/02d1aa3fc1cc8fb0981895c765e9d0017416bb78861b5450e458dda92e567856?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27model.ckpt%3B+filename%3D%22model.ckpt%22%3B&Expires=1717904684&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwNDY4NH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9yZXBvcy81My9hYS81M2FhOTczMWZmYTYwZDA3YzczMGQ1Y2Y0M2IyNmY0M2VkM2U4MWQ4YWYyZmNkMTcxODcxYjI3ZWY2MDI3OTdmLzAyZDFhYTNmYzFjYzhmYjA5ODE4OTVjNzY1ZTlkMDAxNzQxNmJiNzg4NjFiNTQ1MGU0NThkZGE5MmU1Njc4NTY~cmVzcG9uc2UtY29udGVudC1kaXNwb3NpdGlvbj0qIn1dfQ__&Signature=Hqgbx8qBfBgzLtgeHthfxriy6lqz-UTti5~zv~H5VNeDlKDUbHSW3--y~YFXluKHZ~EyeGYAGRhdaKRwUyyVLsypshPo33iJtmFKxchy~MJQ8fqKLbUr3aH-jLbS3myD-KHD4qwwMBYfz2eRptFY3bauQmIqRJ5jc9isKF~Q2MZ5B93IS8RXAw5Nj9UzH9h08x6nMdo0XyzUaACRJg5LTbmOSgbYfn7QEHQuiX2~M8GWTpYeosUcU8B9a996ndQ-PJTLWo9wyMACIJ6652854vkKEVJUuIkEre3a1f~jkMWuLxsI96v0IQjJJQ~2elwWvCyK09Mnd8HUEpwIqktDPQ__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 112830206
2024-06-06 03:44:55,619 - DEBUG - Attempting to release lock 140642489900624 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/02d1aa3fc1cc8fb0981895c765e9d0017416bb78861b5450e458dda92e567856.lock
2024-06-06 03:44:55,619 - DEBUG - Lock 140642489900624 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-tacotron2-ljspeech/02d1aa3fc1cc8fb0981895c765e9d0017416bb78861b5450e458dda92e567856.lock
2024-06-06 03:44:55,619 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--tts-tacotron2-ljspeech/snapshots/d01e530d6d8e1b388c04b882305867addbed4389/model.ckpt
2024-06-06 03:44:55,620 - INFO - Loading pretrained files for: model
2024-06-06 03:44:55,661 - INFO - Tacotron2 TTS model loaded successfully.
2024-06-06 03:44:55,661 - INFO - Loading HIFIGAN vocoder...
2024-06-06 03:44:55,767 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/tts-hifigan-ljspeech.
2024-06-06 03:44:55,826 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-hifigan-ljspeech/resolve/main/hyperparams.yaml HTTP/1.1" 200 0
2024-06-06 03:44:55,867 - DEBUG - Attempting to acquire lock 140642463278880 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/22c70b47621834b4b479a4f4d1df012b1db61c18.lock
2024-06-06 03:44:55,873 - DEBUG - Lock 140642463278880 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/22c70b47621834b4b479a4f4d1df012b1db61c18.lock
2024-06-06 03:44:55,919 - DEBUG - https://huggingface.co:443 "GET /speechbrain/tts-hifigan-ljspeech/resolve/main/hyperparams.yaml HTTP/1.1" 200 1156
2024-06-06 03:44:55,941 - DEBUG - Attempting to release lock 140642463278880 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/22c70b47621834b4b479a4f4d1df012b1db61c18.lock
2024-06-06 03:44:55,941 - DEBUG - Lock 140642463278880 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/22c70b47621834b4b479a4f4d1df012b1db61c18.lock
2024-06-06 03:44:55,941 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--tts-hifigan-ljspeech/snapshots/17fbdc3aae35b81e1554111fa54eab5f2b70cedb/hyperparams.yaml
2024-06-06 03:44:55,942 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/tts-hifigan-ljspeech.
2024-06-06 03:44:55,986 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-hifigan-ljspeech/resolve/main/custom.py HTTP/1.1" 404 0
2024-06-06 03:44:56,166 - DEBUG - Collecting files (or symlinks) for pretraining in /app/tmpdir_vocoder.
2024-06-06 03:44:56,167 - INFO - Fetch generator.ckpt: Delegating to Huggingface hub, source speechbrain/tts-hifigan-ljspeech.
2024-06-06 03:44:56,208 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/tts-hifigan-ljspeech/resolve/main/generator.ckpt HTTP/1.1" 302 0
2024-06-06 03:44:56,209 - DEBUG - Attempting to acquire lock 140642523837120 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/1a389f24ffdc3769e0b9c0331f9d803ad0b78185e0da4f2d094e29eedbc11640.lock
2024-06-06 03:44:56,210 - DEBUG - Lock 140642523837120 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/1a389f24ffdc3769e0b9c0331f9d803ad0b78185e0da4f2d094e29eedbc11640.lock
2024-06-06 03:44:56,237 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /repos/dd/64/dd64237d5b4ebb00291b992d7ef15692db3e45614c097e940bf876bed74fc754/1a389f24ffdc3769e0b9c0331f9d803ad0b78185e0da4f2d094e29eedbc11640?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27generator.ckpt%3B+filename%3D%22generator.ckpt%22%3B&Expires=1717904696&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwNDY5Nn19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9yZXBvcy9kZC82NC9kZDY0MjM3ZDViNGViYjAwMjkxYjk5MmQ3ZWYxNTY5MmRiM2U0NTYxNGMwOTdlOTQwYmY4NzZiZWQ3NGZjNzU0LzFhMzg5ZjI0ZmZkYzM3NjllMGI5YzAzMzFmOWQ4MDNhZDBiNzgxODVlMGRhNGYyZDA5NGUyOWVlZGJjMTE2NDA~cmVzcG9uc2UtY29udGVudC1kaXNwb3NpdGlvbj0qIn1dfQ__&Signature=G4GrTwGVO0pyHuMNxzxA4B00-rpiAlm7A5mk2eixZNCecqJPFmXSbmPKLo0ZFaz91uqsbIA1K~jdskCH7btvfQfLRSJlILXJFSYiHqpJEu6Y3zzAdv9RuuwUIjvWGqQKZd3P~2swzvECbrZXDPYX6qVHbMdaOlqPqtPy0s5l~QpkL6eDoRh8m4ZbEsTGPut2umEA1uR8wegMkk4MqHpg4Oawf7Cgj6zrzy82WWtMOC4sGVUDLGQiqs-90quzMRXIQl-Z1LsK9hOaR0rFkcUb1M2GT6pkE7NjDaobK~Cr~pdc3trqHAlPt7WGYPvmSmN2LisScRK9VFgRGfkyAQ3tlA__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 55828077
2024-06-06 03:45:02,490 - DEBUG - Attempting to release lock 140642523837120 on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/1a389f24ffdc3769e0b9c0331f9d803ad0b78185e0da4f2d094e29eedbc11640.lock
2024-06-06 03:45:02,490 - DEBUG - Lock 140642523837120 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--tts-hifigan-ljspeech/1a389f24ffdc3769e0b9c0331f9d803ad0b78185e0da4f2d094e29eedbc11640.lock
2024-06-06 03:45:02,491 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--tts-hifigan-ljspeech/snapshots/17fbdc3aae35b81e1554111fa54eab5f2b70cedb/generator.ckpt
2024-06-06 03:45:02,491 - INFO - Loading pretrained files for: generator
2024-06-06 03:45:02,522 - INFO - HIFIGAN vocoder loaded successfully.
2024-06-06 03:45:02,522 - INFO - Starting text-to-speech...
2024-06-06 03:45:03,803 - INFO - Text-to-speech completed.
2024-06-06 03:45:03,803 - INFO - Starting vocoder processing...
2024-06-06 03:45:06,308 - INFO - Vocoder processing completed.
2024-06-06 03:45:06,314 - INFO - 172.17.0.1 - - [06/Jun/2024 03:45:06] "POST /text_to_speech HTTP/1.1" 200 -
2024-06-06 03:45:06,474 - INFO - Received request at /transcribe endpoint
Loading SpeechBrain model...
2024-06-06 03:45:06,475 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-06-06 03:45:06,534 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/hyperparams.yaml HTTP/1.1" 200 0
2024-06-06 03:45:06,537 - DEBUG - Attempting to acquire lock 140642523839424 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/cff94d9bddfb4ea63d4226d69dff5664e945ec43.lock
2024-06-06 03:45:06,537 - DEBUG - Lock 140642523839424 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/cff94d9bddfb4ea63d4226d69dff5664e945ec43.lock
2024-06-06 03:45:06,596 - DEBUG - https://huggingface.co:443 "GET /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/hyperparams.yaml HTTP/1.1" 200 4991
2024-06-06 03:45:06,597 - DEBUG - Attempting to release lock 140642523839424 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/cff94d9bddfb4ea63d4226d69dff5664e945ec43.lock
2024-06-06 03:45:06,597 - DEBUG - Lock 140642523839424 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/cff94d9bddfb4ea63d4226d69dff5664e945ec43.lock
2024-06-06 03:45:06,597 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--asr-transformer-transformerlm-librispeech/snapshots/bcf56f762f37877912578f8800bc2a4f5171e5e5/hyperparams.yaml
2024-06-06 03:45:06,598 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-06-06 03:45:06,665 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/custom.py HTTP/1.1" 404 0
2024-06-06 03:45:09,250 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/EncoderDecoderASR-8720b4b0f1869a8221440e93425db7d5.
2024-06-06 03:45:09,250 - INFO - Fetch normalizer.ckpt: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-06-06 03:45:09,630 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/normalizer.ckpt HTTP/1.1" 302 0
2024-06-06 03:45:09,631 - DEBUG - Attempting to acquire lock 140642202328992 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/956e9c1751beac2f75bfff8253f9811b76a1d57bb52f28587d3b6d45bbce6315.lock
2024-06-06 03:45:09,631 - DEBUG - Lock 140642202328992 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/956e9c1751beac2f75bfff8253f9811b76a1d57bb52f28587d3b6d45bbce6315.lock
2024-06-06 03:45:09,657 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/asr-transformer-transformerlm-librispeech/956e9c1751beac2f75bfff8253f9811b76a1d57bb52f28587d3b6d45bbce6315?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27normalizer.ckpt%3B+filename%3D%22normalizer.ckpt%22%3B&Expires=1717904709&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwNDcwOX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9hc3ItdHJhbnNmb3JtZXItdHJhbnNmb3JtZXJsbS1saWJyaXNwZWVjaC85NTZlOWMxNzUxYmVhYzJmNzViZmZmODI1M2Y5ODExYjc2YTFkNTdiYjUyZjI4NTg3ZDNiNmQ0NWJiY2U2MzE1P3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=vTbN5b48fZiDvgrtt6J1U~cJJlHDXQQeXlkdfGiUh2V7Z5FgBYwwlYqQFj-CeGqg~AObz-spjb0rmzXCJQ~nWeJggyBI7qvV~8V~boaQ84dpsmjAZPdvFldlE8Co-KkAqdoOu6DKrDa1oVyG479~ttSk~TTSNLxp~48tAbIPFI1AYo9-YVOV13ovNhTgEhAA-WVarIT38VOQtwxo3HhHFQZtjO~6fgTdw2GK91~iMrND9cGSbZl~g~f4DvVa~BnafQJ7TXvEGpakK1PVumkM6LYu8WwQckgZ2MAaOPrA0YcpfnKip5OCHsKn8hZe-Vn6SKjl9eWWGzbBYN6wuyVULw__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 1703
2024-06-06 03:45:09,659 - DEBUG - Attempting to release lock 140642202328992 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/956e9c1751beac2f75bfff8253f9811b76a1d57bb52f28587d3b6d45bbce6315.lock
2024-06-06 03:45:09,659 - DEBUG - Lock 140642202328992 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/956e9c1751beac2f75bfff8253f9811b76a1d57bb52f28587d3b6d45bbce6315.lock
2024-06-06 03:45:09,659 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--asr-transformer-transformerlm-librispeech/snapshots/bcf56f762f37877912578f8800bc2a4f5171e5e5/normalizer.ckpt
2024-06-06 03:45:09,661 - INFO - Fetch asr.ckpt: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-06-06 03:45:09,716 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/asr.ckpt HTTP/1.1" 302 0
2024-06-06 03:45:09,717 - DEBUG - Attempting to acquire lock 140642202328992 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/5a04a1b364fe37769ed47904e0237c412e874321efeda55986f08a06822fe6ea.lock
2024-06-06 03:45:09,717 - DEBUG - Lock 140642202328992 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/5a04a1b364fe37769ed47904e0237c412e874321efeda55986f08a06822fe6ea.lock
2024-06-06 03:45:09,742 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/asr-transformer-transformerlm-librispeech/5a04a1b364fe37769ed47904e0237c412e874321efeda55986f08a06822fe6ea?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27asr.ckpt%3B+filename%3D%22asr.ckpt%22%3B&Expires=1717904709&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwNDcwOX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9hc3ItdHJhbnNmb3JtZXItdHJhbnNmb3JtZXJsbS1saWJyaXNwZWVjaC81YTA0YTFiMzY0ZmUzNzc2OWVkNDc5MDRlMDIzN2M0MTJlODc0MzIxZWZlZGE1NTk4NmYwOGEwNjgyMmZlNmVhP3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=W5mKszlvW88apsErIhkQanYVUzoyUhqVvwVQAMviCZUDyPLZQ-sDxRWkoLUQwGijgbJhcBld4GlRvS7lIrOWzRZDDxkoQ2y4Q6ZlJFG9N0mKXK9MHZRqp8Gp9SFYke2kgosYXZ8V7FnzhIzuLbqzqYbZQOpp96KV9n7Y5x82t7E8QzbTef9msWPJEOIdRiIoPTmz1tsF-qZldtSoAKF8dU41qWufT2lIkUBn9NHh8RAtFfaP6vS1JyhQa66WU2jN5ghZ0gV3Mn7MWXPeSfxNBbBn96m~QLyBBH1EafK7P8XiCmhVdjm0H9Tt5MnJpTpZv8~wok7Yu~OG~mnUsjkyig__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 291335121
2024-06-06 03:45:41,465 - DEBUG - Attempting to release lock 140642202328992 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/5a04a1b364fe37769ed47904e0237c412e874321efeda55986f08a06822fe6ea.lock
2024-06-06 03:45:41,465 - DEBUG - Lock 140642202328992 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/5a04a1b364fe37769ed47904e0237c412e874321efeda55986f08a06822fe6ea.lock
2024-06-06 03:45:41,465 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--asr-transformer-transformerlm-librispeech/snapshots/bcf56f762f37877912578f8800bc2a4f5171e5e5/asr.ckpt
2024-06-06 03:45:41,504 - INFO - Fetch lm.ckpt: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-06-06 03:45:41,569 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/lm.ckpt HTTP/1.1" 302 0
2024-06-06 03:45:41,570 - DEBUG - Attempting to acquire lock 140642202328896 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/87f1398c0ed833631e487aedfbda32be4c9618565482f6fad78ca4e8dda03e5b.lock
2024-06-06 03:45:41,571 - DEBUG - Lock 140642202328896 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/87f1398c0ed833631e487aedfbda32be4c9618565482f6fad78ca4e8dda03e5b.lock
2024-06-06 03:45:41,597 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/asr-transformer-transformerlm-librispeech/87f1398c0ed833631e487aedfbda32be4c9618565482f6fad78ca4e8dda03e5b?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27lm.ckpt%3B+filename%3D%22lm.ckpt%22%3B&Expires=1717904741&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwNDc0MX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9hc3ItdHJhbnNmb3JtZXItdHJhbnNmb3JtZXJsbS1saWJyaXNwZWVjaC84N2YxMzk4YzBlZDgzMzYzMWU0ODdhZWRmYmRhMzJiZTRjOTYxODU2NTQ4MmY2ZmFkNzhjYTRlOGRkYTAzZTViP3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=ydZcpvZJl9Q9QO34hQR0VoxRgd4hvgEFvi2aibjKZrcTWrIV~mlVE3uczQr6ULGiPJZAS0i8b-fygeP3etNBK7Lhfi0dyaiZ8SZbtTJEvD7l7ZLXRlxf3DhvvHxEO8yfYNxPMG~coZFbXBwzRFVqAcIbrcCPOnt-wmipsKs9R0VoG0mb9YIxe0oJATuoN5SPudU-nJ-Xhkjlq88GZjftpRAzygIApyJ51ZL3543JeAdHIzolQoR-0ozY-f4L6ZxIgt19LVzFspcRIHqdn5uMpdmBl4eKxBYjpfFYCcEYHyvs1k57NyDXn47vQaA79k5LrsA6dA-esBb9NEEHei-kxg__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 381074869
2024-06-06 03:46:25,049 - DEBUG - Attempting to release lock 140642202328896 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/87f1398c0ed833631e487aedfbda32be4c9618565482f6fad78ca4e8dda03e5b.lock
2024-06-06 03:46:25,049 - DEBUG - Lock 140642202328896 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/87f1398c0ed833631e487aedfbda32be4c9618565482f6fad78ca4e8dda03e5b.lock
2024-06-06 03:46:25,049 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--asr-transformer-transformerlm-librispeech/snapshots/bcf56f762f37877912578f8800bc2a4f5171e5e5/lm.ckpt
2024-06-06 03:46:25,050 - INFO - Fetch tokenizer.ckpt: Delegating to Huggingface hub, source speechbrain/asr-transformer-transformerlm-librispeech.
2024-06-06 03:46:25,110 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/asr-transformer-transformerlm-librispeech/resolve/main/tokenizer.ckpt HTTP/1.1" 302 0
2024-06-06 03:46:25,110 - DEBUG - Attempting to acquire lock 140642523828384 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/3cdc063492725aa2809a5fbb1aa790eda0e58370c810ebb54a8f4c8b2c46ea68.lock
2024-06-06 03:46:25,111 - DEBUG - Lock 140642523828384 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/3cdc063492725aa2809a5fbb1aa790eda0e58370c810ebb54a8f4c8b2c46ea68.lock
2024-06-06 03:46:25,138 - DEBUG - https://cdn-lfs.huggingface.co:443 "GET /speechbrain/asr-transformer-transformerlm-librispeech/3cdc063492725aa2809a5fbb1aa790eda0e58370c810ebb54a8f4c8b2c46ea68?response-content-disposition=attachment%3B+filename*%3DUTF-8%27%27tokenizer.ckpt%3B+filename%3D%22tokenizer.ckpt%22%3B&Expires=1717904785&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcxNzkwNDc4NX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9zcGVlY2hicmFpbi9hc3ItdHJhbnNmb3JtZXItdHJhbnNmb3JtZXJsbS1saWJyaXNwZWVjaC8zY2RjMDYzNDkyNzI1YWEyODA5YTVmYmIxYWE3OTBlZGEwZTU4MzcwYzgxMGViYjU0YThmNGM4YjJjNDZlYTY4P3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiJ9XX0_&Signature=JMsvVH-toQuz8~~wJ1Z0lEGoK48Aex1ztc6LaqADbr9EOrx6ba1uiLws2fZeuvCbDd~x0cIP7OC6Enrd~RaiqI9TN7RHe4mlZswD8doNQPwO8VNlxbDODsllVtL9zD0NwUzZ2-FrFkvLuiwCOGp7bw3N~Oezse6w8VaoayOEZK55bNxwa10v8~FD6nQrhWcGRkCWZmDwRqIikk4~X7gg3qxMu-Sl4-TPo-~5RZJxZERY2NRSMAd5bEBuMBvcGcFyoyKRHH4Sck8Do3X~uUzn-CXrFdDT8Nv8NIcwba14fCd60W9EgzxC6T5jgf5HTZwSobwwsVY8WTdtpCldsSxI4Q__&Key-Pair-Id=KVTP0A1DKRTAX HTTP/1.1" 200 324347
2024-06-06 03:46:25,165 - DEBUG - Attempting to release lock 140642523828384 on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/3cdc063492725aa2809a5fbb1aa790eda0e58370c810ebb54a8f4c8b2c46ea68.lock
2024-06-06 03:46:25,165 - DEBUG - Lock 140642523828384 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--asr-transformer-transformerlm-librispeech/3cdc063492725aa2809a5fbb1aa790eda0e58370c810ebb54a8f4c8b2c46ea68.lock
2024-06-06 03:46:25,165 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--asr-transformer-transformerlm-librispeech/snapshots/bcf56f762f37877912578f8800bc2a4f5171e5e5/tokenizer.ckpt
2024-06-06 03:46:25,166 - INFO - Loading pretrained files for: normalizer, asr, lm, tokenizer
2024-06-06 03:46:27,894 - INFO - SpeechBrain model loaded successfully.
2024-06-06 03:46:27,904 - INFO - Saved audio file to temporary location: /tmp/tmphc2sueev
2024-06-06 03:46:27,904 - INFO - Starting transcription...
2024-06-06 03:46:27,904 - INFO - Destination tmphc2sueev: local file in /tmp/tmphc2sueev.
2024-06-06 03:46:31,466 - INFO - Transcription completed. Result: HULLO MY NAME IS MATTIE
2024-06-06 03:46:31,469 - INFO - 172.17.0.1 - - [06/Jun/2024 03:46:31] "POST /transcribe HTTP/1.1" 200 -
2024-06-06 03:46:31,749 - INFO - Received request at /detect_voice_activity endpoint
2024-06-06 03:46:31,762 - INFO - Saved audio file to temporary location: /tmp/tmp1k292ve3.wav
2024-06-06 03:46:32,456 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1141)
           2	RESUME(arg=0, lineno=1141)
           4	LOAD_FAST(arg=0, lineno=1144)
           6	LOAD_CONST(arg=1, lineno=1144)
           8	BINARY_SUBSCR(arg=None, lineno=1144)
          12	STORE_FAST(arg=3, lineno=1144)
          14	LOAD_FAST(arg=1, lineno=1145)
          16	UNARY_NEGATIVE(arg=None, lineno=1145)
          18	LOAD_FAST(arg=3, lineno=1145)
          20	SWAP(arg=2, lineno=1145)
          22	COPY(arg=2, lineno=1145)
          24	COMPARE_OP(arg=26, lineno=1145)
          28	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          30	LOAD_FAST(arg=1, lineno=1145)
          32	COMPARE_OP(arg=26, lineno=1145)
          36	POP_JUMP_IF_FALSE(arg=5, lineno=1145)
          38	JUMP_FORWARD(arg=2, lineno=1145)
>         40	POP_TOP(arg=None, lineno=1145)
          42	JUMP_FORWARD(arg=2, lineno=1145)
>         44	LOAD_CONST(arg=1, lineno=1146)
          46	STORE_FAST(arg=3, lineno=1146)
>         48	LOAD_FAST(arg=0, lineno=1148)
          50	LOAD_CONST(arg=2, lineno=1148)
          52	BINARY_SUBSCR(arg=None, lineno=1148)
          56	STORE_FAST(arg=4, lineno=1148)
          58	LOAD_FAST(arg=1, lineno=1149)
          60	UNARY_NEGATIVE(arg=None, lineno=1149)
          62	LOAD_FAST(arg=4, lineno=1149)
          64	SWAP(arg=2, lineno=1149)
          66	COPY(arg=2, lineno=1149)
          68	COMPARE_OP(arg=26, lineno=1149)
          72	POP_JUMP_IF_FALSE(arg=5, lineno=1149)
          74	LOAD_FAST(arg=1, lineno=1149)
          76	COMPARE_OP(arg=26, lineno=1149)
          80	POP_JUMP_IF_FALSE(arg=5, lineno=1149)
          82	JUMP_FORWARD(arg=2, lineno=1149)
>         84	POP_TOP(arg=None, lineno=1149)
          86	JUMP_FORWARD(arg=2, lineno=1149)
>         88	LOAD_CONST(arg=1, lineno=1150)
          90	STORE_FAST(arg=4, lineno=1150)
>         92	LOAD_FAST(arg=2, lineno=1152)
          94	POP_JUMP_IF_FALSE(arg=43, lineno=1152)
          96	LOAD_GLOBAL(arg=1, lineno=1153)
         106	LOAD_ATTR(arg=2, lineno=1153)
         126	LOAD_FAST(arg=3, lineno=1153)
         128	CALL(arg=1, lineno=1153)
         136	LOAD_GLOBAL(arg=1, lineno=1153)
         146	LOAD_ATTR(arg=2, lineno=1153)
         166	LOAD_FAST(arg=4, lineno=1153)
         168	CALL(arg=1, lineno=1153)
         176	COMPARE_OP(arg=55, lineno=1153)
         180	RETURN_VALUE(arg=None, lineno=1153)
>        182	LOAD_GLOBAL(arg=1, lineno=1155)
         192	LOAD_ATTR(arg=4, lineno=1155)
         212	LOAD_FAST(arg=3, lineno=1155)
         214	CALL(arg=1, lineno=1155)
         222	LOAD_GLOBAL(arg=1, lineno=1155)
         232	LOAD_ATTR(arg=4, lineno=1155)
         252	LOAD_FAST(arg=4, lineno=1155)
         254	CALL(arg=1, lineno=1155)
         262	COMPARE_OP(arg=55, lineno=1155)
         266	RETURN_VALUE(arg=None, lineno=1155)
2024-06-06 03:46:32,456 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:32,456 - DEBUG - stack: []
2024-06-06 03:46:32,457 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:32,457 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1141)
2024-06-06 03:46:32,457 - DEBUG - stack []
2024-06-06 03:46:32,457 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1141)
2024-06-06 03:46:32,457 - DEBUG - stack []
2024-06-06 03:46:32,457 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1144)
2024-06-06 03:46:32,457 - DEBUG - stack []
2024-06-06 03:46:32,457 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1144)
2024-06-06 03:46:32,458 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:32,458 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2024-06-06 03:46:32,458 - DEBUG - stack ['$x4.0', '$const6.1']
2024-06-06 03:46:32,458 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=3, lineno=1144)
2024-06-06 03:46:32,458 - DEBUG - stack ['$8binary_subscr.2']
2024-06-06 03:46:32,458 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1145)
2024-06-06 03:46:32,458 - DEBUG - stack []
2024-06-06 03:46:32,458 - DEBUG - dispatch pc=16, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2024-06-06 03:46:32,458 - DEBUG - stack ['$threshold14.3']
2024-06-06 03:46:32,458 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=1145)
2024-06-06 03:46:32,458 - DEBUG - stack ['$16unary_negative.4']
2024-06-06 03:46:32,459 - DEBUG - dispatch pc=20, inst=SWAP(arg=2, lineno=1145)
2024-06-06 03:46:32,459 - DEBUG - stack ['$16unary_negative.4', '$x018.5']
2024-06-06 03:46:32,459 - DEBUG - dispatch pc=22, inst=COPY(arg=2, lineno=1145)
2024-06-06 03:46:32,459 - DEBUG - stack ['$x018.5', '$16unary_negative.4']
2024-06-06 03:46:32,459 - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=26, lineno=1145)
2024-06-06 03:46:32,459 - DEBUG - stack ['$x018.5', '$16unary_negative.4', '$x018.5']
2024-06-06 03:46:32,459 - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2024-06-06 03:46:32,459 - DEBUG - stack ['$x018.5', '$24compare_op.6']
2024-06-06 03:46:32,459 - DEBUG - end state. edges=[Edge(pc=30, stack=('$x018.5',), blockstack=(), npush=0), Edge(pc=40, stack=('$x018.5',), blockstack=(), npush=0)]
2024-06-06 03:46:32,460 - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=1), State(pc_initial=40 nstack_initial=1)])
2024-06-06 03:46:32,460 - DEBUG - stack: ['$phi30.0']
2024-06-06 03:46:32,460 - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=1)
2024-06-06 03:46:32,460 - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=1145)
2024-06-06 03:46:32,460 - DEBUG - stack ['$phi30.0']
2024-06-06 03:46:32,460 - DEBUG - dispatch pc=32, inst=COMPARE_OP(arg=26, lineno=1145)
2024-06-06 03:46:32,460 - DEBUG - stack ['$phi30.0', '$threshold30.1']
2024-06-06 03:46:32,460 - DEBUG - dispatch pc=36, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1145)
2024-06-06 03:46:32,460 - DEBUG - stack ['$32compare_op.2']
2024-06-06 03:46:32,460 - DEBUG - end state. edges=[Edge(pc=38, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:32,460 - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=1), State(pc_initial=38 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2024-06-06 03:46:32,460 - DEBUG - stack: ['$phi40.0']
2024-06-06 03:46:32,460 - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=1)
2024-06-06 03:46:32,461 - DEBUG - dispatch pc=40, inst=POP_TOP(arg=None, lineno=1145)
2024-06-06 03:46:32,461 - DEBUG - stack ['$phi40.0']
2024-06-06 03:46:32,461 - DEBUG - dispatch pc=42, inst=JUMP_FORWARD(arg=2, lineno=1145)
2024-06-06 03:46:32,461 - DEBUG - stack []
2024-06-06 03:46:32,461 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:32,461 - DEBUG - pending: deque([State(pc_initial=38 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2024-06-06 03:46:32,461 - DEBUG - stack: []
2024-06-06 03:46:32,461 - DEBUG - state.pc_initial: State(pc_initial=38 nstack_initial=0)
2024-06-06 03:46:32,461 - DEBUG - dispatch pc=38, inst=JUMP_FORWARD(arg=2, lineno=1145)
2024-06-06 03:46:32,461 - DEBUG - stack []
2024-06-06 03:46:32,461 - DEBUG - end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:32,461 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=44 nstack_initial=0)])
2024-06-06 03:46:32,461 - DEBUG - stack: []
2024-06-06 03:46:32,461 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2024-06-06 03:46:32,462 - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=1148)
2024-06-06 03:46:32,462 - DEBUG - stack []
2024-06-06 03:46:32,462 - DEBUG - dispatch pc=50, inst=LOAD_CONST(arg=2, lineno=1148)
2024-06-06 03:46:32,462 - DEBUG - stack ['$x48.0']
2024-06-06 03:46:32,462 - DEBUG - dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=1148)
2024-06-06 03:46:32,462 - DEBUG - stack ['$x48.0', '$const50.1']
2024-06-06 03:46:32,462 - DEBUG - dispatch pc=56, inst=STORE_FAST(arg=4, lineno=1148)
2024-06-06 03:46:32,462 - DEBUG - stack ['$52binary_subscr.2']
2024-06-06 03:46:32,462 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=1149)
2024-06-06 03:46:32,462 - DEBUG - stack []
2024-06-06 03:46:32,462 - DEBUG - dispatch pc=60, inst=UNARY_NEGATIVE(arg=None, lineno=1149)
2024-06-06 03:46:32,462 - DEBUG - stack ['$threshold58.3']
2024-06-06 03:46:32,462 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=4, lineno=1149)
2024-06-06 03:46:32,462 - DEBUG - stack ['$60unary_negative.4']
2024-06-06 03:46:32,463 - DEBUG - dispatch pc=64, inst=SWAP(arg=2, lineno=1149)
2024-06-06 03:46:32,463 - DEBUG - stack ['$60unary_negative.4', '$x162.5']
2024-06-06 03:46:32,463 - DEBUG - dispatch pc=66, inst=COPY(arg=2, lineno=1149)
2024-06-06 03:46:32,463 - DEBUG - stack ['$x162.5', '$60unary_negative.4']
2024-06-06 03:46:32,463 - DEBUG - dispatch pc=68, inst=COMPARE_OP(arg=26, lineno=1149)
2024-06-06 03:46:32,463 - DEBUG - stack ['$x162.5', '$60unary_negative.4', '$x162.5']
2024-06-06 03:46:32,463 - DEBUG - dispatch pc=72, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1149)
2024-06-06 03:46:32,463 - DEBUG - stack ['$x162.5', '$68compare_op.6']
2024-06-06 03:46:32,463 - DEBUG - end state. edges=[Edge(pc=74, stack=('$x162.5',), blockstack=(), npush=0), Edge(pc=84, stack=('$x162.5',), blockstack=(), npush=0)]
2024-06-06 03:46:32,463 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=74 nstack_initial=1), State(pc_initial=84 nstack_initial=1)])
2024-06-06 03:46:32,463 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=74 nstack_initial=1), State(pc_initial=84 nstack_initial=1)])
2024-06-06 03:46:32,463 - DEBUG - stack: []
2024-06-06 03:46:32,463 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=0)
2024-06-06 03:46:32,463 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1146)
2024-06-06 03:46:32,464 - DEBUG - stack []
2024-06-06 03:46:32,464 - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=3, lineno=1146)
2024-06-06 03:46:32,464 - DEBUG - stack ['$const44.0']
2024-06-06 03:46:32,464 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:32,464 - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=48 nstack_initial=0)])
2024-06-06 03:46:32,464 - DEBUG - stack: ['$phi74.0']
2024-06-06 03:46:32,464 - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=1)
2024-06-06 03:46:32,464 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1149)
2024-06-06 03:46:32,464 - DEBUG - stack ['$phi74.0']
2024-06-06 03:46:32,464 - DEBUG - dispatch pc=76, inst=COMPARE_OP(arg=26, lineno=1149)
2024-06-06 03:46:32,464 - DEBUG - stack ['$phi74.0', '$threshold74.1']
2024-06-06 03:46:32,464 - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=5, lineno=1149)
2024-06-06 03:46:32,464 - DEBUG - stack ['$76compare_op.2']
2024-06-06 03:46:32,465 - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=92, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:32,465 - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=92 nstack_initial=0)])
2024-06-06 03:46:32,465 - DEBUG - stack: ['$phi84.0']
2024-06-06 03:46:32,465 - DEBUG - state.pc_initial: State(pc_initial=84 nstack_initial=1)
2024-06-06 03:46:32,465 - DEBUG - dispatch pc=84, inst=POP_TOP(arg=None, lineno=1149)
2024-06-06 03:46:32,465 - DEBUG - stack ['$phi84.0']
2024-06-06 03:46:32,465 - DEBUG - dispatch pc=86, inst=JUMP_FORWARD(arg=2, lineno=1149)
2024-06-06 03:46:32,465 - DEBUG - stack []
2024-06-06 03:46:32,465 - DEBUG - end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:32,465 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=92 nstack_initial=0)])
2024-06-06 03:46:32,465 - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=92 nstack_initial=0)])
2024-06-06 03:46:32,465 - DEBUG - stack: []
2024-06-06 03:46:32,465 - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2024-06-06 03:46:32,466 - DEBUG - dispatch pc=82, inst=JUMP_FORWARD(arg=2, lineno=1149)
2024-06-06 03:46:32,466 - DEBUG - stack []
2024-06-06 03:46:32,466 - DEBUG - end state. edges=[Edge(pc=88, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:32,466 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=88 nstack_initial=0)])
2024-06-06 03:46:32,466 - DEBUG - stack: []
2024-06-06 03:46:32,466 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=0)
2024-06-06 03:46:32,466 - DEBUG - dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=1152)
2024-06-06 03:46:32,466 - DEBUG - stack []
2024-06-06 03:46:32,466 - DEBUG - dispatch pc=94, inst=POP_JUMP_IF_FALSE(arg=43, lineno=1152)
2024-06-06 03:46:32,466 - DEBUG - stack ['$zero_pos92.0']
2024-06-06 03:46:32,466 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0), Edge(pc=182, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:32,466 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=88 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=182 nstack_initial=0)])
2024-06-06 03:46:32,466 - DEBUG - pending: deque([State(pc_initial=88 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=182 nstack_initial=0)])
2024-06-06 03:46:32,466 - DEBUG - stack: []
2024-06-06 03:46:32,467 - DEBUG - state.pc_initial: State(pc_initial=88 nstack_initial=0)
2024-06-06 03:46:32,467 - DEBUG - dispatch pc=88, inst=LOAD_CONST(arg=1, lineno=1150)
2024-06-06 03:46:32,467 - DEBUG - stack []
2024-06-06 03:46:32,467 - DEBUG - dispatch pc=90, inst=STORE_FAST(arg=4, lineno=1150)
2024-06-06 03:46:32,467 - DEBUG - stack ['$const88.0']
2024-06-06 03:46:32,467 - DEBUG - end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:32,467 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=92 nstack_initial=0)])
2024-06-06 03:46:32,467 - DEBUG - stack: []
2024-06-06 03:46:32,467 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2024-06-06 03:46:32,467 - DEBUG - dispatch pc=96, inst=LOAD_GLOBAL(arg=1, lineno=1153)
2024-06-06 03:46:32,467 - DEBUG - stack []
2024-06-06 03:46:32,467 - DEBUG - dispatch pc=106, inst=LOAD_ATTR(arg=2, lineno=1153)
2024-06-06 03:46:32,467 - DEBUG - stack ['$null$96.1', '$96load_global.0']
2024-06-06 03:46:32,467 - DEBUG - dispatch pc=126, inst=LOAD_FAST(arg=3, lineno=1153)
2024-06-06 03:46:32,468 - DEBUG - stack ['$null$96.1', '$106load_attr.2']
2024-06-06 03:46:32,468 - DEBUG - dispatch pc=128, inst=CALL(arg=1, lineno=1153)
2024-06-06 03:46:32,468 - DEBUG - stack ['$null$96.1', '$106load_attr.2', '$x0126.3']
2024-06-06 03:46:32,468 - DEBUG - dispatch pc=136, inst=LOAD_GLOBAL(arg=1, lineno=1153)
2024-06-06 03:46:32,468 - DEBUG - stack ['$128call.4']
2024-06-06 03:46:32,468 - DEBUG - dispatch pc=146, inst=LOAD_ATTR(arg=2, lineno=1153)
2024-06-06 03:46:32,468 - DEBUG - stack ['$128call.4', '$null$136.6', '$136load_global.5']
2024-06-06 03:46:32,468 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=4, lineno=1153)
2024-06-06 03:46:32,468 - DEBUG - stack ['$128call.4', '$null$136.6', '$146load_attr.7']
2024-06-06 03:46:32,468 - DEBUG - dispatch pc=168, inst=CALL(arg=1, lineno=1153)
2024-06-06 03:46:32,468 - DEBUG - stack ['$128call.4', '$null$136.6', '$146load_attr.7', '$x1166.8']
2024-06-06 03:46:32,468 - DEBUG - dispatch pc=176, inst=COMPARE_OP(arg=55, lineno=1153)
2024-06-06 03:46:32,468 - DEBUG - stack ['$128call.4', '$168call.9']
2024-06-06 03:46:32,469 - DEBUG - dispatch pc=180, inst=RETURN_VALUE(arg=None, lineno=1153)
2024-06-06 03:46:32,469 - DEBUG - stack ['$176compare_op.10']
2024-06-06 03:46:32,469 - DEBUG - end state. edges=[]
2024-06-06 03:46:32,469 - DEBUG - pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=92 nstack_initial=0)])
2024-06-06 03:46:32,469 - DEBUG - stack: []
2024-06-06 03:46:32,469 - DEBUG - state.pc_initial: State(pc_initial=182 nstack_initial=0)
2024-06-06 03:46:32,469 - DEBUG - dispatch pc=182, inst=LOAD_GLOBAL(arg=1, lineno=1155)
2024-06-06 03:46:32,469 - DEBUG - stack []
2024-06-06 03:46:32,469 - DEBUG - dispatch pc=192, inst=LOAD_ATTR(arg=4, lineno=1155)
2024-06-06 03:46:32,469 - DEBUG - stack ['$null$182.1', '$182load_global.0']
2024-06-06 03:46:32,469 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=3, lineno=1155)
2024-06-06 03:46:32,469 - DEBUG - stack ['$null$182.1', '$192load_attr.2']
2024-06-06 03:46:32,469 - DEBUG - dispatch pc=214, inst=CALL(arg=1, lineno=1155)
2024-06-06 03:46:32,469 - DEBUG - stack ['$null$182.1', '$192load_attr.2', '$x0212.3']
2024-06-06 03:46:32,470 - DEBUG - dispatch pc=222, inst=LOAD_GLOBAL(arg=1, lineno=1155)
2024-06-06 03:46:32,470 - DEBUG - stack ['$214call.4']
2024-06-06 03:46:32,470 - DEBUG - dispatch pc=232, inst=LOAD_ATTR(arg=4, lineno=1155)
2024-06-06 03:46:32,470 - DEBUG - stack ['$214call.4', '$null$222.6', '$222load_global.5']
2024-06-06 03:46:32,470 - DEBUG - dispatch pc=252, inst=LOAD_FAST(arg=4, lineno=1155)
2024-06-06 03:46:32,470 - DEBUG - stack ['$214call.4', '$null$222.6', '$232load_attr.7']
2024-06-06 03:46:32,470 - DEBUG - dispatch pc=254, inst=CALL(arg=1, lineno=1155)
2024-06-06 03:46:32,470 - DEBUG - stack ['$214call.4', '$null$222.6', '$232load_attr.7', '$x1252.8']
2024-06-06 03:46:32,470 - DEBUG - dispatch pc=262, inst=COMPARE_OP(arg=55, lineno=1155)
2024-06-06 03:46:32,470 - DEBUG - stack ['$214call.4', '$254call.9']
2024-06-06 03:46:32,470 - DEBUG - dispatch pc=266, inst=RETURN_VALUE(arg=None, lineno=1155)
2024-06-06 03:46:32,470 - DEBUG - stack ['$262compare_op.10']
2024-06-06 03:46:32,470 - DEBUG - end state. edges=[]
2024-06-06 03:46:32,471 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=0)])
2024-06-06 03:46:32,471 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:32,471 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=38 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=1): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=1): {'$phi74.0'},
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=1): set(),
             State(pc_initial=88 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set()})
2024-06-06 03:46:32,472 - DEBUG - defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi40.0': State(pc_initial=0 nstack_initial=0),
 '$phi74.0': State(pc_initial=48 nstack_initial=0),
 '$phi84.0': State(pc_initial=48 nstack_initial=0)}
2024-06-06 03:46:32,472 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi40.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi74.0': {('$x162.5', State(pc_initial=48 nstack_initial=0))},
             '$phi84.0': {('$x162.5', State(pc_initial=48 nstack_initial=0))}})
2024-06-06 03:46:32,472 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi40.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
             '$phi74.0': {('$x162.5', State(pc_initial=48 nstack_initial=0))},
             '$phi84.0': {('$x162.5', State(pc_initial=48 nstack_initial=0))}})
2024-06-06 03:46:32,472 - DEBUG - keep phismap: {'$phi30.0': {('$x018.5', State(pc_initial=0 nstack_initial=0))},
 '$phi74.0': {('$x162.5', State(pc_initial=48 nstack_initial=0))}}
2024-06-06 03:46:32,472 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$x018.5'},
             State(pc_initial=48 nstack_initial=0): {'$phi74.0': '$x162.5'}})
2024-06-06 03:46:32,473 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:32,473 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$threshold14.3'}), (16, {'value': '$threshold14.3', 'res': '$16unary_negative.4'}), (18, {'res': '$x018.5'}), (24, {'lhs': '$16unary_negative.4', 'rhs': '$x018.5', 'res': '$24compare_op.6'}), (28, {'pred': '$24compare_op.6'})), outgoing_phis={'$phi30.0': '$x018.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$x018.5',), 40: ('$x018.5',)})
2024-06-06 03:46:32,473 - DEBUG - block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'res': '$threshold30.1'}), (32, {'lhs': '$phi30.0', 'rhs': '$threshold30.1', 'res': '$32compare_op.2'}), (36, {'pred': '$32compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: (), 48: ()})
2024-06-06 03:46:32,473 - DEBUG - block_infos State(pc_initial=38 nstack_initial=0):
AdaptBlockInfo(insts=((38, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: ()})
2024-06-06 03:46:32,473 - DEBUG - block_infos State(pc_initial=40 nstack_initial=1):
AdaptBlockInfo(insts=((42, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2024-06-06 03:46:32,473 - DEBUG - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$const44.0'}), (46, {'value': '$const44.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ()})
2024-06-06 03:46:32,473 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$x48.0'}), (50, {'res': '$const50.1'}), (52, {'index': '$const50.1', 'target': '$x48.0', 'res': '$52binary_subscr.2'}), (56, {'value': '$52binary_subscr.2'}), (58, {'res': '$threshold58.3'}), (60, {'value': '$threshold58.3', 'res': '$60unary_negative.4'}), (62, {'res': '$x162.5'}), (68, {'lhs': '$60unary_negative.4', 'rhs': '$x162.5', 'res': '$68compare_op.6'}), (72, {'pred': '$68compare_op.6'})), outgoing_phis={'$phi74.0': '$x162.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$x162.5',), 84: ('$x162.5',)})
2024-06-06 03:46:32,473 - DEBUG - block_infos State(pc_initial=74 nstack_initial=1):
AdaptBlockInfo(insts=((74, {'res': '$threshold74.1'}), (76, {'lhs': '$phi74.0', 'rhs': '$threshold74.1', 'res': '$76compare_op.2'}), (80, {'pred': '$76compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 92: ()})
2024-06-06 03:46:32,474 - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: ()})
2024-06-06 03:46:32,474 - DEBUG - block_infos State(pc_initial=84 nstack_initial=1):
AdaptBlockInfo(insts=((86, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ()})
2024-06-06 03:46:32,474 - DEBUG - block_infos State(pc_initial=88 nstack_initial=0):
AdaptBlockInfo(insts=((88, {'res': '$const88.0'}), (90, {'value': '$const88.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ()})
2024-06-06 03:46:32,474 - DEBUG - block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$zero_pos92.0'}), (94, {'pred': '$zero_pos92.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: (), 182: ()})
2024-06-06 03:46:32,474 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'idx': 0, 'res': '$96load_global.0'}), (106, {'item': '$96load_global.0', 'res': '$106load_attr.2'}), (126, {'res': '$x0126.3'}), (128, {'func': '$106load_attr.2', 'args': ['$x0126.3'], 'kw_names': None, 'res': '$128call.4'}), (136, {'idx': 0, 'res': '$136load_global.5'}), (146, {'item': '$136load_global.5', 'res': '$146load_attr.7'}), (166, {'res': '$x1166.8'}), (168, {'func': '$146load_attr.7', 'args': ['$x1166.8'], 'kw_names': None, 'res': '$168call.9'}), (176, {'lhs': '$128call.4', 'rhs': '$168call.9', 'res': '$176compare_op.10'}), (180, {'retval': '$176compare_op.10', 'castval': '$180return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:32,474 - DEBUG - block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'idx': 0, 'res': '$182load_global.0'}), (192, {'item': '$182load_global.0', 'res': '$192load_attr.2'}), (212, {'res': '$x0212.3'}), (214, {'func': '$192load_attr.2', 'args': ['$x0212.3'], 'kw_names': None, 'res': '$214call.4'}), (222, {'idx': 0, 'res': '$222load_global.5'}), (232, {'item': '$222load_global.5', 'res': '$232load_attr.7'}), (252, {'res': '$x1252.8'}), (254, {'func': '$232load_attr.7', 'args': ['$x1252.8'], 'kw_names': None, 'res': '$254call.9'}), (262, {'lhs': '$214call.4', 'rhs': '$254call.9', 'res': '$262compare_op.10'}), (266, {'retval': '$262compare_op.10', 'castval': '$266return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:32,476 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1 = const(int, 0)                ['$const6.1']
    x0 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$const6.1', 'x', 'x0']
    $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$16unary_negative.4', 'threshold']
    $24compare_op.6 = $16unary_negative.4 <= x0 ['$16unary_negative.4', '$24compare_op.6', 'x0']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($24compare_op.6, func=bool28, args=(Var($24compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.6', '$28pred', 'bool28']
    $phi30.0 = x0                            ['$phi30.0', 'x0']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    $32compare_op.2 = $phi30.0 <= threshold  ['$32compare_op.2', '$phi30.0', 'threshold']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($32compare_op.2, func=bool36, args=(Var($32compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$32compare_op.2', '$36pred', 'bool36']
    branch $36pred, 38, 48                   ['$36pred']
label 38:
    jump 44                                  []
label 40:
    jump 48                                  []
label 44:
    x0 = const(int, 0)                       ['x0']
    jump 48                                  []
label 48:
    $const50.1 = const(int, -1)              ['$const50.1']
    x1 = getitem(value=x, index=$const50.1, fn=<built-in function getitem>) ['$const50.1', 'x', 'x1']
    $60unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$60unary_negative.4', 'threshold']
    $68compare_op.6 = $60unary_negative.4 <= x1 ['$60unary_negative.4', '$68compare_op.6', 'x1']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($68compare_op.6, func=bool72, args=(Var($68compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$68compare_op.6', '$72pred', 'bool72']
    $phi74.0 = x1                            ['$phi74.0', 'x1']
    branch $72pred, 74, 84                   ['$72pred']
label 74:
    $76compare_op.2 = $phi74.0 <= threshold  ['$76compare_op.2', '$phi74.0', 'threshold']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80($76compare_op.2, func=bool80, args=(Var($76compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None) ['$76compare_op.2', '$80pred', 'bool80']
    branch $80pred, 82, 92                   ['$80pred']
label 82:
    jump 88                                  []
label 84:
    jump 92                                  []
label 88:
    x1 = const(int, 0)                       ['x1']
    jump 92                                  []
label 92:
    bool94 = global(bool: <class 'bool'>)    ['bool94']
    $94pred = call bool94(zero_pos, func=bool94, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$94pred', 'bool94', 'zero_pos']
    branch $94pred, 96, 182                  ['$94pred']
label 96:
    $96load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$96load_global.0']
    $106load_attr.2 = getattr(value=$96load_global.0, attr=signbit) ['$106load_attr.2', '$96load_global.0']
    $128call.4 = call $106load_attr.2(x0, func=$106load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$106load_attr.2', '$128call.4', 'x0']
    $136load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$136load_global.5']
    $146load_attr.7 = getattr(value=$136load_global.5, attr=signbit) ['$136load_global.5', '$146load_attr.7']
    $168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_attr.7', '$168call.9', 'x1']
    $176compare_op.10 = $128call.4 != $168call.9 ['$128call.4', '$168call.9', '$176compare_op.10']
    $180return_value.11 = cast(value=$176compare_op.10) ['$176compare_op.10', '$180return_value.11']
    return $180return_value.11               ['$180return_value.11']
label 182:
    $182load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$182load_global.0']
    $192load_attr.2 = getattr(value=$182load_global.0, attr=sign) ['$182load_global.0', '$192load_attr.2']
    $214call.4 = call $192load_attr.2(x0, func=$192load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$192load_attr.2', '$214call.4', 'x0']
    $222load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$222load_global.5']
    $232load_attr.7 = getattr(value=$222load_global.5, attr=sign) ['$222load_global.5', '$232load_attr.7']
    $254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None) ['$232load_attr.7', '$254call.9', 'x1']
    $262compare_op.10 = $214call.4 != $254call.9 ['$214call.4', '$254call.9', '$262compare_op.10']
    $266return_value.11 = cast(value=$262compare_op.10) ['$262compare_op.10', '$266return_value.11']
    return $266return_value.11               ['$266return_value.11']

2024-06-06 03:46:32,822 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1158)
           2	RESUME(arg=0, lineno=1158)
           4	LOAD_GLOBAL(arg=1, lineno=1174)
          14	LOAD_FAST(arg=0, lineno=1174)
          16	LOAD_FAST(arg=1, lineno=1174)
          18	LOAD_FAST(arg=2, lineno=1174)
          20	CALL(arg=3, lineno=1174)
          28	LOAD_FAST(arg=3, lineno=1174)
          30	LOAD_CONST(arg=1, lineno=1174)
          32	LOAD_CONST(arg=1, lineno=1174)
          34	STORE_SLICE(arg=None, lineno=1174)
          36	RETURN_CONST(arg=1, lineno=1174)
2024-06-06 03:46:32,822 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:32,823 - DEBUG - stack: []
2024-06-06 03:46:32,823 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:32,823 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1158)
2024-06-06 03:46:32,823 - DEBUG - stack []
2024-06-06 03:46:32,823 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1158)
2024-06-06 03:46:32,823 - DEBUG - stack []
2024-06-06 03:46:32,823 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1174)
2024-06-06 03:46:32,823 - DEBUG - stack []
2024-06-06 03:46:32,823 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=1174)
2024-06-06 03:46:32,823 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:32,824 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=1174)
2024-06-06 03:46:32,824 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2']
2024-06-06 03:46:32,824 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=1174)
2024-06-06 03:46:32,824 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2', '$threshold16.3']
2024-06-06 03:46:32,824 - DEBUG - dispatch pc=20, inst=CALL(arg=3, lineno=1174)
2024-06-06 03:46:32,824 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2', '$threshold16.3', '$zero_pos18.4']
2024-06-06 03:46:32,824 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=3, lineno=1174)
2024-06-06 03:46:32,824 - DEBUG - stack ['$20call.5']
2024-06-06 03:46:32,825 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1174)
2024-06-06 03:46:32,825 - DEBUG - stack ['$20call.5', '$y28.6']
2024-06-06 03:46:32,825 - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=1174)
2024-06-06 03:46:32,825 - DEBUG - stack ['$20call.5', '$y28.6', '$const30.7']
2024-06-06 03:46:32,825 - DEBUG - dispatch pc=34, inst=STORE_SLICE(arg=None, lineno=1174)
2024-06-06 03:46:32,825 - DEBUG - stack ['$20call.5', '$y28.6', '$const30.7', '$const32.8']
2024-06-06 03:46:32,825 - DEBUG - dispatch pc=36, inst=RETURN_CONST(arg=1, lineno=1174)
2024-06-06 03:46:32,825 - DEBUG - stack []
2024-06-06 03:46:32,825 - DEBUG - end state. edges=[]
2024-06-06 03:46:32,825 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:32,826 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:32,826 - DEBUG - defmap: {}
2024-06-06 03:46:32,826 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:32,826 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:32,826 - DEBUG - keep phismap: {}
2024-06-06 03:46:32,826 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:32,826 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:32,826 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$x14.2'}), (16, {'res': '$threshold16.3'}), (18, {'res': '$zero_pos18.4'}), (20, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold16.3', '$zero_pos18.4'], 'kw_names': None, 'res': '$20call.5'}), (28, {'res': '$y28.6'}), (30, {'res': '$const30.7'}), (32, {'res': '$const32.8'}), (34, {'start': '$const30.7', 'end': '$const32.8', 'container': '$y28.6', 'value': '$20call.5', 'res': '$34store_slice.10', 'slicevar': '$34store_slice.9'}), (36, {'retval': '$const36.11', 'castval': '$36return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:32,827 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7fe9d39cf350>) ['$4load_global.0']
    $20call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None) ['$20call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const30.7 = const(NoneType, None)       ['$const30.7']
    $const32.8 = const(NoneType, None)       ['$const32.8']
    $34store_slice.9 = global(slice: <class 'slice'>) ['$34store_slice.9']
    $34store_slice.10 = call $34store_slice.9($const30.7, $const32.8, func=$34store_slice.9, args=(Var($const30.7, audio.py:1174), Var($const32.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None) ['$34store_slice.10', '$34store_slice.9', '$const30.7', '$const32.8']
    y[$34store_slice.10] = $20call.5         ['$20call.5', '$34store_slice.10', 'y']
    $const36.11 = const(NoneType, None)      ['$const36.11']
    $36return_const.12 = cast(value=$const36.11) ['$36return_const.12', '$const36.11']
    return $36return_const.12                ['$36return_const.12']

2024-06-06 03:46:32,833 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:32,833 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2517650>
2024-06-06 03:46:32,834 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:32,834 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:32,834 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:32,834 - DEBUG - on stmt: y = arg(3, name=y)
2024-06-06 03:46:32,834 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7fe9d39cf350>)
2024-06-06 03:46:32,834 - DEBUG - on stmt: $20call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:32,834 - DEBUG - on stmt: $const30.7 = const(NoneType, None)
2024-06-06 03:46:32,835 - DEBUG - on stmt: $const32.8 = const(NoneType, None)
2024-06-06 03:46:32,835 - DEBUG - on stmt: $34store_slice.9 = global(slice: <class 'slice'>)
2024-06-06 03:46:32,835 - DEBUG - on stmt: $34store_slice.10 = call $34store_slice.9($const30.7, $const32.8, func=$34store_slice.9, args=(Var($const30.7, audio.py:1174), Var($const32.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:32,835 - DEBUG - on stmt: y[slice(None, None, None)] = $20call.5
2024-06-06 03:46:32,835 - DEBUG - on stmt: $const36.11 = const(NoneType, None)
2024-06-06 03:46:32,835 - DEBUG - on stmt: $36return_const.12 = cast(value=$const36.11)
2024-06-06 03:46:32,835 - DEBUG - on stmt: return $36return_const.12
2024-06-06 03:46:32,836 - DEBUG - defs defaultdict(<class 'list'>,
            {'$20call.5': [(<numba.core.ir.Assign object at 0x7fe9d25380b0>,
                            0)],
             '$34store_slice.10': [(<numba.core.ir.Assign object at 0x7fe9d25385f0>,
                                    0)],
             '$34store_slice.9': [(<numba.core.ir.Assign object at 0x7fe9d25384d0>,
                                   0)],
             '$36return_const.12': [(<numba.core.ir.Assign object at 0x7fe9d2538860>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d2517bf0>,
                                  0)],
             '$const30.7': [(<numba.core.ir.Assign object at 0x7fe9d2538290>,
                             0)],
             '$const32.8': [(<numba.core.ir.Assign object at 0x7fe9d25383b0>,
                             0)],
             '$const36.11': [(<numba.core.ir.Assign object at 0x7fe9d2538740>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x7fe9d2517410>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9d2517950>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7fe9d2516d50>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7fe9d2516930>,
                           0)]})
2024-06-06 03:46:32,836 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9e0131070>
2024-06-06 03:46:32,878 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	KW_NAMES(arg=1, lineno=3)
          92	CALL(arg=2, lineno=3)
         100	STORE_FAST(arg=4, lineno=3)
         102	LOAD_CONST(arg=2, lineno=4)
         104	LOAD_FAST(arg=4, lineno=4)
         106	LOAD_CONST(arg=0, lineno=4)
         108	LOAD_CONST(arg=3, lineno=4)
         110	STORE_SLICE(arg=None, lineno=4)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_FAST(arg=4, lineno=5)
         116	LOAD_CONST(arg=2, lineno=5)
         118	LOAD_CONST(arg=0, lineno=5)
         120	STORE_SLICE(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         132	LOAD_GLOBAL(arg=11, lineno=6)
         142	LOAD_CONST(arg=2, lineno=6)
         144	LOAD_CONST(arg=4, lineno=6)
         146	CALL(arg=2, lineno=6)
         154	UNARY_NEGATIVE(arg=None, lineno=6)
         156	LOAD_FAST(arg=3, lineno=6)
         158	LOAD_CONST(arg=2, lineno=6)
         160	BINARY_SUBSCR(arg=None, lineno=6)
         164	LOAD_GLOBAL(arg=13, lineno=6)
         174	LOAD_CONST(arg=2, lineno=6)
         176	LOAD_CONST(arg=2, lineno=6)
         178	CALL(arg=2, lineno=6)
         186	BINARY_OP(arg=10, lineno=6)
         190	CALL(arg=2, lineno=6)
         198	GET_ITER(arg=None, lineno=6)
>        200	FOR_ITER(arg=4, lineno=6)
         204	STORE_FAST(arg=5, lineno=6)
         206	LOAD_CONST(arg=2, lineno=7)
         208	STORE_FAST(arg=6, lineno=7)
         210	JUMP_BACKWARD(arg=6, lineno=7)
>        212	END_FOR(arg=None, lineno=6)
         214	LOAD_FAST(arg=4, lineno=8)
         216	RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:32,878 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:32,879 - DEBUG - stack: []
2024-06-06 03:46:32,879 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:32,879 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-06 03:46:32,879 - DEBUG - stack []
2024-06-06 03:46:32,879 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-06 03:46:32,879 - DEBUG - stack []
2024-06-06 03:46:32,879 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-06 03:46:32,879 - DEBUG - stack []
2024-06-06 03:46:32,880 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-06 03:46:32,880 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:32,880 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2024-06-06 03:46:32,880 - DEBUG - stack ['$6load_attr.1']
2024-06-06 03:46:32,880 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:32,880 - DEBUG - stack []
2024-06-06 03:46:32,880 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2024-06-06 03:46:32,880 - DEBUG - stack ['$28load_global.2']
2024-06-06 03:46:32,881 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2024-06-06 03:46:32,881 - DEBUG - stack ['$null$38.3', '$38load_attr.4']
2024-06-06 03:46:32,881 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:32,881 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5']
2024-06-06 03:46:32,881 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2024-06-06 03:46:32,881 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$60load_global.6']
2024-06-06 03:46:32,881 - DEBUG - dispatch pc=90, inst=KW_NAMES(arg=1, lineno=3)
2024-06-06 03:46:32,881 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:32,881 - DEBUG - dispatch pc=92, inst=CALL(arg=2, lineno=3)
2024-06-06 03:46:32,881 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:32,882 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=4, lineno=3)
2024-06-06 03:46:32,882 - DEBUG - stack ['$92call.8']
2024-06-06 03:46:32,882 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-06 03:46:32,882 - DEBUG - stack []
2024-06-06 03:46:32,882 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=4, lineno=4)
2024-06-06 03:46:32,882 - DEBUG - stack ['$const102.9']
2024-06-06 03:46:32,882 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-06 03:46:32,882 - DEBUG - stack ['$const102.9', '$out0104.10']
2024-06-06 03:46:32,882 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-06 03:46:32,882 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11']
2024-06-06 03:46:32,882 - DEBUG - dispatch pc=110, inst=STORE_SLICE(arg=None, lineno=4)
2024-06-06 03:46:32,883 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11', '$const108.12']
2024-06-06 03:46:32,883 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-06 03:46:32,883 - DEBUG - stack []
2024-06-06 03:46:32,883 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=5)
2024-06-06 03:46:32,883 - DEBUG - stack ['$const112.15']
2024-06-06 03:46:32,883 - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-06 03:46:32,883 - DEBUG - stack ['$const112.15', '$out0114.16']
2024-06-06 03:46:32,883 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-06 03:46:32,883 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17']
2024-06-06 03:46:32,883 - DEBUG - dispatch pc=120, inst=STORE_SLICE(arg=None, lineno=5)
2024-06-06 03:46:32,883 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17', '$const118.18']
2024-06-06 03:46:32,883 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-06 03:46:32,883 - DEBUG - stack []
2024-06-06 03:46:32,884 - DEBUG - dispatch pc=132, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-06 03:46:32,884 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-06 03:46:32,884 - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:32,884 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23']
2024-06-06 03:46:32,884 - DEBUG - dispatch pc=144, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-06 03:46:32,884 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25']
2024-06-06 03:46:32,884 - DEBUG - dispatch pc=146, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:32,884 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25', '$const144.26']
2024-06-06 03:46:32,884 - DEBUG - dispatch pc=154, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-06 03:46:32,884 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$146call.27']
2024-06-06 03:46:32,884 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=3, lineno=6)
2024-06-06 03:46:32,884 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28']
2024-06-06 03:46:32,884 - DEBUG - dispatch pc=158, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:32,884 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29']
2024-06-06 03:46:32,885 - DEBUG - dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-06 03:46:32,885 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29', '$const158.30']
2024-06-06 03:46:32,885 - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-06 03:46:32,885 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31']
2024-06-06 03:46:32,885 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:32,885 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32']
2024-06-06 03:46:32,885 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:32,885 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34']
2024-06-06 03:46:32,885 - DEBUG - dispatch pc=178, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:32,885 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34', '$const176.35']
2024-06-06 03:46:32,885 - DEBUG - dispatch pc=186, inst=BINARY_OP(arg=10, lineno=6)
2024-06-06 03:46:32,885 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$178call.36']
2024-06-06 03:46:32,885 - DEBUG - dispatch pc=190, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:32,886 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$binop_sub186.37']
2024-06-06 03:46:32,886 - DEBUG - dispatch pc=198, inst=GET_ITER(arg=None, lineno=6)
2024-06-06 03:46:32,886 - DEBUG - stack ['$190call.38']
2024-06-06 03:46:32,886 - DEBUG - end state. edges=[Edge(pc=200, stack=('$198get_iter.39',), blockstack=(), npush=0)]
2024-06-06 03:46:32,886 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:32,886 - DEBUG - stack: ['$phi200.0']
2024-06-06 03:46:32,886 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=1)
2024-06-06 03:46:32,886 - DEBUG - dispatch pc=200, inst=FOR_ITER(arg=4, lineno=6)
2024-06-06 03:46:32,886 - DEBUG - stack ['$phi200.0']
2024-06-06 03:46:32,886 - DEBUG - end state. edges=[Edge(pc=212, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0), Edge(pc=204, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:32,886 - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:32,886 - DEBUG - stack: ['$phi212.0', '$phi212.1']
2024-06-06 03:46:32,887 - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=2)
2024-06-06 03:46:32,887 - DEBUG - dispatch pc=212, inst=END_FOR(arg=None, lineno=6)
2024-06-06 03:46:32,887 - DEBUG - stack ['$phi212.0', '$phi212.1']
2024-06-06 03:46:32,887 - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=4, lineno=8)
2024-06-06 03:46:32,887 - DEBUG - stack []
2024-06-06 03:46:32,887 - DEBUG - dispatch pc=216, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:32,887 - DEBUG - stack ['$out0214.2']
2024-06-06 03:46:32,887 - DEBUG - end state. edges=[]
2024-06-06 03:46:32,887 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:32,887 - DEBUG - stack: ['$phi204.0', '$phi204.1']
2024-06-06 03:46:32,887 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=2)
2024-06-06 03:46:32,887 - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=5, lineno=6)
2024-06-06 03:46:32,888 - DEBUG - stack ['$phi204.0', '$phi204.1']
2024-06-06 03:46:32,888 - DEBUG - dispatch pc=206, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-06 03:46:32,888 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:32,888 - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=6, lineno=7)
2024-06-06 03:46:32,888 - DEBUG - stack ['$phi204.0', '$const206.2']
2024-06-06 03:46:32,888 - DEBUG - dispatch pc=210, inst=JUMP_BACKWARD(arg=6, lineno=7)
2024-06-06 03:46:32,888 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:32,888 - DEBUG - end state. edges=[Edge(pc=200, stack=('$phi204.0',), blockstack=(), npush=0)]
2024-06-06 03:46:32,888 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:32,888 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:32,889 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=1): {'$phi200.0'},
             State(pc_initial=204 nstack_initial=2): {'$phi204.1'},
             State(pc_initial=212 nstack_initial=2): set()})
2024-06-06 03:46:32,889 - DEBUG - defmap: {'$phi200.0': State(pc_initial=0 nstack_initial=0),
 '$phi204.1': State(pc_initial=200 nstack_initial=1),
 '$phi212.1': State(pc_initial=200 nstack_initial=1)}
2024-06-06 03:46:32,889 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi204.0',
                            State(pc_initial=204 nstack_initial=2))},
             '$phi204.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:32,890 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:32,890 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:32,890 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:32,891 - DEBUG - keep phismap: {'$phi200.0': {('$198get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi204.1': {('$200for_iter.2', State(pc_initial=200 nstack_initial=1))}}
2024-06-06 03:46:32,891 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi200.0': '$198get_iter.39'},
             State(pc_initial=200 nstack_initial=1): {'$phi204.1': '$200for_iter.2'}})
2024-06-06 03:46:32,891 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:32,891 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.4'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (92, {'func': '$38load_attr.4', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': 1, 'res': '$92call.8'}), (100, {'value': '$92call.8'}), (102, {'res': '$const102.9'}), (104, {'res': '$out0104.10'}), (106, {'res': '$const106.11'}), (108, {'res': '$const108.12'}), (110, {'start': '$const106.11', 'end': '$const108.12', 'container': '$out0104.10', 'value': '$const102.9', 'res': '$110store_slice.14', 'slicevar': '$110store_slice.13'}), (112, {'res': '$const112.15'}), (114, {'res': '$out0114.16'}), (116, {'res': '$const116.17'}), (118, {'res': '$const118.18'}), (120, {'start': '$const116.17', 'end': '$const118.18', 'container': '$out0114.16', 'value': '$const112.15', 'res': '$120store_slice.20', 'slicevar': '$120store_slice.19'}), (122, {'idx': 4, 'res': '$122load_global.21'}), (132, {'idx': 5, 'res': '$132load_global.23'}), (142, {'res': '$const142.25'}), (144, {'res': '$const144.26'}), (146, {'func': '$132load_global.23', 'args': ['$const142.25', '$const144.26'], 'kw_names': None, 'res': '$146call.27'}), (154, {'value': '$146call.27', 'res': '$154unary_negative.28'}), (156, {'res': '$full_shape0156.29'}), (158, {'res': '$const158.30'}), (160, {'index': '$const158.30', 'target': '$full_shape0156.29', 'res': '$160binary_subscr.31'}), (164, {'idx': 6, 'res': '$164load_global.32'}), (174, {'res': '$const174.34'}), (176, {'res': '$const176.35'}), (178, {'func': '$164load_global.32', 'args': ['$const174.34', '$const176.35'], 'kw_names': None, 'res': '$178call.36'}), (186, {'op': '-', 'lhs': '$160binary_subscr.31', 'rhs': '$178call.36', 'res': '$binop_sub186.37'}), (190, {'func': '$122load_global.21', 'args': ['$154unary_negative.28', '$binop_sub186.37'], 'kw_names': None, 'res': '$190call.38'}), (198, {'value': '$190call.38', 'res': '$198get_iter.39'})), outgoing_phis={'$phi200.0': '$198get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$198get_iter.39',)})
2024-06-06 03:46:32,892 - DEBUG - block_infos State(pc_initial=200 nstack_initial=1):
AdaptBlockInfo(insts=((200, {'iterator': '$phi200.0', 'pair': '$200for_iter.1', 'indval': '$200for_iter.2', 'pred': '$200for_iter.3'}),), outgoing_phis={'$phi204.1': '$200for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={212: ('$phi200.0', '$200for_iter.2'), 204: ('$phi200.0', '$200for_iter.2')})
2024-06-06 03:46:32,892 - DEBUG - block_infos State(pc_initial=204 nstack_initial=2):
AdaptBlockInfo(insts=((204, {'value': '$phi204.1'}), (206, {'res': '$const206.2'}), (208, {'value': '$const206.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi204.0',)})
2024-06-06 03:46:32,892 - DEBUG - block_infos State(pc_initial=212 nstack_initial=2):
AdaptBlockInfo(insts=((214, {'res': '$out0214.2'}), (216, {'retval': '$out0214.2', 'castval': '$216return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:32,894 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$28load_global.2']
    $38load_attr.4 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.4']
    $60load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool_) ['$60load_global.6', '$70load_attr.7']
    out0 = call $38load_attr.4(full_shape0, func=$38load_attr.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.4', '$70load_attr.7', 'full_shape0', 'out0']
    $const102.9 = const(int, 0)              ['$const102.9']
    $const106.11 = const(NoneType, None)     ['$const106.11']
    $const108.12 = const(int, 1)             ['$const108.12']
    $110store_slice.13 = global(slice: <class 'slice'>) ['$110store_slice.13']
    $110store_slice.14 = call $110store_slice.13($const106.11, $const108.12, func=$110store_slice.13, args=(Var($const106.11, <string>:4), Var($const108.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$110store_slice.13', '$110store_slice.14', '$const106.11', '$const108.12']
    out0[$110store_slice.14] = $const102.9   ['$110store_slice.14', '$const102.9', 'out0']
    $const112.15 = const(int, 0)             ['$const112.15']
    $const116.17 = const(int, 0)             ['$const116.17']
    $const118.18 = const(NoneType, None)     ['$const118.18']
    $120store_slice.19 = global(slice: <class 'slice'>) ['$120store_slice.19']
    $120store_slice.20 = call $120store_slice.19($const116.17, $const118.18, func=$120store_slice.19, args=(Var($const116.17, <string>:5), Var($const118.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$120store_slice.19', '$120store_slice.20', '$const116.17', '$const118.18']
    out0[$120store_slice.20] = $const112.15  ['$120store_slice.20', '$const112.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $132load_global.23 = global(min: <built-in function min>) ['$132load_global.23']
    $const142.25 = const(int, 0)             ['$const142.25']
    $const144.26 = const(int, -1)            ['$const144.26']
    $146call.27 = call $132load_global.23($const142.25, $const144.26, func=$132load_global.23, args=[Var($const142.25, <string>:6), Var($const144.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$132load_global.23', '$146call.27', '$const142.25', '$const144.26']
    $154unary_negative.28 = unary(fn=<built-in function neg>, value=$146call.27) ['$146call.27', '$154unary_negative.28']
    $const158.30 = const(int, 0)             ['$const158.30']
    $160binary_subscr.31 = getitem(value=full_shape0, index=$const158.30, fn=<built-in function getitem>) ['$160binary_subscr.31', '$const158.30', 'full_shape0']
    $164load_global.32 = global(max: <built-in function max>) ['$164load_global.32']
    $const174.34 = const(int, 0)             ['$const174.34']
    $const176.35 = const(int, 0)             ['$const176.35']
    $178call.36 = call $164load_global.32($const174.34, $const176.35, func=$164load_global.32, args=[Var($const174.34, <string>:6), Var($const176.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_global.32', '$178call.36', '$const174.34', '$const176.35']
    $binop_sub186.37 = $160binary_subscr.31 - $178call.36 ['$160binary_subscr.31', '$178call.36', '$binop_sub186.37']
    $190call.38 = call $122load_global.21($154unary_negative.28, $binop_sub186.37, func=$122load_global.21, args=[Var($154unary_negative.28, <string>:6), Var($binop_sub186.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$154unary_negative.28', '$190call.38', '$binop_sub186.37']
    $198get_iter.39 = getiter(value=$190call.38) ['$190call.38', '$198get_iter.39']
    $phi200.0 = $198get_iter.39              ['$198get_iter.39', '$phi200.0']
    jump 200                                 []
label 200:
    $200for_iter.1 = iternext(value=$phi200.0) ['$200for_iter.1', '$phi200.0']
    $200for_iter.2 = pair_first(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.2']
    $200for_iter.3 = pair_second(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.3']
    $phi204.1 = $200for_iter.2               ['$200for_iter.2', '$phi204.1']
    branch $200for_iter.3, 204, 212          ['$200for_iter.3']
label 204:
    index00 = $phi204.1                      ['$phi204.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 200                                 []
label 212:
    $216return_value.3 = cast(value=out0)    ['$216return_value.3', 'out0']
    return $216return_value.3                ['$216return_value.3']

2024-06-06 03:46:33,006 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:33,006 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,006 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:33,006 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:33,006 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:33,006 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:33,006 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,006 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:33,006 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,006 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:33,007 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,007 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:33,007 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:33,007 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:33,007 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,007 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,007 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:33,007 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:33,007 - DEBUG - on stmt: $const116.17.1 = const(int, 0)
2024-06-06 03:46:33,007 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:33,008 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,008 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,008 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:33,008 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:33,008 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:33,008 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:33,008 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:33,008 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,008 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:33,008 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:33,008 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,008 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:33,009 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:33,009 - DEBUG - on stmt: $const176.35.1 = const(int, 0)
2024-06-06 03:46:33,009 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,009 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:33,009 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,009 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:33,009 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:33,009 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,009 - DEBUG - ==== SSA block analysis pass on 200
2024-06-06 03:46:33,010 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,010 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:33,010 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:33,010 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:33,010 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:33,010 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 396
2024-06-06 03:46:33,010 - DEBUG - ==== SSA block analysis pass on 204
2024-06-06 03:46:33,010 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,010 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:33,010 - DEBUG - on stmt: jump 212
2024-06-06 03:46:33,010 - DEBUG - ==== SSA block analysis pass on 396
2024-06-06 03:46:33,010 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,010 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:33,011 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:33,011 - DEBUG - ==== SSA block analysis pass on 212
2024-06-06 03:46:33,011 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,011 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:33,011 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,011 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,011 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,011 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,011 - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,011 - DEBUG - on stmt: $28pred = call bool28($24compare_op.6, func=bool28, args=(Var($24compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,011 - DEBUG - on stmt: $phi30.0 = x0
2024-06-06 03:46:33,011 - DEBUG - on stmt: branch $28pred, 213, 253
2024-06-06 03:46:33,012 - DEBUG - ==== SSA block analysis pass on 213
2024-06-06 03:46:33,012 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,012 - DEBUG - on stmt: $32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,012 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,012 - DEBUG - on stmt: $36pred = call bool36($32compare_op.2, func=bool36, args=(Var($32compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,012 - DEBUG - on stmt: branch $36pred, 243, 257
2024-06-06 03:46:33,012 - DEBUG - ==== SSA block analysis pass on 243
2024-06-06 03:46:33,012 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,012 - DEBUG - on stmt: jump 251
2024-06-06 03:46:33,012 - DEBUG - ==== SSA block analysis pass on 253
2024-06-06 03:46:33,012 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,012 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,012 - DEBUG - ==== SSA block analysis pass on 251
2024-06-06 03:46:33,013 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,013 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-06 03:46:33,013 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,013 - DEBUG - ==== SSA block analysis pass on 257
2024-06-06 03:46:33,013 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,013 - DEBUG - on stmt: $const50.1 = const(int, -1)
2024-06-06 03:46:33,013 - DEBUG - on stmt: stencil_index = $const50.1 + index00
2024-06-06 03:46:33,013 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,013 - DEBUG - on stmt: $60unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,013 - DEBUG - on stmt: $68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,013 - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,013 - DEBUG - on stmt: $72pred = call bool72($68compare_op.6, func=bool72, args=(Var($68compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,013 - DEBUG - on stmt: $phi74.0 = x1
2024-06-06 03:46:33,014 - DEBUG - on stmt: branch $72pred, 261, 297
2024-06-06 03:46:33,014 - DEBUG - ==== SSA block analysis pass on 261
2024-06-06 03:46:33,014 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,014 - DEBUG - on stmt: $76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,014 - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,014 - DEBUG - on stmt: $80pred = call bool80($76compare_op.2, func=bool80, args=(Var($76compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,014 - DEBUG - on stmt: branch $80pred, 287, 301
2024-06-06 03:46:33,014 - DEBUG - ==== SSA block analysis pass on 287
2024-06-06 03:46:33,014 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,014 - DEBUG - on stmt: jump 295
2024-06-06 03:46:33,014 - DEBUG - ==== SSA block analysis pass on 297
2024-06-06 03:46:33,014 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,014 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,015 - DEBUG - ==== SSA block analysis pass on 295
2024-06-06 03:46:33,015 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,015 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-06 03:46:33,015 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,015 - DEBUG - ==== SSA block analysis pass on 301
2024-06-06 03:46:33,015 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,015 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,015 - DEBUG - on stmt: $94pred = call bool94(zero_pos, func=bool94, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,015 - DEBUG - on stmt: branch $94pred, 305, 309
2024-06-06 03:46:33,015 - DEBUG - ==== SSA block analysis pass on 305
2024-06-06 03:46:33,015 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,015 - DEBUG - on stmt: $96load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,015 - DEBUG - on stmt: $106load_attr.2 = getattr(value=$96load_global.0, attr=signbit)
2024-06-06 03:46:33,016 - DEBUG - on stmt: $128call.4 = call $106load_attr.2(x0, func=$106load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,016 - DEBUG - on stmt: $136load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,016 - DEBUG - on stmt: $146load_attr.7 = getattr(value=$136load_global.5, attr=signbit)
2024-06-06 03:46:33,016 - DEBUG - on stmt: $168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,016 - DEBUG - on stmt: $176compare_op.10 = $128call.4 != $168call.9
2024-06-06 03:46:33,016 - DEBUG - on stmt: $180return_value.11 = cast(value=$176compare_op.10)
2024-06-06 03:46:33,016 - DEBUG - on stmt: out0[index00] = $180return_value.11
2024-06-06 03:46:33,016 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,016 - DEBUG - ==== SSA block analysis pass on 309
2024-06-06 03:46:33,016 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,016 - DEBUG - on stmt: $182load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,016 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$182load_global.0, attr=sign)
2024-06-06 03:46:33,016 - DEBUG - on stmt: $214call.4 = call $192load_attr.2(x0, func=$192load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,017 - DEBUG - on stmt: $222load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,017 - DEBUG - on stmt: $232load_attr.7 = getattr(value=$222load_global.5, attr=sign)
2024-06-06 03:46:33,017 - DEBUG - on stmt: $254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,017 - DEBUG - on stmt: $262compare_op.10 = $214call.4 != $254call.9
2024-06-06 03:46:33,017 - DEBUG - on stmt: $266return_value.11 = cast(value=$262compare_op.10)
2024-06-06 03:46:33,017 - DEBUG - on stmt: out0[index00] = $266return_value.11
2024-06-06 03:46:33,017 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,017 - DEBUG - ==== SSA block analysis pass on 395
2024-06-06 03:46:33,017 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25ed130>
2024-06-06 03:46:33,017 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,019 - DEBUG - defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9d2446840>,
                                  305)],
             '$110store_slice.13.1': [(<numba.core.ir.Assign object at 0x7fe9d2473e30>,
                                       0)],
             '$110store_slice.14.1': [(<numba.core.ir.Assign object at 0x7fe9d2473f50>,
                                       0)],
             '$120store_slice.19.1': [(<numba.core.ir.Assign object at 0x7fe9d247c560>,
                                       0)],
             '$120store_slice.20.1': [(<numba.core.ir.Assign object at 0x7fe9d247c680>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7fe9d247c800>,
                                       0)],
             '$128call.4': [(<numba.core.ir.Assign object at 0x7fe9d244c2c0>,
                             305)],
             '$132load_global.23.1': [(<numba.core.ir.Assign object at 0x7fe9d247c950>,
                                       0)],
             '$136load_global.5': [(<numba.core.ir.Assign object at 0x7fe9d244c4a0>,
                                    305)],
             '$146call.27.1': [(<numba.core.ir.Assign object at 0x7fe9d247cd40>,
                                0)],
             '$146load_attr.7': [(<numba.core.ir.Assign object at 0x7fe9d244f800>,
                                  305)],
             '$154unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7fe9d247ce60>,
                                          0)],
             '$160binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7fe9d25ecd40>,
                                         0)],
             '$164load_global.32.1': [(<numba.core.ir.Assign object at 0x7fe9d25ecc50>,
                                       0)],
             '$168call.9': [(<numba.core.ir.Assign object at 0x7fe9d2451100>,
                             305)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x7fe9d25ee840>,
                                      212)],
             '$176compare_op.10': [(<numba.core.ir.Assign object at 0x7fe9d24512e0>,
                                    305)],
             '$178call.36.1': [(<numba.core.ir.Assign object at 0x7fe9d25ec7a0>,
                                0)],
             '$180return_value.11': [(<numba.core.ir.Assign object at 0x7fe9d2452cc0>,
                                      305)],
             '$182load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d245ad20>,
                                    309)],
             '$190call.38.1': [(<numba.core.ir.Assign object at 0x7fe9d25ec530>,
                                0)],
             '$192load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9d245b0e0>,
                                  309)],
             '$198get_iter.39.1': [(<numba.core.ir.Assign object at 0x7fe9d25ec410>,
                                    0)],
             '$200for_iter.1.1': [(<numba.core.ir.Assign object at 0x7fe9d25ec2f0>,
                                   200)],
             '$200for_iter.2.1': [(<numba.core.ir.Assign object at 0x7fe9d25ec1d0>,
                                   200)],
             '$200for_iter.3.1': [(<numba.core.ir.Assign object at 0x7fe9d25ec0b0>,
                                   200)],
             '$214call.4': [(<numba.core.ir.Assign object at 0x7fe9d245cb30>,
                             309)],
             '$216return_value.3.1': [(<numba.core.ir.Assign object at 0x7fe9d25eba10>,
                                       396)],
             '$222load_global.5': [(<numba.core.ir.Assign object at 0x7fe9d245cd10>,
                                    309)],
             '$232load_attr.7': [(<numba.core.ir.Assign object at 0x7fe9d24640b0>,
                                  309)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x7fe9d25eea20>,
                                  212)],
             '$254call.9': [(<numba.core.ir.Assign object at 0x7fe9d2465970>,
                             309)],
             '$262compare_op.10': [(<numba.core.ir.Assign object at 0x7fe9d2465b50>,
                                    309)],
             '$266return_value.11': [(<numba.core.ir.Assign object at 0x7fe9d2467530>,
                                      309)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x7fe9d2473140>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x7fe9d25f77a0>,
                          212)],
             '$32compare_op.2': [(<numba.core.ir.Assign object at 0x7fe9d2403770>,
                                  213)],
             '$36pred': [(<numba.core.ir.Assign object at 0x7fe9d2405460>,
                          213)],
             '$38load_attr.4.1': [(<numba.core.ir.Assign object at 0x7fe9d2473290>,
                                   0)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x7fe9d24734d0>,
                                     0)],
             '$60unary_negative.4': [(<numba.core.ir.Assign object at 0x7fe9d241c0b0>,
                                      257)],
             '$68compare_op.6': [(<numba.core.ir.Assign object at 0x7fe9d241c290>,
                                  257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x7fe9d2473620>,
                                   0)],
             '$72pred': [(<numba.core.ir.Assign object at 0x7fe9d2421010>,
                          257)],
             '$76compare_op.2': [(<numba.core.ir.Assign object at 0x7fe9d24275c0>,
                                  261)],
             '$80pred': [(<numba.core.ir.Assign object at 0x7fe9d242ec90>,
                          261)],
             '$94pred': [(<numba.core.ir.Assign object at 0x7fe9d243bdd0>,
                          301)],
             '$96load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d24464b0>,
                                   305)],
             '$binop_sub186.37.1': [(<numba.core.ir.Assign object at 0x7fe9d25ec6b0>,
                                     0)],
             '$const102.9.1': [(<numba.core.ir.Assign object at 0x7fe9d24739b0>,
                                0)],
             '$const106.11.1': [(<numba.core.ir.Assign object at 0x7fe9d2473bc0>,
                                 0)],
             '$const108.12.1': [(<numba.core.ir.Assign object at 0x7fe9d2473ce0>,
                                 0)],
             '$const112.15.1': [(<numba.core.ir.Assign object at 0x7fe9d247c0e0>,
                                 0)],
             '$const116.17.1': [(<numba.core.ir.Assign object at 0x7fe9d247c2f0>,
                                 0)],
             '$const118.18.1': [(<numba.core.ir.Assign object at 0x7fe9d247c410>,
                                 0)],
             '$const142.25.1': [(<numba.core.ir.Assign object at 0x7fe9d247ca70>,
                                 0)],
             '$const144.26.1': [(<numba.core.ir.Assign object at 0x7fe9d247cb90>,
                                 0)],
             '$const158.30.1': [(<numba.core.ir.Assign object at 0x7fe9d247d070>,
                                 0)],
             '$const174.34.1': [(<numba.core.ir.Assign object at 0x7fe9d25ecaa0>,
                                 0)],
             '$const176.35.1': [(<numba.core.ir.Assign object at 0x7fe9d25ec9b0>,
                                 0)],
             '$const50.1': [(<numba.core.ir.Assign object at 0x7fe9d241a330>,
                             257)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9d25eb5c0>,
                            212)],
             '$phi200.0.1': [(<numba.core.ir.Assign object at 0x7fe9d2472ff0>,
                              0)],
             '$phi204.1.1': [(<numba.core.ir.Assign object at 0x7fe9d25da240>,
                              200)],
             '$phi30.0': [(<numba.core.ir.Assign object at 0x7fe9d25f90a0>,
                           212)],
             '$phi74.0': [(<numba.core.ir.Assign object at 0x7fe9d24228d0>,
                           257)],
             'bool28': [(<numba.core.ir.Assign object at 0x7fe9d25f4440>, 212)],
             'bool36': [(<numba.core.ir.Assign object at 0x7fe9d24037d0>, 213)],
             'bool72': [(<numba.core.ir.Assign object at 0x7fe9d241dc70>, 257)],
             'bool80': [(<numba.core.ir.Assign object at 0x7fe9d242cfe0>, 261)],
             'bool94': [(<numba.core.ir.Assign object at 0x7fe9d243bb90>, 301)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7fe9d2472f00>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7fe9d25ebec0>,
                          204)],
             'out0': [(<numba.core.ir.Assign object at 0x7fe9d24737d0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7fe9d24720c0>,
                                212),
                               (<numba.core.ir.Assign object at 0x7fe9d2472270>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x7fe9d2472ae0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9d2472b40>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x7fe9d2472180>, 212),
                    (<numba.core.ir.Assign object at 0x7fe9d2412ea0>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x7fe9d2472330>, 257),
                    (<numba.core.ir.Assign object at 0x7fe9d2436d80>, 295)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7fe9d2472c90>,
                           0)]})
2024-06-06 03:46:33,019 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d25ed130>
2024-06-06 03:46:33,019 - DEBUG - Fix SSA violator on var stencil_index
2024-06-06 03:46:33,020 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:33,020 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,020 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:33,020 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:33,020 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:33,020 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:33,020 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,020 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:33,020 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,020 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:33,020 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,020 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:33,021 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:33,021 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:33,021 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,021 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,021 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:33,021 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:33,021 - DEBUG - on stmt: $const116.17.1 = const(int, 0)
2024-06-06 03:46:33,021 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:33,021 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,021 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,021 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:33,021 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:33,021 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:33,021 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:33,022 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:33,022 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,022 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:33,022 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:33,022 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,022 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:33,022 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:33,022 - DEBUG - on stmt: $const176.35.1 = const(int, 0)
2024-06-06 03:46:33,022 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,022 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:33,022 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,022 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:33,022 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:33,023 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,023 - DEBUG - ==== SSA block rewrite pass on 200
2024-06-06 03:46:33,023 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,023 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:33,023 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:33,023 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:33,023 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:33,023 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 396
2024-06-06 03:46:33,023 - DEBUG - ==== SSA block rewrite pass on 204
2024-06-06 03:46:33,023 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,023 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:33,023 - DEBUG - on stmt: jump 212
2024-06-06 03:46:33,023 - DEBUG - ==== SSA block rewrite pass on 396
2024-06-06 03:46:33,023 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,024 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:33,024 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:33,024 - DEBUG - ==== SSA block rewrite pass on 212
2024-06-06 03:46:33,024 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,024 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:33,024 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,024 - DEBUG - first assign: stencil_index
2024-06-06 03:46:33,024 - DEBUG - replaced with: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,024 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,024 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,024 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,024 - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,024 - DEBUG - on stmt: $28pred = call bool28($24compare_op.6, func=bool28, args=(Var($24compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,025 - DEBUG - on stmt: $phi30.0 = x0
2024-06-06 03:46:33,025 - DEBUG - on stmt: branch $28pred, 213, 253
2024-06-06 03:46:33,025 - DEBUG - ==== SSA block rewrite pass on 213
2024-06-06 03:46:33,025 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,025 - DEBUG - on stmt: $32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,025 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,025 - DEBUG - on stmt: $36pred = call bool36($32compare_op.2, func=bool36, args=(Var($32compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,025 - DEBUG - on stmt: branch $36pred, 243, 257
2024-06-06 03:46:33,025 - DEBUG - ==== SSA block rewrite pass on 243
2024-06-06 03:46:33,025 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,025 - DEBUG - on stmt: jump 251
2024-06-06 03:46:33,025 - DEBUG - ==== SSA block rewrite pass on 253
2024-06-06 03:46:33,025 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,026 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,026 - DEBUG - ==== SSA block rewrite pass on 251
2024-06-06 03:46:33,026 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,026 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-06 03:46:33,026 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,026 - DEBUG - ==== SSA block rewrite pass on 257
2024-06-06 03:46:33,026 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,026 - DEBUG - on stmt: $const50.1 = const(int, -1)
2024-06-06 03:46:33,026 - DEBUG - on stmt: stencil_index = $const50.1 + index00
2024-06-06 03:46:33,026 - DEBUG - replaced with: stencil_index.1 = $const50.1 + index00
2024-06-06 03:46:33,026 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,026 - DEBUG - on stmt: $60unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,026 - DEBUG - on stmt: $68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,026 - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,027 - DEBUG - on stmt: $72pred = call bool72($68compare_op.6, func=bool72, args=(Var($68compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,027 - DEBUG - on stmt: $phi74.0 = x1
2024-06-06 03:46:33,027 - DEBUG - on stmt: branch $72pred, 261, 297
2024-06-06 03:46:33,027 - DEBUG - ==== SSA block rewrite pass on 261
2024-06-06 03:46:33,027 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,027 - DEBUG - on stmt: $76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,027 - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,027 - DEBUG - on stmt: $80pred = call bool80($76compare_op.2, func=bool80, args=(Var($76compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,027 - DEBUG - on stmt: branch $80pred, 287, 301
2024-06-06 03:46:33,027 - DEBUG - ==== SSA block rewrite pass on 287
2024-06-06 03:46:33,027 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,027 - DEBUG - on stmt: jump 295
2024-06-06 03:46:33,027 - DEBUG - ==== SSA block rewrite pass on 297
2024-06-06 03:46:33,027 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,028 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,028 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-06 03:46:33,028 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,028 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-06 03:46:33,028 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,028 - DEBUG - ==== SSA block rewrite pass on 301
2024-06-06 03:46:33,028 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,028 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,028 - DEBUG - on stmt: $94pred = call bool94(zero_pos, func=bool94, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,028 - DEBUG - on stmt: branch $94pred, 305, 309
2024-06-06 03:46:33,028 - DEBUG - ==== SSA block rewrite pass on 305
2024-06-06 03:46:33,028 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,028 - DEBUG - on stmt: $96load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,028 - DEBUG - on stmt: $106load_attr.2 = getattr(value=$96load_global.0, attr=signbit)
2024-06-06 03:46:33,029 - DEBUG - on stmt: $128call.4 = call $106load_attr.2(x0, func=$106load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,029 - DEBUG - on stmt: $136load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,029 - DEBUG - on stmt: $146load_attr.7 = getattr(value=$136load_global.5, attr=signbit)
2024-06-06 03:46:33,029 - DEBUG - on stmt: $168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,029 - DEBUG - on stmt: $176compare_op.10 = $128call.4 != $168call.9
2024-06-06 03:46:33,029 - DEBUG - on stmt: $180return_value.11 = cast(value=$176compare_op.10)
2024-06-06 03:46:33,029 - DEBUG - on stmt: out0[index00] = $180return_value.11
2024-06-06 03:46:33,029 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,029 - DEBUG - ==== SSA block rewrite pass on 309
2024-06-06 03:46:33,029 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,029 - DEBUG - on stmt: $182load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,029 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$182load_global.0, attr=sign)
2024-06-06 03:46:33,029 - DEBUG - on stmt: $214call.4 = call $192load_attr.2(x0, func=$192load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,030 - DEBUG - on stmt: $222load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,030 - DEBUG - on stmt: $232load_attr.7 = getattr(value=$222load_global.5, attr=sign)
2024-06-06 03:46:33,030 - DEBUG - on stmt: $254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,030 - DEBUG - on stmt: $262compare_op.10 = $214call.4 != $254call.9
2024-06-06 03:46:33,030 - DEBUG - on stmt: $266return_value.11 = cast(value=$262compare_op.10)
2024-06-06 03:46:33,030 - DEBUG - on stmt: out0[index00] = $266return_value.11
2024-06-06 03:46:33,030 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,030 - DEBUG - ==== SSA block rewrite pass on 395
2024-06-06 03:46:33,030 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,030 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,030 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {212: [<numba.core.ir.Assign object at 0x7fe9d25eeb40>],
             257: [<numba.core.ir.Assign object at 0x7fe9d25facf0>]})
2024-06-06 03:46:33,030 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:33,031 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,031 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:33,031 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:33,031 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:33,031 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:33,031 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,031 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:33,031 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,031 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:33,031 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,032 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:33,032 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:33,032 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:33,032 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,032 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,032 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:33,032 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:33,032 - DEBUG - on stmt: $const116.17.1 = const(int, 0)
2024-06-06 03:46:33,032 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:33,032 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,032 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,032 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:33,033 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:33,033 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:33,033 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:33,033 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:33,033 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,033 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:33,033 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:33,033 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,033 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:33,033 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:33,033 - DEBUG - on stmt: $const176.35.1 = const(int, 0)
2024-06-06 03:46:33,033 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,033 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:33,034 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,034 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:33,034 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:33,034 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,034 - DEBUG - ==== SSA block rewrite pass on 200
2024-06-06 03:46:33,034 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,034 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:33,034 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:33,034 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:33,034 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:33,034 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 396
2024-06-06 03:46:33,034 - DEBUG - ==== SSA block rewrite pass on 204
2024-06-06 03:46:33,034 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,035 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:33,035 - DEBUG - on stmt: jump 212
2024-06-06 03:46:33,035 - DEBUG - ==== SSA block rewrite pass on 396
2024-06-06 03:46:33,035 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,035 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:33,035 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:33,035 - DEBUG - ==== SSA block rewrite pass on 212
2024-06-06 03:46:33,035 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,035 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:33,035 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,035 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,035 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,035 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,036 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,036 - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,036 - DEBUG - on stmt: $28pred = call bool28($24compare_op.6, func=bool28, args=(Var($24compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,036 - DEBUG - on stmt: $phi30.0 = x0
2024-06-06 03:46:33,036 - DEBUG - on stmt: branch $28pred, 213, 253
2024-06-06 03:46:33,036 - DEBUG - ==== SSA block rewrite pass on 213
2024-06-06 03:46:33,036 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,036 - DEBUG - on stmt: $32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,036 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,036 - DEBUG - on stmt: $36pred = call bool36($32compare_op.2, func=bool36, args=(Var($32compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,036 - DEBUG - on stmt: branch $36pred, 243, 257
2024-06-06 03:46:33,036 - DEBUG - ==== SSA block rewrite pass on 243
2024-06-06 03:46:33,036 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,037 - DEBUG - on stmt: jump 251
2024-06-06 03:46:33,037 - DEBUG - ==== SSA block rewrite pass on 253
2024-06-06 03:46:33,037 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,037 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,037 - DEBUG - ==== SSA block rewrite pass on 251
2024-06-06 03:46:33,037 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,037 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-06 03:46:33,037 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,037 - DEBUG - ==== SSA block rewrite pass on 257
2024-06-06 03:46:33,037 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,037 - DEBUG - on stmt: $const50.1 = const(int, -1)
2024-06-06 03:46:33,037 - DEBUG - on stmt: stencil_index.1 = $const50.1 + index00
2024-06-06 03:46:33,037 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,038 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,038 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,038 - DEBUG - on stmt: $60unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,038 - DEBUG - on stmt: $68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,038 - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,038 - DEBUG - on stmt: $72pred = call bool72($68compare_op.6, func=bool72, args=(Var($68compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,038 - DEBUG - on stmt: $phi74.0 = x1
2024-06-06 03:46:33,038 - DEBUG - on stmt: branch $72pred, 261, 297
2024-06-06 03:46:33,038 - DEBUG - ==== SSA block rewrite pass on 261
2024-06-06 03:46:33,038 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,038 - DEBUG - on stmt: $76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,038 - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,038 - DEBUG - on stmt: $80pred = call bool80($76compare_op.2, func=bool80, args=(Var($76compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,039 - DEBUG - on stmt: branch $80pred, 287, 301
2024-06-06 03:46:33,039 - DEBUG - ==== SSA block rewrite pass on 287
2024-06-06 03:46:33,039 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,039 - DEBUG - on stmt: jump 295
2024-06-06 03:46:33,039 - DEBUG - ==== SSA block rewrite pass on 297
2024-06-06 03:46:33,039 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,039 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,039 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-06 03:46:33,039 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,039 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-06 03:46:33,039 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,039 - DEBUG - ==== SSA block rewrite pass on 301
2024-06-06 03:46:33,039 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,039 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,040 - DEBUG - on stmt: $94pred = call bool94(zero_pos, func=bool94, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,040 - DEBUG - on stmt: branch $94pred, 305, 309
2024-06-06 03:46:33,040 - DEBUG - ==== SSA block rewrite pass on 305
2024-06-06 03:46:33,040 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,040 - DEBUG - on stmt: $96load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,040 - DEBUG - on stmt: $106load_attr.2 = getattr(value=$96load_global.0, attr=signbit)
2024-06-06 03:46:33,040 - DEBUG - on stmt: $128call.4 = call $106load_attr.2(x0, func=$106load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,040 - DEBUG - on stmt: $136load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,040 - DEBUG - on stmt: $146load_attr.7 = getattr(value=$136load_global.5, attr=signbit)
2024-06-06 03:46:33,040 - DEBUG - on stmt: $168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,040 - DEBUG - on stmt: $176compare_op.10 = $128call.4 != $168call.9
2024-06-06 03:46:33,040 - DEBUG - on stmt: $180return_value.11 = cast(value=$176compare_op.10)
2024-06-06 03:46:33,041 - DEBUG - on stmt: out0[index00] = $180return_value.11
2024-06-06 03:46:33,041 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,041 - DEBUG - ==== SSA block rewrite pass on 309
2024-06-06 03:46:33,041 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,041 - DEBUG - on stmt: $182load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,041 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$182load_global.0, attr=sign)
2024-06-06 03:46:33,041 - DEBUG - on stmt: $214call.4 = call $192load_attr.2(x0, func=$192load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,041 - DEBUG - on stmt: $222load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,041 - DEBUG - on stmt: $232load_attr.7 = getattr(value=$222load_global.5, attr=sign)
2024-06-06 03:46:33,041 - DEBUG - on stmt: $254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,041 - DEBUG - on stmt: $262compare_op.10 = $214call.4 != $254call.9
2024-06-06 03:46:33,041 - DEBUG - on stmt: $266return_value.11 = cast(value=$262compare_op.10)
2024-06-06 03:46:33,042 - DEBUG - on stmt: out0[index00] = $266return_value.11
2024-06-06 03:46:33,042 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,042 - DEBUG - ==== SSA block rewrite pass on 395
2024-06-06 03:46:33,042 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25eeba0>
2024-06-06 03:46:33,042 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,042 - DEBUG - Fix SSA violator on var x0
2024-06-06 03:46:33,042 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:33,042 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,042 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:33,042 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:33,042 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:33,042 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:33,042 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,042 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:33,043 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,043 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:33,043 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,043 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:33,043 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:33,043 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:33,043 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,043 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,043 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:33,043 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:33,043 - DEBUG - on stmt: $const116.17.1 = const(int, 0)
2024-06-06 03:46:33,043 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:33,043 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,044 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,044 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:33,044 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:33,044 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:33,044 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:33,044 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:33,044 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,044 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:33,044 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:33,044 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,044 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:33,044 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:33,044 - DEBUG - on stmt: $const176.35.1 = const(int, 0)
2024-06-06 03:46:33,044 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,045 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:33,045 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,045 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:33,045 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:33,045 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,045 - DEBUG - ==== SSA block rewrite pass on 200
2024-06-06 03:46:33,045 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,045 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:33,045 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:33,045 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:33,045 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:33,045 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 396
2024-06-06 03:46:33,045 - DEBUG - ==== SSA block rewrite pass on 204
2024-06-06 03:46:33,045 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,046 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:33,046 - DEBUG - on stmt: jump 212
2024-06-06 03:46:33,046 - DEBUG - ==== SSA block rewrite pass on 396
2024-06-06 03:46:33,046 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,046 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:33,046 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:33,046 - DEBUG - ==== SSA block rewrite pass on 212
2024-06-06 03:46:33,046 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,046 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:33,046 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,046 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,046 - DEBUG - first assign: x0
2024-06-06 03:46:33,046 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,047 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,047 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,047 - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,047 - DEBUG - on stmt: $28pred = call bool28($24compare_op.6, func=bool28, args=(Var($24compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,047 - DEBUG - on stmt: $phi30.0 = x0
2024-06-06 03:46:33,047 - DEBUG - on stmt: branch $28pred, 213, 253
2024-06-06 03:46:33,047 - DEBUG - ==== SSA block rewrite pass on 213
2024-06-06 03:46:33,047 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,047 - DEBUG - on stmt: $32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,047 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,047 - DEBUG - on stmt: $36pred = call bool36($32compare_op.2, func=bool36, args=(Var($32compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,047 - DEBUG - on stmt: branch $36pred, 243, 257
2024-06-06 03:46:33,047 - DEBUG - ==== SSA block rewrite pass on 243
2024-06-06 03:46:33,047 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,048 - DEBUG - on stmt: jump 251
2024-06-06 03:46:33,048 - DEBUG - ==== SSA block rewrite pass on 253
2024-06-06 03:46:33,048 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,048 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,048 - DEBUG - ==== SSA block rewrite pass on 251
2024-06-06 03:46:33,048 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,048 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-06 03:46:33,048 - DEBUG - replaced with: x0.1 = const(int, 0)
2024-06-06 03:46:33,048 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,048 - DEBUG - ==== SSA block rewrite pass on 257
2024-06-06 03:46:33,048 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,048 - DEBUG - on stmt: $const50.1 = const(int, -1)
2024-06-06 03:46:33,048 - DEBUG - on stmt: stencil_index.1 = $const50.1 + index00
2024-06-06 03:46:33,048 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,049 - DEBUG - on stmt: $60unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,049 - DEBUG - on stmt: $68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,049 - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,049 - DEBUG - on stmt: $72pred = call bool72($68compare_op.6, func=bool72, args=(Var($68compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,049 - DEBUG - on stmt: $phi74.0 = x1
2024-06-06 03:46:33,049 - DEBUG - on stmt: branch $72pred, 261, 297
2024-06-06 03:46:33,049 - DEBUG - ==== SSA block rewrite pass on 261
2024-06-06 03:46:33,049 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,049 - DEBUG - on stmt: $76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,049 - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,049 - DEBUG - on stmt: $80pred = call bool80($76compare_op.2, func=bool80, args=(Var($76compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,049 - DEBUG - on stmt: branch $80pred, 287, 301
2024-06-06 03:46:33,049 - DEBUG - ==== SSA block rewrite pass on 287
2024-06-06 03:46:33,049 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,050 - DEBUG - on stmt: jump 295
2024-06-06 03:46:33,050 - DEBUG - ==== SSA block rewrite pass on 297
2024-06-06 03:46:33,050 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,050 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,050 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-06 03:46:33,050 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,050 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-06 03:46:33,050 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,050 - DEBUG - ==== SSA block rewrite pass on 301
2024-06-06 03:46:33,050 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,050 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,050 - DEBUG - on stmt: $94pred = call bool94(zero_pos, func=bool94, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,050 - DEBUG - on stmt: branch $94pred, 305, 309
2024-06-06 03:46:33,051 - DEBUG - ==== SSA block rewrite pass on 305
2024-06-06 03:46:33,051 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,051 - DEBUG - on stmt: $96load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,051 - DEBUG - on stmt: $106load_attr.2 = getattr(value=$96load_global.0, attr=signbit)
2024-06-06 03:46:33,051 - DEBUG - on stmt: $128call.4 = call $106load_attr.2(x0, func=$106load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,051 - DEBUG - on stmt: $136load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,051 - DEBUG - on stmt: $146load_attr.7 = getattr(value=$136load_global.5, attr=signbit)
2024-06-06 03:46:33,051 - DEBUG - on stmt: $168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,051 - DEBUG - on stmt: $176compare_op.10 = $128call.4 != $168call.9
2024-06-06 03:46:33,051 - DEBUG - on stmt: $180return_value.11 = cast(value=$176compare_op.10)
2024-06-06 03:46:33,051 - DEBUG - on stmt: out0[index00] = $180return_value.11
2024-06-06 03:46:33,051 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,051 - DEBUG - ==== SSA block rewrite pass on 309
2024-06-06 03:46:33,051 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,052 - DEBUG - on stmt: $182load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,052 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$182load_global.0, attr=sign)
2024-06-06 03:46:33,052 - DEBUG - on stmt: $214call.4 = call $192load_attr.2(x0, func=$192load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,052 - DEBUG - on stmt: $222load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,052 - DEBUG - on stmt: $232load_attr.7 = getattr(value=$222load_global.5, attr=sign)
2024-06-06 03:46:33,052 - DEBUG - on stmt: $254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,052 - DEBUG - on stmt: $262compare_op.10 = $214call.4 != $254call.9
2024-06-06 03:46:33,052 - DEBUG - on stmt: $266return_value.11 = cast(value=$262compare_op.10)
2024-06-06 03:46:33,052 - DEBUG - on stmt: out0[index00] = $266return_value.11
2024-06-06 03:46:33,052 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,052 - DEBUG - ==== SSA block rewrite pass on 395
2024-06-06 03:46:33,052 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d25f9010>
2024-06-06 03:46:33,052 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,053 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {212: [<numba.core.ir.Assign object at 0x7fe9d25f9400>],
             251: [<numba.core.ir.Assign object at 0x7fe9d25eea50>]})
2024-06-06 03:46:33,053 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:33,053 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,053 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:33,053 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:33,053 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:33,053 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:33,053 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,053 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:33,053 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,053 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:33,053 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,053 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:33,054 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:33,054 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:33,054 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,054 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,054 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:33,054 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:33,054 - DEBUG - on stmt: $const116.17.1 = const(int, 0)
2024-06-06 03:46:33,054 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:33,054 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,054 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,054 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:33,054 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:33,054 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:33,055 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:33,055 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:33,055 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,055 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:33,055 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:33,055 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,055 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:33,055 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:33,055 - DEBUG - on stmt: $const176.35.1 = const(int, 0)
2024-06-06 03:46:33,055 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,055 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:33,055 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,055 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:33,056 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:33,056 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,056 - DEBUG - ==== SSA block rewrite pass on 200
2024-06-06 03:46:33,056 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,056 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:33,056 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:33,056 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:33,056 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:33,056 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 396
2024-06-06 03:46:33,056 - DEBUG - ==== SSA block rewrite pass on 204
2024-06-06 03:46:33,056 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,056 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:33,056 - DEBUG - on stmt: jump 212
2024-06-06 03:46:33,056 - DEBUG - ==== SSA block rewrite pass on 396
2024-06-06 03:46:33,057 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,057 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:33,057 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:33,057 - DEBUG - ==== SSA block rewrite pass on 212
2024-06-06 03:46:33,057 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,057 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:33,057 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,057 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,057 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,057 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,057 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,057 - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,057 - DEBUG - on stmt: $28pred = call bool28($24compare_op.6, func=bool28, args=(Var($24compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,057 - DEBUG - on stmt: $phi30.0 = x0
2024-06-06 03:46:33,058 - DEBUG - find_def var='x0' stmt=$phi30.0 = x0
2024-06-06 03:46:33,058 - DEBUG - on stmt: branch $28pred, 213, 253
2024-06-06 03:46:33,058 - DEBUG - ==== SSA block rewrite pass on 213
2024-06-06 03:46:33,058 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,058 - DEBUG - on stmt: $32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,058 - DEBUG - find_def var='x0' stmt=$32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,058 - DEBUG - find_def_from_top label 213
2024-06-06 03:46:33,058 - DEBUG - idom 212 from label 213
2024-06-06 03:46:33,058 - DEBUG - find_def_from_bottom label 212
2024-06-06 03:46:33,058 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,058 - DEBUG - on stmt: $36pred = call bool36($32compare_op.2, func=bool36, args=(Var($32compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,058 - DEBUG - on stmt: branch $36pred, 243, 257
2024-06-06 03:46:33,058 - DEBUG - ==== SSA block rewrite pass on 243
2024-06-06 03:46:33,058 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,059 - DEBUG - on stmt: jump 251
2024-06-06 03:46:33,059 - DEBUG - ==== SSA block rewrite pass on 253
2024-06-06 03:46:33,059 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,059 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,059 - DEBUG - ==== SSA block rewrite pass on 251
2024-06-06 03:46:33,059 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,059 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-06-06 03:46:33,059 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,059 - DEBUG - ==== SSA block rewrite pass on 257
2024-06-06 03:46:33,059 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,059 - DEBUG - on stmt: $const50.1 = const(int, -1)
2024-06-06 03:46:33,059 - DEBUG - on stmt: stencil_index.1 = $const50.1 + index00
2024-06-06 03:46:33,059 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,059 - DEBUG - on stmt: $60unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,060 - DEBUG - on stmt: $68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,060 - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,060 - DEBUG - on stmt: $72pred = call bool72($68compare_op.6, func=bool72, args=(Var($68compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,060 - DEBUG - on stmt: $phi74.0 = x1
2024-06-06 03:46:33,060 - DEBUG - on stmt: branch $72pred, 261, 297
2024-06-06 03:46:33,060 - DEBUG - ==== SSA block rewrite pass on 261
2024-06-06 03:46:33,060 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,060 - DEBUG - on stmt: $76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,060 - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,060 - DEBUG - on stmt: $80pred = call bool80($76compare_op.2, func=bool80, args=(Var($76compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,060 - DEBUG - on stmt: branch $80pred, 287, 301
2024-06-06 03:46:33,060 - DEBUG - ==== SSA block rewrite pass on 287
2024-06-06 03:46:33,060 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,060 - DEBUG - on stmt: jump 295
2024-06-06 03:46:33,061 - DEBUG - ==== SSA block rewrite pass on 297
2024-06-06 03:46:33,061 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,061 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,061 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-06 03:46:33,061 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,061 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-06 03:46:33,061 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,061 - DEBUG - ==== SSA block rewrite pass on 301
2024-06-06 03:46:33,061 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,061 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,061 - DEBUG - on stmt: $94pred = call bool94(zero_pos, func=bool94, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,061 - DEBUG - on stmt: branch $94pred, 305, 309
2024-06-06 03:46:33,061 - DEBUG - ==== SSA block rewrite pass on 305
2024-06-06 03:46:33,061 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,062 - DEBUG - on stmt: $96load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,062 - DEBUG - on stmt: $106load_attr.2 = getattr(value=$96load_global.0, attr=signbit)
2024-06-06 03:46:33,062 - DEBUG - on stmt: $128call.4 = call $106load_attr.2(x0, func=$106load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,062 - DEBUG - find_def var='x0' stmt=$128call.4 = call $106load_attr.2(x0, func=$106load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,062 - DEBUG - find_def_from_top label 305
2024-06-06 03:46:33,062 - DEBUG - idom 301 from label 305
2024-06-06 03:46:33,062 - DEBUG - find_def_from_bottom label 301
2024-06-06 03:46:33,062 - DEBUG - find_def_from_top label 301
2024-06-06 03:46:33,062 - DEBUG - idom 257 from label 301
2024-06-06 03:46:33,062 - DEBUG - find_def_from_bottom label 257
2024-06-06 03:46:33,062 - DEBUG - find_def_from_top label 257
2024-06-06 03:46:33,062 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2024-06-06 03:46:33,062 - DEBUG - find_def_from_bottom label 253
2024-06-06 03:46:33,063 - DEBUG - find_def_from_top label 253
2024-06-06 03:46:33,063 - DEBUG - idom 212 from label 253
2024-06-06 03:46:33,063 - DEBUG - find_def_from_bottom label 212
2024-06-06 03:46:33,063 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,063 - DEBUG - find_def_from_bottom label 251
2024-06-06 03:46:33,063 - DEBUG - incoming_def x0.1 = const(int, 0)
2024-06-06 03:46:33,063 - DEBUG - find_def_from_bottom label 213
2024-06-06 03:46:33,063 - DEBUG - find_def_from_top label 213
2024-06-06 03:46:33,063 - DEBUG - idom 212 from label 213
2024-06-06 03:46:33,063 - DEBUG - find_def_from_bottom label 212
2024-06-06 03:46:33,063 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,063 - DEBUG - replaced with: $128call.4 = call $106load_attr.2(x0.2, func=$106load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,063 - DEBUG - on stmt: $136load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,063 - DEBUG - on stmt: $146load_attr.7 = getattr(value=$136load_global.5, attr=signbit)
2024-06-06 03:46:33,064 - DEBUG - on stmt: $168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,064 - DEBUG - on stmt: $176compare_op.10 = $128call.4 != $168call.9
2024-06-06 03:46:33,064 - DEBUG - on stmt: $180return_value.11 = cast(value=$176compare_op.10)
2024-06-06 03:46:33,064 - DEBUG - on stmt: out0[index00] = $180return_value.11
2024-06-06 03:46:33,064 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,064 - DEBUG - ==== SSA block rewrite pass on 309
2024-06-06 03:46:33,064 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,064 - DEBUG - on stmt: $182load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,064 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$182load_global.0, attr=sign)
2024-06-06 03:46:33,064 - DEBUG - on stmt: $214call.4 = call $192load_attr.2(x0, func=$192load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,064 - DEBUG - find_def var='x0' stmt=$214call.4 = call $192load_attr.2(x0, func=$192load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,064 - DEBUG - find_def_from_top label 309
2024-06-06 03:46:33,064 - DEBUG - idom 301 from label 309
2024-06-06 03:46:33,065 - DEBUG - find_def_from_bottom label 301
2024-06-06 03:46:33,065 - DEBUG - find_def_from_top label 301
2024-06-06 03:46:33,065 - DEBUG - idom 257 from label 301
2024-06-06 03:46:33,065 - DEBUG - find_def_from_bottom label 257
2024-06-06 03:46:33,065 - DEBUG - replaced with: $214call.4 = call $192load_attr.2(x0.2, func=$192load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,065 - DEBUG - on stmt: $222load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,065 - DEBUG - on stmt: $232load_attr.7 = getattr(value=$222load_global.5, attr=sign)
2024-06-06 03:46:33,065 - DEBUG - on stmt: $254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,065 - DEBUG - on stmt: $262compare_op.10 = $214call.4 != $254call.9
2024-06-06 03:46:33,065 - DEBUG - on stmt: $266return_value.11 = cast(value=$262compare_op.10)
2024-06-06 03:46:33,065 - DEBUG - on stmt: out0[index00] = $266return_value.11
2024-06-06 03:46:33,065 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,065 - DEBUG - ==== SSA block rewrite pass on 395
2024-06-06 03:46:33,066 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d25f4620>
2024-06-06 03:46:33,066 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,066 - DEBUG - Fix SSA violator on var x1
2024-06-06 03:46:33,066 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:33,066 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,066 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:33,066 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:33,066 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:33,066 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:33,066 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,066 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:33,066 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,066 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:33,066 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,067 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:33,067 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:33,067 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:33,067 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,067 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,067 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:33,067 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:33,067 - DEBUG - on stmt: $const116.17.1 = const(int, 0)
2024-06-06 03:46:33,067 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:33,067 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,067 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,067 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:33,067 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:33,068 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:33,068 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:33,068 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:33,068 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,068 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:33,068 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:33,068 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,068 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:33,068 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:33,068 - DEBUG - on stmt: $const176.35.1 = const(int, 0)
2024-06-06 03:46:33,068 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,068 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:33,068 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,068 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:33,069 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:33,069 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,069 - DEBUG - ==== SSA block rewrite pass on 200
2024-06-06 03:46:33,069 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,069 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:33,069 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:33,069 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:33,069 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:33,069 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 396
2024-06-06 03:46:33,069 - DEBUG - ==== SSA block rewrite pass on 204
2024-06-06 03:46:33,069 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,069 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:33,069 - DEBUG - on stmt: jump 212
2024-06-06 03:46:33,069 - DEBUG - ==== SSA block rewrite pass on 396
2024-06-06 03:46:33,070 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,070 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:33,070 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:33,070 - DEBUG - ==== SSA block rewrite pass on 212
2024-06-06 03:46:33,070 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,070 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:33,070 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,070 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,070 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,070 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,070 - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,070 - DEBUG - on stmt: $28pred = call bool28($24compare_op.6, func=bool28, args=(Var($24compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,070 - DEBUG - on stmt: $phi30.0 = x0
2024-06-06 03:46:33,071 - DEBUG - on stmt: branch $28pred, 213, 253
2024-06-06 03:46:33,071 - DEBUG - ==== SSA block rewrite pass on 213
2024-06-06 03:46:33,071 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,071 - DEBUG - on stmt: $32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,071 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,071 - DEBUG - on stmt: $36pred = call bool36($32compare_op.2, func=bool36, args=(Var($32compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,071 - DEBUG - on stmt: branch $36pred, 243, 257
2024-06-06 03:46:33,071 - DEBUG - ==== SSA block rewrite pass on 243
2024-06-06 03:46:33,071 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,071 - DEBUG - on stmt: jump 251
2024-06-06 03:46:33,071 - DEBUG - ==== SSA block rewrite pass on 253
2024-06-06 03:46:33,071 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,071 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,071 - DEBUG - ==== SSA block rewrite pass on 251
2024-06-06 03:46:33,072 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,072 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-06-06 03:46:33,072 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,072 - DEBUG - ==== SSA block rewrite pass on 257
2024-06-06 03:46:33,072 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,072 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0.1, audio.py:1146), Var(x0, audio.py:1144)], incoming_blocks=[253, 251, 213])
2024-06-06 03:46:33,072 - DEBUG - on stmt: $const50.1 = const(int, -1)
2024-06-06 03:46:33,072 - DEBUG - on stmt: stencil_index.1 = $const50.1 + index00
2024-06-06 03:46:33,072 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,072 - DEBUG - first assign: x1
2024-06-06 03:46:33,072 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,072 - DEBUG - on stmt: $60unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,072 - DEBUG - on stmt: $68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,072 - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,073 - DEBUG - on stmt: $72pred = call bool72($68compare_op.6, func=bool72, args=(Var($68compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,073 - DEBUG - on stmt: $phi74.0 = x1
2024-06-06 03:46:33,073 - DEBUG - on stmt: branch $72pred, 261, 297
2024-06-06 03:46:33,073 - DEBUG - ==== SSA block rewrite pass on 261
2024-06-06 03:46:33,073 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,073 - DEBUG - on stmt: $76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,073 - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,073 - DEBUG - on stmt: $80pred = call bool80($76compare_op.2, func=bool80, args=(Var($76compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,073 - DEBUG - on stmt: branch $80pred, 287, 301
2024-06-06 03:46:33,073 - DEBUG - ==== SSA block rewrite pass on 287
2024-06-06 03:46:33,073 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,073 - DEBUG - on stmt: jump 295
2024-06-06 03:46:33,073 - DEBUG - ==== SSA block rewrite pass on 297
2024-06-06 03:46:33,073 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,074 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,074 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-06 03:46:33,074 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,074 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-06 03:46:33,074 - DEBUG - replaced with: x1.1 = const(int, 0)
2024-06-06 03:46:33,074 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,074 - DEBUG - ==== SSA block rewrite pass on 301
2024-06-06 03:46:33,074 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,074 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,074 - DEBUG - on stmt: $94pred = call bool94(zero_pos, func=bool94, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,074 - DEBUG - on stmt: branch $94pred, 305, 309
2024-06-06 03:46:33,074 - DEBUG - ==== SSA block rewrite pass on 305
2024-06-06 03:46:33,074 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,074 - DEBUG - on stmt: $96load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,075 - DEBUG - on stmt: $106load_attr.2 = getattr(value=$96load_global.0, attr=signbit)
2024-06-06 03:46:33,075 - DEBUG - on stmt: $128call.4 = call $106load_attr.2(x0.2, func=$106load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,075 - DEBUG - on stmt: $136load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,075 - DEBUG - on stmt: $146load_attr.7 = getattr(value=$136load_global.5, attr=signbit)
2024-06-06 03:46:33,075 - DEBUG - on stmt: $168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,075 - DEBUG - on stmt: $176compare_op.10 = $128call.4 != $168call.9
2024-06-06 03:46:33,075 - DEBUG - on stmt: $180return_value.11 = cast(value=$176compare_op.10)
2024-06-06 03:46:33,075 - DEBUG - on stmt: out0[index00] = $180return_value.11
2024-06-06 03:46:33,075 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,075 - DEBUG - ==== SSA block rewrite pass on 309
2024-06-06 03:46:33,075 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,075 - DEBUG - on stmt: $182load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,075 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$182load_global.0, attr=sign)
2024-06-06 03:46:33,075 - DEBUG - on stmt: $214call.4 = call $192load_attr.2(x0.2, func=$192load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,076 - DEBUG - on stmt: $222load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,076 - DEBUG - on stmt: $232load_attr.7 = getattr(value=$222load_global.5, attr=sign)
2024-06-06 03:46:33,076 - DEBUG - on stmt: $254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,076 - DEBUG - on stmt: $262compare_op.10 = $214call.4 != $254call.9
2024-06-06 03:46:33,076 - DEBUG - on stmt: $266return_value.11 = cast(value=$262compare_op.10)
2024-06-06 03:46:33,076 - DEBUG - on stmt: out0[index00] = $266return_value.11
2024-06-06 03:46:33,076 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,076 - DEBUG - ==== SSA block rewrite pass on 395
2024-06-06 03:46:33,076 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d253a330>
2024-06-06 03:46:33,076 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,076 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x7fe9d25fac90>],
             295: [<numba.core.ir.Assign object at 0x7fe9d25f42f0>]})
2024-06-06 03:46:33,076 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:33,077 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,077 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:33,077 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:33,077 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:33,077 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:33,077 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,077 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:33,077 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,077 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:33,077 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,077 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:33,077 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:33,077 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:33,077 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,078 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,078 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:33,078 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:33,078 - DEBUG - on stmt: $const116.17.1 = const(int, 0)
2024-06-06 03:46:33,078 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:33,078 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,078 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,078 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:33,078 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:33,078 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:33,078 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:33,079 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:33,079 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,079 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:33,079 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:33,079 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,079 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:33,079 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:33,079 - DEBUG - on stmt: $const176.35.1 = const(int, 0)
2024-06-06 03:46:33,079 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,079 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:33,079 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,079 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:33,079 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:33,080 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,080 - DEBUG - ==== SSA block rewrite pass on 200
2024-06-06 03:46:33,080 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,080 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:33,080 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:33,080 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:33,080 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:33,080 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 396
2024-06-06 03:46:33,080 - DEBUG - ==== SSA block rewrite pass on 204
2024-06-06 03:46:33,080 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,080 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:33,080 - DEBUG - on stmt: jump 212
2024-06-06 03:46:33,081 - DEBUG - ==== SSA block rewrite pass on 396
2024-06-06 03:46:33,081 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,081 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:33,081 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:33,081 - DEBUG - ==== SSA block rewrite pass on 212
2024-06-06 03:46:33,081 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,081 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:33,081 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,081 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,081 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,081 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,081 - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,082 - DEBUG - on stmt: $28pred = call bool28($24compare_op.6, func=bool28, args=(Var($24compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,082 - DEBUG - on stmt: $phi30.0 = x0
2024-06-06 03:46:33,082 - DEBUG - on stmt: branch $28pred, 213, 253
2024-06-06 03:46:33,082 - DEBUG - ==== SSA block rewrite pass on 213
2024-06-06 03:46:33,082 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,082 - DEBUG - on stmt: $32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,082 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,082 - DEBUG - on stmt: $36pred = call bool36($32compare_op.2, func=bool36, args=(Var($32compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,082 - DEBUG - on stmt: branch $36pred, 243, 257
2024-06-06 03:46:33,082 - DEBUG - ==== SSA block rewrite pass on 243
2024-06-06 03:46:33,082 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,082 - DEBUG - on stmt: jump 251
2024-06-06 03:46:33,082 - DEBUG - ==== SSA block rewrite pass on 253
2024-06-06 03:46:33,082 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,083 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,083 - DEBUG - ==== SSA block rewrite pass on 251
2024-06-06 03:46:33,083 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,083 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-06-06 03:46:33,083 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,083 - DEBUG - ==== SSA block rewrite pass on 257
2024-06-06 03:46:33,083 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,083 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0.1, audio.py:1146), Var(x0, audio.py:1144)], incoming_blocks=[253, 251, 213])
2024-06-06 03:46:33,083 - DEBUG - on stmt: $const50.1 = const(int, -1)
2024-06-06 03:46:33,083 - DEBUG - on stmt: stencil_index.1 = $const50.1 + index00
2024-06-06 03:46:33,083 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,083 - DEBUG - on stmt: $60unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,083 - DEBUG - on stmt: $68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,083 - DEBUG - find_def var='x1' stmt=$68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,084 - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,084 - DEBUG - on stmt: $72pred = call bool72($68compare_op.6, func=bool72, args=(Var($68compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,084 - DEBUG - on stmt: $phi74.0 = x1
2024-06-06 03:46:33,084 - DEBUG - find_def var='x1' stmt=$phi74.0 = x1
2024-06-06 03:46:33,084 - DEBUG - on stmt: branch $72pred, 261, 297
2024-06-06 03:46:33,084 - DEBUG - ==== SSA block rewrite pass on 261
2024-06-06 03:46:33,084 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,084 - DEBUG - on stmt: $76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,084 - DEBUG - find_def var='x1' stmt=$76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,084 - DEBUG - find_def_from_top label 261
2024-06-06 03:46:33,084 - DEBUG - idom 257 from label 261
2024-06-06 03:46:33,084 - DEBUG - find_def_from_bottom label 257
2024-06-06 03:46:33,084 - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,085 - DEBUG - on stmt: $80pred = call bool80($76compare_op.2, func=bool80, args=(Var($76compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,085 - DEBUG - on stmt: branch $80pred, 287, 301
2024-06-06 03:46:33,085 - DEBUG - ==== SSA block rewrite pass on 287
2024-06-06 03:46:33,085 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,085 - DEBUG - on stmt: jump 295
2024-06-06 03:46:33,085 - DEBUG - ==== SSA block rewrite pass on 297
2024-06-06 03:46:33,085 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,085 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,085 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-06 03:46:33,085 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,085 - DEBUG - on stmt: x1.1 = const(int, 0)
2024-06-06 03:46:33,085 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,085 - DEBUG - ==== SSA block rewrite pass on 301
2024-06-06 03:46:33,085 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,085 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,086 - DEBUG - on stmt: $94pred = call bool94(zero_pos, func=bool94, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,086 - DEBUG - on stmt: branch $94pred, 305, 309
2024-06-06 03:46:33,086 - DEBUG - ==== SSA block rewrite pass on 305
2024-06-06 03:46:33,086 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,086 - DEBUG - on stmt: $96load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,086 - DEBUG - on stmt: $106load_attr.2 = getattr(value=$96load_global.0, attr=signbit)
2024-06-06 03:46:33,086 - DEBUG - on stmt: $128call.4 = call $106load_attr.2(x0.2, func=$106load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,086 - DEBUG - on stmt: $136load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,086 - DEBUG - on stmt: $146load_attr.7 = getattr(value=$136load_global.5, attr=signbit)
2024-06-06 03:46:33,086 - DEBUG - on stmt: $168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,086 - DEBUG - find_def var='x1' stmt=$168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,086 - DEBUG - find_def_from_top label 305
2024-06-06 03:46:33,087 - DEBUG - idom 301 from label 305
2024-06-06 03:46:33,087 - DEBUG - find_def_from_bottom label 301
2024-06-06 03:46:33,087 - DEBUG - find_def_from_top label 301
2024-06-06 03:46:33,087 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 301
2024-06-06 03:46:33,087 - DEBUG - find_def_from_bottom label 297
2024-06-06 03:46:33,087 - DEBUG - find_def_from_top label 297
2024-06-06 03:46:33,087 - DEBUG - idom 257 from label 297
2024-06-06 03:46:33,087 - DEBUG - find_def_from_bottom label 257
2024-06-06 03:46:33,087 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,087 - DEBUG - find_def_from_bottom label 261
2024-06-06 03:46:33,087 - DEBUG - find_def_from_top label 261
2024-06-06 03:46:33,087 - DEBUG - idom 257 from label 261
2024-06-06 03:46:33,087 - DEBUG - find_def_from_bottom label 257
2024-06-06 03:46:33,087 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,088 - DEBUG - find_def_from_bottom label 295
2024-06-06 03:46:33,088 - DEBUG - incoming_def x1.1 = const(int, 0)
2024-06-06 03:46:33,088 - DEBUG - replaced with: $168call.9 = call $146load_attr.7(x1.2, func=$146load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,088 - DEBUG - on stmt: $176compare_op.10 = $128call.4 != $168call.9
2024-06-06 03:46:33,088 - DEBUG - on stmt: $180return_value.11 = cast(value=$176compare_op.10)
2024-06-06 03:46:33,088 - DEBUG - on stmt: out0[index00] = $180return_value.11
2024-06-06 03:46:33,088 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,088 - DEBUG - ==== SSA block rewrite pass on 309
2024-06-06 03:46:33,088 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,088 - DEBUG - on stmt: $182load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,088 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$182load_global.0, attr=sign)
2024-06-06 03:46:33,088 - DEBUG - on stmt: $214call.4 = call $192load_attr.2(x0.2, func=$192load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,088 - DEBUG - on stmt: $222load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,089 - DEBUG - on stmt: $232load_attr.7 = getattr(value=$222load_global.5, attr=sign)
2024-06-06 03:46:33,089 - DEBUG - on stmt: $254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,089 - DEBUG - find_def var='x1' stmt=$254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,089 - DEBUG - find_def_from_top label 309
2024-06-06 03:46:33,089 - DEBUG - idom 301 from label 309
2024-06-06 03:46:33,089 - DEBUG - find_def_from_bottom label 301
2024-06-06 03:46:33,089 - DEBUG - replaced with: $254call.9 = call $232load_attr.7(x1.2, func=$232load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,089 - DEBUG - on stmt: $262compare_op.10 = $214call.4 != $254call.9
2024-06-06 03:46:33,089 - DEBUG - on stmt: $266return_value.11 = cast(value=$262compare_op.10)
2024-06-06 03:46:33,089 - DEBUG - on stmt: out0[index00] = $266return_value.11
2024-06-06 03:46:33,089 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,089 - DEBUG - ==== SSA block rewrite pass on 395
2024-06-06 03:46:33,089 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2405340>
2024-06-06 03:46:33,090 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,096 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4377)
           2	COPY_FREE_VARS(arg=1, lineno=4377)
           4	RESUME(arg=0, lineno=4377)
           6	LOAD_GLOBAL(arg=1, lineno=4378)
          16	LOAD_FAST(arg=0, lineno=4378)
          18	LOAD_FAST(arg=1, lineno=4378)
          20	LOAD_DEREF(arg=2, lineno=4378)
          22	CALL(arg=3, lineno=4378)
          30	RETURN_VALUE(arg=None, lineno=4378)
2024-06-06 03:46:33,097 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:33,097 - DEBUG - stack: []
2024-06-06 03:46:33,097 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:33,097 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4377)
2024-06-06 03:46:33,097 - DEBUG - stack []
2024-06-06 03:46:33,097 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=4377)
2024-06-06 03:46:33,097 - DEBUG - stack []
2024-06-06 03:46:33,097 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=4377)
2024-06-06 03:46:33,097 - DEBUG - stack []
2024-06-06 03:46:33,097 - DEBUG - dispatch pc=6, inst=LOAD_GLOBAL(arg=1, lineno=4378)
2024-06-06 03:46:33,097 - DEBUG - stack []
2024-06-06 03:46:33,097 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=4378)
2024-06-06 03:46:33,097 - DEBUG - stack ['$null$6.1', '$6load_global.0']
2024-06-06 03:46:33,097 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=4378)
2024-06-06 03:46:33,098 - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape16.2']
2024-06-06 03:46:33,098 - DEBUG - dispatch pc=20, inst=LOAD_DEREF(arg=2, lineno=4378)
2024-06-06 03:46:33,098 - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape16.2', '$dtype18.3']
2024-06-06 03:46:33,098 - DEBUG - dispatch pc=22, inst=CALL(arg=3, lineno=4378)
2024-06-06 03:46:33,098 - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape16.2', '$dtype18.3', '$20load_deref.4']
2024-06-06 03:46:33,098 - DEBUG - dispatch pc=30, inst=RETURN_VALUE(arg=None, lineno=4378)
2024-06-06 03:46:33,098 - DEBUG - stack ['$22call.5']
2024-06-06 03:46:33,098 - DEBUG - end state. edges=[]
2024-06-06 03:46:33,098 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:33,098 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:33,098 - DEBUG - defmap: {}
2024-06-06 03:46:33,098 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:33,098 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:33,099 - DEBUG - keep phismap: {}
2024-06-06 03:46:33,099 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:33,099 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:33,099 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'idx': 0, 'res': '$6load_global.0'}), (16, {'res': '$shape16.2'}), (18, {'res': '$dtype18.3'}), (20, {'res': '$20load_deref.4'}), (22, {'func': '$6load_global.0', 'args': ['$shape16.2', '$dtype18.3', '$20load_deref.4'], 'kw_names': None, 'res': '$22call.5'}), (30, {'retval': '$22call.5', 'castval': '$30return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:33,099 - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$6load_global.0']
    $20load_deref.4 = freevar(retty: array(bool, 1d, C)) ['$20load_deref.4']
    $22call.5 = call $6load_global.0(shape, dtype, $20load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4377), Var(dtype, arrayobj.py:4377), Var($20load_deref.4, arrayobj.py:4378)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_deref.4', '$22call.5', '$6load_global.0', 'dtype', 'shape']
    $30return_value.6 = cast(value=$22call.5) ['$22call.5', '$30return_value.6']
    return $30return_value.6                 ['$30return_value.6']

2024-06-06 03:46:33,104 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:33,104 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2435550>
2024-06-06 03:46:33,104 - DEBUG - on stmt: shape = arg(0, name=shape)
2024-06-06 03:46:33,104 - DEBUG - on stmt: dtype = arg(1, name=dtype)
2024-06-06 03:46:33,104 - DEBUG - on stmt: $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
2024-06-06 03:46:33,104 - DEBUG - on stmt: $20load_deref.4 = freevar(retty: array(bool, 1d, C))
2024-06-06 03:46:33,104 - DEBUG - on stmt: $22call.5 = call $6load_global.0(shape, dtype, $20load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4377), Var(dtype, arrayobj.py:4377), Var($20load_deref.4, arrayobj.py:4378)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,104 - DEBUG - on stmt: $30return_value.6 = cast(value=$22call.5)
2024-06-06 03:46:33,104 - DEBUG - on stmt: return $30return_value.6
2024-06-06 03:46:33,105 - DEBUG - defs defaultdict(<class 'list'>,
            {'$20load_deref.4': [(<numba.core.ir.Assign object at 0x7fe9d240dfd0>,
                                  0)],
             '$22call.5': [(<numba.core.ir.Assign object at 0x7fe9d240f950>,
                            0)],
             '$30return_value.6': [(<numba.core.ir.Assign object at 0x7fe9d240fa40>,
                                    0)],
             '$6load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d242cf50>,
                                  0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7fe9d242d370>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7fe9d242ed80>, 0)]})
2024-06-06 03:46:33,105 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d2435550>
2024-06-06 03:46:33,114 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4253)
           2	RESUME(arg=0, lineno=4253)
           4	LOAD_FAST(arg=0, lineno=4256)
           6	LOAD_ATTR(arg=1, lineno=4256)
          26	LOAD_FAST(arg=1, lineno=4256)
          28	LOAD_FAST(arg=2, lineno=4256)
          30	CALL(arg=2, lineno=4256)
          38	RETURN_VALUE(arg=None, lineno=4256)
2024-06-06 03:46:33,114 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:33,114 - DEBUG - stack: []
2024-06-06 03:46:33,114 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:33,114 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4253)
2024-06-06 03:46:33,114 - DEBUG - stack []
2024-06-06 03:46:33,114 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4253)
2024-06-06 03:46:33,114 - DEBUG - stack []
2024-06-06 03:46:33,114 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4256)
2024-06-06 03:46:33,114 - DEBUG - stack []
2024-06-06 03:46:33,114 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=4256)
2024-06-06 03:46:33,115 - DEBUG - stack ['$arrtype4.0']
2024-06-06 03:46:33,115 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=1, lineno=4256)
2024-06-06 03:46:33,115 - DEBUG - stack ['$null$6.1', '$6load_attr.2']
2024-06-06 03:46:33,115 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=2, lineno=4256)
2024-06-06 03:46:33,115 - DEBUG - stack ['$null$6.1', '$6load_attr.2', '$size26.3']
2024-06-06 03:46:33,115 - DEBUG - dispatch pc=30, inst=CALL(arg=2, lineno=4256)
2024-06-06 03:46:33,115 - DEBUG - stack ['$null$6.1', '$6load_attr.2', '$size26.3', '$align28.4']
2024-06-06 03:46:33,115 - DEBUG - dispatch pc=38, inst=RETURN_VALUE(arg=None, lineno=4256)
2024-06-06 03:46:33,115 - DEBUG - stack ['$30call.5']
2024-06-06 03:46:33,115 - DEBUG - end state. edges=[]
2024-06-06 03:46:33,115 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:33,115 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:33,115 - DEBUG - defmap: {}
2024-06-06 03:46:33,116 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:33,116 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:33,116 - DEBUG - keep phismap: {}
2024-06-06 03:46:33,116 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:33,116 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:33,116 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$arrtype4.0'}), (6, {'item': '$arrtype4.0', 'res': '$6load_attr.2'}), (26, {'res': '$size26.3'}), (28, {'res': '$align28.4'}), (30, {'func': '$6load_attr.2', 'args': ['$size26.3', '$align28.4'], 'kw_names': None, 'res': '$30call.5'}), (38, {'retval': '$30call.5', 'castval': '$38return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:33,116 - DEBUG - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $6load_attr.2 = getattr(value=arrtype, attr=_allocate) ['$6load_attr.2', 'arrtype']
    $30call.5 = call $6load_attr.2(size, align, func=$6load_attr.2, args=[Var(size, arrayobj.py:4253), Var(align, arrayobj.py:4253)], kws=(), vararg=None, varkwarg=None, target=None) ['$30call.5', '$6load_attr.2', 'align', 'size']
    $38return_value.6 = cast(value=$30call.5) ['$30call.5', '$38return_value.6']
    return $38return_value.6                 ['$38return_value.6']

2024-06-06 03:46:33,126 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:33,127 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d25eb560>
2024-06-06 03:46:33,127 - DEBUG - on stmt: arrtype = arg(0, name=arrtype)
2024-06-06 03:46:33,127 - DEBUG - on stmt: size = arg(1, name=size)
2024-06-06 03:46:33,127 - DEBUG - on stmt: align = arg(2, name=align)
2024-06-06 03:46:33,127 - DEBUG - on stmt: $6load_attr.2 = getattr(value=arrtype, attr=_allocate)
2024-06-06 03:46:33,127 - DEBUG - on stmt: $30call.5 = call $6load_attr.2(size, align, func=$6load_attr.2, args=[Var(size, arrayobj.py:4253), Var(align, arrayobj.py:4253)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,127 - DEBUG - on stmt: $38return_value.6 = cast(value=$30call.5)
2024-06-06 03:46:33,127 - DEBUG - on stmt: return $38return_value.6
2024-06-06 03:46:33,128 - DEBUG - defs defaultdict(<class 'list'>,
            {'$30call.5': [(<numba.core.ir.Assign object at 0x7fe9d25e9ac0>,
                            0)],
             '$38return_value.6': [(<numba.core.ir.Assign object at 0x7fe9d25e9ca0>,
                                    0)],
             '$6load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9d25e8200>,
                                0)],
             'align': [(<numba.core.ir.Assign object at 0x7fe9d2441a30>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x7fe9d24417f0>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x7fe9d2441970>, 0)]})
2024-06-06 03:46:33,128 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d25eb560>
2024-06-06 03:46:33,131 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4248)
           2	RESUME(arg=0, lineno=4248)
           4	LOAD_GLOBAL(arg=1, lineno=4249)
          14	LOAD_FAST(arg=1, lineno=4249)
          16	LOAD_FAST(arg=2, lineno=4249)
          18	CALL(arg=2, lineno=4249)
          26	RETURN_VALUE(arg=None, lineno=4249)
2024-06-06 03:46:33,131 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:33,131 - DEBUG - stack: []
2024-06-06 03:46:33,131 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:33,131 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4248)
2024-06-06 03:46:33,131 - DEBUG - stack []
2024-06-06 03:46:33,131 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4248)
2024-06-06 03:46:33,131 - DEBUG - stack []
2024-06-06 03:46:33,131 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=4249)
2024-06-06 03:46:33,131 - DEBUG - stack []
2024-06-06 03:46:33,131 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=4249)
2024-06-06 03:46:33,131 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:33,132 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4249)
2024-06-06 03:46:33,132 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$allocsize14.2']
2024-06-06 03:46:33,132 - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=4249)
2024-06-06 03:46:33,132 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$allocsize14.2', '$align16.3']
2024-06-06 03:46:33,132 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4249)
2024-06-06 03:46:33,132 - DEBUG - stack ['$18call.4']
2024-06-06 03:46:33,132 - DEBUG - end state. edges=[]
2024-06-06 03:46:33,132 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:33,132 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:33,132 - DEBUG - defmap: {}
2024-06-06 03:46:33,133 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:33,133 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:33,133 - DEBUG - keep phismap: {}
2024-06-06 03:46:33,133 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:33,133 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:33,133 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$allocsize14.2'}), (16, {'res': '$align16.3'}), (18, {'func': '$4load_global.0', 'args': ['$allocsize14.2', '$align16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:33,134 - DEBUG - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $4load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(allocsize, align, func=$4load_global.0, args=[Var(allocsize, arrayobj.py:4248), Var(align, arrayobj.py:4248)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'align', 'allocsize']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2024-06-06 03:46:33,138 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:33,138 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d247fbc0>
2024-06-06 03:46:33,138 - DEBUG - on stmt: cls = arg(0, name=cls)
2024-06-06 03:46:33,138 - DEBUG - on stmt: allocsize = arg(1, name=allocsize)
2024-06-06 03:46:33,138 - DEBUG - on stmt: align = arg(2, name=align)
2024-06-06 03:46:33,138 - DEBUG - on stmt: $4load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
2024-06-06 03:46:33,138 - DEBUG - on stmt: $18call.4 = call $4load_global.0(allocsize, align, func=$4load_global.0, args=[Var(allocsize, arrayobj.py:4248), Var(align, arrayobj.py:4248)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,138 - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2024-06-06 03:46:33,139 - DEBUG - on stmt: return $26return_value.5
2024-06-06 03:46:33,139 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x7fe9d247f020>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x7fe9d247f140>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d247e9f0>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x7fe9d247d100>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x7fe9d247e900>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x7fe9d247eab0>, 0)]})
2024-06-06 03:46:33,139 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d247fbc0>
2024-06-06 03:46:33,213 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=200)
           2	COPY_FREE_VARS(arg=1, lineno=200)
           4	RESUME(arg=0, lineno=200)
           6	LOAD_FAST(arg=0, lineno=201)
           8	LOAD_DEREF(arg=2, lineno=201)
          10	BINARY_SUBSCR(arg=None, lineno=201)
          14	RETURN_VALUE(arg=None, lineno=201)
2024-06-06 03:46:33,213 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:33,213 - DEBUG - stack: []
2024-06-06 03:46:33,213 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:33,213 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=200)
2024-06-06 03:46:33,213 - DEBUG - stack []
2024-06-06 03:46:33,214 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=200)
2024-06-06 03:46:33,214 - DEBUG - stack []
2024-06-06 03:46:33,214 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=200)
2024-06-06 03:46:33,214 - DEBUG - stack []
2024-06-06 03:46:33,214 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=201)
2024-06-06 03:46:33,214 - DEBUG - stack []
2024-06-06 03:46:33,214 - DEBUG - dispatch pc=8, inst=LOAD_DEREF(arg=2, lineno=201)
2024-06-06 03:46:33,214 - DEBUG - stack ['$tup6.0']
2024-06-06 03:46:33,214 - DEBUG - dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=201)
2024-06-06 03:46:33,215 - DEBUG - stack ['$tup6.0', '$8load_deref.1']
2024-06-06 03:46:33,215 - DEBUG - dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=201)
2024-06-06 03:46:33,215 - DEBUG - stack ['$10binary_subscr.2']
2024-06-06 03:46:33,215 - DEBUG - end state. edges=[]
2024-06-06 03:46:33,215 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:33,215 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:33,216 - DEBUG - defmap: {}
2024-06-06 03:46:33,216 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:33,216 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:33,216 - DEBUG - keep phismap: {}
2024-06-06 03:46:33,216 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:33,216 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:33,216 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$tup6.0'}), (8, {'res': '$8load_deref.1'}), (10, {'index': '$8load_deref.1', 'target': '$tup6.0', 'res': '$10binary_subscr.2'}), (14, {'retval': '$10binary_subscr.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:33,217 - DEBUG - label 0:
    tup = arg(0, name=tup)                   ['tup']
    idx = arg(1, name=idx)                   ['idx']
    $8load_deref.1 = freevar(idx_val: 0)     ['$8load_deref.1']
    $10binary_subscr.2 = getitem(value=tup, index=$8load_deref.1, fn=<built-in function getitem>) ['$10binary_subscr.2', '$8load_deref.1', 'tup']
    $14return_value.3 = cast(value=$10binary_subscr.2) ['$10binary_subscr.2', '$14return_value.3']
    return $14return_value.3                 ['$14return_value.3']

2024-06-06 03:46:33,221 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:33,221 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d23e3f50>
2024-06-06 03:46:33,221 - DEBUG - on stmt: tup = arg(0, name=tup)
2024-06-06 03:46:33,221 - DEBUG - on stmt: idx = arg(1, name=idx)
2024-06-06 03:46:33,221 - DEBUG - on stmt: $8load_deref.1 = freevar(idx_val: 0)
2024-06-06 03:46:33,221 - DEBUG - on stmt: $10binary_subscr.2 = static_getitem(value=tup, index=0, index_var=$8load_deref.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,221 - DEBUG - on stmt: $14return_value.3 = cast(value=$10binary_subscr.2)
2024-06-06 03:46:33,222 - DEBUG - on stmt: return $14return_value.3
2024-06-06 03:46:33,222 - DEBUG - defs defaultdict(<class 'list'>,
            {'$10binary_subscr.2': [(<numba.core.ir.Assign object at 0x7fe9d23f48c0>,
                                     0)],
             '$14return_value.3': [(<numba.core.ir.Assign object at 0x7fe9d23f4320>,
                                    0)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x7fe9d23f4080>,
                                 0)],
             'idx': [(<numba.core.ir.Assign object at 0x7fe9d23e3440>, 0)],
             'tup': [(<numba.core.ir.Assign object at 0x7fe9d23e3ce0>, 0)]})
2024-06-06 03:46:33,222 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d23e3f50>
2024-06-06 03:46:33,497 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1158)
           2	RESUME(arg=0, lineno=1158)
           4	LOAD_GLOBAL(arg=1, lineno=1174)
          14	LOAD_FAST(arg=0, lineno=1174)
          16	LOAD_FAST(arg=1, lineno=1174)
          18	LOAD_FAST(arg=2, lineno=1174)
          20	CALL(arg=3, lineno=1174)
          28	LOAD_FAST(arg=3, lineno=1174)
          30	LOAD_CONST(arg=1, lineno=1174)
          32	LOAD_CONST(arg=1, lineno=1174)
          34	STORE_SLICE(arg=None, lineno=1174)
          36	RETURN_CONST(arg=1, lineno=1174)
2024-06-06 03:46:33,497 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:33,497 - DEBUG - stack: []
2024-06-06 03:46:33,497 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:33,497 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1158)
2024-06-06 03:46:33,497 - DEBUG - stack []
2024-06-06 03:46:33,497 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1158)
2024-06-06 03:46:33,497 - DEBUG - stack []
2024-06-06 03:46:33,498 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1174)
2024-06-06 03:46:33,498 - DEBUG - stack []
2024-06-06 03:46:33,498 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=1174)
2024-06-06 03:46:33,498 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:33,498 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=1174)
2024-06-06 03:46:33,498 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2']
2024-06-06 03:46:33,498 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=1174)
2024-06-06 03:46:33,498 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2', '$threshold16.3']
2024-06-06 03:46:33,498 - DEBUG - dispatch pc=20, inst=CALL(arg=3, lineno=1174)
2024-06-06 03:46:33,498 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2', '$threshold16.3', '$zero_pos18.4']
2024-06-06 03:46:33,499 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=3, lineno=1174)
2024-06-06 03:46:33,499 - DEBUG - stack ['$20call.5']
2024-06-06 03:46:33,499 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=1174)
2024-06-06 03:46:33,499 - DEBUG - stack ['$20call.5', '$y28.6']
2024-06-06 03:46:33,499 - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=1174)
2024-06-06 03:46:33,499 - DEBUG - stack ['$20call.5', '$y28.6', '$const30.7']
2024-06-06 03:46:33,499 - DEBUG - dispatch pc=34, inst=STORE_SLICE(arg=None, lineno=1174)
2024-06-06 03:46:33,499 - DEBUG - stack ['$20call.5', '$y28.6', '$const30.7', '$const32.8']
2024-06-06 03:46:33,499 - DEBUG - dispatch pc=36, inst=RETURN_CONST(arg=1, lineno=1174)
2024-06-06 03:46:33,499 - DEBUG - stack []
2024-06-06 03:46:33,499 - DEBUG - end state. edges=[]
2024-06-06 03:46:33,499 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:33,500 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:33,500 - DEBUG - defmap: {}
2024-06-06 03:46:33,500 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:33,500 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:33,500 - DEBUG - keep phismap: {}
2024-06-06 03:46:33,500 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:33,500 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:33,500 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$x14.2'}), (16, {'res': '$threshold16.3'}), (18, {'res': '$zero_pos18.4'}), (20, {'func': '$4load_global.0', 'args': ['$x14.2', '$threshold16.3', '$zero_pos18.4'], 'kw_names': None, 'res': '$20call.5'}), (28, {'res': '$y28.6'}), (30, {'res': '$const30.7'}), (32, {'res': '$const32.8'}), (34, {'start': '$const30.7', 'end': '$const32.8', 'container': '$y28.6', 'value': '$20call.5', 'res': '$34store_slice.10', 'slicevar': '$34store_slice.9'}), (36, {'retval': '$const36.11', 'castval': '$36return_const.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:33,502 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7fe9d39cf350>) ['$4load_global.0']
    $20call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None) ['$20call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const30.7 = const(NoneType, None)       ['$const30.7']
    $const32.8 = const(NoneType, None)       ['$const32.8']
    $34store_slice.9 = global(slice: <class 'slice'>) ['$34store_slice.9']
    $34store_slice.10 = call $34store_slice.9($const30.7, $const32.8, func=$34store_slice.9, args=(Var($const30.7, audio.py:1174), Var($const32.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None) ['$34store_slice.10', '$34store_slice.9', '$const30.7', '$const32.8']
    y[$34store_slice.10] = $20call.5         ['$20call.5', '$34store_slice.10', 'y']
    $const36.11 = const(NoneType, None)      ['$const36.11']
    $36return_const.12 = cast(value=$const36.11) ['$36return_const.12', '$const36.11']
    return $36return_const.12                ['$36return_const.12']

2024-06-06 03:46:33,507 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:33,507 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21670e0>
2024-06-06 03:46:33,507 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:33,507 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:33,507 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:33,507 - DEBUG - on stmt: y = arg(3, name=y)
2024-06-06 03:46:33,507 - DEBUG - on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x7fe9d39cf350>)
2024-06-06 03:46:33,508 - DEBUG - on stmt: $20call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1158), Var(threshold, audio.py:1158), Var(zero_pos, audio.py:1158)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,508 - DEBUG - on stmt: $const30.7 = const(NoneType, None)
2024-06-06 03:46:33,508 - DEBUG - on stmt: $const32.8 = const(NoneType, None)
2024-06-06 03:46:33,508 - DEBUG - on stmt: $34store_slice.9 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,508 - DEBUG - on stmt: $34store_slice.10 = call $34store_slice.9($const30.7, $const32.8, func=$34store_slice.9, args=(Var($const30.7, audio.py:1174), Var($const32.8, audio.py:1174)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,508 - DEBUG - on stmt: y[slice(None, None, None)] = $20call.5
2024-06-06 03:46:33,508 - DEBUG - on stmt: $const36.11 = const(NoneType, None)
2024-06-06 03:46:33,508 - DEBUG - on stmt: $36return_const.12 = cast(value=$const36.11)
2024-06-06 03:46:33,508 - DEBUG - on stmt: return $36return_const.12
2024-06-06 03:46:33,509 - DEBUG - defs defaultdict(<class 'list'>,
            {'$20call.5': [(<numba.core.ir.Assign object at 0x7fe9d2186fc0>,
                            0)],
             '$34store_slice.10': [(<numba.core.ir.Assign object at 0x7fe9d2166840>,
                                    0)],
             '$34store_slice.9': [(<numba.core.ir.Assign object at 0x7fe9d2167fb0>,
                                   0)],
             '$36return_const.12': [(<numba.core.ir.Assign object at 0x7fe9d2167a70>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d2186b40>,
                                  0)],
             '$const30.7': [(<numba.core.ir.Assign object at 0x7fe9d2516ae0>,
                             0)],
             '$const32.8': [(<numba.core.ir.Assign object at 0x7fe9d2539730>,
                             0)],
             '$const36.11': [(<numba.core.ir.Assign object at 0x7fe9d2165df0>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x7fe9d2186510>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9d21865d0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7fe9d21869c0>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7fe9d21865a0>,
                           0)]})
2024-06-06 03:46:33,509 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d21670e0>
2024-06-06 03:46:33,544 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=3, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=3, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	KW_NAMES(arg=1, lineno=3)
          92	CALL(arg=2, lineno=3)
         100	STORE_FAST(arg=4, lineno=3)
         102	LOAD_CONST(arg=2, lineno=4)
         104	LOAD_FAST(arg=4, lineno=4)
         106	LOAD_CONST(arg=0, lineno=4)
         108	LOAD_CONST(arg=3, lineno=4)
         110	STORE_SLICE(arg=None, lineno=4)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_FAST(arg=4, lineno=5)
         116	LOAD_CONST(arg=2, lineno=5)
         118	LOAD_CONST(arg=0, lineno=5)
         120	STORE_SLICE(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         132	LOAD_GLOBAL(arg=11, lineno=6)
         142	LOAD_CONST(arg=2, lineno=6)
         144	LOAD_CONST(arg=4, lineno=6)
         146	CALL(arg=2, lineno=6)
         154	UNARY_NEGATIVE(arg=None, lineno=6)
         156	LOAD_FAST(arg=3, lineno=6)
         158	LOAD_CONST(arg=2, lineno=6)
         160	BINARY_SUBSCR(arg=None, lineno=6)
         164	LOAD_GLOBAL(arg=13, lineno=6)
         174	LOAD_CONST(arg=2, lineno=6)
         176	LOAD_CONST(arg=2, lineno=6)
         178	CALL(arg=2, lineno=6)
         186	BINARY_OP(arg=10, lineno=6)
         190	CALL(arg=2, lineno=6)
         198	GET_ITER(arg=None, lineno=6)
>        200	FOR_ITER(arg=4, lineno=6)
         204	STORE_FAST(arg=5, lineno=6)
         206	LOAD_CONST(arg=2, lineno=7)
         208	STORE_FAST(arg=6, lineno=7)
         210	JUMP_BACKWARD(arg=6, lineno=7)
>        212	END_FOR(arg=None, lineno=6)
         214	LOAD_FAST(arg=4, lineno=8)
         216	RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:33,544 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:33,544 - DEBUG - stack: []
2024-06-06 03:46:33,544 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:33,545 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-06 03:46:33,545 - DEBUG - stack []
2024-06-06 03:46:33,545 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-06 03:46:33,545 - DEBUG - stack []
2024-06-06 03:46:33,545 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-06 03:46:33,545 - DEBUG - stack []
2024-06-06 03:46:33,545 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-06 03:46:33,545 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:33,545 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=3, lineno=2)
2024-06-06 03:46:33,546 - DEBUG - stack ['$6load_attr.1']
2024-06-06 03:46:33,546 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:33,546 - DEBUG - stack []
2024-06-06 03:46:33,546 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2024-06-06 03:46:33,546 - DEBUG - stack ['$28load_global.2']
2024-06-06 03:46:33,546 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=3)
2024-06-06 03:46:33,546 - DEBUG - stack ['$null$38.3', '$38load_attr.4']
2024-06-06 03:46:33,546 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:33,546 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5']
2024-06-06 03:46:33,547 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2024-06-06 03:46:33,547 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$60load_global.6']
2024-06-06 03:46:33,547 - DEBUG - dispatch pc=90, inst=KW_NAMES(arg=1, lineno=3)
2024-06-06 03:46:33,547 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:33,547 - DEBUG - dispatch pc=92, inst=CALL(arg=2, lineno=3)
2024-06-06 03:46:33,547 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:33,547 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=4, lineno=3)
2024-06-06 03:46:33,547 - DEBUG - stack ['$92call.8']
2024-06-06 03:46:33,547 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-06 03:46:33,547 - DEBUG - stack []
2024-06-06 03:46:33,547 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=4, lineno=4)
2024-06-06 03:46:33,548 - DEBUG - stack ['$const102.9']
2024-06-06 03:46:33,548 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-06 03:46:33,548 - DEBUG - stack ['$const102.9', '$out0104.10']
2024-06-06 03:46:33,548 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-06 03:46:33,548 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11']
2024-06-06 03:46:33,548 - DEBUG - dispatch pc=110, inst=STORE_SLICE(arg=None, lineno=4)
2024-06-06 03:46:33,548 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11', '$const108.12']
2024-06-06 03:46:33,548 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-06 03:46:33,548 - DEBUG - stack []
2024-06-06 03:46:33,548 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=5)
2024-06-06 03:46:33,548 - DEBUG - stack ['$const112.15']
2024-06-06 03:46:33,548 - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-06 03:46:33,548 - DEBUG - stack ['$const112.15', '$out0114.16']
2024-06-06 03:46:33,549 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-06 03:46:33,549 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17']
2024-06-06 03:46:33,549 - DEBUG - dispatch pc=120, inst=STORE_SLICE(arg=None, lineno=5)
2024-06-06 03:46:33,549 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17', '$const118.18']
2024-06-06 03:46:33,549 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-06 03:46:33,549 - DEBUG - stack []
2024-06-06 03:46:33,549 - DEBUG - dispatch pc=132, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-06 03:46:33,549 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-06 03:46:33,549 - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:33,549 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23']
2024-06-06 03:46:33,549 - DEBUG - dispatch pc=144, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-06 03:46:33,549 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25']
2024-06-06 03:46:33,549 - DEBUG - dispatch pc=146, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:33,550 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25', '$const144.26']
2024-06-06 03:46:33,550 - DEBUG - dispatch pc=154, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-06 03:46:33,550 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$146call.27']
2024-06-06 03:46:33,550 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=3, lineno=6)
2024-06-06 03:46:33,550 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28']
2024-06-06 03:46:33,550 - DEBUG - dispatch pc=158, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:33,550 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29']
2024-06-06 03:46:33,550 - DEBUG - dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-06 03:46:33,550 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29', '$const158.30']
2024-06-06 03:46:33,550 - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-06 03:46:33,550 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31']
2024-06-06 03:46:33,550 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:33,550 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32']
2024-06-06 03:46:33,550 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:33,551 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34']
2024-06-06 03:46:33,551 - DEBUG - dispatch pc=178, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:33,551 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34', '$const176.35']
2024-06-06 03:46:33,551 - DEBUG - dispatch pc=186, inst=BINARY_OP(arg=10, lineno=6)
2024-06-06 03:46:33,551 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$178call.36']
2024-06-06 03:46:33,551 - DEBUG - dispatch pc=190, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:33,551 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$binop_sub186.37']
2024-06-06 03:46:33,551 - DEBUG - dispatch pc=198, inst=GET_ITER(arg=None, lineno=6)
2024-06-06 03:46:33,551 - DEBUG - stack ['$190call.38']
2024-06-06 03:46:33,551 - DEBUG - end state. edges=[Edge(pc=200, stack=('$198get_iter.39',), blockstack=(), npush=0)]
2024-06-06 03:46:33,551 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:33,551 - DEBUG - stack: ['$phi200.0']
2024-06-06 03:46:33,551 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=1)
2024-06-06 03:46:33,552 - DEBUG - dispatch pc=200, inst=FOR_ITER(arg=4, lineno=6)
2024-06-06 03:46:33,552 - DEBUG - stack ['$phi200.0']
2024-06-06 03:46:33,552 - DEBUG - end state. edges=[Edge(pc=212, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0), Edge(pc=204, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:33,552 - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:33,552 - DEBUG - stack: ['$phi212.0', '$phi212.1']
2024-06-06 03:46:33,552 - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=2)
2024-06-06 03:46:33,552 - DEBUG - dispatch pc=212, inst=END_FOR(arg=None, lineno=6)
2024-06-06 03:46:33,552 - DEBUG - stack ['$phi212.0', '$phi212.1']
2024-06-06 03:46:33,552 - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=4, lineno=8)
2024-06-06 03:46:33,552 - DEBUG - stack []
2024-06-06 03:46:33,552 - DEBUG - dispatch pc=216, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:33,552 - DEBUG - stack ['$out0214.2']
2024-06-06 03:46:33,552 - DEBUG - end state. edges=[]
2024-06-06 03:46:33,553 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:33,553 - DEBUG - stack: ['$phi204.0', '$phi204.1']
2024-06-06 03:46:33,553 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=2)
2024-06-06 03:46:33,553 - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=5, lineno=6)
2024-06-06 03:46:33,553 - DEBUG - stack ['$phi204.0', '$phi204.1']
2024-06-06 03:46:33,553 - DEBUG - dispatch pc=206, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-06 03:46:33,553 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:33,553 - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=6, lineno=7)
2024-06-06 03:46:33,553 - DEBUG - stack ['$phi204.0', '$const206.2']
2024-06-06 03:46:33,553 - DEBUG - dispatch pc=210, inst=JUMP_BACKWARD(arg=6, lineno=7)
2024-06-06 03:46:33,553 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:33,553 - DEBUG - end state. edges=[Edge(pc=200, stack=('$phi204.0',), blockstack=(), npush=0)]
2024-06-06 03:46:33,553 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:33,554 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:33,554 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=1): {'$phi200.0'},
             State(pc_initial=204 nstack_initial=2): {'$phi204.1'},
             State(pc_initial=212 nstack_initial=2): set()})
2024-06-06 03:46:33,554 - DEBUG - defmap: {'$phi200.0': State(pc_initial=0 nstack_initial=0),
 '$phi204.1': State(pc_initial=200 nstack_initial=1),
 '$phi212.1': State(pc_initial=200 nstack_initial=1)}
2024-06-06 03:46:33,554 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi204.0',
                            State(pc_initial=204 nstack_initial=2))},
             '$phi204.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:33,554 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:33,555 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:33,555 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:33,556 - DEBUG - keep phismap: {'$phi200.0': {('$198get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi204.1': {('$200for_iter.2', State(pc_initial=200 nstack_initial=1))}}
2024-06-06 03:46:33,556 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi200.0': '$198get_iter.39'},
             State(pc_initial=200 nstack_initial=1): {'$phi204.1': '$200for_iter.2'}})
2024-06-06 03:46:33,556 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:33,556 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.4'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (92, {'func': '$38load_attr.4', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': 1, 'res': '$92call.8'}), (100, {'value': '$92call.8'}), (102, {'res': '$const102.9'}), (104, {'res': '$out0104.10'}), (106, {'res': '$const106.11'}), (108, {'res': '$const108.12'}), (110, {'start': '$const106.11', 'end': '$const108.12', 'container': '$out0104.10', 'value': '$const102.9', 'res': '$110store_slice.14', 'slicevar': '$110store_slice.13'}), (112, {'res': '$const112.15'}), (114, {'res': '$out0114.16'}), (116, {'res': '$const116.17'}), (118, {'res': '$const118.18'}), (120, {'start': '$const116.17', 'end': '$const118.18', 'container': '$out0114.16', 'value': '$const112.15', 'res': '$120store_slice.20', 'slicevar': '$120store_slice.19'}), (122, {'idx': 4, 'res': '$122load_global.21'}), (132, {'idx': 5, 'res': '$132load_global.23'}), (142, {'res': '$const142.25'}), (144, {'res': '$const144.26'}), (146, {'func': '$132load_global.23', 'args': ['$const142.25', '$const144.26'], 'kw_names': None, 'res': '$146call.27'}), (154, {'value': '$146call.27', 'res': '$154unary_negative.28'}), (156, {'res': '$full_shape0156.29'}), (158, {'res': '$const158.30'}), (160, {'index': '$const158.30', 'target': '$full_shape0156.29', 'res': '$160binary_subscr.31'}), (164, {'idx': 6, 'res': '$164load_global.32'}), (174, {'res': '$const174.34'}), (176, {'res': '$const176.35'}), (178, {'func': '$164load_global.32', 'args': ['$const174.34', '$const176.35'], 'kw_names': None, 'res': '$178call.36'}), (186, {'op': '-', 'lhs': '$160binary_subscr.31', 'rhs': '$178call.36', 'res': '$binop_sub186.37'}), (190, {'func': '$122load_global.21', 'args': ['$154unary_negative.28', '$binop_sub186.37'], 'kw_names': None, 'res': '$190call.38'}), (198, {'value': '$190call.38', 'res': '$198get_iter.39'})), outgoing_phis={'$phi200.0': '$198get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$198get_iter.39',)})
2024-06-06 03:46:33,557 - DEBUG - block_infos State(pc_initial=200 nstack_initial=1):
AdaptBlockInfo(insts=((200, {'iterator': '$phi200.0', 'pair': '$200for_iter.1', 'indval': '$200for_iter.2', 'pred': '$200for_iter.3'}),), outgoing_phis={'$phi204.1': '$200for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={212: ('$phi200.0', '$200for_iter.2'), 204: ('$phi200.0', '$200for_iter.2')})
2024-06-06 03:46:33,557 - DEBUG - block_infos State(pc_initial=204 nstack_initial=2):
AdaptBlockInfo(insts=((204, {'value': '$phi204.1'}), (206, {'res': '$const206.2'}), (208, {'value': '$const206.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi204.0',)})
2024-06-06 03:46:33,557 - DEBUG - block_infos State(pc_initial=212 nstack_initial=2):
AdaptBlockInfo(insts=((214, {'res': '$out0214.2'}), (216, {'retval': '$out0214.2', 'castval': '$216return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:33,558 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$28load_global.2']
    $38load_attr.4 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.4']
    $60load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool_) ['$60load_global.6', '$70load_attr.7']
    out0 = call $38load_attr.4(full_shape0, func=$38load_attr.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.4', '$70load_attr.7', 'full_shape0', 'out0']
    $const102.9 = const(int, 0)              ['$const102.9']
    $const106.11 = const(NoneType, None)     ['$const106.11']
    $const108.12 = const(int, 1)             ['$const108.12']
    $110store_slice.13 = global(slice: <class 'slice'>) ['$110store_slice.13']
    $110store_slice.14 = call $110store_slice.13($const106.11, $const108.12, func=$110store_slice.13, args=(Var($const106.11, <string>:4), Var($const108.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$110store_slice.13', '$110store_slice.14', '$const106.11', '$const108.12']
    out0[$110store_slice.14] = $const102.9   ['$110store_slice.14', '$const102.9', 'out0']
    $const112.15 = const(int, 0)             ['$const112.15']
    $const116.17 = const(int, 0)             ['$const116.17']
    $const118.18 = const(NoneType, None)     ['$const118.18']
    $120store_slice.19 = global(slice: <class 'slice'>) ['$120store_slice.19']
    $120store_slice.20 = call $120store_slice.19($const116.17, $const118.18, func=$120store_slice.19, args=(Var($const116.17, <string>:5), Var($const118.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$120store_slice.19', '$120store_slice.20', '$const116.17', '$const118.18']
    out0[$120store_slice.20] = $const112.15  ['$120store_slice.20', '$const112.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $132load_global.23 = global(min: <built-in function min>) ['$132load_global.23']
    $const142.25 = const(int, 0)             ['$const142.25']
    $const144.26 = const(int, -1)            ['$const144.26']
    $146call.27 = call $132load_global.23($const142.25, $const144.26, func=$132load_global.23, args=[Var($const142.25, <string>:6), Var($const144.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$132load_global.23', '$146call.27', '$const142.25', '$const144.26']
    $154unary_negative.28 = unary(fn=<built-in function neg>, value=$146call.27) ['$146call.27', '$154unary_negative.28']
    $const158.30 = const(int, 0)             ['$const158.30']
    $160binary_subscr.31 = getitem(value=full_shape0, index=$const158.30, fn=<built-in function getitem>) ['$160binary_subscr.31', '$const158.30', 'full_shape0']
    $164load_global.32 = global(max: <built-in function max>) ['$164load_global.32']
    $const174.34 = const(int, 0)             ['$const174.34']
    $const176.35 = const(int, 0)             ['$const176.35']
    $178call.36 = call $164load_global.32($const174.34, $const176.35, func=$164load_global.32, args=[Var($const174.34, <string>:6), Var($const176.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_global.32', '$178call.36', '$const174.34', '$const176.35']
    $binop_sub186.37 = $160binary_subscr.31 - $178call.36 ['$160binary_subscr.31', '$178call.36', '$binop_sub186.37']
    $190call.38 = call $122load_global.21($154unary_negative.28, $binop_sub186.37, func=$122load_global.21, args=[Var($154unary_negative.28, <string>:6), Var($binop_sub186.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$154unary_negative.28', '$190call.38', '$binop_sub186.37']
    $198get_iter.39 = getiter(value=$190call.38) ['$190call.38', '$198get_iter.39']
    $phi200.0 = $198get_iter.39              ['$198get_iter.39', '$phi200.0']
    jump 200                                 []
label 200:
    $200for_iter.1 = iternext(value=$phi200.0) ['$200for_iter.1', '$phi200.0']
    $200for_iter.2 = pair_first(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.2']
    $200for_iter.3 = pair_second(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.3']
    $phi204.1 = $200for_iter.2               ['$200for_iter.2', '$phi204.1']
    branch $200for_iter.3, 204, 212          ['$200for_iter.3']
label 204:
    index00 = $phi204.1                      ['$phi204.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 200                                 []
label 212:
    $216return_value.3 = cast(value=out0)    ['$216return_value.3', 'out0']
    return $216return_value.3                ['$216return_value.3']

2024-06-06 03:46:33,575 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:33,575 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,575 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:33,575 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:33,575 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:33,575 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:33,575 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,576 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:33,576 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,576 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:33,576 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,576 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:33,576 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:33,576 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:33,576 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,576 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,576 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:33,577 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:33,577 - DEBUG - on stmt: $const116.17.1 = const(int, 0)
2024-06-06 03:46:33,577 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:33,577 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,577 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,577 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:33,577 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:33,577 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:33,577 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:33,577 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:33,577 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,577 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:33,577 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:33,578 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,578 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:33,578 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:33,578 - DEBUG - on stmt: $const176.35.1 = const(int, 0)
2024-06-06 03:46:33,578 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,578 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:33,578 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,578 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:33,578 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:33,578 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,578 - DEBUG - ==== SSA block analysis pass on 200
2024-06-06 03:46:33,578 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,579 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:33,579 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:33,579 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:33,579 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:33,579 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 396
2024-06-06 03:46:33,579 - DEBUG - ==== SSA block analysis pass on 204
2024-06-06 03:46:33,579 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,579 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:33,579 - DEBUG - on stmt: jump 212
2024-06-06 03:46:33,579 - DEBUG - ==== SSA block analysis pass on 396
2024-06-06 03:46:33,579 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,579 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:33,579 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:33,580 - DEBUG - ==== SSA block analysis pass on 212
2024-06-06 03:46:33,580 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,580 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:33,580 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,580 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,580 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,580 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,580 - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,580 - DEBUG - on stmt: $28pred = call bool28($24compare_op.6, func=bool28, args=(Var($24compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,580 - DEBUG - on stmt: $phi30.0 = x0
2024-06-06 03:46:33,580 - DEBUG - on stmt: branch $28pred, 213, 253
2024-06-06 03:46:33,580 - DEBUG - ==== SSA block analysis pass on 213
2024-06-06 03:46:33,581 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,581 - DEBUG - on stmt: $32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,581 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,581 - DEBUG - on stmt: $36pred = call bool36($32compare_op.2, func=bool36, args=(Var($32compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,581 - DEBUG - on stmt: branch $36pred, 243, 257
2024-06-06 03:46:33,581 - DEBUG - ==== SSA block analysis pass on 243
2024-06-06 03:46:33,581 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,581 - DEBUG - on stmt: jump 251
2024-06-06 03:46:33,581 - DEBUG - ==== SSA block analysis pass on 253
2024-06-06 03:46:33,581 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,581 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,581 - DEBUG - ==== SSA block analysis pass on 251
2024-06-06 03:46:33,581 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,581 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-06 03:46:33,582 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,582 - DEBUG - ==== SSA block analysis pass on 257
2024-06-06 03:46:33,582 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,582 - DEBUG - on stmt: $const50.1 = const(int, -1)
2024-06-06 03:46:33,582 - DEBUG - on stmt: stencil_index = $const50.1 + index00
2024-06-06 03:46:33,582 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,582 - DEBUG - on stmt: $60unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,582 - DEBUG - on stmt: $68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,582 - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,582 - DEBUG - on stmt: $72pred = call bool72($68compare_op.6, func=bool72, args=(Var($68compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,582 - DEBUG - on stmt: $phi74.0 = x1
2024-06-06 03:46:33,582 - DEBUG - on stmt: branch $72pred, 261, 297
2024-06-06 03:46:33,583 - DEBUG - ==== SSA block analysis pass on 261
2024-06-06 03:46:33,583 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,583 - DEBUG - on stmt: $76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,583 - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,583 - DEBUG - on stmt: $80pred = call bool80($76compare_op.2, func=bool80, args=(Var($76compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,583 - DEBUG - on stmt: branch $80pred, 287, 301
2024-06-06 03:46:33,583 - DEBUG - ==== SSA block analysis pass on 287
2024-06-06 03:46:33,583 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,583 - DEBUG - on stmt: jump 295
2024-06-06 03:46:33,583 - DEBUG - ==== SSA block analysis pass on 297
2024-06-06 03:46:33,583 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,583 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,583 - DEBUG - ==== SSA block analysis pass on 295
2024-06-06 03:46:33,583 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,584 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-06 03:46:33,584 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,584 - DEBUG - ==== SSA block analysis pass on 301
2024-06-06 03:46:33,584 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,584 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,584 - DEBUG - on stmt: $94pred = call bool94(zero_pos, func=bool94, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,584 - DEBUG - on stmt: branch $94pred, 305, 309
2024-06-06 03:46:33,584 - DEBUG - ==== SSA block analysis pass on 305
2024-06-06 03:46:33,584 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,584 - DEBUG - on stmt: $96load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,584 - DEBUG - on stmt: $106load_attr.2 = getattr(value=$96load_global.0, attr=signbit)
2024-06-06 03:46:33,584 - DEBUG - on stmt: $128call.4 = call $106load_attr.2(x0, func=$106load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,584 - DEBUG - on stmt: $136load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,585 - DEBUG - on stmt: $146load_attr.7 = getattr(value=$136load_global.5, attr=signbit)
2024-06-06 03:46:33,585 - DEBUG - on stmt: $168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,585 - DEBUG - on stmt: $176compare_op.10 = $128call.4 != $168call.9
2024-06-06 03:46:33,585 - DEBUG - on stmt: $180return_value.11 = cast(value=$176compare_op.10)
2024-06-06 03:46:33,585 - DEBUG - on stmt: out0[index00] = $180return_value.11
2024-06-06 03:46:33,585 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,585 - DEBUG - ==== SSA block analysis pass on 309
2024-06-06 03:46:33,585 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,585 - DEBUG - on stmt: $182load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,585 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$182load_global.0, attr=sign)
2024-06-06 03:46:33,585 - DEBUG - on stmt: $214call.4 = call $192load_attr.2(x0, func=$192load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,585 - DEBUG - on stmt: $222load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,586 - DEBUG - on stmt: $232load_attr.7 = getattr(value=$222load_global.5, attr=sign)
2024-06-06 03:46:33,586 - DEBUG - on stmt: $254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,586 - DEBUG - on stmt: $262compare_op.10 = $214call.4 != $254call.9
2024-06-06 03:46:33,586 - DEBUG - on stmt: $266return_value.11 = cast(value=$262compare_op.10)
2024-06-06 03:46:33,587 - DEBUG - on stmt: out0[index00] = $266return_value.11
2024-06-06 03:46:33,587 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,587 - DEBUG - ==== SSA block analysis pass on 395
2024-06-06 03:46:33,587 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21dbb00>
2024-06-06 03:46:33,587 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,589 - DEBUG - defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9d21ae3c0>,
                                  305)],
             '$110store_slice.13.1': [(<numba.core.ir.Assign object at 0x7fe9d21d5940>,
                                       0)],
             '$110store_slice.14.1': [(<numba.core.ir.Assign object at 0x7fe9d21d5a60>,
                                       0)],
             '$120store_slice.19.1': [(<numba.core.ir.Assign object at 0x7fe9d21d60c0>,
                                       0)],
             '$120store_slice.20.1': [(<numba.core.ir.Assign object at 0x7fe9d21d61e0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7fe9d21d6360>,
                                       0)],
             '$128call.4': [(<numba.core.ir.Assign object at 0x7fe9d21b1be0>,
                             305)],
             '$132load_global.23.1': [(<numba.core.ir.Assign object at 0x7fe9d21d64b0>,
                                       0)],
             '$136load_global.5': [(<numba.core.ir.Assign object at 0x7fe9d21b1dc0>,
                                    305)],
             '$146call.27.1': [(<numba.core.ir.Assign object at 0x7fe9d21d68d0>,
                                0)],
             '$146load_attr.7': [(<numba.core.ir.Assign object at 0x7fe9d21b5160>,
                                  305)],
             '$154unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7fe9d21d69f0>,
                                          0)],
             '$160binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7fe9d21d6db0>,
                                         0)],
             '$164load_global.32.1': [(<numba.core.ir.Assign object at 0x7fe9d21d6ed0>,
                                       0)],
             '$168call.9': [(<numba.core.ir.Assign object at 0x7fe9d21b6a20>,
                             305)],
             '$16unary_negative.4': [(<numba.core.ir.Assign object at 0x7fe9d22b0e90>,
                                      212)],
             '$176compare_op.10': [(<numba.core.ir.Assign object at 0x7fe9d21b6c00>,
                                    305)],
             '$178call.36.1': [(<numba.core.ir.Assign object at 0x7fe9d21d7320>,
                                0)],
             '$180return_value.11': [(<numba.core.ir.Assign object at 0x7fe9d21b8620>,
                                      305)],
             '$182load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d21beba0>,
                                    309)],
             '$190call.38.1': [(<numba.core.ir.Assign object at 0x7fe9d21d75f0>,
                                0)],
             '$192load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9d21c0860>,
                                  309)],
             '$198get_iter.39.1': [(<numba.core.ir.Assign object at 0x7fe9d21d7710>,
                                    0)],
             '$200for_iter.1.1': [(<numba.core.ir.Assign object at 0x7fe9d21d77a0>,
                                   200)],
             '$200for_iter.2.1': [(<numba.core.ir.Assign object at 0x7fe9d21d78c0>,
                                   200)],
             '$200for_iter.3.1': [(<numba.core.ir.Assign object at 0x7fe9d21d79e0>,
                                   200)],
             '$214call.4': [(<numba.core.ir.Assign object at 0x7fe9d21c2450>,
                             309)],
             '$216return_value.3.1': [(<numba.core.ir.Assign object at 0x7fe9d21d81a0>,
                                       396)],
             '$222load_global.5': [(<numba.core.ir.Assign object at 0x7fe9d21c2630>,
                                    309)],
             '$232load_attr.7': [(<numba.core.ir.Assign object at 0x7fe9d21c99d0>,
                                  309)],
             '$24compare_op.6': [(<numba.core.ir.Assign object at 0x7fe9d22b2c00>,
                                  212)],
             '$254call.9': [(<numba.core.ir.Assign object at 0x7fe9d21cb290>,
                             309)],
             '$262compare_op.10': [(<numba.core.ir.Assign object at 0x7fe9d21cb470>,
                                    309)],
             '$266return_value.11': [(<numba.core.ir.Assign object at 0x7fe9d21cce90>,
                                      309)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x7fe9d21d4bc0>,
                                     0)],
             '$28pred': [(<numba.core.ir.Assign object at 0x7fe9d2186d20>,
                          212)],
             '$32compare_op.2': [(<numba.core.ir.Assign object at 0x7fe9d22f0170>,
                                  213)],
             '$36pred': [(<numba.core.ir.Assign object at 0x7fe9d22eec30>,
                          213)],
             '$38load_attr.4.1': [(<numba.core.ir.Assign object at 0x7fe9d21d4d10>,
                                   0)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x7fe9d21d4f50>,
                                     0)],
             '$60unary_negative.4': [(<numba.core.ir.Assign object at 0x7fe9d21698e0>,
                                      257)],
             '$68compare_op.6': [(<numba.core.ir.Assign object at 0x7fe9d2169ac0>,
                                  257)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x7fe9d21d50a0>,
                                   0)],
             '$72pred': [(<numba.core.ir.Assign object at 0x7fe9d2178ef0>,
                          257)],
             '$76compare_op.2': [(<numba.core.ir.Assign object at 0x7fe9d2196750>,
                                  261)],
             '$80pred': [(<numba.core.ir.Assign object at 0x7fe9d2198560>,
                          261)],
             '$94pred': [(<numba.core.ir.Assign object at 0x7fe9d21a5700>,
                          301)],
             '$96load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d21afcb0>,
                                   305)],
             '$binop_sub186.37.1': [(<numba.core.ir.Assign object at 0x7fe9d21d7470>,
                                     0)],
             '$const102.9.1': [(<numba.core.ir.Assign object at 0x7fe9d21d5460>,
                                0)],
             '$const106.11.1': [(<numba.core.ir.Assign object at 0x7fe9d21d56a0>,
                                 0)],
             '$const108.12.1': [(<numba.core.ir.Assign object at 0x7fe9d21d57f0>,
                                 0)],
             '$const112.15.1': [(<numba.core.ir.Assign object at 0x7fe9d21d5be0>,
                                 0)],
             '$const116.17.1': [(<numba.core.ir.Assign object at 0x7fe9d21d5e20>,
                                 0)],
             '$const118.18.1': [(<numba.core.ir.Assign object at 0x7fe9d21d5f70>,
                                 0)],
             '$const142.25.1': [(<numba.core.ir.Assign object at 0x7fe9d21d65d0>,
                                 0)],
             '$const144.26.1': [(<numba.core.ir.Assign object at 0x7fe9d21d6720>,
                                 0)],
             '$const158.30.1': [(<numba.core.ir.Assign object at 0x7fe9d21d6c30>,
                                 0)],
             '$const174.34.1': [(<numba.core.ir.Assign object at 0x7fe9d21d7020>,
                                 0)],
             '$const176.35.1': [(<numba.core.ir.Assign object at 0x7fe9d21d7170>,
                                 0)],
             '$const50.1': [(<numba.core.ir.Assign object at 0x7fe9d218bb30>,
                             257)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9d22c5c10>,
                            212)],
             '$phi200.0.1': [(<numba.core.ir.Assign object at 0x7fe9d21d4a70>,
                              0)],
             '$phi204.1.1': [(<numba.core.ir.Assign object at 0x7fe9d21d7aa0>,
                              200)],
             '$phi30.0': [(<numba.core.ir.Assign object at 0x7fe9d21847a0>,
                           212)],
             '$phi74.0': [(<numba.core.ir.Assign object at 0x7fe9d2190170>,
                           257)],
             'bool28': [(<numba.core.ir.Assign object at 0x7fe9d22b26f0>, 212)],
             'bool36': [(<numba.core.ir.Assign object at 0x7fe9d22ecf50>, 213)],
             'bool72': [(<numba.core.ir.Assign object at 0x7fe9d216b4a0>, 257)],
             'bool80': [(<numba.core.ir.Assign object at 0x7fe9d21967e0>, 261)],
             'bool94': [(<numba.core.ir.Assign object at 0x7fe9d21a3ad0>, 301)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7fe9d21d4980>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7fe9d21d7c50>,
                          204)],
             'out0': [(<numba.core.ir.Assign object at 0x7fe9d21d5250>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7fe9d21d39e0>,
                                212),
                               (<numba.core.ir.Assign object at 0x7fe9d21d3b90>,
                                257)],
             'threshold': [(<numba.core.ir.Assign object at 0x7fe9d21d45f0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9d21d44d0>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x7fe9d21d3aa0>, 212),
                    (<numba.core.ir.Assign object at 0x7fe9d22d4170>, 251)],
             'x1': [(<numba.core.ir.Assign object at 0x7fe9d21d3c50>, 257),
                    (<numba.core.ir.Assign object at 0x7fe9d21a1fa0>, 295)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x7fe9d21d4710>,
                           0)]})
2024-06-06 03:46:33,589 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d22c5970>
2024-06-06 03:46:33,589 - DEBUG - Fix SSA violator on var stencil_index
2024-06-06 03:46:33,589 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:33,589 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,589 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:33,589 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:33,589 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:33,589 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:33,590 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,590 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:33,590 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,590 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:33,590 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,590 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:33,590 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:33,590 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:33,590 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,590 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,590 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:33,590 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:33,590 - DEBUG - on stmt: $const116.17.1 = const(int, 0)
2024-06-06 03:46:33,591 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:33,591 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,591 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,591 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:33,591 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:33,591 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:33,591 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:33,591 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:33,591 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,591 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:33,591 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:33,591 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,591 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:33,592 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:33,592 - DEBUG - on stmt: $const176.35.1 = const(int, 0)
2024-06-06 03:46:33,592 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,592 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:33,592 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,592 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:33,592 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:33,592 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,592 - DEBUG - ==== SSA block rewrite pass on 200
2024-06-06 03:46:33,592 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,592 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:33,592 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:33,592 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:33,593 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:33,593 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 396
2024-06-06 03:46:33,593 - DEBUG - ==== SSA block rewrite pass on 204
2024-06-06 03:46:33,593 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,593 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:33,593 - DEBUG - on stmt: jump 212
2024-06-06 03:46:33,593 - DEBUG - ==== SSA block rewrite pass on 396
2024-06-06 03:46:33,593 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,593 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:33,593 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:33,593 - DEBUG - ==== SSA block rewrite pass on 212
2024-06-06 03:46:33,593 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,593 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:33,593 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,594 - DEBUG - first assign: stencil_index
2024-06-06 03:46:33,594 - DEBUG - replaced with: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,594 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,594 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,594 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,594 - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,594 - DEBUG - on stmt: $28pred = call bool28($24compare_op.6, func=bool28, args=(Var($24compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,594 - DEBUG - on stmt: $phi30.0 = x0
2024-06-06 03:46:33,594 - DEBUG - on stmt: branch $28pred, 213, 253
2024-06-06 03:46:33,594 - DEBUG - ==== SSA block rewrite pass on 213
2024-06-06 03:46:33,594 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,594 - DEBUG - on stmt: $32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,594 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,594 - DEBUG - on stmt: $36pred = call bool36($32compare_op.2, func=bool36, args=(Var($32compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,595 - DEBUG - on stmt: branch $36pred, 243, 257
2024-06-06 03:46:33,595 - DEBUG - ==== SSA block rewrite pass on 243
2024-06-06 03:46:33,595 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,595 - DEBUG - on stmt: jump 251
2024-06-06 03:46:33,595 - DEBUG - ==== SSA block rewrite pass on 253
2024-06-06 03:46:33,595 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,595 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,595 - DEBUG - ==== SSA block rewrite pass on 251
2024-06-06 03:46:33,595 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,595 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-06 03:46:33,595 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,595 - DEBUG - ==== SSA block rewrite pass on 257
2024-06-06 03:46:33,595 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,595 - DEBUG - on stmt: $const50.1 = const(int, -1)
2024-06-06 03:46:33,596 - DEBUG - on stmt: stencil_index = $const50.1 + index00
2024-06-06 03:46:33,596 - DEBUG - replaced with: stencil_index.1 = $const50.1 + index00
2024-06-06 03:46:33,596 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,596 - DEBUG - on stmt: $60unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,596 - DEBUG - on stmt: $68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,596 - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,596 - DEBUG - on stmt: $72pred = call bool72($68compare_op.6, func=bool72, args=(Var($68compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,596 - DEBUG - on stmt: $phi74.0 = x1
2024-06-06 03:46:33,596 - DEBUG - on stmt: branch $72pred, 261, 297
2024-06-06 03:46:33,596 - DEBUG - ==== SSA block rewrite pass on 261
2024-06-06 03:46:33,596 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,596 - DEBUG - on stmt: $76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,596 - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,597 - DEBUG - on stmt: $80pred = call bool80($76compare_op.2, func=bool80, args=(Var($76compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,597 - DEBUG - on stmt: branch $80pred, 287, 301
2024-06-06 03:46:33,597 - DEBUG - ==== SSA block rewrite pass on 287
2024-06-06 03:46:33,597 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,597 - DEBUG - on stmt: jump 295
2024-06-06 03:46:33,597 - DEBUG - ==== SSA block rewrite pass on 297
2024-06-06 03:46:33,597 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,597 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,597 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-06 03:46:33,597 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,597 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-06 03:46:33,597 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,597 - DEBUG - ==== SSA block rewrite pass on 301
2024-06-06 03:46:33,597 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,598 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,598 - DEBUG - on stmt: $94pred = call bool94(zero_pos, func=bool94, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,598 - DEBUG - on stmt: branch $94pred, 305, 309
2024-06-06 03:46:33,598 - DEBUG - ==== SSA block rewrite pass on 305
2024-06-06 03:46:33,598 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,598 - DEBUG - on stmt: $96load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,598 - DEBUG - on stmt: $106load_attr.2 = getattr(value=$96load_global.0, attr=signbit)
2024-06-06 03:46:33,598 - DEBUG - on stmt: $128call.4 = call $106load_attr.2(x0, func=$106load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,598 - DEBUG - on stmt: $136load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,598 - DEBUG - on stmt: $146load_attr.7 = getattr(value=$136load_global.5, attr=signbit)
2024-06-06 03:46:33,598 - DEBUG - on stmt: $168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,598 - DEBUG - on stmt: $176compare_op.10 = $128call.4 != $168call.9
2024-06-06 03:46:33,598 - DEBUG - on stmt: $180return_value.11 = cast(value=$176compare_op.10)
2024-06-06 03:46:33,599 - DEBUG - on stmt: out0[index00] = $180return_value.11
2024-06-06 03:46:33,599 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,599 - DEBUG - ==== SSA block rewrite pass on 309
2024-06-06 03:46:33,599 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,599 - DEBUG - on stmt: $182load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,599 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$182load_global.0, attr=sign)
2024-06-06 03:46:33,599 - DEBUG - on stmt: $214call.4 = call $192load_attr.2(x0, func=$192load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,599 - DEBUG - on stmt: $222load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,599 - DEBUG - on stmt: $232load_attr.7 = getattr(value=$222load_global.5, attr=sign)
2024-06-06 03:46:33,599 - DEBUG - on stmt: $254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,599 - DEBUG - on stmt: $262compare_op.10 = $214call.4 != $254call.9
2024-06-06 03:46:33,599 - DEBUG - on stmt: $266return_value.11 = cast(value=$262compare_op.10)
2024-06-06 03:46:33,599 - DEBUG - on stmt: out0[index00] = $266return_value.11
2024-06-06 03:46:33,599 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,600 - DEBUG - ==== SSA block rewrite pass on 395
2024-06-06 03:46:33,600 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,600 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,600 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {212: [<numba.core.ir.Assign object at 0x7fe9d22c4620>],
             257: [<numba.core.ir.Assign object at 0x7fe9d22c57f0>]})
2024-06-06 03:46:33,600 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:33,600 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,600 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:33,600 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:33,600 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:33,600 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:33,600 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,600 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:33,601 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,601 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:33,601 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,601 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:33,601 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:33,601 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:33,601 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,601 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,601 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:33,601 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:33,601 - DEBUG - on stmt: $const116.17.1 = const(int, 0)
2024-06-06 03:46:33,601 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:33,601 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,602 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,602 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:33,602 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:33,602 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:33,602 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:33,602 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:33,602 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,602 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:33,602 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:33,602 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,602 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:33,603 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:33,603 - DEBUG - on stmt: $const176.35.1 = const(int, 0)
2024-06-06 03:46:33,603 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,603 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:33,603 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,603 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:33,603 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:33,603 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,603 - DEBUG - ==== SSA block rewrite pass on 200
2024-06-06 03:46:33,603 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,603 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:33,603 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:33,604 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:33,604 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:33,604 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 396
2024-06-06 03:46:33,604 - DEBUG - ==== SSA block rewrite pass on 204
2024-06-06 03:46:33,604 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,604 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:33,604 - DEBUG - on stmt: jump 212
2024-06-06 03:46:33,604 - DEBUG - ==== SSA block rewrite pass on 396
2024-06-06 03:46:33,604 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,604 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:33,604 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:33,604 - DEBUG - ==== SSA block rewrite pass on 212
2024-06-06 03:46:33,604 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,604 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:33,605 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,605 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,605 - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,605 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,605 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,605 - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,605 - DEBUG - on stmt: $28pred = call bool28($24compare_op.6, func=bool28, args=(Var($24compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,605 - DEBUG - on stmt: $phi30.0 = x0
2024-06-06 03:46:33,605 - DEBUG - on stmt: branch $28pred, 213, 253
2024-06-06 03:46:33,605 - DEBUG - ==== SSA block rewrite pass on 213
2024-06-06 03:46:33,605 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,605 - DEBUG - on stmt: $32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,605 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,606 - DEBUG - on stmt: $36pred = call bool36($32compare_op.2, func=bool36, args=(Var($32compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,606 - DEBUG - on stmt: branch $36pred, 243, 257
2024-06-06 03:46:33,606 - DEBUG - ==== SSA block rewrite pass on 243
2024-06-06 03:46:33,606 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,606 - DEBUG - on stmt: jump 251
2024-06-06 03:46:33,606 - DEBUG - ==== SSA block rewrite pass on 253
2024-06-06 03:46:33,606 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,606 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,606 - DEBUG - ==== SSA block rewrite pass on 251
2024-06-06 03:46:33,606 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,606 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-06 03:46:33,606 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,606 - DEBUG - ==== SSA block rewrite pass on 257
2024-06-06 03:46:33,607 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,607 - DEBUG - on stmt: $const50.1 = const(int, -1)
2024-06-06 03:46:33,607 - DEBUG - on stmt: stencil_index.1 = $const50.1 + index00
2024-06-06 03:46:33,607 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,607 - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,607 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,607 - DEBUG - on stmt: $60unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,607 - DEBUG - on stmt: $68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,607 - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,607 - DEBUG - on stmt: $72pred = call bool72($68compare_op.6, func=bool72, args=(Var($68compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,607 - DEBUG - on stmt: $phi74.0 = x1
2024-06-06 03:46:33,607 - DEBUG - on stmt: branch $72pred, 261, 297
2024-06-06 03:46:33,608 - DEBUG - ==== SSA block rewrite pass on 261
2024-06-06 03:46:33,608 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,608 - DEBUG - on stmt: $76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,608 - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,608 - DEBUG - on stmt: $80pred = call bool80($76compare_op.2, func=bool80, args=(Var($76compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,608 - DEBUG - on stmt: branch $80pred, 287, 301
2024-06-06 03:46:33,608 - DEBUG - ==== SSA block rewrite pass on 287
2024-06-06 03:46:33,608 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,608 - DEBUG - on stmt: jump 295
2024-06-06 03:46:33,608 - DEBUG - ==== SSA block rewrite pass on 297
2024-06-06 03:46:33,608 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,608 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,608 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-06 03:46:33,608 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,609 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-06 03:46:33,609 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,609 - DEBUG - ==== SSA block rewrite pass on 301
2024-06-06 03:46:33,609 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,609 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,609 - DEBUG - on stmt: $94pred = call bool94(zero_pos, func=bool94, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,609 - DEBUG - on stmt: branch $94pred, 305, 309
2024-06-06 03:46:33,609 - DEBUG - ==== SSA block rewrite pass on 305
2024-06-06 03:46:33,609 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,609 - DEBUG - on stmt: $96load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,609 - DEBUG - on stmt: $106load_attr.2 = getattr(value=$96load_global.0, attr=signbit)
2024-06-06 03:46:33,609 - DEBUG - on stmt: $128call.4 = call $106load_attr.2(x0, func=$106load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,609 - DEBUG - on stmt: $136load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,610 - DEBUG - on stmt: $146load_attr.7 = getattr(value=$136load_global.5, attr=signbit)
2024-06-06 03:46:33,610 - DEBUG - on stmt: $168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,610 - DEBUG - on stmt: $176compare_op.10 = $128call.4 != $168call.9
2024-06-06 03:46:33,610 - DEBUG - on stmt: $180return_value.11 = cast(value=$176compare_op.10)
2024-06-06 03:46:33,610 - DEBUG - on stmt: out0[index00] = $180return_value.11
2024-06-06 03:46:33,610 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,610 - DEBUG - ==== SSA block rewrite pass on 309
2024-06-06 03:46:33,610 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,610 - DEBUG - on stmt: $182load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,610 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$182load_global.0, attr=sign)
2024-06-06 03:46:33,610 - DEBUG - on stmt: $214call.4 = call $192load_attr.2(x0, func=$192load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,610 - DEBUG - on stmt: $222load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,611 - DEBUG - on stmt: $232load_attr.7 = getattr(value=$222load_global.5, attr=sign)
2024-06-06 03:46:33,611 - DEBUG - on stmt: $254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,611 - DEBUG - on stmt: $262compare_op.10 = $214call.4 != $254call.9
2024-06-06 03:46:33,611 - DEBUG - on stmt: $266return_value.11 = cast(value=$262compare_op.10)
2024-06-06 03:46:33,611 - DEBUG - on stmt: out0[index00] = $266return_value.11
2024-06-06 03:46:33,611 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,611 - DEBUG - ==== SSA block rewrite pass on 395
2024-06-06 03:46:33,611 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c5dc0>
2024-06-06 03:46:33,611 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,611 - DEBUG - Fix SSA violator on var x0
2024-06-06 03:46:33,611 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:33,611 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,611 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:33,612 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:33,612 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:33,612 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:33,612 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,612 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:33,612 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,612 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:33,612 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,612 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:33,612 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:33,612 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:33,612 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,612 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,613 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:33,613 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:33,613 - DEBUG - on stmt: $const116.17.1 = const(int, 0)
2024-06-06 03:46:33,613 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:33,613 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,613 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,613 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:33,613 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:33,613 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:33,613 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:33,613 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:33,613 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,613 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:33,613 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:33,614 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,614 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:33,614 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:33,614 - DEBUG - on stmt: $const176.35.1 = const(int, 0)
2024-06-06 03:46:33,614 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,614 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:33,614 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,614 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:33,614 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:33,614 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,614 - DEBUG - ==== SSA block rewrite pass on 200
2024-06-06 03:46:33,614 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,614 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:33,615 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:33,615 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:33,615 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:33,615 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 396
2024-06-06 03:46:33,615 - DEBUG - ==== SSA block rewrite pass on 204
2024-06-06 03:46:33,615 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,615 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:33,615 - DEBUG - on stmt: jump 212
2024-06-06 03:46:33,615 - DEBUG - ==== SSA block rewrite pass on 396
2024-06-06 03:46:33,615 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,615 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:33,615 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:33,615 - DEBUG - ==== SSA block rewrite pass on 212
2024-06-06 03:46:33,615 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,616 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:33,616 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,616 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,616 - DEBUG - first assign: x0
2024-06-06 03:46:33,616 - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,616 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,616 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,616 - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,616 - DEBUG - on stmt: $28pred = call bool28($24compare_op.6, func=bool28, args=(Var($24compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,616 - DEBUG - on stmt: $phi30.0 = x0
2024-06-06 03:46:33,616 - DEBUG - on stmt: branch $28pred, 213, 253
2024-06-06 03:46:33,616 - DEBUG - ==== SSA block rewrite pass on 213
2024-06-06 03:46:33,616 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,616 - DEBUG - on stmt: $32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,617 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,617 - DEBUG - on stmt: $36pred = call bool36($32compare_op.2, func=bool36, args=(Var($32compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,617 - DEBUG - on stmt: branch $36pred, 243, 257
2024-06-06 03:46:33,617 - DEBUG - ==== SSA block rewrite pass on 243
2024-06-06 03:46:33,617 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,617 - DEBUG - on stmt: jump 251
2024-06-06 03:46:33,617 - DEBUG - ==== SSA block rewrite pass on 253
2024-06-06 03:46:33,617 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,617 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,617 - DEBUG - ==== SSA block rewrite pass on 251
2024-06-06 03:46:33,617 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,617 - DEBUG - on stmt: x0 = const(int, 0)
2024-06-06 03:46:33,617 - DEBUG - replaced with: x0.1 = const(int, 0)
2024-06-06 03:46:33,617 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,618 - DEBUG - ==== SSA block rewrite pass on 257
2024-06-06 03:46:33,618 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,618 - DEBUG - on stmt: $const50.1 = const(int, -1)
2024-06-06 03:46:33,618 - DEBUG - on stmt: stencil_index.1 = $const50.1 + index00
2024-06-06 03:46:33,618 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,618 - DEBUG - on stmt: $60unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,618 - DEBUG - on stmt: $68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,618 - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,618 - DEBUG - on stmt: $72pred = call bool72($68compare_op.6, func=bool72, args=(Var($68compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,618 - DEBUG - on stmt: $phi74.0 = x1
2024-06-06 03:46:33,618 - DEBUG - on stmt: branch $72pred, 261, 297
2024-06-06 03:46:33,618 - DEBUG - ==== SSA block rewrite pass on 261
2024-06-06 03:46:33,619 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,619 - DEBUG - on stmt: $76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,619 - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,619 - DEBUG - on stmt: $80pred = call bool80($76compare_op.2, func=bool80, args=(Var($76compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,619 - DEBUG - on stmt: branch $80pred, 287, 301
2024-06-06 03:46:33,619 - DEBUG - ==== SSA block rewrite pass on 287
2024-06-06 03:46:33,619 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,619 - DEBUG - on stmt: jump 295
2024-06-06 03:46:33,619 - DEBUG - ==== SSA block rewrite pass on 297
2024-06-06 03:46:33,619 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,619 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,619 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-06 03:46:33,619 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,619 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-06 03:46:33,620 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,620 - DEBUG - ==== SSA block rewrite pass on 301
2024-06-06 03:46:33,620 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,620 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,620 - DEBUG - on stmt: $94pred = call bool94(zero_pos, func=bool94, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,620 - DEBUG - on stmt: branch $94pred, 305, 309
2024-06-06 03:46:33,620 - DEBUG - ==== SSA block rewrite pass on 305
2024-06-06 03:46:33,620 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,620 - DEBUG - on stmt: $96load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,620 - DEBUG - on stmt: $106load_attr.2 = getattr(value=$96load_global.0, attr=signbit)
2024-06-06 03:46:33,620 - DEBUG - on stmt: $128call.4 = call $106load_attr.2(x0, func=$106load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,620 - DEBUG - on stmt: $136load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,620 - DEBUG - on stmt: $146load_attr.7 = getattr(value=$136load_global.5, attr=signbit)
2024-06-06 03:46:33,621 - DEBUG - on stmt: $168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,621 - DEBUG - on stmt: $176compare_op.10 = $128call.4 != $168call.9
2024-06-06 03:46:33,621 - DEBUG - on stmt: $180return_value.11 = cast(value=$176compare_op.10)
2024-06-06 03:46:33,621 - DEBUG - on stmt: out0[index00] = $180return_value.11
2024-06-06 03:46:33,621 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,621 - DEBUG - ==== SSA block rewrite pass on 309
2024-06-06 03:46:33,621 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,621 - DEBUG - on stmt: $182load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,621 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$182load_global.0, attr=sign)
2024-06-06 03:46:33,621 - DEBUG - on stmt: $214call.4 = call $192load_attr.2(x0, func=$192load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,621 - DEBUG - on stmt: $222load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,621 - DEBUG - on stmt: $232load_attr.7 = getattr(value=$222load_global.5, attr=sign)
2024-06-06 03:46:33,621 - DEBUG - on stmt: $254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,622 - DEBUG - on stmt: $262compare_op.10 = $214call.4 != $254call.9
2024-06-06 03:46:33,622 - DEBUG - on stmt: $266return_value.11 = cast(value=$262compare_op.10)
2024-06-06 03:46:33,622 - DEBUG - on stmt: out0[index00] = $266return_value.11
2024-06-06 03:46:33,622 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,622 - DEBUG - ==== SSA block rewrite pass on 395
2024-06-06 03:46:33,622 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4f80>
2024-06-06 03:46:33,622 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,622 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {212: [<numba.core.ir.Assign object at 0x7fe9d22c6360>],
             251: [<numba.core.ir.Assign object at 0x7fe9d22c5430>]})
2024-06-06 03:46:33,622 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:33,622 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,622 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:33,622 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:33,622 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:33,623 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:33,623 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,623 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:33,623 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,623 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:33,623 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,623 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:33,623 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:33,623 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:33,623 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,623 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,623 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:33,624 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:33,624 - DEBUG - on stmt: $const116.17.1 = const(int, 0)
2024-06-06 03:46:33,624 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:33,624 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,624 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,624 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:33,624 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:33,624 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:33,624 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:33,624 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:33,624 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,624 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:33,624 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:33,624 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,625 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:33,625 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:33,625 - DEBUG - on stmt: $const176.35.1 = const(int, 0)
2024-06-06 03:46:33,625 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,625 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:33,625 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,625 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:33,625 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:33,625 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,625 - DEBUG - ==== SSA block rewrite pass on 200
2024-06-06 03:46:33,625 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,625 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:33,625 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:33,626 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:33,626 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:33,626 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 396
2024-06-06 03:46:33,626 - DEBUG - ==== SSA block rewrite pass on 204
2024-06-06 03:46:33,626 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,626 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:33,626 - DEBUG - on stmt: jump 212
2024-06-06 03:46:33,626 - DEBUG - ==== SSA block rewrite pass on 396
2024-06-06 03:46:33,626 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,626 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:33,626 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:33,626 - DEBUG - ==== SSA block rewrite pass on 212
2024-06-06 03:46:33,626 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,626 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:33,627 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,627 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,627 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,627 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,627 - DEBUG - find_def var='x0' stmt=$24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,627 - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,627 - DEBUG - on stmt: $28pred = call bool28($24compare_op.6, func=bool28, args=(Var($24compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,627 - DEBUG - on stmt: $phi30.0 = x0
2024-06-06 03:46:33,627 - DEBUG - find_def var='x0' stmt=$phi30.0 = x0
2024-06-06 03:46:33,627 - DEBUG - on stmt: branch $28pred, 213, 253
2024-06-06 03:46:33,627 - DEBUG - ==== SSA block rewrite pass on 213
2024-06-06 03:46:33,627 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,627 - DEBUG - on stmt: $32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,628 - DEBUG - find_def var='x0' stmt=$32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,628 - DEBUG - find_def_from_top label 213
2024-06-06 03:46:33,628 - DEBUG - idom 212 from label 213
2024-06-06 03:46:33,628 - DEBUG - find_def_from_bottom label 212
2024-06-06 03:46:33,628 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,628 - DEBUG - on stmt: $36pred = call bool36($32compare_op.2, func=bool36, args=(Var($32compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,628 - DEBUG - on stmt: branch $36pred, 243, 257
2024-06-06 03:46:33,628 - DEBUG - ==== SSA block rewrite pass on 243
2024-06-06 03:46:33,628 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,628 - DEBUG - on stmt: jump 251
2024-06-06 03:46:33,628 - DEBUG - ==== SSA block rewrite pass on 253
2024-06-06 03:46:33,628 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,628 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,629 - DEBUG - ==== SSA block rewrite pass on 251
2024-06-06 03:46:33,629 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,629 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-06-06 03:46:33,629 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,629 - DEBUG - ==== SSA block rewrite pass on 257
2024-06-06 03:46:33,629 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,629 - DEBUG - on stmt: $const50.1 = const(int, -1)
2024-06-06 03:46:33,629 - DEBUG - on stmt: stencil_index.1 = $const50.1 + index00
2024-06-06 03:46:33,629 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,629 - DEBUG - on stmt: $60unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,629 - DEBUG - on stmt: $68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,629 - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,629 - DEBUG - on stmt: $72pred = call bool72($68compare_op.6, func=bool72, args=(Var($68compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,629 - DEBUG - on stmt: $phi74.0 = x1
2024-06-06 03:46:33,630 - DEBUG - on stmt: branch $72pred, 261, 297
2024-06-06 03:46:33,630 - DEBUG - ==== SSA block rewrite pass on 261
2024-06-06 03:46:33,630 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,630 - DEBUG - on stmt: $76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,630 - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,630 - DEBUG - on stmt: $80pred = call bool80($76compare_op.2, func=bool80, args=(Var($76compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,630 - DEBUG - on stmt: branch $80pred, 287, 301
2024-06-06 03:46:33,630 - DEBUG - ==== SSA block rewrite pass on 287
2024-06-06 03:46:33,630 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,630 - DEBUG - on stmt: jump 295
2024-06-06 03:46:33,630 - DEBUG - ==== SSA block rewrite pass on 297
2024-06-06 03:46:33,630 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,630 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,631 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-06 03:46:33,631 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,631 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-06 03:46:33,631 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,631 - DEBUG - ==== SSA block rewrite pass on 301
2024-06-06 03:46:33,631 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,631 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,631 - DEBUG - on stmt: $94pred = call bool94(zero_pos, func=bool94, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,631 - DEBUG - on stmt: branch $94pred, 305, 309
2024-06-06 03:46:33,631 - DEBUG - ==== SSA block rewrite pass on 305
2024-06-06 03:46:33,631 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,631 - DEBUG - on stmt: $96load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,631 - DEBUG - on stmt: $106load_attr.2 = getattr(value=$96load_global.0, attr=signbit)
2024-06-06 03:46:33,632 - DEBUG - on stmt: $128call.4 = call $106load_attr.2(x0, func=$106load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,632 - DEBUG - find_def var='x0' stmt=$128call.4 = call $106load_attr.2(x0, func=$106load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,632 - DEBUG - find_def_from_top label 305
2024-06-06 03:46:33,632 - DEBUG - idom 301 from label 305
2024-06-06 03:46:33,632 - DEBUG - find_def_from_bottom label 301
2024-06-06 03:46:33,632 - DEBUG - find_def_from_top label 301
2024-06-06 03:46:33,632 - DEBUG - idom 257 from label 301
2024-06-06 03:46:33,632 - DEBUG - find_def_from_bottom label 257
2024-06-06 03:46:33,632 - DEBUG - find_def_from_top label 257
2024-06-06 03:46:33,632 - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 257
2024-06-06 03:46:33,632 - DEBUG - find_def_from_bottom label 253
2024-06-06 03:46:33,632 - DEBUG - find_def_from_top label 253
2024-06-06 03:46:33,633 - DEBUG - idom 212 from label 253
2024-06-06 03:46:33,633 - DEBUG - find_def_from_bottom label 212
2024-06-06 03:46:33,633 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,633 - DEBUG - find_def_from_bottom label 251
2024-06-06 03:46:33,633 - DEBUG - incoming_def x0.1 = const(int, 0)
2024-06-06 03:46:33,633 - DEBUG - find_def_from_bottom label 213
2024-06-06 03:46:33,633 - DEBUG - find_def_from_top label 213
2024-06-06 03:46:33,633 - DEBUG - idom 212 from label 213
2024-06-06 03:46:33,633 - DEBUG - find_def_from_bottom label 212
2024-06-06 03:46:33,633 - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,633 - DEBUG - replaced with: $128call.4 = call $106load_attr.2(x0.2, func=$106load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,633 - DEBUG - on stmt: $136load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,633 - DEBUG - on stmt: $146load_attr.7 = getattr(value=$136load_global.5, attr=signbit)
2024-06-06 03:46:33,633 - DEBUG - on stmt: $168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,634 - DEBUG - on stmt: $176compare_op.10 = $128call.4 != $168call.9
2024-06-06 03:46:33,634 - DEBUG - on stmt: $180return_value.11 = cast(value=$176compare_op.10)
2024-06-06 03:46:33,634 - DEBUG - on stmt: out0[index00] = $180return_value.11
2024-06-06 03:46:33,634 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,634 - DEBUG - ==== SSA block rewrite pass on 309
2024-06-06 03:46:33,634 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,634 - DEBUG - on stmt: $182load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,634 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$182load_global.0, attr=sign)
2024-06-06 03:46:33,634 - DEBUG - on stmt: $214call.4 = call $192load_attr.2(x0, func=$192load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,634 - DEBUG - find_def var='x0' stmt=$214call.4 = call $192load_attr.2(x0, func=$192load_attr.2, args=[Var(x0, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,634 - DEBUG - find_def_from_top label 309
2024-06-06 03:46:33,635 - DEBUG - idom 301 from label 309
2024-06-06 03:46:33,635 - DEBUG - find_def_from_bottom label 301
2024-06-06 03:46:33,635 - DEBUG - find_def_from_top label 301
2024-06-06 03:46:33,635 - DEBUG - idom 257 from label 301
2024-06-06 03:46:33,635 - DEBUG - find_def_from_bottom label 257
2024-06-06 03:46:33,635 - DEBUG - replaced with: $214call.4 = call $192load_attr.2(x0.2, func=$192load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,635 - DEBUG - on stmt: $222load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,635 - DEBUG - on stmt: $232load_attr.7 = getattr(value=$222load_global.5, attr=sign)
2024-06-06 03:46:33,635 - DEBUG - on stmt: $254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,635 - DEBUG - on stmt: $262compare_op.10 = $214call.4 != $254call.9
2024-06-06 03:46:33,635 - DEBUG - on stmt: $266return_value.11 = cast(value=$262compare_op.10)
2024-06-06 03:46:33,635 - DEBUG - on stmt: out0[index00] = $266return_value.11
2024-06-06 03:46:33,635 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,636 - DEBUG - ==== SSA block rewrite pass on 395
2024-06-06 03:46:33,636 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c4320>
2024-06-06 03:46:33,636 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,636 - DEBUG - Fix SSA violator on var x1
2024-06-06 03:46:33,636 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:33,636 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,636 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:33,636 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:33,636 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:33,636 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:33,636 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,636 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:33,636 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,637 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:33,637 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,637 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:33,637 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:33,637 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:33,637 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,637 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,637 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:33,637 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:33,637 - DEBUG - on stmt: $const116.17.1 = const(int, 0)
2024-06-06 03:46:33,637 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:33,637 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,637 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,638 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:33,638 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:33,638 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:33,638 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:33,638 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:33,638 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,638 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:33,638 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:33,638 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,638 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:33,638 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:33,638 - DEBUG - on stmt: $const176.35.1 = const(int, 0)
2024-06-06 03:46:33,638 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,638 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:33,639 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,639 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:33,639 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:33,639 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,639 - DEBUG - ==== SSA block rewrite pass on 200
2024-06-06 03:46:33,639 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,639 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:33,639 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:33,639 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:33,639 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:33,639 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 396
2024-06-06 03:46:33,639 - DEBUG - ==== SSA block rewrite pass on 204
2024-06-06 03:46:33,639 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,640 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:33,640 - DEBUG - on stmt: jump 212
2024-06-06 03:46:33,640 - DEBUG - ==== SSA block rewrite pass on 396
2024-06-06 03:46:33,640 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,640 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:33,640 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:33,640 - DEBUG - ==== SSA block rewrite pass on 212
2024-06-06 03:46:33,640 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,640 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:33,640 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,640 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,640 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,640 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,641 - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,641 - DEBUG - on stmt: $28pred = call bool28($24compare_op.6, func=bool28, args=(Var($24compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,641 - DEBUG - on stmt: $phi30.0 = x0
2024-06-06 03:46:33,641 - DEBUG - on stmt: branch $28pred, 213, 253
2024-06-06 03:46:33,641 - DEBUG - ==== SSA block rewrite pass on 213
2024-06-06 03:46:33,641 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,641 - DEBUG - on stmt: $32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,641 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,641 - DEBUG - on stmt: $36pred = call bool36($32compare_op.2, func=bool36, args=(Var($32compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,641 - DEBUG - on stmt: branch $36pred, 243, 257
2024-06-06 03:46:33,641 - DEBUG - ==== SSA block rewrite pass on 243
2024-06-06 03:46:33,641 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,641 - DEBUG - on stmt: jump 251
2024-06-06 03:46:33,641 - DEBUG - ==== SSA block rewrite pass on 253
2024-06-06 03:46:33,642 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,642 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,642 - DEBUG - ==== SSA block rewrite pass on 251
2024-06-06 03:46:33,642 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,642 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-06-06 03:46:33,642 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,642 - DEBUG - ==== SSA block rewrite pass on 257
2024-06-06 03:46:33,642 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,642 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0.1, audio.py:1146), Var(x0, audio.py:1144)], incoming_blocks=[253, 251, 213])
2024-06-06 03:46:33,642 - DEBUG - on stmt: $const50.1 = const(int, -1)
2024-06-06 03:46:33,642 - DEBUG - on stmt: stencil_index.1 = $const50.1 + index00
2024-06-06 03:46:33,642 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,642 - DEBUG - first assign: x1
2024-06-06 03:46:33,642 - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,643 - DEBUG - on stmt: $60unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,643 - DEBUG - on stmt: $68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,643 - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,643 - DEBUG - on stmt: $72pred = call bool72($68compare_op.6, func=bool72, args=(Var($68compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,643 - DEBUG - on stmt: $phi74.0 = x1
2024-06-06 03:46:33,643 - DEBUG - on stmt: branch $72pred, 261, 297
2024-06-06 03:46:33,643 - DEBUG - ==== SSA block rewrite pass on 261
2024-06-06 03:46:33,643 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,643 - DEBUG - on stmt: $76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,643 - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,643 - DEBUG - on stmt: $80pred = call bool80($76compare_op.2, func=bool80, args=(Var($76compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,643 - DEBUG - on stmt: branch $80pred, 287, 301
2024-06-06 03:46:33,643 - DEBUG - ==== SSA block rewrite pass on 287
2024-06-06 03:46:33,643 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,644 - DEBUG - on stmt: jump 295
2024-06-06 03:46:33,644 - DEBUG - ==== SSA block rewrite pass on 297
2024-06-06 03:46:33,644 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,644 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,644 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-06 03:46:33,644 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,644 - DEBUG - on stmt: x1 = const(int, 0)
2024-06-06 03:46:33,644 - DEBUG - replaced with: x1.1 = const(int, 0)
2024-06-06 03:46:33,644 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,644 - DEBUG - ==== SSA block rewrite pass on 301
2024-06-06 03:46:33,644 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,644 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,644 - DEBUG - on stmt: $94pred = call bool94(zero_pos, func=bool94, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,644 - DEBUG - on stmt: branch $94pred, 305, 309
2024-06-06 03:46:33,645 - DEBUG - ==== SSA block rewrite pass on 305
2024-06-06 03:46:33,645 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,645 - DEBUG - on stmt: $96load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,645 - DEBUG - on stmt: $106load_attr.2 = getattr(value=$96load_global.0, attr=signbit)
2024-06-06 03:46:33,645 - DEBUG - on stmt: $128call.4 = call $106load_attr.2(x0.2, func=$106load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,645 - DEBUG - on stmt: $136load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,645 - DEBUG - on stmt: $146load_attr.7 = getattr(value=$136load_global.5, attr=signbit)
2024-06-06 03:46:33,645 - DEBUG - on stmt: $168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,645 - DEBUG - on stmt: $176compare_op.10 = $128call.4 != $168call.9
2024-06-06 03:46:33,645 - DEBUG - on stmt: $180return_value.11 = cast(value=$176compare_op.10)
2024-06-06 03:46:33,645 - DEBUG - on stmt: out0[index00] = $180return_value.11
2024-06-06 03:46:33,645 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,645 - DEBUG - ==== SSA block rewrite pass on 309
2024-06-06 03:46:33,646 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,646 - DEBUG - on stmt: $182load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,646 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$182load_global.0, attr=sign)
2024-06-06 03:46:33,646 - DEBUG - on stmt: $214call.4 = call $192load_attr.2(x0.2, func=$192load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,646 - DEBUG - on stmt: $222load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,646 - DEBUG - on stmt: $232load_attr.7 = getattr(value=$222load_global.5, attr=sign)
2024-06-06 03:46:33,646 - DEBUG - on stmt: $254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,646 - DEBUG - on stmt: $262compare_op.10 = $214call.4 != $254call.9
2024-06-06 03:46:33,646 - DEBUG - on stmt: $266return_value.11 = cast(value=$262compare_op.10)
2024-06-06 03:46:33,646 - DEBUG - on stmt: out0[index00] = $266return_value.11
2024-06-06 03:46:33,646 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,646 - DEBUG - ==== SSA block rewrite pass on 395
2024-06-06 03:46:33,646 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22c4470>
2024-06-06 03:46:33,647 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,647 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {257: [<numba.core.ir.Assign object at 0x7fe9d22c6420>],
             295: [<numba.core.ir.Assign object at 0x7fe9d22c5d90>]})
2024-06-06 03:46:33,647 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:33,647 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,647 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:33,647 - DEBUG - on stmt: threshold = arg(1, name=threshold)
2024-06-06 03:46:33,647 - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2024-06-06 03:46:33,647 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:33,647 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,647 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:33,647 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,647 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:33,647 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,648 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:33,648 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:33,648 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:33,648 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,648 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,648 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:33,648 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:33,648 - DEBUG - on stmt: $const116.17.1 = const(int, 0)
2024-06-06 03:46:33,648 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:33,648 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:33,648 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,648 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:33,648 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:33,649 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:33,649 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:33,649 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:33,649 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,649 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:33,649 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:33,649 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,649 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:33,649 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:33,649 - DEBUG - on stmt: $const176.35.1 = const(int, 0)
2024-06-06 03:46:33,649 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,649 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:33,649 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,650 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:33,650 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:33,650 - DEBUG - on stmt: jump 200
2024-06-06 03:46:33,650 - DEBUG - ==== SSA block rewrite pass on 200
2024-06-06 03:46:33,650 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,650 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:33,650 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:33,650 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:33,650 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:33,650 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 396
2024-06-06 03:46:33,650 - DEBUG - ==== SSA block rewrite pass on 204
2024-06-06 03:46:33,650 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,650 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:33,651 - DEBUG - on stmt: jump 212
2024-06-06 03:46:33,651 - DEBUG - ==== SSA block rewrite pass on 396
2024-06-06 03:46:33,651 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,651 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:33,651 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:33,651 - DEBUG - ==== SSA block rewrite pass on 212
2024-06-06 03:46:33,651 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,651 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:33,651 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:33,651 - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:33,651 - DEBUG - on stmt: $16unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,651 - DEBUG - on stmt: $24compare_op.6 = $16unary_negative.4 <= x0
2024-06-06 03:46:33,651 - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,651 - DEBUG - on stmt: $28pred = call bool28($24compare_op.6, func=bool28, args=(Var($24compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,652 - DEBUG - on stmt: $phi30.0 = x0
2024-06-06 03:46:33,652 - DEBUG - on stmt: branch $28pred, 213, 253
2024-06-06 03:46:33,652 - DEBUG - ==== SSA block rewrite pass on 213
2024-06-06 03:46:33,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,652 - DEBUG - on stmt: $32compare_op.2 = x0 <= threshold
2024-06-06 03:46:33,652 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,652 - DEBUG - on stmt: $36pred = call bool36($32compare_op.2, func=bool36, args=(Var($32compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,652 - DEBUG - on stmt: branch $36pred, 243, 257
2024-06-06 03:46:33,652 - DEBUG - ==== SSA block rewrite pass on 243
2024-06-06 03:46:33,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,652 - DEBUG - on stmt: jump 251
2024-06-06 03:46:33,652 - DEBUG - ==== SSA block rewrite pass on 253
2024-06-06 03:46:33,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,653 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,653 - DEBUG - ==== SSA block rewrite pass on 251
2024-06-06 03:46:33,653 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,653 - DEBUG - on stmt: x0.1 = const(int, 0)
2024-06-06 03:46:33,653 - DEBUG - on stmt: jump 257
2024-06-06 03:46:33,653 - DEBUG - ==== SSA block rewrite pass on 257
2024-06-06 03:46:33,653 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,653 - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1144), Var(x0.1, audio.py:1146), Var(x0, audio.py:1144)], incoming_blocks=[253, 251, 213])
2024-06-06 03:46:33,653 - DEBUG - on stmt: $const50.1 = const(int, -1)
2024-06-06 03:46:33,653 - DEBUG - on stmt: stencil_index.1 = $const50.1 + index00
2024-06-06 03:46:33,653 - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,653 - DEBUG - on stmt: $60unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2024-06-06 03:46:33,653 - DEBUG - on stmt: $68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,653 - DEBUG - find_def var='x1' stmt=$68compare_op.6 = $60unary_negative.4 <= x1
2024-06-06 03:46:33,654 - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,654 - DEBUG - on stmt: $72pred = call bool72($68compare_op.6, func=bool72, args=(Var($68compare_op.6, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,654 - DEBUG - on stmt: $phi74.0 = x1
2024-06-06 03:46:33,654 - DEBUG - find_def var='x1' stmt=$phi74.0 = x1
2024-06-06 03:46:33,654 - DEBUG - on stmt: branch $72pred, 261, 297
2024-06-06 03:46:33,654 - DEBUG - ==== SSA block rewrite pass on 261
2024-06-06 03:46:33,654 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,654 - DEBUG - on stmt: $76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,654 - DEBUG - find_def var='x1' stmt=$76compare_op.2 = x1 <= threshold
2024-06-06 03:46:33,654 - DEBUG - find_def_from_top label 261
2024-06-06 03:46:33,654 - DEBUG - idom 257 from label 261
2024-06-06 03:46:33,654 - DEBUG - find_def_from_bottom label 257
2024-06-06 03:46:33,654 - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,654 - DEBUG - on stmt: $80pred = call bool80($76compare_op.2, func=bool80, args=(Var($76compare_op.2, audio.py:1149),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,655 - DEBUG - on stmt: branch $80pred, 287, 301
2024-06-06 03:46:33,655 - DEBUG - ==== SSA block rewrite pass on 287
2024-06-06 03:46:33,655 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,655 - DEBUG - on stmt: jump 295
2024-06-06 03:46:33,655 - DEBUG - ==== SSA block rewrite pass on 297
2024-06-06 03:46:33,655 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,655 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,655 - DEBUG - ==== SSA block rewrite pass on 295
2024-06-06 03:46:33,655 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,655 - DEBUG - on stmt: x1.1 = const(int, 0)
2024-06-06 03:46:33,655 - DEBUG - on stmt: jump 301
2024-06-06 03:46:33,655 - DEBUG - ==== SSA block rewrite pass on 301
2024-06-06 03:46:33,655 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,655 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:33,656 - DEBUG - on stmt: $94pred = call bool94(zero_pos, func=bool94, args=(Var(zero_pos, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,656 - DEBUG - on stmt: branch $94pred, 305, 309
2024-06-06 03:46:33,656 - DEBUG - ==== SSA block rewrite pass on 305
2024-06-06 03:46:33,656 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,656 - DEBUG - on stmt: $96load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,656 - DEBUG - on stmt: $106load_attr.2 = getattr(value=$96load_global.0, attr=signbit)
2024-06-06 03:46:33,656 - DEBUG - on stmt: $128call.4 = call $106load_attr.2(x0.2, func=$106load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,656 - DEBUG - on stmt: $136load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,656 - DEBUG - on stmt: $146load_attr.7 = getattr(value=$136load_global.5, attr=signbit)
2024-06-06 03:46:33,656 - DEBUG - on stmt: $168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,656 - DEBUG - find_def var='x1' stmt=$168call.9 = call $146load_attr.7(x1, func=$146load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,656 - DEBUG - find_def_from_top label 305
2024-06-06 03:46:33,657 - DEBUG - idom 301 from label 305
2024-06-06 03:46:33,657 - DEBUG - find_def_from_bottom label 301
2024-06-06 03:46:33,657 - DEBUG - find_def_from_top label 301
2024-06-06 03:46:33,657 - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 301
2024-06-06 03:46:33,657 - DEBUG - find_def_from_bottom label 297
2024-06-06 03:46:33,657 - DEBUG - find_def_from_top label 297
2024-06-06 03:46:33,657 - DEBUG - idom 257 from label 297
2024-06-06 03:46:33,657 - DEBUG - find_def_from_bottom label 257
2024-06-06 03:46:33,657 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,657 - DEBUG - find_def_from_bottom label 261
2024-06-06 03:46:33,657 - DEBUG - find_def_from_top label 261
2024-06-06 03:46:33,657 - DEBUG - idom 257 from label 261
2024-06-06 03:46:33,657 - DEBUG - find_def_from_bottom label 257
2024-06-06 03:46:33,657 - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:33,657 - DEBUG - find_def_from_bottom label 295
2024-06-06 03:46:33,658 - DEBUG - incoming_def x1.1 = const(int, 0)
2024-06-06 03:46:33,658 - DEBUG - replaced with: $168call.9 = call $146load_attr.7(x1.2, func=$146load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,658 - DEBUG - on stmt: $176compare_op.10 = $128call.4 != $168call.9
2024-06-06 03:46:33,658 - DEBUG - on stmt: $180return_value.11 = cast(value=$176compare_op.10)
2024-06-06 03:46:33,658 - DEBUG - on stmt: out0[index00] = $180return_value.11
2024-06-06 03:46:33,658 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,658 - DEBUG - ==== SSA block rewrite pass on 309
2024-06-06 03:46:33,658 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,658 - DEBUG - on stmt: $182load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,658 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$182load_global.0, attr=sign)
2024-06-06 03:46:33,658 - DEBUG - on stmt: $214call.4 = call $192load_attr.2(x0.2, func=$192load_attr.2, args=[Var(x0.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,658 - DEBUG - on stmt: $222load_global.5 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:33,659 - DEBUG - on stmt: $232load_attr.7 = getattr(value=$222load_global.5, attr=sign)
2024-06-06 03:46:33,659 - DEBUG - on stmt: $254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,659 - DEBUG - find_def var='x1' stmt=$254call.9 = call $232load_attr.7(x1, func=$232load_attr.7, args=[Var(x1, audio.py:1148)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,659 - DEBUG - find_def_from_top label 309
2024-06-06 03:46:33,659 - DEBUG - idom 301 from label 309
2024-06-06 03:46:33,659 - DEBUG - find_def_from_bottom label 301
2024-06-06 03:46:33,659 - DEBUG - replaced with: $254call.9 = call $232load_attr.7(x1.2, func=$232load_attr.7, args=[Var(x1.2, audio.py:1153)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:33,659 - DEBUG - on stmt: $262compare_op.10 = $214call.4 != $254call.9
2024-06-06 03:46:33,659 - DEBUG - on stmt: $266return_value.11 = cast(value=$262compare_op.10)
2024-06-06 03:46:33,659 - DEBUG - on stmt: out0[index00] = $266return_value.11
2024-06-06 03:46:33,659 - DEBUG - on stmt: jump 395
2024-06-06 03:46:33,659 - DEBUG - ==== SSA block rewrite pass on 395
2024-06-06 03:46:33,659 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22c7d70>
2024-06-06 03:46:33,660 - DEBUG - on stmt: jump 200
2024-06-06 03:46:34,522 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1039)
           2	RESUME(arg=0, lineno=1039)
           4	LOAD_FAST(arg=0, lineno=1042)
           6	LOAD_CONST(arg=1, lineno=1042)
           8	BINARY_SUBSCR(arg=None, lineno=1042)
          12	LOAD_FAST(arg=0, lineno=1042)
          14	LOAD_CONST(arg=2, lineno=1042)
          16	BINARY_SUBSCR(arg=None, lineno=1042)
          20	COMPARE_OP(arg=68, lineno=1042)
          24	LOAD_FAST(arg=0, lineno=1042)
          26	LOAD_CONST(arg=1, lineno=1042)
          28	BINARY_SUBSCR(arg=None, lineno=1042)
          32	LOAD_FAST(arg=0, lineno=1042)
          34	LOAD_CONST(arg=3, lineno=1042)
          36	BINARY_SUBSCR(arg=None, lineno=1042)
          40	COMPARE_OP(arg=92, lineno=1042)
          44	BINARY_OP(arg=1, lineno=1042)
          48	RETURN_VALUE(arg=None, lineno=1042)
2024-06-06 03:46:34,522 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:34,523 - DEBUG - stack: []
2024-06-06 03:46:34,523 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:34,523 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1039)
2024-06-06 03:46:34,523 - DEBUG - stack []
2024-06-06 03:46:34,523 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1039)
2024-06-06 03:46:34,523 - DEBUG - stack []
2024-06-06 03:46:34,523 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1042)
2024-06-06 03:46:34,523 - DEBUG - stack []
2024-06-06 03:46:34,523 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1042)
2024-06-06 03:46:34,523 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:34,523 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-06-06 03:46:34,524 - DEBUG - stack ['$x4.0', '$const6.1']
2024-06-06 03:46:34,524 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1042)
2024-06-06 03:46:34,524 - DEBUG - stack ['$8binary_subscr.2']
2024-06-06 03:46:34,524 - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1042)
2024-06-06 03:46:34,524 - DEBUG - stack ['$8binary_subscr.2', '$x12.3']
2024-06-06 03:46:34,524 - DEBUG - dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-06-06 03:46:34,524 - DEBUG - stack ['$8binary_subscr.2', '$x12.3', '$const14.4']
2024-06-06 03:46:34,524 - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=68, lineno=1042)
2024-06-06 03:46:34,524 - DEBUG - stack ['$8binary_subscr.2', '$16binary_subscr.5']
2024-06-06 03:46:34,524 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1042)
2024-06-06 03:46:34,524 - DEBUG - stack ['$20compare_op.6']
2024-06-06 03:46:34,525 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1042)
2024-06-06 03:46:34,525 - DEBUG - stack ['$20compare_op.6', '$x24.7']
2024-06-06 03:46:34,525 - DEBUG - dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-06-06 03:46:34,525 - DEBUG - stack ['$20compare_op.6', '$x24.7', '$const26.8']
2024-06-06 03:46:34,525 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1042)
2024-06-06 03:46:34,525 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9']
2024-06-06 03:46:34,525 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1042)
2024-06-06 03:46:34,525 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']
2024-06-06 03:46:34,525 - DEBUG - dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1042)
2024-06-06 03:46:34,525 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']
2024-06-06 03:46:34,525 - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=92, lineno=1042)
2024-06-06 03:46:34,525 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']
2024-06-06 03:46:34,525 - DEBUG - dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1042)
2024-06-06 03:46:34,525 - DEBUG - stack ['$20compare_op.6', '$40compare_op.13']
2024-06-06 03:46:34,526 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1042)
2024-06-06 03:46:34,526 - DEBUG - stack ['$binop_and_44.14']
2024-06-06 03:46:34,526 - DEBUG - end state. edges=[]
2024-06-06 03:46:34,526 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:34,526 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:34,526 - DEBUG - defmap: {}
2024-06-06 03:46:34,526 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:34,526 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:34,526 - DEBUG - keep phismap: {}
2024-06-06 03:46:34,526 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:34,526 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:34,526 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:34,527 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const14.4 = const(int, -1)              ['$const14.4']
    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']
    $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']
    $const26.8 = const(int, 0)               ['$const26.8']
    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']
    $const34.11 = const(int, 1)              ['$const34.11']
    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']
    $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']
    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']
    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']
    return $48return_value.15                ['$48return_value.15']

2024-06-06 03:46:34,528 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1045)
           2	RESUME(arg=0, lineno=1045)
           4	LOAD_FAST(arg=0, lineno=1048)
           6	LOAD_CONST(arg=1, lineno=1048)
           8	BINARY_SUBSCR(arg=None, lineno=1048)
          12	LOAD_FAST(arg=0, lineno=1048)
          14	LOAD_CONST(arg=2, lineno=1048)
          16	BINARY_SUBSCR(arg=None, lineno=1048)
          20	COMPARE_OP(arg=2, lineno=1048)
          24	LOAD_FAST(arg=0, lineno=1048)
          26	LOAD_CONST(arg=1, lineno=1048)
          28	BINARY_SUBSCR(arg=None, lineno=1048)
          32	LOAD_FAST(arg=0, lineno=1048)
          34	LOAD_CONST(arg=3, lineno=1048)
          36	BINARY_SUBSCR(arg=None, lineno=1048)
          40	COMPARE_OP(arg=26, lineno=1048)
          44	BINARY_OP(arg=1, lineno=1048)
          48	RETURN_VALUE(arg=None, lineno=1048)
2024-06-06 03:46:34,528 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:34,528 - DEBUG - stack: []
2024-06-06 03:46:34,528 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:34,528 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1045)
2024-06-06 03:46:34,529 - DEBUG - stack []
2024-06-06 03:46:34,529 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1045)
2024-06-06 03:46:34,529 - DEBUG - stack []
2024-06-06 03:46:34,529 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1048)
2024-06-06 03:46:34,529 - DEBUG - stack []
2024-06-06 03:46:34,529 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1048)
2024-06-06 03:46:34,529 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:34,529 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-06-06 03:46:34,529 - DEBUG - stack ['$x4.0', '$const6.1']
2024-06-06 03:46:34,529 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1048)
2024-06-06 03:46:34,529 - DEBUG - stack ['$8binary_subscr.2']
2024-06-06 03:46:34,529 - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1048)
2024-06-06 03:46:34,529 - DEBUG - stack ['$8binary_subscr.2', '$x12.3']
2024-06-06 03:46:34,529 - DEBUG - dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-06-06 03:46:34,530 - DEBUG - stack ['$8binary_subscr.2', '$x12.3', '$const14.4']
2024-06-06 03:46:34,530 - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=1048)
2024-06-06 03:46:34,530 - DEBUG - stack ['$8binary_subscr.2', '$16binary_subscr.5']
2024-06-06 03:46:34,530 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=1048)
2024-06-06 03:46:34,530 - DEBUG - stack ['$20compare_op.6']
2024-06-06 03:46:34,530 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1048)
2024-06-06 03:46:34,530 - DEBUG - stack ['$20compare_op.6', '$x24.7']
2024-06-06 03:46:34,530 - DEBUG - dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-06-06 03:46:34,530 - DEBUG - stack ['$20compare_op.6', '$x24.7', '$const26.8']
2024-06-06 03:46:34,530 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=1048)
2024-06-06 03:46:34,530 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9']
2024-06-06 03:46:34,530 - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=1048)
2024-06-06 03:46:34,531 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10']
2024-06-06 03:46:34,531 - DEBUG - dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=1048)
2024-06-06 03:46:34,531 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$x32.10', '$const34.11']
2024-06-06 03:46:34,531 - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=26, lineno=1048)
2024-06-06 03:46:34,531 - DEBUG - stack ['$20compare_op.6', '$28binary_subscr.9', '$36binary_subscr.12']
2024-06-06 03:46:34,531 - DEBUG - dispatch pc=44, inst=BINARY_OP(arg=1, lineno=1048)
2024-06-06 03:46:34,531 - DEBUG - stack ['$20compare_op.6', '$40compare_op.13']
2024-06-06 03:46:34,531 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=1048)
2024-06-06 03:46:34,531 - DEBUG - stack ['$binop_and_44.14']
2024-06-06 03:46:34,531 - DEBUG - end state. edges=[]
2024-06-06 03:46:34,531 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:34,531 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:34,531 - DEBUG - defmap: {}
2024-06-06 03:46:34,532 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:34,532 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:34,532 - DEBUG - keep phismap: {}
2024-06-06 03:46:34,532 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:34,532 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:34,532 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'res': '$x12.3'}), (14, {'res': '$const14.4'}), (16, {'index': '$const14.4', 'target': '$x12.3', 'res': '$16binary_subscr.5'}), (20, {'lhs': '$8binary_subscr.2', 'rhs': '$16binary_subscr.5', 'res': '$20compare_op.6'}), (24, {'res': '$x24.7'}), (26, {'res': '$const26.8'}), (28, {'index': '$const26.8', 'target': '$x24.7', 'res': '$28binary_subscr.9'}), (32, {'res': '$x32.10'}), (34, {'res': '$const34.11'}), (36, {'index': '$const34.11', 'target': '$x32.10', 'res': '$36binary_subscr.12'}), (40, {'lhs': '$28binary_subscr.9', 'rhs': '$36binary_subscr.12', 'res': '$40compare_op.13'}), (44, {'op': '&', 'lhs': '$20compare_op.6', 'rhs': '$40compare_op.13', 'res': '$binop_and_44.14'}), (48, {'retval': '$binop_and_44.14', 'castval': '$48return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:34,533 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $const14.4 = const(int, -1)              ['$const14.4']
    $16binary_subscr.5 = getitem(value=x, index=$const14.4, fn=<built-in function getitem>) ['$16binary_subscr.5', '$const14.4', 'x']
    $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5 ['$16binary_subscr.5', '$20compare_op.6', '$8binary_subscr.2']
    $const26.8 = const(int, 0)               ['$const26.8']
    $28binary_subscr.9 = getitem(value=x, index=$const26.8, fn=<built-in function getitem>) ['$28binary_subscr.9', '$const26.8', 'x']
    $const34.11 = const(int, 1)              ['$const34.11']
    $36binary_subscr.12 = getitem(value=x, index=$const34.11, fn=<built-in function getitem>) ['$36binary_subscr.12', '$const34.11', 'x']
    $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12 ['$28binary_subscr.9', '$36binary_subscr.12', '$40compare_op.13']
    $binop_and_44.14 = $20compare_op.6 & $40compare_op.13 ['$20compare_op.6', '$40compare_op.13', '$binop_and_44.14']
    $48return_value.15 = cast(value=$binop_and_44.14) ['$48return_value.15', '$binop_and_44.14']
    return $48return_value.15                ['$48return_value.15']

2024-06-06 03:46:34,535 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          14	LOAD_FAST(arg=0, lineno=1065)
          16	CALL(arg=1, lineno=1065)
          24	LOAD_FAST(arg=1, lineno=1065)
          26	LOAD_CONST(arg=1, lineno=1065)
          28	LOAD_CONST(arg=1, lineno=1065)
          30	STORE_SLICE(arg=None, lineno=1065)
          32	RETURN_CONST(arg=1, lineno=1065)
2024-06-06 03:46:34,535 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:34,535 - DEBUG - stack: []
2024-06-06 03:46:34,536 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:34,536 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-06-06 03:46:34,536 - DEBUG - stack []
2024-06-06 03:46:34,536 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-06-06 03:46:34,536 - DEBUG - stack []
2024-06-06 03:46:34,536 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-06-06 03:46:34,536 - DEBUG - stack []
2024-06-06 03:46:34,536 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=1065)
2024-06-06 03:46:34,536 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:34,536 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=1065)
2024-06-06 03:46:34,536 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2']
2024-06-06 03:46:34,537 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1065)
2024-06-06 03:46:34,537 - DEBUG - stack ['$16call.3']
2024-06-06 03:46:34,537 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-06 03:46:34,537 - DEBUG - stack ['$16call.3', '$y24.4']
2024-06-06 03:46:34,537 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-06 03:46:34,537 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5']
2024-06-06 03:46:34,537 - DEBUG - dispatch pc=30, inst=STORE_SLICE(arg=None, lineno=1065)
2024-06-06 03:46:34,537 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5', '$const28.6']
2024-06-06 03:46:34,537 - DEBUG - dispatch pc=32, inst=RETURN_CONST(arg=1, lineno=1065)
2024-06-06 03:46:34,537 - DEBUG - stack []
2024-06-06 03:46:34,537 - DEBUG - end state. edges=[]
2024-06-06 03:46:34,537 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:34,538 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:34,538 - DEBUG - defmap: {}
2024-06-06 03:46:34,538 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:34,538 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:34,538 - DEBUG - keep phismap: {}
2024-06-06 03:46:34,538 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:34,538 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:34,538 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$x14.2'}), (16, {'func': '$4load_global.0', 'args': ['$x14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'res': '$y24.4'}), (26, {'res': '$const26.5'}), (28, {'res': '$const28.6'}), (30, {'start': '$const26.5', 'end': '$const28.6', 'container': '$y24.4', 'value': '$16call.3', 'res': '$30store_slice.8', 'slicevar': '$30store_slice.7'}), (32, {'retval': '$const32.9', 'castval': '$32return_const.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:34,539 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f215e0>) ['$4load_global.0']
    $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$16call.3', '$4load_global.0', 'x']
    $const26.5 = const(NoneType, None)       ['$const26.5']
    $const28.6 = const(NoneType, None)       ['$const28.6']
    $30store_slice.7 = global(slice: <class 'slice'>) ['$30store_slice.7']
    $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1065), Var($const28.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$30store_slice.7', '$30store_slice.8', '$const26.5', '$const28.6']
    y[$30store_slice.8] = $16call.3          ['$16call.3', '$30store_slice.8', 'y']
    $const32.9 = const(NoneType, None)       ['$const32.9']
    $32return_const.10 = cast(value=$const32.9) ['$32return_const.10', '$const32.9']
    return $32return_const.10                ['$32return_const.10']

2024-06-06 03:46:34,545 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:34,545 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f19610>
2024-06-06 03:46:34,545 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:34,545 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-06 03:46:34,545 - DEBUG - on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f215e0>)
2024-06-06 03:46:34,545 - DEBUG - on stmt: $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,545 - DEBUG - on stmt: $const26.5 = const(NoneType, None)
2024-06-06 03:46:34,545 - DEBUG - on stmt: $const28.6 = const(NoneType, None)
2024-06-06 03:46:34,545 - DEBUG - on stmt: $30store_slice.7 = global(slice: <class 'slice'>)
2024-06-06 03:46:34,546 - DEBUG - on stmt: $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1065), Var($const28.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,546 - DEBUG - on stmt: y[slice(None, None, None)] = $16call.3
2024-06-06 03:46:34,546 - DEBUG - on stmt: $const32.9 = const(NoneType, None)
2024-06-06 03:46:34,546 - DEBUG - on stmt: $32return_const.10 = cast(value=$const32.9)
2024-06-06 03:46:34,546 - DEBUG - on stmt: return $32return_const.10
2024-06-06 03:46:34,546 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16call.3': [(<numba.core.ir.Assign object at 0x7fe9d1f1a030>,
                            0)],
             '$30store_slice.7': [(<numba.core.ir.Assign object at 0x7fe9d1f1b4d0>,
                                   0)],
             '$30store_slice.8': [(<numba.core.ir.Assign object at 0x7fe9d1f19760>,
                                   0)],
             '$32return_const.10': [(<numba.core.ir.Assign object at 0x7fe9d1f18ef0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d1f19d30>,
                                  0)],
             '$const26.5': [(<numba.core.ir.Assign object at 0x7fe9d1f199a0>,
                             0)],
             '$const28.6': [(<numba.core.ir.Assign object at 0x7fe9d1f19ac0>,
                             0)],
             '$const32.9': [(<numba.core.ir.Assign object at 0x7fe9d1f19010>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9d1f19e80>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7fe9d1f19670>, 0)]})
2024-06-06 03:46:34,546 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d1f19610>
2024-06-06 03:46:34,563 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=1, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=1, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	KW_NAMES(arg=1, lineno=3)
          92	CALL(arg=2, lineno=3)
         100	STORE_FAST(arg=2, lineno=3)
         102	LOAD_CONST(arg=2, lineno=4)
         104	LOAD_FAST(arg=2, lineno=4)
         106	LOAD_CONST(arg=0, lineno=4)
         108	LOAD_CONST(arg=3, lineno=4)
         110	STORE_SLICE(arg=None, lineno=4)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_FAST(arg=2, lineno=5)
         116	LOAD_CONST(arg=4, lineno=5)
         118	LOAD_CONST(arg=0, lineno=5)
         120	STORE_SLICE(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         132	LOAD_GLOBAL(arg=11, lineno=6)
         142	LOAD_CONST(arg=2, lineno=6)
         144	LOAD_CONST(arg=4, lineno=6)
         146	CALL(arg=2, lineno=6)
         154	UNARY_NEGATIVE(arg=None, lineno=6)
         156	LOAD_FAST(arg=1, lineno=6)
         158	LOAD_CONST(arg=2, lineno=6)
         160	BINARY_SUBSCR(arg=None, lineno=6)
         164	LOAD_GLOBAL(arg=13, lineno=6)
         174	LOAD_CONST(arg=2, lineno=6)
         176	LOAD_CONST(arg=3, lineno=6)
         178	CALL(arg=2, lineno=6)
         186	BINARY_OP(arg=10, lineno=6)
         190	CALL(arg=2, lineno=6)
         198	GET_ITER(arg=None, lineno=6)
>        200	FOR_ITER(arg=4, lineno=6)
         204	STORE_FAST(arg=3, lineno=6)
         206	LOAD_CONST(arg=2, lineno=7)
         208	STORE_FAST(arg=4, lineno=7)
         210	JUMP_BACKWARD(arg=6, lineno=7)
>        212	END_FOR(arg=None, lineno=6)
         214	LOAD_FAST(arg=2, lineno=8)
         216	RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:34,563 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:34,563 - DEBUG - stack: []
2024-06-06 03:46:34,564 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:34,564 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-06 03:46:34,564 - DEBUG - stack []
2024-06-06 03:46:34,564 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-06 03:46:34,564 - DEBUG - stack []
2024-06-06 03:46:34,564 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-06 03:46:34,564 - DEBUG - stack []
2024-06-06 03:46:34,564 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-06 03:46:34,564 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:34,565 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=1, lineno=2)
2024-06-06 03:46:34,565 - DEBUG - stack ['$6load_attr.1']
2024-06-06 03:46:34,565 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:34,565 - DEBUG - stack []
2024-06-06 03:46:34,565 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2024-06-06 03:46:34,565 - DEBUG - stack ['$28load_global.2']
2024-06-06 03:46:34,565 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-06 03:46:34,565 - DEBUG - stack ['$null$38.3', '$38load_attr.4']
2024-06-06 03:46:34,565 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:34,565 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5']
2024-06-06 03:46:34,566 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2024-06-06 03:46:34,566 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$60load_global.6']
2024-06-06 03:46:34,566 - DEBUG - dispatch pc=90, inst=KW_NAMES(arg=1, lineno=3)
2024-06-06 03:46:34,566 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:34,566 - DEBUG - dispatch pc=92, inst=CALL(arg=2, lineno=3)
2024-06-06 03:46:34,566 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:34,566 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=3)
2024-06-06 03:46:34,566 - DEBUG - stack ['$92call.8']
2024-06-06 03:46:34,566 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-06 03:46:34,566 - DEBUG - stack []
2024-06-06 03:46:34,566 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-06 03:46:34,566 - DEBUG - stack ['$const102.9']
2024-06-06 03:46:34,566 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-06 03:46:34,567 - DEBUG - stack ['$const102.9', '$out0104.10']
2024-06-06 03:46:34,567 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-06 03:46:34,567 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11']
2024-06-06 03:46:34,567 - DEBUG - dispatch pc=110, inst=STORE_SLICE(arg=None, lineno=4)
2024-06-06 03:46:34,567 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11', '$const108.12']
2024-06-06 03:46:34,567 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-06 03:46:34,567 - DEBUG - stack []
2024-06-06 03:46:34,567 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-06 03:46:34,567 - DEBUG - stack ['$const112.15']
2024-06-06 03:46:34,567 - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-06 03:46:34,567 - DEBUG - stack ['$const112.15', '$out0114.16']
2024-06-06 03:46:34,567 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-06 03:46:34,567 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17']
2024-06-06 03:46:34,567 - DEBUG - dispatch pc=120, inst=STORE_SLICE(arg=None, lineno=5)
2024-06-06 03:46:34,568 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17', '$const118.18']
2024-06-06 03:46:34,568 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-06 03:46:34,568 - DEBUG - stack []
2024-06-06 03:46:34,568 - DEBUG - dispatch pc=132, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-06 03:46:34,568 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-06 03:46:34,568 - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:34,568 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23']
2024-06-06 03:46:34,568 - DEBUG - dispatch pc=144, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-06 03:46:34,568 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25']
2024-06-06 03:46:34,568 - DEBUG - dispatch pc=146, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:34,568 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25', '$const144.26']
2024-06-06 03:46:34,568 - DEBUG - dispatch pc=154, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-06 03:46:34,568 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$146call.27']
2024-06-06 03:46:34,569 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-06 03:46:34,569 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28']
2024-06-06 03:46:34,569 - DEBUG - dispatch pc=158, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:34,569 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29']
2024-06-06 03:46:34,569 - DEBUG - dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-06 03:46:34,569 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29', '$const158.30']
2024-06-06 03:46:34,569 - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-06 03:46:34,569 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31']
2024-06-06 03:46:34,569 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:34,569 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32']
2024-06-06 03:46:34,569 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-06 03:46:34,569 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34']
2024-06-06 03:46:34,569 - DEBUG - dispatch pc=178, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:34,569 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34', '$const176.35']
2024-06-06 03:46:34,570 - DEBUG - dispatch pc=186, inst=BINARY_OP(arg=10, lineno=6)
2024-06-06 03:46:34,570 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$178call.36']
2024-06-06 03:46:34,570 - DEBUG - dispatch pc=190, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:34,570 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$binop_sub186.37']
2024-06-06 03:46:34,570 - DEBUG - dispatch pc=198, inst=GET_ITER(arg=None, lineno=6)
2024-06-06 03:46:34,570 - DEBUG - stack ['$190call.38']
2024-06-06 03:46:34,570 - DEBUG - end state. edges=[Edge(pc=200, stack=('$198get_iter.39',), blockstack=(), npush=0)]
2024-06-06 03:46:34,570 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:34,570 - DEBUG - stack: ['$phi200.0']
2024-06-06 03:46:34,570 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=1)
2024-06-06 03:46:34,570 - DEBUG - dispatch pc=200, inst=FOR_ITER(arg=4, lineno=6)
2024-06-06 03:46:34,570 - DEBUG - stack ['$phi200.0']
2024-06-06 03:46:34,571 - DEBUG - end state. edges=[Edge(pc=212, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0), Edge(pc=204, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:34,571 - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:34,571 - DEBUG - stack: ['$phi212.0', '$phi212.1']
2024-06-06 03:46:34,571 - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=2)
2024-06-06 03:46:34,571 - DEBUG - dispatch pc=212, inst=END_FOR(arg=None, lineno=6)
2024-06-06 03:46:34,571 - DEBUG - stack ['$phi212.0', '$phi212.1']
2024-06-06 03:46:34,571 - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-06 03:46:34,571 - DEBUG - stack []
2024-06-06 03:46:34,571 - DEBUG - dispatch pc=216, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:34,571 - DEBUG - stack ['$out0214.2']
2024-06-06 03:46:34,571 - DEBUG - end state. edges=[]
2024-06-06 03:46:34,571 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:34,571 - DEBUG - stack: ['$phi204.0', '$phi204.1']
2024-06-06 03:46:34,571 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=2)
2024-06-06 03:46:34,572 - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=3, lineno=6)
2024-06-06 03:46:34,572 - DEBUG - stack ['$phi204.0', '$phi204.1']
2024-06-06 03:46:34,572 - DEBUG - dispatch pc=206, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-06 03:46:34,572 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:34,572 - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=4, lineno=7)
2024-06-06 03:46:34,572 - DEBUG - stack ['$phi204.0', '$const206.2']
2024-06-06 03:46:34,572 - DEBUG - dispatch pc=210, inst=JUMP_BACKWARD(arg=6, lineno=7)
2024-06-06 03:46:34,572 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:34,572 - DEBUG - end state. edges=[Edge(pc=200, stack=('$phi204.0',), blockstack=(), npush=0)]
2024-06-06 03:46:34,572 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:34,572 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:34,572 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=1): {'$phi200.0'},
             State(pc_initial=204 nstack_initial=2): {'$phi204.1'},
             State(pc_initial=212 nstack_initial=2): set()})
2024-06-06 03:46:34,573 - DEBUG - defmap: {'$phi200.0': State(pc_initial=0 nstack_initial=0),
 '$phi204.1': State(pc_initial=200 nstack_initial=1),
 '$phi212.1': State(pc_initial=200 nstack_initial=1)}
2024-06-06 03:46:34,573 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi204.0',
                            State(pc_initial=204 nstack_initial=2))},
             '$phi204.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:34,573 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:34,574 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:34,575 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:34,575 - DEBUG - keep phismap: {'$phi200.0': {('$198get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi204.1': {('$200for_iter.2', State(pc_initial=200 nstack_initial=1))}}
2024-06-06 03:46:34,575 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi200.0': '$198get_iter.39'},
             State(pc_initial=200 nstack_initial=1): {'$phi204.1': '$200for_iter.2'}})
2024-06-06 03:46:34,576 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:34,576 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.4'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (92, {'func': '$38load_attr.4', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': 1, 'res': '$92call.8'}), (100, {'value': '$92call.8'}), (102, {'res': '$const102.9'}), (104, {'res': '$out0104.10'}), (106, {'res': '$const106.11'}), (108, {'res': '$const108.12'}), (110, {'start': '$const106.11', 'end': '$const108.12', 'container': '$out0104.10', 'value': '$const102.9', 'res': '$110store_slice.14', 'slicevar': '$110store_slice.13'}), (112, {'res': '$const112.15'}), (114, {'res': '$out0114.16'}), (116, {'res': '$const116.17'}), (118, {'res': '$const118.18'}), (120, {'start': '$const116.17', 'end': '$const118.18', 'container': '$out0114.16', 'value': '$const112.15', 'res': '$120store_slice.20', 'slicevar': '$120store_slice.19'}), (122, {'idx': 4, 'res': '$122load_global.21'}), (132, {'idx': 5, 'res': '$132load_global.23'}), (142, {'res': '$const142.25'}), (144, {'res': '$const144.26'}), (146, {'func': '$132load_global.23', 'args': ['$const142.25', '$const144.26'], 'kw_names': None, 'res': '$146call.27'}), (154, {'value': '$146call.27', 'res': '$154unary_negative.28'}), (156, {'res': '$full_shape0156.29'}), (158, {'res': '$const158.30'}), (160, {'index': '$const158.30', 'target': '$full_shape0156.29', 'res': '$160binary_subscr.31'}), (164, {'idx': 6, 'res': '$164load_global.32'}), (174, {'res': '$const174.34'}), (176, {'res': '$const176.35'}), (178, {'func': '$164load_global.32', 'args': ['$const174.34', '$const176.35'], 'kw_names': None, 'res': '$178call.36'}), (186, {'op': '-', 'lhs': '$160binary_subscr.31', 'rhs': '$178call.36', 'res': '$binop_sub186.37'}), (190, {'func': '$122load_global.21', 'args': ['$154unary_negative.28', '$binop_sub186.37'], 'kw_names': None, 'res': '$190call.38'}), (198, {'value': '$190call.38', 'res': '$198get_iter.39'})), outgoing_phis={'$phi200.0': '$198get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$198get_iter.39',)})
2024-06-06 03:46:34,576 - DEBUG - block_infos State(pc_initial=200 nstack_initial=1):
AdaptBlockInfo(insts=((200, {'iterator': '$phi200.0', 'pair': '$200for_iter.1', 'indval': '$200for_iter.2', 'pred': '$200for_iter.3'}),), outgoing_phis={'$phi204.1': '$200for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={212: ('$phi200.0', '$200for_iter.2'), 204: ('$phi200.0', '$200for_iter.2')})
2024-06-06 03:46:34,576 - DEBUG - block_infos State(pc_initial=204 nstack_initial=2):
AdaptBlockInfo(insts=((204, {'value': '$phi204.1'}), (206, {'res': '$const206.2'}), (208, {'value': '$const206.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi204.0',)})
2024-06-06 03:46:34,576 - DEBUG - block_infos State(pc_initial=212 nstack_initial=2):
AdaptBlockInfo(insts=((214, {'res': '$out0214.2'}), (216, {'retval': '$out0214.2', 'castval': '$216return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:34,577 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$28load_global.2']
    $38load_attr.4 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.4']
    $60load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool_) ['$60load_global.6', '$70load_attr.7']
    out0 = call $38load_attr.4(full_shape0, func=$38load_attr.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.4', '$70load_attr.7', 'full_shape0', 'out0']
    $const102.9 = const(int, 0)              ['$const102.9']
    $const106.11 = const(NoneType, None)     ['$const106.11']
    $const108.12 = const(int, 1)             ['$const108.12']
    $110store_slice.13 = global(slice: <class 'slice'>) ['$110store_slice.13']
    $110store_slice.14 = call $110store_slice.13($const106.11, $const108.12, func=$110store_slice.13, args=(Var($const106.11, <string>:4), Var($const108.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$110store_slice.13', '$110store_slice.14', '$const106.11', '$const108.12']
    out0[$110store_slice.14] = $const102.9   ['$110store_slice.14', '$const102.9', 'out0']
    $const112.15 = const(int, 0)             ['$const112.15']
    $const116.17 = const(int, -1)            ['$const116.17']
    $const118.18 = const(NoneType, None)     ['$const118.18']
    $120store_slice.19 = global(slice: <class 'slice'>) ['$120store_slice.19']
    $120store_slice.20 = call $120store_slice.19($const116.17, $const118.18, func=$120store_slice.19, args=(Var($const116.17, <string>:5), Var($const118.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$120store_slice.19', '$120store_slice.20', '$const116.17', '$const118.18']
    out0[$120store_slice.20] = $const112.15  ['$120store_slice.20', '$const112.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $132load_global.23 = global(min: <built-in function min>) ['$132load_global.23']
    $const142.25 = const(int, 0)             ['$const142.25']
    $const144.26 = const(int, -1)            ['$const144.26']
    $146call.27 = call $132load_global.23($const142.25, $const144.26, func=$132load_global.23, args=[Var($const142.25, <string>:6), Var($const144.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$132load_global.23', '$146call.27', '$const142.25', '$const144.26']
    $154unary_negative.28 = unary(fn=<built-in function neg>, value=$146call.27) ['$146call.27', '$154unary_negative.28']
    $const158.30 = const(int, 0)             ['$const158.30']
    $160binary_subscr.31 = getitem(value=full_shape0, index=$const158.30, fn=<built-in function getitem>) ['$160binary_subscr.31', '$const158.30', 'full_shape0']
    $164load_global.32 = global(max: <built-in function max>) ['$164load_global.32']
    $const174.34 = const(int, 0)             ['$const174.34']
    $const176.35 = const(int, 1)             ['$const176.35']
    $178call.36 = call $164load_global.32($const174.34, $const176.35, func=$164load_global.32, args=[Var($const174.34, <string>:6), Var($const176.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_global.32', '$178call.36', '$const174.34', '$const176.35']
    $binop_sub186.37 = $160binary_subscr.31 - $178call.36 ['$160binary_subscr.31', '$178call.36', '$binop_sub186.37']
    $190call.38 = call $122load_global.21($154unary_negative.28, $binop_sub186.37, func=$122load_global.21, args=[Var($154unary_negative.28, <string>:6), Var($binop_sub186.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$154unary_negative.28', '$190call.38', '$binop_sub186.37']
    $198get_iter.39 = getiter(value=$190call.38) ['$190call.38', '$198get_iter.39']
    $phi200.0 = $198get_iter.39              ['$198get_iter.39', '$phi200.0']
    jump 200                                 []
label 200:
    $200for_iter.1 = iternext(value=$phi200.0) ['$200for_iter.1', '$phi200.0']
    $200for_iter.2 = pair_first(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.2']
    $200for_iter.3 = pair_second(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.3']
    $phi204.1 = $200for_iter.2               ['$200for_iter.2', '$phi204.1']
    branch $200for_iter.3, 204, 212          ['$200for_iter.3']
label 204:
    index00 = $phi204.1                      ['$phi204.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 200                                 []
label 212:
    $216return_value.3 = cast(value=out0)    ['$216return_value.3', 'out0']
    return $216return_value.3                ['$216return_value.3']

2024-06-06 03:46:34,588 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:34,588 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1e21e80>
2024-06-06 03:46:34,588 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:34,588 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:34,588 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:34,588 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:34,589 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:34,589 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:34,589 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,589 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:34,589 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:34,589 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:34,589 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:34,589 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,589 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:34,589 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:34,590 - DEBUG - on stmt: $const116.17.1 = const(int, -1)
2024-06-06 03:46:34,590 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:34,590 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:34,590 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,590 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:34,590 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:34,590 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:34,590 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:34,590 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:34,590 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,590 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:34,591 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:34,591 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:34,591 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:34,591 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:34,591 - DEBUG - on stmt: $const176.35.1 = const(int, 1)
2024-06-06 03:46:34,591 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,591 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:34,591 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,591 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:34,591 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:34,591 - DEBUG - on stmt: jump 200
2024-06-06 03:46:34,591 - DEBUG - ==== SSA block analysis pass on 200
2024-06-06 03:46:34,591 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1e21e80>
2024-06-06 03:46:34,592 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:34,592 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:34,592 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:34,592 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:34,592 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 214
2024-06-06 03:46:34,592 - DEBUG - ==== SSA block analysis pass on 204
2024-06-06 03:46:34,592 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1e21e80>
2024-06-06 03:46:34,592 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:34,592 - DEBUG - on stmt: jump 212
2024-06-06 03:46:34,592 - DEBUG - ==== SSA block analysis pass on 214
2024-06-06 03:46:34,592 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1e21e80>
2024-06-06 03:46:34,592 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:34,592 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:34,593 - DEBUG - ==== SSA block analysis pass on 212
2024-06-06 03:46:34,593 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1e21e80>
2024-06-06 03:46:34,593 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:34,593 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:34,593 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:34,593 - DEBUG - on stmt: $const14.4 = const(int, -1)
2024-06-06 03:46:34,593 - DEBUG - on stmt: stencil_index.1 = $const14.4 + index00
2024-06-06 03:46:34,593 - DEBUG - on stmt: $16binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:34,593 - DEBUG - on stmt: $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5
2024-06-06 03:46:34,593 - DEBUG - on stmt: $const26.8 = const(int, 0)
2024-06-06 03:46:34,593 - DEBUG - on stmt: stencil_index.2 = $const26.8 + index00
2024-06-06 03:46:34,593 - DEBUG - on stmt: $28binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-06 03:46:34,593 - DEBUG - on stmt: $const34.11 = const(int, 1)
2024-06-06 03:46:34,594 - DEBUG - on stmt: stencil_index.3 = $const34.11 + index00
2024-06-06 03:46:34,594 - DEBUG - on stmt: $36binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-06 03:46:34,594 - DEBUG - on stmt: $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12
2024-06-06 03:46:34,594 - DEBUG - on stmt: $binop_and_44.14 = $20compare_op.6 & $40compare_op.13
2024-06-06 03:46:34,594 - DEBUG - on stmt: $48return_value.15 = cast(value=$binop_and_44.14)
2024-06-06 03:46:34,594 - DEBUG - on stmt: out0[index00] = $48return_value.15
2024-06-06 03:46:34,594 - DEBUG - on stmt: jump 213
2024-06-06 03:46:34,594 - DEBUG - ==== SSA block analysis pass on 213
2024-06-06 03:46:34,594 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1e21e80>
2024-06-06 03:46:34,594 - DEBUG - on stmt: jump 200
2024-06-06 03:46:34,595 - DEBUG - defs defaultdict(<class 'list'>,
            {'$110store_slice.13.1': [(<numba.core.ir.Assign object at 0x7fe9d1e27e00>,
                                       0)],
             '$110store_slice.14.1': [(<numba.core.ir.Assign object at 0x7fe9d1e27f20>,
                                       0)],
             '$120store_slice.19.1': [(<numba.core.ir.Assign object at 0x7fe9d1e185c0>,
                                       0)],
             '$120store_slice.20.1': [(<numba.core.ir.Assign object at 0x7fe9d1e186e0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7fe9d1e18860>,
                                       0)],
             '$132load_global.23.1': [(<numba.core.ir.Assign object at 0x7fe9d1e189b0>,
                                       0)],
             '$146call.27.1': [(<numba.core.ir.Assign object at 0x7fe9d1e18e00>,
                                0)],
             '$154unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7fe9d1e18f20>,
                                          0)],
             '$160binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7fe9d1e192e0>,
                                         0)],
             '$164load_global.32.1': [(<numba.core.ir.Assign object at 0x7fe9d1e19400>,
                                       0)],
             '$16binary_subscr.5': [(<numba.core.ir.Assign object at 0x7fe9d1f18f80>,
                                     212)],
             '$178call.36.1': [(<numba.core.ir.Assign object at 0x7fe9d1e19850>,
                                0)],
             '$190call.38.1': [(<numba.core.ir.Assign object at 0x7fe9d1e19b20>,
                                0)],
             '$198get_iter.39.1': [(<numba.core.ir.Assign object at 0x7fe9d1e19c40>,
                                    0)],
             '$200for_iter.1.1': [(<numba.core.ir.Assign object at 0x7fe9d1e19ca0>,
                                   200)],
             '$200for_iter.2.1': [(<numba.core.ir.Assign object at 0x7fe9d1e19dc0>,
                                   200)],
             '$200for_iter.3.1': [(<numba.core.ir.Assign object at 0x7fe9d1e19ee0>,
                                   200)],
             '$20compare_op.6': [(<numba.core.ir.Assign object at 0x7fe9d1feddf0>,
                                  212)],
             '$216return_value.3.1': [(<numba.core.ir.Assign object at 0x7fe9d1e1a630>,
                                       214)],
             '$28binary_subscr.9': [(<numba.core.ir.Assign object at 0x7fe9d1f19b80>,
                                     212)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x7fe9d1e27080>,
                                     0)],
             '$36binary_subscr.12': [(<numba.core.ir.Assign object at 0x7fe9d1e26660>,
                                      212)],
             '$38load_attr.4.1': [(<numba.core.ir.Assign object at 0x7fe9d1e271d0>,
                                   0)],
             '$40compare_op.13': [(<numba.core.ir.Assign object at 0x7fe9d1e363f0>,
                                   212)],
             '$48return_value.15': [(<numba.core.ir.Assign object at 0x7fe9d1e37e30>,
                                     212)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x7fe9d1e27410>,
                                     0)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x7fe9d1e27560>,
                                   0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7fe9d1f18410>,
                                    212)],
             '$binop_and_44.14': [(<numba.core.ir.Assign object at 0x7fe9d1e365d0>,
                                   212)],
             '$binop_sub186.37.1': [(<numba.core.ir.Assign object at 0x7fe9d1e199a0>,
                                     0)],
             '$const102.9.1': [(<numba.core.ir.Assign object at 0x7fe9d1e27920>,
                                0)],
             '$const106.11.1': [(<numba.core.ir.Assign object at 0x7fe9d1e27b60>,
                                 0)],
             '$const108.12.1': [(<numba.core.ir.Assign object at 0x7fe9d1e27cb0>,
                                 0)],
             '$const112.15.1': [(<numba.core.ir.Assign object at 0x7fe9d1e180e0>,
                                 0)],
             '$const116.17.1': [(<numba.core.ir.Assign object at 0x7fe9d1e18320>,
                                 0)],
             '$const118.18.1': [(<numba.core.ir.Assign object at 0x7fe9d1e18470>,
                                 0)],
             '$const14.4': [(<numba.core.ir.Assign object at 0x7fe9d1fdc860>,
                             212)],
             '$const142.25.1': [(<numba.core.ir.Assign object at 0x7fe9d1e18b00>,
                                 0)],
             '$const144.26.1': [(<numba.core.ir.Assign object at 0x7fe9d1e18c50>,
                                 0)],
             '$const158.30.1': [(<numba.core.ir.Assign object at 0x7fe9d1e19160>,
                                 0)],
             '$const174.34.1': [(<numba.core.ir.Assign object at 0x7fe9d1e19550>,
                                 0)],
             '$const176.35.1': [(<numba.core.ir.Assign object at 0x7fe9d1e196a0>,
                                 0)],
             '$const26.8': [(<numba.core.ir.Assign object at 0x7fe9d1fedfd0>,
                             212)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x7fe9d1fefdd0>,
                              212)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9d1f18b90>,
                            212)],
             '$phi200.0.1': [(<numba.core.ir.Assign object at 0x7fe9d1e26f30>,
                              0)],
             '$phi204.1.1': [(<numba.core.ir.Assign object at 0x7fe9d1e19fa0>,
                              200)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7fe9d1e26e40>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7fe9d1e1a120>,
                          204)],
             'out0': [(<numba.core.ir.Assign object at 0x7fe9d1e27710>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7fe9d1f180b0>,
                                212)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7fe9d1f1a750>,
                                  212)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7fe9d1f19250>,
                                  212)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7fe9d1e25cd0>,
                                  212)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9d1e26c00>, 0)]})
2024-06-06 03:46:34,596 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d1e21e80>
2024-06-06 03:46:34,807 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          14	LOAD_FAST(arg=0, lineno=1065)
          16	CALL(arg=1, lineno=1065)
          24	LOAD_FAST(arg=1, lineno=1065)
          26	LOAD_CONST(arg=1, lineno=1065)
          28	LOAD_CONST(arg=1, lineno=1065)
          30	STORE_SLICE(arg=None, lineno=1065)
          32	RETURN_CONST(arg=1, lineno=1065)
2024-06-06 03:46:34,807 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:34,807 - DEBUG - stack: []
2024-06-06 03:46:34,807 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:34,807 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-06-06 03:46:34,807 - DEBUG - stack []
2024-06-06 03:46:34,807 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-06-06 03:46:34,807 - DEBUG - stack []
2024-06-06 03:46:34,807 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-06-06 03:46:34,807 - DEBUG - stack []
2024-06-06 03:46:34,808 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=1065)
2024-06-06 03:46:34,808 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:34,808 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=1065)
2024-06-06 03:46:34,808 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2']
2024-06-06 03:46:34,808 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1065)
2024-06-06 03:46:34,808 - DEBUG - stack ['$16call.3']
2024-06-06 03:46:34,808 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-06 03:46:34,808 - DEBUG - stack ['$16call.3', '$y24.4']
2024-06-06 03:46:34,808 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-06 03:46:34,809 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5']
2024-06-06 03:46:34,809 - DEBUG - dispatch pc=30, inst=STORE_SLICE(arg=None, lineno=1065)
2024-06-06 03:46:34,809 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5', '$const28.6']
2024-06-06 03:46:34,809 - DEBUG - dispatch pc=32, inst=RETURN_CONST(arg=1, lineno=1065)
2024-06-06 03:46:34,809 - DEBUG - stack []
2024-06-06 03:46:34,809 - DEBUG - end state. edges=[]
2024-06-06 03:46:34,809 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:34,809 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:34,809 - DEBUG - defmap: {}
2024-06-06 03:46:34,810 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:34,810 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:34,810 - DEBUG - keep phismap: {}
2024-06-06 03:46:34,810 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:34,810 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:34,810 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$x14.2'}), (16, {'func': '$4load_global.0', 'args': ['$x14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'res': '$y24.4'}), (26, {'res': '$const26.5'}), (28, {'res': '$const28.6'}), (30, {'start': '$const26.5', 'end': '$const28.6', 'container': '$y24.4', 'value': '$16call.3', 'res': '$30store_slice.8', 'slicevar': '$30store_slice.7'}), (32, {'retval': '$const32.9', 'castval': '$32return_const.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:34,811 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f215e0>) ['$4load_global.0']
    $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$16call.3', '$4load_global.0', 'x']
    $const26.5 = const(NoneType, None)       ['$const26.5']
    $const28.6 = const(NoneType, None)       ['$const28.6']
    $30store_slice.7 = global(slice: <class 'slice'>) ['$30store_slice.7']
    $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1065), Var($const28.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$30store_slice.7', '$30store_slice.8', '$const26.5', '$const28.6']
    y[$30store_slice.8] = $16call.3          ['$16call.3', '$30store_slice.8', 'y']
    $const32.9 = const(NoneType, None)       ['$const32.9']
    $32return_const.10 = cast(value=$const32.9) ['$32return_const.10', '$const32.9']
    return $32return_const.10                ['$32return_const.10']

2024-06-06 03:46:34,815 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:34,816 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9d97ad0>
2024-06-06 03:46:34,816 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:34,816 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-06 03:46:34,816 - DEBUG - on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f215e0>)
2024-06-06 03:46:34,816 - DEBUG - on stmt: $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,816 - DEBUG - on stmt: $const26.5 = const(NoneType, None)
2024-06-06 03:46:34,816 - DEBUG - on stmt: $const28.6 = const(NoneType, None)
2024-06-06 03:46:34,816 - DEBUG - on stmt: $30store_slice.7 = global(slice: <class 'slice'>)
2024-06-06 03:46:34,816 - DEBUG - on stmt: $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1065), Var($const28.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,816 - DEBUG - on stmt: y[slice(None, None, None)] = $16call.3
2024-06-06 03:46:34,816 - DEBUG - on stmt: $const32.9 = const(NoneType, None)
2024-06-06 03:46:34,816 - DEBUG - on stmt: $32return_const.10 = cast(value=$const32.9)
2024-06-06 03:46:34,817 - DEBUG - on stmt: return $32return_const.10
2024-06-06 03:46:34,817 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16call.3': [(<numba.core.ir.Assign object at 0x7fe9b9d96e10>,
                            0)],
             '$30store_slice.7': [(<numba.core.ir.Assign object at 0x7fe9b9d972c0>,
                                   0)],
             '$30store_slice.8': [(<numba.core.ir.Assign object at 0x7fe9b9d973e0>,
                                   0)],
             '$32return_const.10': [(<numba.core.ir.Assign object at 0x7fe9b9d97680>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9d958b0>,
                                  0)],
             '$const26.5': [(<numba.core.ir.Assign object at 0x7fe9b9d97020>,
                             0)],
             '$const28.6': [(<numba.core.ir.Assign object at 0x7fe9b9d97170>,
                             0)],
             '$const32.9': [(<numba.core.ir.Assign object at 0x7fe9b9d97560>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b9d96990>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7fe9b9d969f0>, 0)]})
2024-06-06 03:46:34,817 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9d97ad0>
2024-06-06 03:46:34,834 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=1, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=1, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	KW_NAMES(arg=1, lineno=3)
          92	CALL(arg=2, lineno=3)
         100	STORE_FAST(arg=2, lineno=3)
         102	LOAD_CONST(arg=2, lineno=4)
         104	LOAD_FAST(arg=2, lineno=4)
         106	LOAD_CONST(arg=0, lineno=4)
         108	LOAD_CONST(arg=3, lineno=4)
         110	STORE_SLICE(arg=None, lineno=4)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_FAST(arg=2, lineno=5)
         116	LOAD_CONST(arg=4, lineno=5)
         118	LOAD_CONST(arg=0, lineno=5)
         120	STORE_SLICE(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         132	LOAD_GLOBAL(arg=11, lineno=6)
         142	LOAD_CONST(arg=2, lineno=6)
         144	LOAD_CONST(arg=4, lineno=6)
         146	CALL(arg=2, lineno=6)
         154	UNARY_NEGATIVE(arg=None, lineno=6)
         156	LOAD_FAST(arg=1, lineno=6)
         158	LOAD_CONST(arg=2, lineno=6)
         160	BINARY_SUBSCR(arg=None, lineno=6)
         164	LOAD_GLOBAL(arg=13, lineno=6)
         174	LOAD_CONST(arg=2, lineno=6)
         176	LOAD_CONST(arg=3, lineno=6)
         178	CALL(arg=2, lineno=6)
         186	BINARY_OP(arg=10, lineno=6)
         190	CALL(arg=2, lineno=6)
         198	GET_ITER(arg=None, lineno=6)
>        200	FOR_ITER(arg=4, lineno=6)
         204	STORE_FAST(arg=3, lineno=6)
         206	LOAD_CONST(arg=2, lineno=7)
         208	STORE_FAST(arg=4, lineno=7)
         210	JUMP_BACKWARD(arg=6, lineno=7)
>        212	END_FOR(arg=None, lineno=6)
         214	LOAD_FAST(arg=2, lineno=8)
         216	RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:34,834 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:34,834 - DEBUG - stack: []
2024-06-06 03:46:34,834 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:34,834 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-06 03:46:34,834 - DEBUG - stack []
2024-06-06 03:46:34,834 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-06 03:46:34,834 - DEBUG - stack []
2024-06-06 03:46:34,835 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-06 03:46:34,835 - DEBUG - stack []
2024-06-06 03:46:34,835 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-06 03:46:34,835 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:34,835 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=1, lineno=2)
2024-06-06 03:46:34,835 - DEBUG - stack ['$6load_attr.1']
2024-06-06 03:46:34,835 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:34,835 - DEBUG - stack []
2024-06-06 03:46:34,835 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2024-06-06 03:46:34,836 - DEBUG - stack ['$28load_global.2']
2024-06-06 03:46:34,836 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-06 03:46:34,836 - DEBUG - stack ['$null$38.3', '$38load_attr.4']
2024-06-06 03:46:34,836 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:34,836 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5']
2024-06-06 03:46:34,836 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2024-06-06 03:46:34,836 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$60load_global.6']
2024-06-06 03:46:34,836 - DEBUG - dispatch pc=90, inst=KW_NAMES(arg=1, lineno=3)
2024-06-06 03:46:34,836 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:34,836 - DEBUG - dispatch pc=92, inst=CALL(arg=2, lineno=3)
2024-06-06 03:46:34,836 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:34,837 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=3)
2024-06-06 03:46:34,837 - DEBUG - stack ['$92call.8']
2024-06-06 03:46:34,837 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-06 03:46:34,837 - DEBUG - stack []
2024-06-06 03:46:34,837 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-06 03:46:34,837 - DEBUG - stack ['$const102.9']
2024-06-06 03:46:34,837 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-06 03:46:34,837 - DEBUG - stack ['$const102.9', '$out0104.10']
2024-06-06 03:46:34,837 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-06 03:46:34,837 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11']
2024-06-06 03:46:34,837 - DEBUG - dispatch pc=110, inst=STORE_SLICE(arg=None, lineno=4)
2024-06-06 03:46:34,837 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11', '$const108.12']
2024-06-06 03:46:34,837 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-06 03:46:34,838 - DEBUG - stack []
2024-06-06 03:46:34,838 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-06 03:46:34,838 - DEBUG - stack ['$const112.15']
2024-06-06 03:46:34,838 - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-06 03:46:34,838 - DEBUG - stack ['$const112.15', '$out0114.16']
2024-06-06 03:46:34,838 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-06 03:46:34,838 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17']
2024-06-06 03:46:34,838 - DEBUG - dispatch pc=120, inst=STORE_SLICE(arg=None, lineno=5)
2024-06-06 03:46:34,838 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17', '$const118.18']
2024-06-06 03:46:34,838 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-06 03:46:34,838 - DEBUG - stack []
2024-06-06 03:46:34,838 - DEBUG - dispatch pc=132, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-06 03:46:34,838 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-06 03:46:34,839 - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:34,839 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23']
2024-06-06 03:46:34,839 - DEBUG - dispatch pc=144, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-06 03:46:34,839 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25']
2024-06-06 03:46:34,839 - DEBUG - dispatch pc=146, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:34,839 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25', '$const144.26']
2024-06-06 03:46:34,839 - DEBUG - dispatch pc=154, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-06 03:46:34,839 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$146call.27']
2024-06-06 03:46:34,839 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-06 03:46:34,839 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28']
2024-06-06 03:46:34,839 - DEBUG - dispatch pc=158, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:34,839 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29']
2024-06-06 03:46:34,839 - DEBUG - dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-06 03:46:34,839 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29', '$const158.30']
2024-06-06 03:46:34,840 - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-06 03:46:34,840 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31']
2024-06-06 03:46:34,840 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:34,840 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32']
2024-06-06 03:46:34,840 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-06 03:46:34,840 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34']
2024-06-06 03:46:34,840 - DEBUG - dispatch pc=178, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:34,840 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34', '$const176.35']
2024-06-06 03:46:34,840 - DEBUG - dispatch pc=186, inst=BINARY_OP(arg=10, lineno=6)
2024-06-06 03:46:34,840 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$178call.36']
2024-06-06 03:46:34,840 - DEBUG - dispatch pc=190, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:34,840 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$binop_sub186.37']
2024-06-06 03:46:34,840 - DEBUG - dispatch pc=198, inst=GET_ITER(arg=None, lineno=6)
2024-06-06 03:46:34,841 - DEBUG - stack ['$190call.38']
2024-06-06 03:46:34,841 - DEBUG - end state. edges=[Edge(pc=200, stack=('$198get_iter.39',), blockstack=(), npush=0)]
2024-06-06 03:46:34,841 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:34,841 - DEBUG - stack: ['$phi200.0']
2024-06-06 03:46:34,841 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=1)
2024-06-06 03:46:34,841 - DEBUG - dispatch pc=200, inst=FOR_ITER(arg=4, lineno=6)
2024-06-06 03:46:34,841 - DEBUG - stack ['$phi200.0']
2024-06-06 03:46:34,841 - DEBUG - end state. edges=[Edge(pc=212, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0), Edge(pc=204, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:34,841 - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:34,841 - DEBUG - stack: ['$phi212.0', '$phi212.1']
2024-06-06 03:46:34,841 - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=2)
2024-06-06 03:46:34,841 - DEBUG - dispatch pc=212, inst=END_FOR(arg=None, lineno=6)
2024-06-06 03:46:34,842 - DEBUG - stack ['$phi212.0', '$phi212.1']
2024-06-06 03:46:34,842 - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-06 03:46:34,842 - DEBUG - stack []
2024-06-06 03:46:34,842 - DEBUG - dispatch pc=216, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:34,842 - DEBUG - stack ['$out0214.2']
2024-06-06 03:46:34,842 - DEBUG - end state. edges=[]
2024-06-06 03:46:34,842 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:34,842 - DEBUG - stack: ['$phi204.0', '$phi204.1']
2024-06-06 03:46:34,842 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=2)
2024-06-06 03:46:34,842 - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=3, lineno=6)
2024-06-06 03:46:34,842 - DEBUG - stack ['$phi204.0', '$phi204.1']
2024-06-06 03:46:34,842 - DEBUG - dispatch pc=206, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-06 03:46:34,842 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:34,843 - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=4, lineno=7)
2024-06-06 03:46:34,843 - DEBUG - stack ['$phi204.0', '$const206.2']
2024-06-06 03:46:34,843 - DEBUG - dispatch pc=210, inst=JUMP_BACKWARD(arg=6, lineno=7)
2024-06-06 03:46:34,843 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:34,843 - DEBUG - end state. edges=[Edge(pc=200, stack=('$phi204.0',), blockstack=(), npush=0)]
2024-06-06 03:46:34,843 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:34,843 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:34,843 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=1): {'$phi200.0'},
             State(pc_initial=204 nstack_initial=2): {'$phi204.1'},
             State(pc_initial=212 nstack_initial=2): set()})
2024-06-06 03:46:34,843 - DEBUG - defmap: {'$phi200.0': State(pc_initial=0 nstack_initial=0),
 '$phi204.1': State(pc_initial=200 nstack_initial=1),
 '$phi212.1': State(pc_initial=200 nstack_initial=1)}
2024-06-06 03:46:34,844 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi204.0',
                            State(pc_initial=204 nstack_initial=2))},
             '$phi204.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:34,844 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:34,845 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:34,845 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:34,846 - DEBUG - keep phismap: {'$phi200.0': {('$198get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi204.1': {('$200for_iter.2', State(pc_initial=200 nstack_initial=1))}}
2024-06-06 03:46:34,846 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi200.0': '$198get_iter.39'},
             State(pc_initial=200 nstack_initial=1): {'$phi204.1': '$200for_iter.2'}})
2024-06-06 03:46:34,846 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:34,846 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.4'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (92, {'func': '$38load_attr.4', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': 1, 'res': '$92call.8'}), (100, {'value': '$92call.8'}), (102, {'res': '$const102.9'}), (104, {'res': '$out0104.10'}), (106, {'res': '$const106.11'}), (108, {'res': '$const108.12'}), (110, {'start': '$const106.11', 'end': '$const108.12', 'container': '$out0104.10', 'value': '$const102.9', 'res': '$110store_slice.14', 'slicevar': '$110store_slice.13'}), (112, {'res': '$const112.15'}), (114, {'res': '$out0114.16'}), (116, {'res': '$const116.17'}), (118, {'res': '$const118.18'}), (120, {'start': '$const116.17', 'end': '$const118.18', 'container': '$out0114.16', 'value': '$const112.15', 'res': '$120store_slice.20', 'slicevar': '$120store_slice.19'}), (122, {'idx': 4, 'res': '$122load_global.21'}), (132, {'idx': 5, 'res': '$132load_global.23'}), (142, {'res': '$const142.25'}), (144, {'res': '$const144.26'}), (146, {'func': '$132load_global.23', 'args': ['$const142.25', '$const144.26'], 'kw_names': None, 'res': '$146call.27'}), (154, {'value': '$146call.27', 'res': '$154unary_negative.28'}), (156, {'res': '$full_shape0156.29'}), (158, {'res': '$const158.30'}), (160, {'index': '$const158.30', 'target': '$full_shape0156.29', 'res': '$160binary_subscr.31'}), (164, {'idx': 6, 'res': '$164load_global.32'}), (174, {'res': '$const174.34'}), (176, {'res': '$const176.35'}), (178, {'func': '$164load_global.32', 'args': ['$const174.34', '$const176.35'], 'kw_names': None, 'res': '$178call.36'}), (186, {'op': '-', 'lhs': '$160binary_subscr.31', 'rhs': '$178call.36', 'res': '$binop_sub186.37'}), (190, {'func': '$122load_global.21', 'args': ['$154unary_negative.28', '$binop_sub186.37'], 'kw_names': None, 'res': '$190call.38'}), (198, {'value': '$190call.38', 'res': '$198get_iter.39'})), outgoing_phis={'$phi200.0': '$198get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$198get_iter.39',)})
2024-06-06 03:46:34,847 - DEBUG - block_infos State(pc_initial=200 nstack_initial=1):
AdaptBlockInfo(insts=((200, {'iterator': '$phi200.0', 'pair': '$200for_iter.1', 'indval': '$200for_iter.2', 'pred': '$200for_iter.3'}),), outgoing_phis={'$phi204.1': '$200for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={212: ('$phi200.0', '$200for_iter.2'), 204: ('$phi200.0', '$200for_iter.2')})
2024-06-06 03:46:34,847 - DEBUG - block_infos State(pc_initial=204 nstack_initial=2):
AdaptBlockInfo(insts=((204, {'value': '$phi204.1'}), (206, {'res': '$const206.2'}), (208, {'value': '$const206.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi204.0',)})
2024-06-06 03:46:34,847 - DEBUG - block_infos State(pc_initial=212 nstack_initial=2):
AdaptBlockInfo(insts=((214, {'res': '$out0214.2'}), (216, {'retval': '$out0214.2', 'castval': '$216return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:34,848 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$28load_global.2']
    $38load_attr.4 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.4']
    $60load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool_) ['$60load_global.6', '$70load_attr.7']
    out0 = call $38load_attr.4(full_shape0, func=$38load_attr.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.4', '$70load_attr.7', 'full_shape0', 'out0']
    $const102.9 = const(int, 0)              ['$const102.9']
    $const106.11 = const(NoneType, None)     ['$const106.11']
    $const108.12 = const(int, 1)             ['$const108.12']
    $110store_slice.13 = global(slice: <class 'slice'>) ['$110store_slice.13']
    $110store_slice.14 = call $110store_slice.13($const106.11, $const108.12, func=$110store_slice.13, args=(Var($const106.11, <string>:4), Var($const108.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$110store_slice.13', '$110store_slice.14', '$const106.11', '$const108.12']
    out0[$110store_slice.14] = $const102.9   ['$110store_slice.14', '$const102.9', 'out0']
    $const112.15 = const(int, 0)             ['$const112.15']
    $const116.17 = const(int, -1)            ['$const116.17']
    $const118.18 = const(NoneType, None)     ['$const118.18']
    $120store_slice.19 = global(slice: <class 'slice'>) ['$120store_slice.19']
    $120store_slice.20 = call $120store_slice.19($const116.17, $const118.18, func=$120store_slice.19, args=(Var($const116.17, <string>:5), Var($const118.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$120store_slice.19', '$120store_slice.20', '$const116.17', '$const118.18']
    out0[$120store_slice.20] = $const112.15  ['$120store_slice.20', '$const112.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $132load_global.23 = global(min: <built-in function min>) ['$132load_global.23']
    $const142.25 = const(int, 0)             ['$const142.25']
    $const144.26 = const(int, -1)            ['$const144.26']
    $146call.27 = call $132load_global.23($const142.25, $const144.26, func=$132load_global.23, args=[Var($const142.25, <string>:6), Var($const144.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$132load_global.23', '$146call.27', '$const142.25', '$const144.26']
    $154unary_negative.28 = unary(fn=<built-in function neg>, value=$146call.27) ['$146call.27', '$154unary_negative.28']
    $const158.30 = const(int, 0)             ['$const158.30']
    $160binary_subscr.31 = getitem(value=full_shape0, index=$const158.30, fn=<built-in function getitem>) ['$160binary_subscr.31', '$const158.30', 'full_shape0']
    $164load_global.32 = global(max: <built-in function max>) ['$164load_global.32']
    $const174.34 = const(int, 0)             ['$const174.34']
    $const176.35 = const(int, 1)             ['$const176.35']
    $178call.36 = call $164load_global.32($const174.34, $const176.35, func=$164load_global.32, args=[Var($const174.34, <string>:6), Var($const176.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_global.32', '$178call.36', '$const174.34', '$const176.35']
    $binop_sub186.37 = $160binary_subscr.31 - $178call.36 ['$160binary_subscr.31', '$178call.36', '$binop_sub186.37']
    $190call.38 = call $122load_global.21($154unary_negative.28, $binop_sub186.37, func=$122load_global.21, args=[Var($154unary_negative.28, <string>:6), Var($binop_sub186.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$154unary_negative.28', '$190call.38', '$binop_sub186.37']
    $198get_iter.39 = getiter(value=$190call.38) ['$190call.38', '$198get_iter.39']
    $phi200.0 = $198get_iter.39              ['$198get_iter.39', '$phi200.0']
    jump 200                                 []
label 200:
    $200for_iter.1 = iternext(value=$phi200.0) ['$200for_iter.1', '$phi200.0']
    $200for_iter.2 = pair_first(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.2']
    $200for_iter.3 = pair_second(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.3']
    $phi204.1 = $200for_iter.2               ['$200for_iter.2', '$phi204.1']
    branch $200for_iter.3, 204, 212          ['$200for_iter.3']
label 204:
    index00 = $phi204.1                      ['$phi204.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 200                                 []
label 212:
    $216return_value.3 = cast(value=out0)    ['$216return_value.3', 'out0']
    return $216return_value.3                ['$216return_value.3']

2024-06-06 03:46:34,859 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:34,859 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9e23740>
2024-06-06 03:46:34,859 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:34,859 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:34,859 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:34,859 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:34,859 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:34,859 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:34,860 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,860 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:34,860 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:34,860 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:34,860 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:34,860 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,860 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:34,860 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:34,860 - DEBUG - on stmt: $const116.17.1 = const(int, -1)
2024-06-06 03:46:34,860 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:34,860 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:34,860 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,861 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:34,861 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:34,861 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:34,861 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:34,861 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:34,861 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,861 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:34,861 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:34,861 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:34,861 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:34,861 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:34,861 - DEBUG - on stmt: $const176.35.1 = const(int, 1)
2024-06-06 03:46:34,862 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,862 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:34,862 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:34,862 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:34,862 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:34,862 - DEBUG - on stmt: jump 200
2024-06-06 03:46:34,862 - DEBUG - ==== SSA block analysis pass on 200
2024-06-06 03:46:34,862 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9e23740>
2024-06-06 03:46:34,862 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:34,862 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:34,862 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:34,862 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:34,863 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 214
2024-06-06 03:46:34,863 - DEBUG - ==== SSA block analysis pass on 204
2024-06-06 03:46:34,863 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9e23740>
2024-06-06 03:46:34,863 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:34,863 - DEBUG - on stmt: jump 212
2024-06-06 03:46:34,863 - DEBUG - ==== SSA block analysis pass on 214
2024-06-06 03:46:34,863 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9e23740>
2024-06-06 03:46:34,863 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:34,863 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:34,863 - DEBUG - ==== SSA block analysis pass on 212
2024-06-06 03:46:34,863 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9e23740>
2024-06-06 03:46:34,863 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:34,863 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:34,863 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:34,864 - DEBUG - on stmt: $const14.4 = const(int, -1)
2024-06-06 03:46:34,864 - DEBUG - on stmt: stencil_index.1 = $const14.4 + index00
2024-06-06 03:46:34,864 - DEBUG - on stmt: $16binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:34,864 - DEBUG - on stmt: $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5
2024-06-06 03:46:34,864 - DEBUG - on stmt: $const26.8 = const(int, 0)
2024-06-06 03:46:34,864 - DEBUG - on stmt: stencil_index.2 = $const26.8 + index00
2024-06-06 03:46:34,864 - DEBUG - on stmt: $28binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-06 03:46:34,864 - DEBUG - on stmt: $const34.11 = const(int, 1)
2024-06-06 03:46:34,864 - DEBUG - on stmt: stencil_index.3 = $const34.11 + index00
2024-06-06 03:46:34,864 - DEBUG - on stmt: $36binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-06 03:46:34,865 - DEBUG - on stmt: $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12
2024-06-06 03:46:34,865 - DEBUG - on stmt: $binop_and_44.14 = $20compare_op.6 & $40compare_op.13
2024-06-06 03:46:34,865 - DEBUG - on stmt: $48return_value.15 = cast(value=$binop_and_44.14)
2024-06-06 03:46:34,865 - DEBUG - on stmt: out0[index00] = $48return_value.15
2024-06-06 03:46:34,865 - DEBUG - on stmt: jump 213
2024-06-06 03:46:34,865 - DEBUG - ==== SSA block analysis pass on 213
2024-06-06 03:46:34,865 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9e23740>
2024-06-06 03:46:34,865 - DEBUG - on stmt: jump 200
2024-06-06 03:46:34,867 - DEBUG - defs defaultdict(<class 'list'>,
            {'$110store_slice.13.1': [(<numba.core.ir.Assign object at 0x7fe9b9e11f70>,
                                       0)],
             '$110store_slice.14.1': [(<numba.core.ir.Assign object at 0x7fe9b9e12090>,
                                       0)],
             '$120store_slice.19.1': [(<numba.core.ir.Assign object at 0x7fe9b9e126f0>,
                                       0)],
             '$120store_slice.20.1': [(<numba.core.ir.Assign object at 0x7fe9b9e12810>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7fe9b9e12990>,
                                       0)],
             '$132load_global.23.1': [(<numba.core.ir.Assign object at 0x7fe9b9e12ae0>,
                                       0)],
             '$146call.27.1': [(<numba.core.ir.Assign object at 0x7fe9b9e12f30>,
                                0)],
             '$154unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7fe9b9e13050>,
                                          0)],
             '$160binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7fe9b9e13410>,
                                         0)],
             '$164load_global.32.1': [(<numba.core.ir.Assign object at 0x7fe9b9e13530>,
                                       0)],
             '$16binary_subscr.5': [(<numba.core.ir.Assign object at 0x7fe9b9e10320>,
                                     212)],
             '$178call.36.1': [(<numba.core.ir.Assign object at 0x7fe9b9e13980>,
                                0)],
             '$190call.38.1': [(<numba.core.ir.Assign object at 0x7fe9b9e13c50>,
                                0)],
             '$198get_iter.39.1': [(<numba.core.ir.Assign object at 0x7fe9b9e13d70>,
                                    0)],
             '$200for_iter.1.1': [(<numba.core.ir.Assign object at 0x7fe9b9e13dd0>,
                                   200)],
             '$200for_iter.2.1': [(<numba.core.ir.Assign object at 0x7fe9b9e13ef0>,
                                   200)],
             '$200for_iter.3.1': [(<numba.core.ir.Assign object at 0x7fe9b9e20050>,
                                   200)],
             '$20compare_op.6': [(<numba.core.ir.Assign object at 0x7fe9b9df80e0>,
                                  212)],
             '$216return_value.3.1': [(<numba.core.ir.Assign object at 0x7fe9b9e207d0>,
                                       214)],
             '$28binary_subscr.9': [(<numba.core.ir.Assign object at 0x7fe9b9e10560>,
                                     212)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x7fe9b9e111f0>,
                                     0)],
             '$36binary_subscr.12': [(<numba.core.ir.Assign object at 0x7fe9b9e107a0>,
                                      212)],
             '$38load_attr.4.1': [(<numba.core.ir.Assign object at 0x7fe9b9e11340>,
                                   0)],
             '$40compare_op.13': [(<numba.core.ir.Assign object at 0x7fe9b9e08b90>,
                                   212)],
             '$48return_value.15': [(<numba.core.ir.Assign object at 0x7fe9b9e09820>,
                                     212)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x7fe9b9e11580>,
                                     0)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x7fe9b9e116d0>,
                                   0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7fe9b9e100e0>,
                                    212)],
             '$binop_and_44.14': [(<numba.core.ir.Assign object at 0x7fe9b9e08d70>,
                                   212)],
             '$binop_sub186.37.1': [(<numba.core.ir.Assign object at 0x7fe9b9e13ad0>,
                                     0)],
             '$const102.9.1': [(<numba.core.ir.Assign object at 0x7fe9b9e11a90>,
                                0)],
             '$const106.11.1': [(<numba.core.ir.Assign object at 0x7fe9b9e11cd0>,
                                 0)],
             '$const108.12.1': [(<numba.core.ir.Assign object at 0x7fe9b9e11e20>,
                                 0)],
             '$const112.15.1': [(<numba.core.ir.Assign object at 0x7fe9b9e12210>,
                                 0)],
             '$const116.17.1': [(<numba.core.ir.Assign object at 0x7fe9b9e12450>,
                                 0)],
             '$const118.18.1': [(<numba.core.ir.Assign object at 0x7fe9b9e125a0>,
                                 0)],
             '$const14.4': [(<numba.core.ir.Assign object at 0x7fe9b9e04ec0>,
                             212)],
             '$const142.25.1': [(<numba.core.ir.Assign object at 0x7fe9b9e12c30>,
                                 0)],
             '$const144.26.1': [(<numba.core.ir.Assign object at 0x7fe9b9e12d80>,
                                 0)],
             '$const158.30.1': [(<numba.core.ir.Assign object at 0x7fe9b9e13290>,
                                 0)],
             '$const174.34.1': [(<numba.core.ir.Assign object at 0x7fe9b9e13680>,
                                 0)],
             '$const176.35.1': [(<numba.core.ir.Assign object at 0x7fe9b9e137d0>,
                                 0)],
             '$const26.8': [(<numba.core.ir.Assign object at 0x7fe9b9df8200>,
                             212)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x7fe9b9e07650>,
                              212)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9b9dfb5c0>,
                            212)],
             '$phi200.0.1': [(<numba.core.ir.Assign object at 0x7fe9b9e110a0>,
                              0)],
             '$phi204.1.1': [(<numba.core.ir.Assign object at 0x7fe9b9e20110>,
                              200)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7fe9b9e10fb0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7fe9b9e202c0>,
                          204)],
             'out0': [(<numba.core.ir.Assign object at 0x7fe9b9e11880>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7fe9b9e0bfe0>,
                                212)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7fe9b9e10260>,
                                  212)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7fe9b9e104a0>,
                                  212)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7fe9b9e106e0>,
                                  212)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b9e10d40>, 0)]})
2024-06-06 03:46:34,867 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9e23740>
2024-06-06 03:46:35,083 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          14	LOAD_FAST(arg=0, lineno=1065)
          16	CALL(arg=1, lineno=1065)
          24	LOAD_FAST(arg=1, lineno=1065)
          26	LOAD_CONST(arg=1, lineno=1065)
          28	LOAD_CONST(arg=1, lineno=1065)
          30	STORE_SLICE(arg=None, lineno=1065)
          32	RETURN_CONST(arg=1, lineno=1065)
2024-06-06 03:46:35,083 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:35,083 - DEBUG - stack: []
2024-06-06 03:46:35,083 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:35,083 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-06-06 03:46:35,083 - DEBUG - stack []
2024-06-06 03:46:35,084 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-06-06 03:46:35,084 - DEBUG - stack []
2024-06-06 03:46:35,084 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-06-06 03:46:35,084 - DEBUG - stack []
2024-06-06 03:46:35,084 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=1065)
2024-06-06 03:46:35,084 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:35,084 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=1065)
2024-06-06 03:46:35,084 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2']
2024-06-06 03:46:35,084 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1065)
2024-06-06 03:46:35,084 - DEBUG - stack ['$16call.3']
2024-06-06 03:46:35,085 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-06 03:46:35,085 - DEBUG - stack ['$16call.3', '$y24.4']
2024-06-06 03:46:35,085 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-06 03:46:35,085 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5']
2024-06-06 03:46:35,085 - DEBUG - dispatch pc=30, inst=STORE_SLICE(arg=None, lineno=1065)
2024-06-06 03:46:35,085 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5', '$const28.6']
2024-06-06 03:46:35,085 - DEBUG - dispatch pc=32, inst=RETURN_CONST(arg=1, lineno=1065)
2024-06-06 03:46:35,085 - DEBUG - stack []
2024-06-06 03:46:35,085 - DEBUG - end state. edges=[]
2024-06-06 03:46:35,085 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:35,085 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:35,086 - DEBUG - defmap: {}
2024-06-06 03:46:35,086 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:35,086 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:35,086 - DEBUG - keep phismap: {}
2024-06-06 03:46:35,086 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:35,086 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:35,086 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$x14.2'}), (16, {'func': '$4load_global.0', 'args': ['$x14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'res': '$y24.4'}), (26, {'res': '$const26.5'}), (28, {'res': '$const28.6'}), (30, {'start': '$const26.5', 'end': '$const28.6', 'container': '$y24.4', 'value': '$16call.3', 'res': '$30store_slice.8', 'slicevar': '$30store_slice.7'}), (32, {'retval': '$const32.9', 'castval': '$32return_const.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:35,087 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f215e0>) ['$4load_global.0']
    $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$16call.3', '$4load_global.0', 'x']
    $const26.5 = const(NoneType, None)       ['$const26.5']
    $const28.6 = const(NoneType, None)       ['$const28.6']
    $30store_slice.7 = global(slice: <class 'slice'>) ['$30store_slice.7']
    $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1065), Var($const28.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$30store_slice.7', '$30store_slice.8', '$const26.5', '$const28.6']
    y[$30store_slice.8] = $16call.3          ['$16call.3', '$30store_slice.8', 'y']
    $const32.9 = const(NoneType, None)       ['$const32.9']
    $32return_const.10 = cast(value=$const32.9) ['$32return_const.10', '$const32.9']
    return $32return_const.10                ['$32return_const.10']

2024-06-06 03:46:35,092 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:35,092 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b87b90>
2024-06-06 03:46:35,092 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:35,092 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-06 03:46:35,092 - DEBUG - on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f215e0>)
2024-06-06 03:46:35,092 - DEBUG - on stmt: $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,092 - DEBUG - on stmt: $const26.5 = const(NoneType, None)
2024-06-06 03:46:35,092 - DEBUG - on stmt: $const28.6 = const(NoneType, None)
2024-06-06 03:46:35,092 - DEBUG - on stmt: $30store_slice.7 = global(slice: <class 'slice'>)
2024-06-06 03:46:35,092 - DEBUG - on stmt: $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1065), Var($const28.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,092 - DEBUG - on stmt: y[slice(None, None, None)] = $16call.3
2024-06-06 03:46:35,092 - DEBUG - on stmt: $const32.9 = const(NoneType, None)
2024-06-06 03:46:35,093 - DEBUG - on stmt: $32return_const.10 = cast(value=$const32.9)
2024-06-06 03:46:35,093 - DEBUG - on stmt: return $32return_const.10
2024-06-06 03:46:35,093 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16call.3': [(<numba.core.ir.Assign object at 0x7fe9b9d14bf0>,
                            0)],
             '$30store_slice.7': [(<numba.core.ir.Assign object at 0x7fe9b9d150a0>,
                                   0)],
             '$30store_slice.8': [(<numba.core.ir.Assign object at 0x7fe9b9d151c0>,
                                   0)],
             '$32return_const.10': [(<numba.core.ir.Assign object at 0x7fe9b9d15460>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9d145f0>,
                                  0)],
             '$const26.5': [(<numba.core.ir.Assign object at 0x7fe9b9d14e00>,
                             0)],
             '$const28.6': [(<numba.core.ir.Assign object at 0x7fe9b9d14f50>,
                             0)],
             '$const32.9': [(<numba.core.ir.Assign object at 0x7fe9b9d15340>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b9d147a0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7fe9b9d140b0>, 0)]})
2024-06-06 03:46:35,093 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9b87b90>
2024-06-06 03:46:35,110 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=1, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=1, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	KW_NAMES(arg=1, lineno=3)
          92	CALL(arg=2, lineno=3)
         100	STORE_FAST(arg=2, lineno=3)
         102	LOAD_CONST(arg=2, lineno=4)
         104	LOAD_FAST(arg=2, lineno=4)
         106	LOAD_CONST(arg=0, lineno=4)
         108	LOAD_CONST(arg=3, lineno=4)
         110	STORE_SLICE(arg=None, lineno=4)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_FAST(arg=2, lineno=5)
         116	LOAD_CONST(arg=4, lineno=5)
         118	LOAD_CONST(arg=0, lineno=5)
         120	STORE_SLICE(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         132	LOAD_GLOBAL(arg=11, lineno=6)
         142	LOAD_CONST(arg=2, lineno=6)
         144	LOAD_CONST(arg=4, lineno=6)
         146	CALL(arg=2, lineno=6)
         154	UNARY_NEGATIVE(arg=None, lineno=6)
         156	LOAD_FAST(arg=1, lineno=6)
         158	LOAD_CONST(arg=2, lineno=6)
         160	BINARY_SUBSCR(arg=None, lineno=6)
         164	LOAD_GLOBAL(arg=13, lineno=6)
         174	LOAD_CONST(arg=2, lineno=6)
         176	LOAD_CONST(arg=3, lineno=6)
         178	CALL(arg=2, lineno=6)
         186	BINARY_OP(arg=10, lineno=6)
         190	CALL(arg=2, lineno=6)
         198	GET_ITER(arg=None, lineno=6)
>        200	FOR_ITER(arg=4, lineno=6)
         204	STORE_FAST(arg=3, lineno=6)
         206	LOAD_CONST(arg=2, lineno=7)
         208	STORE_FAST(arg=4, lineno=7)
         210	JUMP_BACKWARD(arg=6, lineno=7)
>        212	END_FOR(arg=None, lineno=6)
         214	LOAD_FAST(arg=2, lineno=8)
         216	RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:35,110 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:35,110 - DEBUG - stack: []
2024-06-06 03:46:35,110 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:35,110 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-06 03:46:35,111 - DEBUG - stack []
2024-06-06 03:46:35,111 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-06 03:46:35,111 - DEBUG - stack []
2024-06-06 03:46:35,111 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-06 03:46:35,111 - DEBUG - stack []
2024-06-06 03:46:35,111 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-06 03:46:35,111 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:35,111 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=1, lineno=2)
2024-06-06 03:46:35,111 - DEBUG - stack ['$6load_attr.1']
2024-06-06 03:46:35,111 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:35,112 - DEBUG - stack []
2024-06-06 03:46:35,112 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2024-06-06 03:46:35,112 - DEBUG - stack ['$28load_global.2']
2024-06-06 03:46:35,112 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-06 03:46:35,112 - DEBUG - stack ['$null$38.3', '$38load_attr.4']
2024-06-06 03:46:35,112 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:35,112 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5']
2024-06-06 03:46:35,112 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2024-06-06 03:46:35,112 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$60load_global.6']
2024-06-06 03:46:35,112 - DEBUG - dispatch pc=90, inst=KW_NAMES(arg=1, lineno=3)
2024-06-06 03:46:35,113 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:35,113 - DEBUG - dispatch pc=92, inst=CALL(arg=2, lineno=3)
2024-06-06 03:46:35,113 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:35,113 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=3)
2024-06-06 03:46:35,113 - DEBUG - stack ['$92call.8']
2024-06-06 03:46:35,113 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-06 03:46:35,113 - DEBUG - stack []
2024-06-06 03:46:35,113 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-06 03:46:35,113 - DEBUG - stack ['$const102.9']
2024-06-06 03:46:35,113 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-06 03:46:35,113 - DEBUG - stack ['$const102.9', '$out0104.10']
2024-06-06 03:46:35,113 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-06 03:46:35,113 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11']
2024-06-06 03:46:35,113 - DEBUG - dispatch pc=110, inst=STORE_SLICE(arg=None, lineno=4)
2024-06-06 03:46:35,114 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11', '$const108.12']
2024-06-06 03:46:35,114 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-06 03:46:35,114 - DEBUG - stack []
2024-06-06 03:46:35,114 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-06 03:46:35,114 - DEBUG - stack ['$const112.15']
2024-06-06 03:46:35,114 - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-06 03:46:35,114 - DEBUG - stack ['$const112.15', '$out0114.16']
2024-06-06 03:46:35,114 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-06 03:46:35,114 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17']
2024-06-06 03:46:35,114 - DEBUG - dispatch pc=120, inst=STORE_SLICE(arg=None, lineno=5)
2024-06-06 03:46:35,114 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17', '$const118.18']
2024-06-06 03:46:35,114 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-06 03:46:35,114 - DEBUG - stack []
2024-06-06 03:46:35,115 - DEBUG - dispatch pc=132, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-06 03:46:35,115 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-06 03:46:35,115 - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:35,115 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23']
2024-06-06 03:46:35,115 - DEBUG - dispatch pc=144, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-06 03:46:35,115 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25']
2024-06-06 03:46:35,115 - DEBUG - dispatch pc=146, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:35,115 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25', '$const144.26']
2024-06-06 03:46:35,115 - DEBUG - dispatch pc=154, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-06 03:46:35,115 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$146call.27']
2024-06-06 03:46:35,115 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-06 03:46:35,115 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28']
2024-06-06 03:46:35,115 - DEBUG - dispatch pc=158, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:35,115 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29']
2024-06-06 03:46:35,116 - DEBUG - dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-06 03:46:35,116 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29', '$const158.30']
2024-06-06 03:46:35,116 - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-06 03:46:35,116 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31']
2024-06-06 03:46:35,116 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:35,116 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32']
2024-06-06 03:46:35,116 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-06 03:46:35,116 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34']
2024-06-06 03:46:35,116 - DEBUG - dispatch pc=178, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:35,116 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34', '$const176.35']
2024-06-06 03:46:35,116 - DEBUG - dispatch pc=186, inst=BINARY_OP(arg=10, lineno=6)
2024-06-06 03:46:35,116 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$178call.36']
2024-06-06 03:46:35,116 - DEBUG - dispatch pc=190, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:35,117 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$binop_sub186.37']
2024-06-06 03:46:35,117 - DEBUG - dispatch pc=198, inst=GET_ITER(arg=None, lineno=6)
2024-06-06 03:46:35,117 - DEBUG - stack ['$190call.38']
2024-06-06 03:46:35,117 - DEBUG - end state. edges=[Edge(pc=200, stack=('$198get_iter.39',), blockstack=(), npush=0)]
2024-06-06 03:46:35,117 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:35,117 - DEBUG - stack: ['$phi200.0']
2024-06-06 03:46:35,117 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=1)
2024-06-06 03:46:35,117 - DEBUG - dispatch pc=200, inst=FOR_ITER(arg=4, lineno=6)
2024-06-06 03:46:35,117 - DEBUG - stack ['$phi200.0']
2024-06-06 03:46:35,117 - DEBUG - end state. edges=[Edge(pc=212, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0), Edge(pc=204, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:35,117 - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:35,117 - DEBUG - stack: ['$phi212.0', '$phi212.1']
2024-06-06 03:46:35,117 - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=2)
2024-06-06 03:46:35,118 - DEBUG - dispatch pc=212, inst=END_FOR(arg=None, lineno=6)
2024-06-06 03:46:35,118 - DEBUG - stack ['$phi212.0', '$phi212.1']
2024-06-06 03:46:35,118 - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-06 03:46:35,118 - DEBUG - stack []
2024-06-06 03:46:35,118 - DEBUG - dispatch pc=216, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:35,118 - DEBUG - stack ['$out0214.2']
2024-06-06 03:46:35,118 - DEBUG - end state. edges=[]
2024-06-06 03:46:35,118 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:35,118 - DEBUG - stack: ['$phi204.0', '$phi204.1']
2024-06-06 03:46:35,118 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=2)
2024-06-06 03:46:35,118 - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=3, lineno=6)
2024-06-06 03:46:35,118 - DEBUG - stack ['$phi204.0', '$phi204.1']
2024-06-06 03:46:35,118 - DEBUG - dispatch pc=206, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-06 03:46:35,118 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:35,119 - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=4, lineno=7)
2024-06-06 03:46:35,119 - DEBUG - stack ['$phi204.0', '$const206.2']
2024-06-06 03:46:35,119 - DEBUG - dispatch pc=210, inst=JUMP_BACKWARD(arg=6, lineno=7)
2024-06-06 03:46:35,119 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:35,119 - DEBUG - end state. edges=[Edge(pc=200, stack=('$phi204.0',), blockstack=(), npush=0)]
2024-06-06 03:46:35,119 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:35,119 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:35,119 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=1): {'$phi200.0'},
             State(pc_initial=204 nstack_initial=2): {'$phi204.1'},
             State(pc_initial=212 nstack_initial=2): set()})
2024-06-06 03:46:35,119 - DEBUG - defmap: {'$phi200.0': State(pc_initial=0 nstack_initial=0),
 '$phi204.1': State(pc_initial=200 nstack_initial=1),
 '$phi212.1': State(pc_initial=200 nstack_initial=1)}
2024-06-06 03:46:35,120 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi204.0',
                            State(pc_initial=204 nstack_initial=2))},
             '$phi204.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:35,120 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:35,121 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:35,122 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:35,122 - DEBUG - keep phismap: {'$phi200.0': {('$198get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi204.1': {('$200for_iter.2', State(pc_initial=200 nstack_initial=1))}}
2024-06-06 03:46:35,122 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi200.0': '$198get_iter.39'},
             State(pc_initial=200 nstack_initial=1): {'$phi204.1': '$200for_iter.2'}})
2024-06-06 03:46:35,123 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:35,123 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.4'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (92, {'func': '$38load_attr.4', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': 1, 'res': '$92call.8'}), (100, {'value': '$92call.8'}), (102, {'res': '$const102.9'}), (104, {'res': '$out0104.10'}), (106, {'res': '$const106.11'}), (108, {'res': '$const108.12'}), (110, {'start': '$const106.11', 'end': '$const108.12', 'container': '$out0104.10', 'value': '$const102.9', 'res': '$110store_slice.14', 'slicevar': '$110store_slice.13'}), (112, {'res': '$const112.15'}), (114, {'res': '$out0114.16'}), (116, {'res': '$const116.17'}), (118, {'res': '$const118.18'}), (120, {'start': '$const116.17', 'end': '$const118.18', 'container': '$out0114.16', 'value': '$const112.15', 'res': '$120store_slice.20', 'slicevar': '$120store_slice.19'}), (122, {'idx': 4, 'res': '$122load_global.21'}), (132, {'idx': 5, 'res': '$132load_global.23'}), (142, {'res': '$const142.25'}), (144, {'res': '$const144.26'}), (146, {'func': '$132load_global.23', 'args': ['$const142.25', '$const144.26'], 'kw_names': None, 'res': '$146call.27'}), (154, {'value': '$146call.27', 'res': '$154unary_negative.28'}), (156, {'res': '$full_shape0156.29'}), (158, {'res': '$const158.30'}), (160, {'index': '$const158.30', 'target': '$full_shape0156.29', 'res': '$160binary_subscr.31'}), (164, {'idx': 6, 'res': '$164load_global.32'}), (174, {'res': '$const174.34'}), (176, {'res': '$const176.35'}), (178, {'func': '$164load_global.32', 'args': ['$const174.34', '$const176.35'], 'kw_names': None, 'res': '$178call.36'}), (186, {'op': '-', 'lhs': '$160binary_subscr.31', 'rhs': '$178call.36', 'res': '$binop_sub186.37'}), (190, {'func': '$122load_global.21', 'args': ['$154unary_negative.28', '$binop_sub186.37'], 'kw_names': None, 'res': '$190call.38'}), (198, {'value': '$190call.38', 'res': '$198get_iter.39'})), outgoing_phis={'$phi200.0': '$198get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$198get_iter.39',)})
2024-06-06 03:46:35,123 - DEBUG - block_infos State(pc_initial=200 nstack_initial=1):
AdaptBlockInfo(insts=((200, {'iterator': '$phi200.0', 'pair': '$200for_iter.1', 'indval': '$200for_iter.2', 'pred': '$200for_iter.3'}),), outgoing_phis={'$phi204.1': '$200for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={212: ('$phi200.0', '$200for_iter.2'), 204: ('$phi200.0', '$200for_iter.2')})
2024-06-06 03:46:35,123 - DEBUG - block_infos State(pc_initial=204 nstack_initial=2):
AdaptBlockInfo(insts=((204, {'value': '$phi204.1'}), (206, {'res': '$const206.2'}), (208, {'value': '$const206.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi204.0',)})
2024-06-06 03:46:35,123 - DEBUG - block_infos State(pc_initial=212 nstack_initial=2):
AdaptBlockInfo(insts=((214, {'res': '$out0214.2'}), (216, {'retval': '$out0214.2', 'castval': '$216return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:35,124 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$28load_global.2']
    $38load_attr.4 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.4']
    $60load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool_) ['$60load_global.6', '$70load_attr.7']
    out0 = call $38load_attr.4(full_shape0, func=$38load_attr.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.4', '$70load_attr.7', 'full_shape0', 'out0']
    $const102.9 = const(int, 0)              ['$const102.9']
    $const106.11 = const(NoneType, None)     ['$const106.11']
    $const108.12 = const(int, 1)             ['$const108.12']
    $110store_slice.13 = global(slice: <class 'slice'>) ['$110store_slice.13']
    $110store_slice.14 = call $110store_slice.13($const106.11, $const108.12, func=$110store_slice.13, args=(Var($const106.11, <string>:4), Var($const108.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$110store_slice.13', '$110store_slice.14', '$const106.11', '$const108.12']
    out0[$110store_slice.14] = $const102.9   ['$110store_slice.14', '$const102.9', 'out0']
    $const112.15 = const(int, 0)             ['$const112.15']
    $const116.17 = const(int, -1)            ['$const116.17']
    $const118.18 = const(NoneType, None)     ['$const118.18']
    $120store_slice.19 = global(slice: <class 'slice'>) ['$120store_slice.19']
    $120store_slice.20 = call $120store_slice.19($const116.17, $const118.18, func=$120store_slice.19, args=(Var($const116.17, <string>:5), Var($const118.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$120store_slice.19', '$120store_slice.20', '$const116.17', '$const118.18']
    out0[$120store_slice.20] = $const112.15  ['$120store_slice.20', '$const112.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $132load_global.23 = global(min: <built-in function min>) ['$132load_global.23']
    $const142.25 = const(int, 0)             ['$const142.25']
    $const144.26 = const(int, -1)            ['$const144.26']
    $146call.27 = call $132load_global.23($const142.25, $const144.26, func=$132load_global.23, args=[Var($const142.25, <string>:6), Var($const144.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$132load_global.23', '$146call.27', '$const142.25', '$const144.26']
    $154unary_negative.28 = unary(fn=<built-in function neg>, value=$146call.27) ['$146call.27', '$154unary_negative.28']
    $const158.30 = const(int, 0)             ['$const158.30']
    $160binary_subscr.31 = getitem(value=full_shape0, index=$const158.30, fn=<built-in function getitem>) ['$160binary_subscr.31', '$const158.30', 'full_shape0']
    $164load_global.32 = global(max: <built-in function max>) ['$164load_global.32']
    $const174.34 = const(int, 0)             ['$const174.34']
    $const176.35 = const(int, 1)             ['$const176.35']
    $178call.36 = call $164load_global.32($const174.34, $const176.35, func=$164load_global.32, args=[Var($const174.34, <string>:6), Var($const176.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_global.32', '$178call.36', '$const174.34', '$const176.35']
    $binop_sub186.37 = $160binary_subscr.31 - $178call.36 ['$160binary_subscr.31', '$178call.36', '$binop_sub186.37']
    $190call.38 = call $122load_global.21($154unary_negative.28, $binop_sub186.37, func=$122load_global.21, args=[Var($154unary_negative.28, <string>:6), Var($binop_sub186.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$154unary_negative.28', '$190call.38', '$binop_sub186.37']
    $198get_iter.39 = getiter(value=$190call.38) ['$190call.38', '$198get_iter.39']
    $phi200.0 = $198get_iter.39              ['$198get_iter.39', '$phi200.0']
    jump 200                                 []
label 200:
    $200for_iter.1 = iternext(value=$phi200.0) ['$200for_iter.1', '$phi200.0']
    $200for_iter.2 = pair_first(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.2']
    $200for_iter.3 = pair_second(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.3']
    $phi204.1 = $200for_iter.2               ['$200for_iter.2', '$phi204.1']
    branch $200for_iter.3, 204, 212          ['$200for_iter.3']
label 204:
    index00 = $phi204.1                      ['$phi204.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 200                                 []
label 212:
    $216return_value.3 = cast(value=out0)    ['$216return_value.3', 'out0']
    return $216return_value.3                ['$216return_value.3']

2024-06-06 03:46:35,135 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:35,136 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9bacd10>
2024-06-06 03:46:35,136 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:35,136 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:35,136 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:35,136 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:35,136 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:35,136 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:35,136 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,136 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:35,136 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:35,136 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:35,136 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:35,137 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,137 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:35,137 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:35,137 - DEBUG - on stmt: $const116.17.1 = const(int, -1)
2024-06-06 03:46:35,137 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:35,137 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:35,137 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,137 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:35,137 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:35,137 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:35,137 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:35,137 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:35,137 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,138 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:35,138 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:35,138 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:35,138 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:35,138 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:35,138 - DEBUG - on stmt: $const176.35.1 = const(int, 1)
2024-06-06 03:46:35,138 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,138 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:35,138 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,138 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:35,138 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:35,139 - DEBUG - on stmt: jump 200
2024-06-06 03:46:35,139 - DEBUG - ==== SSA block analysis pass on 200
2024-06-06 03:46:35,139 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9bacd10>
2024-06-06 03:46:35,139 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:35,139 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:35,139 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:35,139 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:35,139 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 214
2024-06-06 03:46:35,139 - DEBUG - ==== SSA block analysis pass on 204
2024-06-06 03:46:35,139 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9bacd10>
2024-06-06 03:46:35,139 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:35,139 - DEBUG - on stmt: jump 212
2024-06-06 03:46:35,139 - DEBUG - ==== SSA block analysis pass on 214
2024-06-06 03:46:35,139 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9bacd10>
2024-06-06 03:46:35,140 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:35,140 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:35,140 - DEBUG - ==== SSA block analysis pass on 212
2024-06-06 03:46:35,140 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9bacd10>
2024-06-06 03:46:35,140 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:35,140 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:35,140 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:35,140 - DEBUG - on stmt: $const14.4 = const(int, -1)
2024-06-06 03:46:35,140 - DEBUG - on stmt: stencil_index.1 = $const14.4 + index00
2024-06-06 03:46:35,140 - DEBUG - on stmt: $16binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:35,140 - DEBUG - on stmt: $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5
2024-06-06 03:46:35,140 - DEBUG - on stmt: $const26.8 = const(int, 0)
2024-06-06 03:46:35,141 - DEBUG - on stmt: stencil_index.2 = $const26.8 + index00
2024-06-06 03:46:35,141 - DEBUG - on stmt: $28binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-06 03:46:35,141 - DEBUG - on stmt: $const34.11 = const(int, 1)
2024-06-06 03:46:35,141 - DEBUG - on stmt: stencil_index.3 = $const34.11 + index00
2024-06-06 03:46:35,141 - DEBUG - on stmt: $36binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-06 03:46:35,141 - DEBUG - on stmt: $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12
2024-06-06 03:46:35,141 - DEBUG - on stmt: $binop_and_44.14 = $20compare_op.6 & $40compare_op.13
2024-06-06 03:46:35,141 - DEBUG - on stmt: $48return_value.15 = cast(value=$binop_and_44.14)
2024-06-06 03:46:35,141 - DEBUG - on stmt: out0[index00] = $48return_value.15
2024-06-06 03:46:35,141 - DEBUG - on stmt: jump 213
2024-06-06 03:46:35,141 - DEBUG - ==== SSA block analysis pass on 213
2024-06-06 03:46:35,141 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9bacd10>
2024-06-06 03:46:35,141 - DEBUG - on stmt: jump 200
2024-06-06 03:46:35,143 - DEBUG - defs defaultdict(<class 'list'>,
            {'$110store_slice.13.1': [(<numba.core.ir.Assign object at 0x7fe9b9b9fc50>,
                                       0)],
             '$110store_slice.14.1': [(<numba.core.ir.Assign object at 0x7fe9b9b9fd70>,
                                       0)],
             '$120store_slice.19.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba4410>,
                                       0)],
             '$120store_slice.20.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba4530>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba46b0>,
                                       0)],
             '$132load_global.23.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba4800>,
                                       0)],
             '$146call.27.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba4c50>,
                                0)],
             '$154unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba4d70>,
                                          0)],
             '$160binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba5130>,
                                         0)],
             '$164load_global.32.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba5250>,
                                       0)],
             '$16binary_subscr.5': [(<numba.core.ir.Assign object at 0x7fe9b9b9e000>,
                                     212)],
             '$178call.36.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba56a0>,
                                0)],
             '$190call.38.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba5970>,
                                0)],
             '$198get_iter.39.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba5a90>,
                                    0)],
             '$200for_iter.1.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba5af0>,
                                   200)],
             '$200for_iter.2.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba5c10>,
                                   200)],
             '$200for_iter.3.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba5d30>,
                                   200)],
             '$20compare_op.6': [(<numba.core.ir.Assign object at 0x7fe9b9b93380>,
                                  212)],
             '$216return_value.3.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba64b0>,
                                       214)],
             '$28binary_subscr.9': [(<numba.core.ir.Assign object at 0x7fe9b9b9e240>,
                                     212)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x7fe9b9b9eed0>,
                                     0)],
             '$36binary_subscr.12': [(<numba.core.ir.Assign object at 0x7fe9b9b9e480>,
                                      212)],
             '$38load_attr.4.1': [(<numba.core.ir.Assign object at 0x7fe9b9b9f020>,
                                   0)],
             '$40compare_op.13': [(<numba.core.ir.Assign object at 0x7fe9b9b9a870>,
                                   212)],
             '$48return_value.15': [(<numba.core.ir.Assign object at 0x7fe9b9b9b500>,
                                     212)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x7fe9b9b9f260>,
                                     0)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x7fe9b9b9f3b0>,
                                   0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7fe9b9b9ddc0>,
                                    212)],
             '$binop_and_44.14': [(<numba.core.ir.Assign object at 0x7fe9b9b9aa50>,
                                   212)],
             '$binop_sub186.37.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba57f0>,
                                     0)],
             '$const102.9.1': [(<numba.core.ir.Assign object at 0x7fe9b9b9f770>,
                                0)],
             '$const106.11.1': [(<numba.core.ir.Assign object at 0x7fe9b9b9f9b0>,
                                 0)],
             '$const108.12.1': [(<numba.core.ir.Assign object at 0x7fe9b9b9fb00>,
                                 0)],
             '$const112.15.1': [(<numba.core.ir.Assign object at 0x7fe9b9b9fef0>,
                                 0)],
             '$const116.17.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba4170>,
                                 0)],
             '$const118.18.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba42c0>,
                                 0)],
             '$const14.4': [(<numba.core.ir.Assign object at 0x7fe9b9d15c40>,
                             212)],
             '$const142.25.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba4950>,
                                 0)],
             '$const144.26.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba4aa0>,
                                 0)],
             '$const158.30.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba4fb0>,
                                 0)],
             '$const174.34.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba53a0>,
                                 0)],
             '$const176.35.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba54f0>,
                                 0)],
             '$const26.8': [(<numba.core.ir.Assign object at 0x7fe9b9b93560>,
                             212)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x7fe9b9b99370>,
                              212)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9b9b912e0>,
                            212)],
             '$phi200.0.1': [(<numba.core.ir.Assign object at 0x7fe9b9b9ed80>,
                              0)],
             '$phi204.1.1': [(<numba.core.ir.Assign object at 0x7fe9b9ba5df0>,
                              200)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7fe9b9b9ec90>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7fe9b9ba5fa0>,
                          204)],
             'out0': [(<numba.core.ir.Assign object at 0x7fe9b9b9f560>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7fe9b9b9dd00>,
                                212)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7fe9b9b9df40>,
                                  212)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7fe9b9b9e180>,
                                  212)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7fe9b9b9e3c0>,
                                  212)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b9b9e900>, 0)]})
2024-06-06 03:46:35,143 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9bacd10>
2024-06-06 03:46:35,353 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          14	LOAD_FAST(arg=0, lineno=1065)
          16	CALL(arg=1, lineno=1065)
          24	LOAD_FAST(arg=1, lineno=1065)
          26	LOAD_CONST(arg=1, lineno=1065)
          28	LOAD_CONST(arg=1, lineno=1065)
          30	STORE_SLICE(arg=None, lineno=1065)
          32	RETURN_CONST(arg=1, lineno=1065)
2024-06-06 03:46:35,353 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:35,353 - DEBUG - stack: []
2024-06-06 03:46:35,353 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:35,353 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-06-06 03:46:35,353 - DEBUG - stack []
2024-06-06 03:46:35,353 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-06-06 03:46:35,353 - DEBUG - stack []
2024-06-06 03:46:35,354 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-06-06 03:46:35,354 - DEBUG - stack []
2024-06-06 03:46:35,354 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=1065)
2024-06-06 03:46:35,354 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:35,354 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=1065)
2024-06-06 03:46:35,354 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2']
2024-06-06 03:46:35,354 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1065)
2024-06-06 03:46:35,354 - DEBUG - stack ['$16call.3']
2024-06-06 03:46:35,355 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-06 03:46:35,355 - DEBUG - stack ['$16call.3', '$y24.4']
2024-06-06 03:46:35,355 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-06 03:46:35,355 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5']
2024-06-06 03:46:35,355 - DEBUG - dispatch pc=30, inst=STORE_SLICE(arg=None, lineno=1065)
2024-06-06 03:46:35,355 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5', '$const28.6']
2024-06-06 03:46:35,355 - DEBUG - dispatch pc=32, inst=RETURN_CONST(arg=1, lineno=1065)
2024-06-06 03:46:35,355 - DEBUG - stack []
2024-06-06 03:46:35,355 - DEBUG - end state. edges=[]
2024-06-06 03:46:35,356 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:35,356 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:35,356 - DEBUG - defmap: {}
2024-06-06 03:46:35,356 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:35,356 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:35,356 - DEBUG - keep phismap: {}
2024-06-06 03:46:35,356 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:35,356 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:35,356 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$x14.2'}), (16, {'func': '$4load_global.0', 'args': ['$x14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'res': '$y24.4'}), (26, {'res': '$const26.5'}), (28, {'res': '$const28.6'}), (30, {'start': '$const26.5', 'end': '$const28.6', 'container': '$y24.4', 'value': '$16call.3', 'res': '$30store_slice.8', 'slicevar': '$30store_slice.7'}), (32, {'retval': '$const32.9', 'castval': '$32return_const.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:35,357 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f215e0>) ['$4load_global.0']
    $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$16call.3', '$4load_global.0', 'x']
    $const26.5 = const(NoneType, None)       ['$const26.5']
    $const28.6 = const(NoneType, None)       ['$const28.6']
    $30store_slice.7 = global(slice: <class 'slice'>) ['$30store_slice.7']
    $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1065), Var($const28.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$30store_slice.7', '$30store_slice.8', '$const26.5', '$const28.6']
    y[$30store_slice.8] = $16call.3          ['$16call.3', '$30store_slice.8', 'y']
    $const32.9 = const(NoneType, None)       ['$const32.9']
    $32return_const.10 = cast(value=$const32.9) ['$32return_const.10', '$const32.9']
    return $32return_const.10                ['$32return_const.10']

2024-06-06 03:46:35,362 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:35,362 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9ab8050>
2024-06-06 03:46:35,362 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:35,362 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-06 03:46:35,362 - DEBUG - on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f215e0>)
2024-06-06 03:46:35,362 - DEBUG - on stmt: $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,362 - DEBUG - on stmt: $const26.5 = const(NoneType, None)
2024-06-06 03:46:35,362 - DEBUG - on stmt: $const28.6 = const(NoneType, None)
2024-06-06 03:46:35,363 - DEBUG - on stmt: $30store_slice.7 = global(slice: <class 'slice'>)
2024-06-06 03:46:35,363 - DEBUG - on stmt: $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1065), Var($const28.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,363 - DEBUG - on stmt: y[slice(None, None, None)] = $16call.3
2024-06-06 03:46:35,363 - DEBUG - on stmt: $const32.9 = const(NoneType, None)
2024-06-06 03:46:35,363 - DEBUG - on stmt: $32return_const.10 = cast(value=$const32.9)
2024-06-06 03:46:35,363 - DEBUG - on stmt: return $32return_const.10
2024-06-06 03:46:35,363 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16call.3': [(<numba.core.ir.Assign object at 0x7fe9b9ab98b0>,
                            0)],
             '$30store_slice.7': [(<numba.core.ir.Assign object at 0x7fe9b9ab8f50>,
                                   0)],
             '$30store_slice.8': [(<numba.core.ir.Assign object at 0x7fe9b9ab8e90>,
                                   0)],
             '$32return_const.10': [(<numba.core.ir.Assign object at 0x7fe9b9ab8d40>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9ab9730>,
                                  0)],
             '$const26.5': [(<numba.core.ir.Assign object at 0x7fe9b9ab9250>,
                             0)],
             '$const28.6': [(<numba.core.ir.Assign object at 0x7fe9b9ab90d0>,
                             0)],
             '$const32.9': [(<numba.core.ir.Assign object at 0x7fe9b9ab8b30>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b9aba5d0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7fe9b9aba330>, 0)]})
2024-06-06 03:46:35,363 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9ab8050>
2024-06-06 03:46:35,381 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=1, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=1, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	KW_NAMES(arg=1, lineno=3)
          92	CALL(arg=2, lineno=3)
         100	STORE_FAST(arg=2, lineno=3)
         102	LOAD_CONST(arg=2, lineno=4)
         104	LOAD_FAST(arg=2, lineno=4)
         106	LOAD_CONST(arg=0, lineno=4)
         108	LOAD_CONST(arg=3, lineno=4)
         110	STORE_SLICE(arg=None, lineno=4)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_FAST(arg=2, lineno=5)
         116	LOAD_CONST(arg=4, lineno=5)
         118	LOAD_CONST(arg=0, lineno=5)
         120	STORE_SLICE(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         132	LOAD_GLOBAL(arg=11, lineno=6)
         142	LOAD_CONST(arg=2, lineno=6)
         144	LOAD_CONST(arg=4, lineno=6)
         146	CALL(arg=2, lineno=6)
         154	UNARY_NEGATIVE(arg=None, lineno=6)
         156	LOAD_FAST(arg=1, lineno=6)
         158	LOAD_CONST(arg=2, lineno=6)
         160	BINARY_SUBSCR(arg=None, lineno=6)
         164	LOAD_GLOBAL(arg=13, lineno=6)
         174	LOAD_CONST(arg=2, lineno=6)
         176	LOAD_CONST(arg=3, lineno=6)
         178	CALL(arg=2, lineno=6)
         186	BINARY_OP(arg=10, lineno=6)
         190	CALL(arg=2, lineno=6)
         198	GET_ITER(arg=None, lineno=6)
>        200	FOR_ITER(arg=4, lineno=6)
         204	STORE_FAST(arg=3, lineno=6)
         206	LOAD_CONST(arg=2, lineno=7)
         208	STORE_FAST(arg=4, lineno=7)
         210	JUMP_BACKWARD(arg=6, lineno=7)
>        212	END_FOR(arg=None, lineno=6)
         214	LOAD_FAST(arg=2, lineno=8)
         216	RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:35,381 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:35,381 - DEBUG - stack: []
2024-06-06 03:46:35,381 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:35,382 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-06 03:46:35,382 - DEBUG - stack []
2024-06-06 03:46:35,382 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-06 03:46:35,382 - DEBUG - stack []
2024-06-06 03:46:35,382 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-06 03:46:35,382 - DEBUG - stack []
2024-06-06 03:46:35,382 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-06 03:46:35,382 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:35,382 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=1, lineno=2)
2024-06-06 03:46:35,383 - DEBUG - stack ['$6load_attr.1']
2024-06-06 03:46:35,383 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:35,383 - DEBUG - stack []
2024-06-06 03:46:35,383 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2024-06-06 03:46:35,383 - DEBUG - stack ['$28load_global.2']
2024-06-06 03:46:35,383 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-06 03:46:35,383 - DEBUG - stack ['$null$38.3', '$38load_attr.4']
2024-06-06 03:46:35,383 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:35,383 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5']
2024-06-06 03:46:35,384 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2024-06-06 03:46:35,384 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$60load_global.6']
2024-06-06 03:46:35,384 - DEBUG - dispatch pc=90, inst=KW_NAMES(arg=1, lineno=3)
2024-06-06 03:46:35,384 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:35,384 - DEBUG - dispatch pc=92, inst=CALL(arg=2, lineno=3)
2024-06-06 03:46:35,384 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:35,384 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=3)
2024-06-06 03:46:35,384 - DEBUG - stack ['$92call.8']
2024-06-06 03:46:35,384 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-06 03:46:35,384 - DEBUG - stack []
2024-06-06 03:46:35,384 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-06 03:46:35,384 - DEBUG - stack ['$const102.9']
2024-06-06 03:46:35,385 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-06 03:46:35,385 - DEBUG - stack ['$const102.9', '$out0104.10']
2024-06-06 03:46:35,385 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-06 03:46:35,385 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11']
2024-06-06 03:46:35,385 - DEBUG - dispatch pc=110, inst=STORE_SLICE(arg=None, lineno=4)
2024-06-06 03:46:35,385 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11', '$const108.12']
2024-06-06 03:46:35,385 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-06 03:46:35,385 - DEBUG - stack []
2024-06-06 03:46:35,385 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-06 03:46:35,385 - DEBUG - stack ['$const112.15']
2024-06-06 03:46:35,385 - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-06 03:46:35,385 - DEBUG - stack ['$const112.15', '$out0114.16']
2024-06-06 03:46:35,385 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-06 03:46:35,385 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17']
2024-06-06 03:46:35,386 - DEBUG - dispatch pc=120, inst=STORE_SLICE(arg=None, lineno=5)
2024-06-06 03:46:35,386 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17', '$const118.18']
2024-06-06 03:46:35,386 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-06 03:46:35,386 - DEBUG - stack []
2024-06-06 03:46:35,386 - DEBUG - dispatch pc=132, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-06 03:46:35,386 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-06 03:46:35,386 - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:35,386 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23']
2024-06-06 03:46:35,386 - DEBUG - dispatch pc=144, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-06 03:46:35,386 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25']
2024-06-06 03:46:35,386 - DEBUG - dispatch pc=146, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:35,386 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25', '$const144.26']
2024-06-06 03:46:35,386 - DEBUG - dispatch pc=154, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-06 03:46:35,387 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$146call.27']
2024-06-06 03:46:35,387 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-06 03:46:35,387 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28']
2024-06-06 03:46:35,387 - DEBUG - dispatch pc=158, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:35,387 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29']
2024-06-06 03:46:35,387 - DEBUG - dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-06 03:46:35,387 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29', '$const158.30']
2024-06-06 03:46:35,387 - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-06 03:46:35,387 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31']
2024-06-06 03:46:35,387 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:35,387 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32']
2024-06-06 03:46:35,387 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-06 03:46:35,387 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34']
2024-06-06 03:46:35,387 - DEBUG - dispatch pc=178, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:35,388 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34', '$const176.35']
2024-06-06 03:46:35,388 - DEBUG - dispatch pc=186, inst=BINARY_OP(arg=10, lineno=6)
2024-06-06 03:46:35,388 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$178call.36']
2024-06-06 03:46:35,388 - DEBUG - dispatch pc=190, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:35,388 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$binop_sub186.37']
2024-06-06 03:46:35,388 - DEBUG - dispatch pc=198, inst=GET_ITER(arg=None, lineno=6)
2024-06-06 03:46:35,388 - DEBUG - stack ['$190call.38']
2024-06-06 03:46:35,388 - DEBUG - end state. edges=[Edge(pc=200, stack=('$198get_iter.39',), blockstack=(), npush=0)]
2024-06-06 03:46:35,388 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:35,388 - DEBUG - stack: ['$phi200.0']
2024-06-06 03:46:35,388 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=1)
2024-06-06 03:46:35,388 - DEBUG - dispatch pc=200, inst=FOR_ITER(arg=4, lineno=6)
2024-06-06 03:46:35,388 - DEBUG - stack ['$phi200.0']
2024-06-06 03:46:35,389 - DEBUG - end state. edges=[Edge(pc=212, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0), Edge(pc=204, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:35,389 - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:35,389 - DEBUG - stack: ['$phi212.0', '$phi212.1']
2024-06-06 03:46:35,389 - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=2)
2024-06-06 03:46:35,389 - DEBUG - dispatch pc=212, inst=END_FOR(arg=None, lineno=6)
2024-06-06 03:46:35,389 - DEBUG - stack ['$phi212.0', '$phi212.1']
2024-06-06 03:46:35,389 - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-06 03:46:35,389 - DEBUG - stack []
2024-06-06 03:46:35,389 - DEBUG - dispatch pc=216, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:35,389 - DEBUG - stack ['$out0214.2']
2024-06-06 03:46:35,389 - DEBUG - end state. edges=[]
2024-06-06 03:46:35,389 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:35,389 - DEBUG - stack: ['$phi204.0', '$phi204.1']
2024-06-06 03:46:35,389 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=2)
2024-06-06 03:46:35,390 - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=3, lineno=6)
2024-06-06 03:46:35,390 - DEBUG - stack ['$phi204.0', '$phi204.1']
2024-06-06 03:46:35,390 - DEBUG - dispatch pc=206, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-06 03:46:35,390 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:35,390 - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=4, lineno=7)
2024-06-06 03:46:35,390 - DEBUG - stack ['$phi204.0', '$const206.2']
2024-06-06 03:46:35,390 - DEBUG - dispatch pc=210, inst=JUMP_BACKWARD(arg=6, lineno=7)
2024-06-06 03:46:35,390 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:35,390 - DEBUG - end state. edges=[Edge(pc=200, stack=('$phi204.0',), blockstack=(), npush=0)]
2024-06-06 03:46:35,390 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:35,390 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:35,390 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=1): {'$phi200.0'},
             State(pc_initial=204 nstack_initial=2): {'$phi204.1'},
             State(pc_initial=212 nstack_initial=2): set()})
2024-06-06 03:46:35,391 - DEBUG - defmap: {'$phi200.0': State(pc_initial=0 nstack_initial=0),
 '$phi204.1': State(pc_initial=200 nstack_initial=1),
 '$phi212.1': State(pc_initial=200 nstack_initial=1)}
2024-06-06 03:46:35,391 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi204.0',
                            State(pc_initial=204 nstack_initial=2))},
             '$phi204.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:35,392 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:35,392 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:35,393 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:35,393 - DEBUG - keep phismap: {'$phi200.0': {('$198get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi204.1': {('$200for_iter.2', State(pc_initial=200 nstack_initial=1))}}
2024-06-06 03:46:35,394 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi200.0': '$198get_iter.39'},
             State(pc_initial=200 nstack_initial=1): {'$phi204.1': '$200for_iter.2'}})
2024-06-06 03:46:35,394 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:35,394 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.4'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (92, {'func': '$38load_attr.4', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': 1, 'res': '$92call.8'}), (100, {'value': '$92call.8'}), (102, {'res': '$const102.9'}), (104, {'res': '$out0104.10'}), (106, {'res': '$const106.11'}), (108, {'res': '$const108.12'}), (110, {'start': '$const106.11', 'end': '$const108.12', 'container': '$out0104.10', 'value': '$const102.9', 'res': '$110store_slice.14', 'slicevar': '$110store_slice.13'}), (112, {'res': '$const112.15'}), (114, {'res': '$out0114.16'}), (116, {'res': '$const116.17'}), (118, {'res': '$const118.18'}), (120, {'start': '$const116.17', 'end': '$const118.18', 'container': '$out0114.16', 'value': '$const112.15', 'res': '$120store_slice.20', 'slicevar': '$120store_slice.19'}), (122, {'idx': 4, 'res': '$122load_global.21'}), (132, {'idx': 5, 'res': '$132load_global.23'}), (142, {'res': '$const142.25'}), (144, {'res': '$const144.26'}), (146, {'func': '$132load_global.23', 'args': ['$const142.25', '$const144.26'], 'kw_names': None, 'res': '$146call.27'}), (154, {'value': '$146call.27', 'res': '$154unary_negative.28'}), (156, {'res': '$full_shape0156.29'}), (158, {'res': '$const158.30'}), (160, {'index': '$const158.30', 'target': '$full_shape0156.29', 'res': '$160binary_subscr.31'}), (164, {'idx': 6, 'res': '$164load_global.32'}), (174, {'res': '$const174.34'}), (176, {'res': '$const176.35'}), (178, {'func': '$164load_global.32', 'args': ['$const174.34', '$const176.35'], 'kw_names': None, 'res': '$178call.36'}), (186, {'op': '-', 'lhs': '$160binary_subscr.31', 'rhs': '$178call.36', 'res': '$binop_sub186.37'}), (190, {'func': '$122load_global.21', 'args': ['$154unary_negative.28', '$binop_sub186.37'], 'kw_names': None, 'res': '$190call.38'}), (198, {'value': '$190call.38', 'res': '$198get_iter.39'})), outgoing_phis={'$phi200.0': '$198get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$198get_iter.39',)})
2024-06-06 03:46:35,394 - DEBUG - block_infos State(pc_initial=200 nstack_initial=1):
AdaptBlockInfo(insts=((200, {'iterator': '$phi200.0', 'pair': '$200for_iter.1', 'indval': '$200for_iter.2', 'pred': '$200for_iter.3'}),), outgoing_phis={'$phi204.1': '$200for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={212: ('$phi200.0', '$200for_iter.2'), 204: ('$phi200.0', '$200for_iter.2')})
2024-06-06 03:46:35,394 - DEBUG - block_infos State(pc_initial=204 nstack_initial=2):
AdaptBlockInfo(insts=((204, {'value': '$phi204.1'}), (206, {'res': '$const206.2'}), (208, {'value': '$const206.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi204.0',)})
2024-06-06 03:46:35,394 - DEBUG - block_infos State(pc_initial=212 nstack_initial=2):
AdaptBlockInfo(insts=((214, {'res': '$out0214.2'}), (216, {'retval': '$out0214.2', 'castval': '$216return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:35,396 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$28load_global.2']
    $38load_attr.4 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.4']
    $60load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool_) ['$60load_global.6', '$70load_attr.7']
    out0 = call $38load_attr.4(full_shape0, func=$38load_attr.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.4', '$70load_attr.7', 'full_shape0', 'out0']
    $const102.9 = const(int, 0)              ['$const102.9']
    $const106.11 = const(NoneType, None)     ['$const106.11']
    $const108.12 = const(int, 1)             ['$const108.12']
    $110store_slice.13 = global(slice: <class 'slice'>) ['$110store_slice.13']
    $110store_slice.14 = call $110store_slice.13($const106.11, $const108.12, func=$110store_slice.13, args=(Var($const106.11, <string>:4), Var($const108.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$110store_slice.13', '$110store_slice.14', '$const106.11', '$const108.12']
    out0[$110store_slice.14] = $const102.9   ['$110store_slice.14', '$const102.9', 'out0']
    $const112.15 = const(int, 0)             ['$const112.15']
    $const116.17 = const(int, -1)            ['$const116.17']
    $const118.18 = const(NoneType, None)     ['$const118.18']
    $120store_slice.19 = global(slice: <class 'slice'>) ['$120store_slice.19']
    $120store_slice.20 = call $120store_slice.19($const116.17, $const118.18, func=$120store_slice.19, args=(Var($const116.17, <string>:5), Var($const118.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$120store_slice.19', '$120store_slice.20', '$const116.17', '$const118.18']
    out0[$120store_slice.20] = $const112.15  ['$120store_slice.20', '$const112.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $132load_global.23 = global(min: <built-in function min>) ['$132load_global.23']
    $const142.25 = const(int, 0)             ['$const142.25']
    $const144.26 = const(int, -1)            ['$const144.26']
    $146call.27 = call $132load_global.23($const142.25, $const144.26, func=$132load_global.23, args=[Var($const142.25, <string>:6), Var($const144.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$132load_global.23', '$146call.27', '$const142.25', '$const144.26']
    $154unary_negative.28 = unary(fn=<built-in function neg>, value=$146call.27) ['$146call.27', '$154unary_negative.28']
    $const158.30 = const(int, 0)             ['$const158.30']
    $160binary_subscr.31 = getitem(value=full_shape0, index=$const158.30, fn=<built-in function getitem>) ['$160binary_subscr.31', '$const158.30', 'full_shape0']
    $164load_global.32 = global(max: <built-in function max>) ['$164load_global.32']
    $const174.34 = const(int, 0)             ['$const174.34']
    $const176.35 = const(int, 1)             ['$const176.35']
    $178call.36 = call $164load_global.32($const174.34, $const176.35, func=$164load_global.32, args=[Var($const174.34, <string>:6), Var($const176.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_global.32', '$178call.36', '$const174.34', '$const176.35']
    $binop_sub186.37 = $160binary_subscr.31 - $178call.36 ['$160binary_subscr.31', '$178call.36', '$binop_sub186.37']
    $190call.38 = call $122load_global.21($154unary_negative.28, $binop_sub186.37, func=$122load_global.21, args=[Var($154unary_negative.28, <string>:6), Var($binop_sub186.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$154unary_negative.28', '$190call.38', '$binop_sub186.37']
    $198get_iter.39 = getiter(value=$190call.38) ['$190call.38', '$198get_iter.39']
    $phi200.0 = $198get_iter.39              ['$198get_iter.39', '$phi200.0']
    jump 200                                 []
label 200:
    $200for_iter.1 = iternext(value=$phi200.0) ['$200for_iter.1', '$phi200.0']
    $200for_iter.2 = pair_first(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.2']
    $200for_iter.3 = pair_second(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.3']
    $phi204.1 = $200for_iter.2               ['$200for_iter.2', '$phi204.1']
    branch $200for_iter.3, 204, 212          ['$200for_iter.3']
label 204:
    index00 = $phi204.1                      ['$phi204.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 200                                 []
label 212:
    $216return_value.3 = cast(value=out0)    ['$216return_value.3', 'out0']
    return $216return_value.3                ['$216return_value.3']

2024-06-06 03:46:35,406 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:35,406 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9a8e780>
2024-06-06 03:46:35,406 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:35,406 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:35,406 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:35,407 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:35,407 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:35,407 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:35,407 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,407 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:35,407 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:35,407 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:35,407 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:35,407 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,407 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:35,407 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:35,407 - DEBUG - on stmt: $const116.17.1 = const(int, -1)
2024-06-06 03:46:35,407 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:35,408 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:35,408 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,408 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:35,408 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:35,408 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:35,408 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:35,408 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:35,408 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,408 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:35,408 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:35,408 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:35,408 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:35,409 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:35,409 - DEBUG - on stmt: $const176.35.1 = const(int, 1)
2024-06-06 03:46:35,409 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,409 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:35,409 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,409 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:35,409 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:35,409 - DEBUG - on stmt: jump 200
2024-06-06 03:46:35,409 - DEBUG - ==== SSA block analysis pass on 200
2024-06-06 03:46:35,409 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9a8e780>
2024-06-06 03:46:35,409 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:35,409 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:35,410 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:35,410 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:35,410 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 214
2024-06-06 03:46:35,410 - DEBUG - ==== SSA block analysis pass on 204
2024-06-06 03:46:35,410 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9a8e780>
2024-06-06 03:46:35,410 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:35,410 - DEBUG - on stmt: jump 212
2024-06-06 03:46:35,410 - DEBUG - ==== SSA block analysis pass on 214
2024-06-06 03:46:35,410 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9a8e780>
2024-06-06 03:46:35,410 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:35,410 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:35,410 - DEBUG - ==== SSA block analysis pass on 212
2024-06-06 03:46:35,410 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9a8e780>
2024-06-06 03:46:35,410 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:35,411 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:35,411 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:35,411 - DEBUG - on stmt: $const14.4 = const(int, -1)
2024-06-06 03:46:35,411 - DEBUG - on stmt: stencil_index.1 = $const14.4 + index00
2024-06-06 03:46:35,411 - DEBUG - on stmt: $16binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:35,411 - DEBUG - on stmt: $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5
2024-06-06 03:46:35,411 - DEBUG - on stmt: $const26.8 = const(int, 0)
2024-06-06 03:46:35,411 - DEBUG - on stmt: stencil_index.2 = $const26.8 + index00
2024-06-06 03:46:35,411 - DEBUG - on stmt: $28binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-06 03:46:35,411 - DEBUG - on stmt: $const34.11 = const(int, 1)
2024-06-06 03:46:35,411 - DEBUG - on stmt: stencil_index.3 = $const34.11 + index00
2024-06-06 03:46:35,411 - DEBUG - on stmt: $36binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-06 03:46:35,412 - DEBUG - on stmt: $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12
2024-06-06 03:46:35,412 - DEBUG - on stmt: $binop_and_44.14 = $20compare_op.6 & $40compare_op.13
2024-06-06 03:46:35,412 - DEBUG - on stmt: $48return_value.15 = cast(value=$binop_and_44.14)
2024-06-06 03:46:35,412 - DEBUG - on stmt: out0[index00] = $48return_value.15
2024-06-06 03:46:35,412 - DEBUG - on stmt: jump 213
2024-06-06 03:46:35,412 - DEBUG - ==== SSA block analysis pass on 213
2024-06-06 03:46:35,412 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9a8e780>
2024-06-06 03:46:35,412 - DEBUG - on stmt: jump 200
2024-06-06 03:46:35,413 - DEBUG - defs defaultdict(<class 'list'>,
            {'$110store_slice.13.1': [(<numba.core.ir.Assign object at 0x7fe9b994c500>,
                                       0)],
             '$110store_slice.14.1': [(<numba.core.ir.Assign object at 0x7fe9b994c620>,
                                       0)],
             '$120store_slice.19.1': [(<numba.core.ir.Assign object at 0x7fe9b994ccb0>,
                                       0)],
             '$120store_slice.20.1': [(<numba.core.ir.Assign object at 0x7fe9b994cdd0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7fe9b994cf80>,
                                       0)],
             '$132load_global.23.1': [(<numba.core.ir.Assign object at 0x7fe9b994d0d0>,
                                       0)],
             '$146call.27.1': [(<numba.core.ir.Assign object at 0x7fe9b994d520>,
                                0)],
             '$154unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7fe9b994d640>,
                                          0)],
             '$160binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7fe9b994da00>,
                                         0)],
             '$164load_global.32.1': [(<numba.core.ir.Assign object at 0x7fe9b994db20>,
                                       0)],
             '$16binary_subscr.5': [(<numba.core.ir.Assign object at 0x7fe9b99410d0>,
                                     212)],
             '$178call.36.1': [(<numba.core.ir.Assign object at 0x7fe9b994df70>,
                                0)],
             '$190call.38.1': [(<numba.core.ir.Assign object at 0x7fe9b994e240>,
                                0)],
             '$198get_iter.39.1': [(<numba.core.ir.Assign object at 0x7fe9b994e360>,
                                    0)],
             '$200for_iter.1.1': [(<numba.core.ir.Assign object at 0x7fe9b994e3c0>,
                                   200)],
             '$200for_iter.2.1': [(<numba.core.ir.Assign object at 0x7fe9b994e4e0>,
                                   200)],
             '$200for_iter.3.1': [(<numba.core.ir.Assign object at 0x7fe9b994e600>,
                                   200)],
             '$20compare_op.6': [(<numba.core.ir.Assign object at 0x7fe9b9aa7aa0>,
                                  212)],
             '$216return_value.3.1': [(<numba.core.ir.Assign object at 0x7fe9b994ed80>,
                                       214)],
             '$28binary_subscr.9': [(<numba.core.ir.Assign object at 0x7fe9b9940230>,
                                     212)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x7fe9b9943740>,
                                     0)],
             '$36binary_subscr.12': [(<numba.core.ir.Assign object at 0x7fe9b9942cf0>,
                                      212)],
             '$38load_attr.4.1': [(<numba.core.ir.Assign object at 0x7fe9b9943890>,
                                   0)],
             '$40compare_op.13': [(<numba.core.ir.Assign object at 0x7fe9b9a99a90>,
                                   212)],
             '$48return_value.15': [(<numba.core.ir.Assign object at 0x7fe9b9a9a060>,
                                     212)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x7fe9b9943ad0>,
                                     0)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x7fe9b9943c20>,
                                   0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7fe9b9c20560>,
                                    212)],
             '$binop_and_44.14': [(<numba.core.ir.Assign object at 0x7fe9b9a9a0c0>,
                                   212)],
             '$binop_sub186.37.1': [(<numba.core.ir.Assign object at 0x7fe9b994e0c0>,
                                     0)],
             '$const102.9.1': [(<numba.core.ir.Assign object at 0x7fe9b9943fe0>,
                                0)],
             '$const106.11.1': [(<numba.core.ir.Assign object at 0x7fe9b994c260>,
                                 0)],
             '$const108.12.1': [(<numba.core.ir.Assign object at 0x7fe9b994c3b0>,
                                 0)],
             '$const112.15.1': [(<numba.core.ir.Assign object at 0x7fe9b994c7d0>,
                                 0)],
             '$const116.17.1': [(<numba.core.ir.Assign object at 0x7fe9b994ca10>,
                                 0)],
             '$const118.18.1': [(<numba.core.ir.Assign object at 0x7fe9b994cb60>,
                                 0)],
             '$const14.4': [(<numba.core.ir.Assign object at 0x7fe9b9a9b8c0>,
                             212)],
             '$const142.25.1': [(<numba.core.ir.Assign object at 0x7fe9b994d220>,
                                 0)],
             '$const144.26.1': [(<numba.core.ir.Assign object at 0x7fe9b994d370>,
                                 0)],
             '$const158.30.1': [(<numba.core.ir.Assign object at 0x7fe9b994d880>,
                                 0)],
             '$const174.34.1': [(<numba.core.ir.Assign object at 0x7fe9b994dc70>,
                                 0)],
             '$const176.35.1': [(<numba.core.ir.Assign object at 0x7fe9b994ddc0>,
                                 0)],
             '$const26.8': [(<numba.core.ir.Assign object at 0x7fe9b9ab9c70>,
                             212)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x7fe9b9abbc50>,
                              212)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9b9aa5f10>,
                            212)],
             '$phi200.0.1': [(<numba.core.ir.Assign object at 0x7fe9b99435f0>,
                              0)],
             '$phi204.1.1': [(<numba.core.ir.Assign object at 0x7fe9b994e6c0>,
                              200)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7fe9b9943500>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7fe9b994e870>,
                          204)],
             'out0': [(<numba.core.ir.Assign object at 0x7fe9b9943dd0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7fe9b9a81af0>,
                                212)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7fe9b9b32ff0>,
                                  212)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7fe9b9941df0>,
                                  212)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7fe9b9942c30>,
                                  212)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b99432c0>, 0)]})
2024-06-06 03:46:35,413 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9a8e780>
2024-06-06 03:46:35,625 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	RESUME(arg=0, lineno=1051)
           4	LOAD_GLOBAL(arg=1, lineno=1065)
          14	LOAD_FAST(arg=0, lineno=1065)
          16	CALL(arg=1, lineno=1065)
          24	LOAD_FAST(arg=1, lineno=1065)
          26	LOAD_CONST(arg=1, lineno=1065)
          28	LOAD_CONST(arg=1, lineno=1065)
          30	STORE_SLICE(arg=None, lineno=1065)
          32	RETURN_CONST(arg=1, lineno=1065)
2024-06-06 03:46:35,625 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:35,625 - DEBUG - stack: []
2024-06-06 03:46:35,625 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:35,625 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2024-06-06 03:46:35,625 - DEBUG - stack []
2024-06-06 03:46:35,625 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1051)
2024-06-06 03:46:35,625 - DEBUG - stack []
2024-06-06 03:46:35,625 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1065)
2024-06-06 03:46:35,625 - DEBUG - stack []
2024-06-06 03:46:35,626 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=1065)
2024-06-06 03:46:35,626 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:35,626 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=1065)
2024-06-06 03:46:35,626 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2']
2024-06-06 03:46:35,626 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1065)
2024-06-06 03:46:35,626 - DEBUG - stack ['$16call.3']
2024-06-06 03:46:35,626 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-06 03:46:35,626 - DEBUG - stack ['$16call.3', '$y24.4']
2024-06-06 03:46:35,626 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1065)
2024-06-06 03:46:35,627 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5']
2024-06-06 03:46:35,627 - DEBUG - dispatch pc=30, inst=STORE_SLICE(arg=None, lineno=1065)
2024-06-06 03:46:35,627 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5', '$const28.6']
2024-06-06 03:46:35,627 - DEBUG - dispatch pc=32, inst=RETURN_CONST(arg=1, lineno=1065)
2024-06-06 03:46:35,627 - DEBUG - stack []
2024-06-06 03:46:35,627 - DEBUG - end state. edges=[]
2024-06-06 03:46:35,627 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:35,627 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:35,628 - DEBUG - defmap: {}
2024-06-06 03:46:35,628 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:35,628 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:35,628 - DEBUG - keep phismap: {}
2024-06-06 03:46:35,628 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:35,628 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:35,628 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$x14.2'}), (16, {'func': '$4load_global.0', 'args': ['$x14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'res': '$y24.4'}), (26, {'res': '$const26.5'}), (28, {'res': '$const28.6'}), (30, {'start': '$const26.5', 'end': '$const28.6', 'container': '$y24.4', 'value': '$16call.3', 'res': '$30store_slice.8', 'slicevar': '$30store_slice.7'}), (32, {'retval': '$const32.9', 'castval': '$32return_const.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:35,629 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f215e0>) ['$4load_global.0']
    $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$16call.3', '$4load_global.0', 'x']
    $const26.5 = const(NoneType, None)       ['$const26.5']
    $const28.6 = const(NoneType, None)       ['$const28.6']
    $30store_slice.7 = global(slice: <class 'slice'>) ['$30store_slice.7']
    $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1065), Var($const28.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$30store_slice.7', '$30store_slice.8', '$const26.5', '$const28.6']
    y[$30store_slice.8] = $16call.3          ['$16call.3', '$30store_slice.8', 'y']
    $const32.9 = const(NoneType, None)       ['$const32.9']
    $32return_const.10 = cast(value=$const32.9) ['$32return_const.10', '$const32.9']
    return $32return_const.10                ['$32return_const.10']

2024-06-06 03:46:35,635 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:35,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9aa5bb0>
2024-06-06 03:46:35,635 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:35,635 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-06 03:46:35,635 - DEBUG - on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f215e0>)
2024-06-06 03:46:35,635 - DEBUG - on stmt: $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,635 - DEBUG - on stmt: $const26.5 = const(NoneType, None)
2024-06-06 03:46:35,636 - DEBUG - on stmt: $const28.6 = const(NoneType, None)
2024-06-06 03:46:35,636 - DEBUG - on stmt: $30store_slice.7 = global(slice: <class 'slice'>)
2024-06-06 03:46:35,636 - DEBUG - on stmt: $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1065), Var($const28.6, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,636 - DEBUG - on stmt: y[slice(None, None, None)] = $16call.3
2024-06-06 03:46:35,636 - DEBUG - on stmt: $const32.9 = const(NoneType, None)
2024-06-06 03:46:35,636 - DEBUG - on stmt: $32return_const.10 = cast(value=$const32.9)
2024-06-06 03:46:35,636 - DEBUG - on stmt: return $32return_const.10
2024-06-06 03:46:35,636 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16call.3': [(<numba.core.ir.Assign object at 0x7fe9b98f7a70>,
                            0)],
             '$30store_slice.7': [(<numba.core.ir.Assign object at 0x7fe9b98f7f20>,
                                   0)],
             '$30store_slice.8': [(<numba.core.ir.Assign object at 0x7fe9b9908080>,
                                   0)],
             '$32return_const.10': [(<numba.core.ir.Assign object at 0x7fe9b9908350>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b98f7680>,
                                  0)],
             '$const26.5': [(<numba.core.ir.Assign object at 0x7fe9b98f7c80>,
                             0)],
             '$const28.6': [(<numba.core.ir.Assign object at 0x7fe9b98f7dd0>,
                             0)],
             '$const32.9': [(<numba.core.ir.Assign object at 0x7fe9b9908230>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b98f74a0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7fe9b98f73e0>, 0)]})
2024-06-06 03:46:35,636 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9aa5bb0>
2024-06-06 03:46:35,655 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=1, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=1, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	KW_NAMES(arg=1, lineno=3)
          92	CALL(arg=2, lineno=3)
         100	STORE_FAST(arg=2, lineno=3)
         102	LOAD_CONST(arg=2, lineno=4)
         104	LOAD_FAST(arg=2, lineno=4)
         106	LOAD_CONST(arg=0, lineno=4)
         108	LOAD_CONST(arg=3, lineno=4)
         110	STORE_SLICE(arg=None, lineno=4)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_FAST(arg=2, lineno=5)
         116	LOAD_CONST(arg=4, lineno=5)
         118	LOAD_CONST(arg=0, lineno=5)
         120	STORE_SLICE(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         132	LOAD_GLOBAL(arg=11, lineno=6)
         142	LOAD_CONST(arg=2, lineno=6)
         144	LOAD_CONST(arg=4, lineno=6)
         146	CALL(arg=2, lineno=6)
         154	UNARY_NEGATIVE(arg=None, lineno=6)
         156	LOAD_FAST(arg=1, lineno=6)
         158	LOAD_CONST(arg=2, lineno=6)
         160	BINARY_SUBSCR(arg=None, lineno=6)
         164	LOAD_GLOBAL(arg=13, lineno=6)
         174	LOAD_CONST(arg=2, lineno=6)
         176	LOAD_CONST(arg=3, lineno=6)
         178	CALL(arg=2, lineno=6)
         186	BINARY_OP(arg=10, lineno=6)
         190	CALL(arg=2, lineno=6)
         198	GET_ITER(arg=None, lineno=6)
>        200	FOR_ITER(arg=4, lineno=6)
         204	STORE_FAST(arg=3, lineno=6)
         206	LOAD_CONST(arg=2, lineno=7)
         208	STORE_FAST(arg=4, lineno=7)
         210	JUMP_BACKWARD(arg=6, lineno=7)
>        212	END_FOR(arg=None, lineno=6)
         214	LOAD_FAST(arg=2, lineno=8)
         216	RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:35,655 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:35,655 - DEBUG - stack: []
2024-06-06 03:46:35,655 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:35,655 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-06 03:46:35,655 - DEBUG - stack []
2024-06-06 03:46:35,655 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-06 03:46:35,655 - DEBUG - stack []
2024-06-06 03:46:35,656 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-06 03:46:35,656 - DEBUG - stack []
2024-06-06 03:46:35,656 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-06 03:46:35,656 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:35,656 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=1, lineno=2)
2024-06-06 03:46:35,656 - DEBUG - stack ['$6load_attr.1']
2024-06-06 03:46:35,656 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:35,656 - DEBUG - stack []
2024-06-06 03:46:35,656 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2024-06-06 03:46:35,656 - DEBUG - stack ['$28load_global.2']
2024-06-06 03:46:35,656 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-06 03:46:35,656 - DEBUG - stack ['$null$38.3', '$38load_attr.4']
2024-06-06 03:46:35,656 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:35,657 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5']
2024-06-06 03:46:35,657 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2024-06-06 03:46:35,657 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$60load_global.6']
2024-06-06 03:46:35,657 - DEBUG - dispatch pc=90, inst=KW_NAMES(arg=1, lineno=3)
2024-06-06 03:46:35,657 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:35,657 - DEBUG - dispatch pc=92, inst=CALL(arg=2, lineno=3)
2024-06-06 03:46:35,657 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:35,657 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=3)
2024-06-06 03:46:35,657 - DEBUG - stack ['$92call.8']
2024-06-06 03:46:35,657 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-06 03:46:35,657 - DEBUG - stack []
2024-06-06 03:46:35,657 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-06 03:46:35,657 - DEBUG - stack ['$const102.9']
2024-06-06 03:46:35,658 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-06 03:46:35,658 - DEBUG - stack ['$const102.9', '$out0104.10']
2024-06-06 03:46:35,658 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-06 03:46:35,658 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11']
2024-06-06 03:46:35,658 - DEBUG - dispatch pc=110, inst=STORE_SLICE(arg=None, lineno=4)
2024-06-06 03:46:35,658 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11', '$const108.12']
2024-06-06 03:46:35,658 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-06 03:46:35,658 - DEBUG - stack []
2024-06-06 03:46:35,658 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-06 03:46:35,658 - DEBUG - stack ['$const112.15']
2024-06-06 03:46:35,658 - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-06 03:46:35,658 - DEBUG - stack ['$const112.15', '$out0114.16']
2024-06-06 03:46:35,658 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-06 03:46:35,659 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17']
2024-06-06 03:46:35,659 - DEBUG - dispatch pc=120, inst=STORE_SLICE(arg=None, lineno=5)
2024-06-06 03:46:35,659 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17', '$const118.18']
2024-06-06 03:46:35,659 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-06 03:46:35,659 - DEBUG - stack []
2024-06-06 03:46:35,659 - DEBUG - dispatch pc=132, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-06 03:46:35,659 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-06 03:46:35,659 - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:35,659 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23']
2024-06-06 03:46:35,659 - DEBUG - dispatch pc=144, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-06 03:46:35,659 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25']
2024-06-06 03:46:35,659 - DEBUG - dispatch pc=146, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:35,659 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25', '$const144.26']
2024-06-06 03:46:35,660 - DEBUG - dispatch pc=154, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-06 03:46:35,660 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$146call.27']
2024-06-06 03:46:35,660 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-06 03:46:35,660 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28']
2024-06-06 03:46:35,660 - DEBUG - dispatch pc=158, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:35,660 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29']
2024-06-06 03:46:35,660 - DEBUG - dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-06 03:46:35,660 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29', '$const158.30']
2024-06-06 03:46:35,660 - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-06 03:46:35,660 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31']
2024-06-06 03:46:35,660 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:35,660 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32']
2024-06-06 03:46:35,661 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-06 03:46:35,661 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34']
2024-06-06 03:46:35,661 - DEBUG - dispatch pc=178, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:35,661 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34', '$const176.35']
2024-06-06 03:46:35,661 - DEBUG - dispatch pc=186, inst=BINARY_OP(arg=10, lineno=6)
2024-06-06 03:46:35,661 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$178call.36']
2024-06-06 03:46:35,661 - DEBUG - dispatch pc=190, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:35,661 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$binop_sub186.37']
2024-06-06 03:46:35,661 - DEBUG - dispatch pc=198, inst=GET_ITER(arg=None, lineno=6)
2024-06-06 03:46:35,661 - DEBUG - stack ['$190call.38']
2024-06-06 03:46:35,662 - DEBUG - end state. edges=[Edge(pc=200, stack=('$198get_iter.39',), blockstack=(), npush=0)]
2024-06-06 03:46:35,662 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:35,662 - DEBUG - stack: ['$phi200.0']
2024-06-06 03:46:35,662 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=1)
2024-06-06 03:46:35,662 - DEBUG - dispatch pc=200, inst=FOR_ITER(arg=4, lineno=6)
2024-06-06 03:46:35,662 - DEBUG - stack ['$phi200.0']
2024-06-06 03:46:35,662 - DEBUG - end state. edges=[Edge(pc=212, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0), Edge(pc=204, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:35,662 - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:35,662 - DEBUG - stack: ['$phi212.0', '$phi212.1']
2024-06-06 03:46:35,662 - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=2)
2024-06-06 03:46:35,663 - DEBUG - dispatch pc=212, inst=END_FOR(arg=None, lineno=6)
2024-06-06 03:46:35,663 - DEBUG - stack ['$phi212.0', '$phi212.1']
2024-06-06 03:46:35,663 - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-06 03:46:35,663 - DEBUG - stack []
2024-06-06 03:46:35,663 - DEBUG - dispatch pc=216, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:35,663 - DEBUG - stack ['$out0214.2']
2024-06-06 03:46:35,663 - DEBUG - end state. edges=[]
2024-06-06 03:46:35,663 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:35,663 - DEBUG - stack: ['$phi204.0', '$phi204.1']
2024-06-06 03:46:35,663 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=2)
2024-06-06 03:46:35,663 - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=3, lineno=6)
2024-06-06 03:46:35,663 - DEBUG - stack ['$phi204.0', '$phi204.1']
2024-06-06 03:46:35,663 - DEBUG - dispatch pc=206, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-06 03:46:35,664 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:35,664 - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=4, lineno=7)
2024-06-06 03:46:35,664 - DEBUG - stack ['$phi204.0', '$const206.2']
2024-06-06 03:46:35,664 - DEBUG - dispatch pc=210, inst=JUMP_BACKWARD(arg=6, lineno=7)
2024-06-06 03:46:35,664 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:35,664 - DEBUG - end state. edges=[Edge(pc=200, stack=('$phi204.0',), blockstack=(), npush=0)]
2024-06-06 03:46:35,664 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:35,664 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:35,664 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=1): {'$phi200.0'},
             State(pc_initial=204 nstack_initial=2): {'$phi204.1'},
             State(pc_initial=212 nstack_initial=2): set()})
2024-06-06 03:46:35,664 - DEBUG - defmap: {'$phi200.0': State(pc_initial=0 nstack_initial=0),
 '$phi204.1': State(pc_initial=200 nstack_initial=1),
 '$phi212.1': State(pc_initial=200 nstack_initial=1)}
2024-06-06 03:46:35,664 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi204.0',
                            State(pc_initial=204 nstack_initial=2))},
             '$phi204.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:35,665 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:35,666 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:35,666 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:35,667 - DEBUG - keep phismap: {'$phi200.0': {('$198get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi204.1': {('$200for_iter.2', State(pc_initial=200 nstack_initial=1))}}
2024-06-06 03:46:35,667 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi200.0': '$198get_iter.39'},
             State(pc_initial=200 nstack_initial=1): {'$phi204.1': '$200for_iter.2'}})
2024-06-06 03:46:35,667 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:35,667 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.4'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (92, {'func': '$38load_attr.4', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': 1, 'res': '$92call.8'}), (100, {'value': '$92call.8'}), (102, {'res': '$const102.9'}), (104, {'res': '$out0104.10'}), (106, {'res': '$const106.11'}), (108, {'res': '$const108.12'}), (110, {'start': '$const106.11', 'end': '$const108.12', 'container': '$out0104.10', 'value': '$const102.9', 'res': '$110store_slice.14', 'slicevar': '$110store_slice.13'}), (112, {'res': '$const112.15'}), (114, {'res': '$out0114.16'}), (116, {'res': '$const116.17'}), (118, {'res': '$const118.18'}), (120, {'start': '$const116.17', 'end': '$const118.18', 'container': '$out0114.16', 'value': '$const112.15', 'res': '$120store_slice.20', 'slicevar': '$120store_slice.19'}), (122, {'idx': 4, 'res': '$122load_global.21'}), (132, {'idx': 5, 'res': '$132load_global.23'}), (142, {'res': '$const142.25'}), (144, {'res': '$const144.26'}), (146, {'func': '$132load_global.23', 'args': ['$const142.25', '$const144.26'], 'kw_names': None, 'res': '$146call.27'}), (154, {'value': '$146call.27', 'res': '$154unary_negative.28'}), (156, {'res': '$full_shape0156.29'}), (158, {'res': '$const158.30'}), (160, {'index': '$const158.30', 'target': '$full_shape0156.29', 'res': '$160binary_subscr.31'}), (164, {'idx': 6, 'res': '$164load_global.32'}), (174, {'res': '$const174.34'}), (176, {'res': '$const176.35'}), (178, {'func': '$164load_global.32', 'args': ['$const174.34', '$const176.35'], 'kw_names': None, 'res': '$178call.36'}), (186, {'op': '-', 'lhs': '$160binary_subscr.31', 'rhs': '$178call.36', 'res': '$binop_sub186.37'}), (190, {'func': '$122load_global.21', 'args': ['$154unary_negative.28', '$binop_sub186.37'], 'kw_names': None, 'res': '$190call.38'}), (198, {'value': '$190call.38', 'res': '$198get_iter.39'})), outgoing_phis={'$phi200.0': '$198get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$198get_iter.39',)})
2024-06-06 03:46:35,668 - DEBUG - block_infos State(pc_initial=200 nstack_initial=1):
AdaptBlockInfo(insts=((200, {'iterator': '$phi200.0', 'pair': '$200for_iter.1', 'indval': '$200for_iter.2', 'pred': '$200for_iter.3'}),), outgoing_phis={'$phi204.1': '$200for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={212: ('$phi200.0', '$200for_iter.2'), 204: ('$phi200.0', '$200for_iter.2')})
2024-06-06 03:46:35,668 - DEBUG - block_infos State(pc_initial=204 nstack_initial=2):
AdaptBlockInfo(insts=((204, {'value': '$phi204.1'}), (206, {'res': '$const206.2'}), (208, {'value': '$const206.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi204.0',)})
2024-06-06 03:46:35,668 - DEBUG - block_infos State(pc_initial=212 nstack_initial=2):
AdaptBlockInfo(insts=((214, {'res': '$out0214.2'}), (216, {'retval': '$out0214.2', 'castval': '$216return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:35,669 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$28load_global.2']
    $38load_attr.4 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.4']
    $60load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool_) ['$60load_global.6', '$70load_attr.7']
    out0 = call $38load_attr.4(full_shape0, func=$38load_attr.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.4', '$70load_attr.7', 'full_shape0', 'out0']
    $const102.9 = const(int, 0)              ['$const102.9']
    $const106.11 = const(NoneType, None)     ['$const106.11']
    $const108.12 = const(int, 1)             ['$const108.12']
    $110store_slice.13 = global(slice: <class 'slice'>) ['$110store_slice.13']
    $110store_slice.14 = call $110store_slice.13($const106.11, $const108.12, func=$110store_slice.13, args=(Var($const106.11, <string>:4), Var($const108.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$110store_slice.13', '$110store_slice.14', '$const106.11', '$const108.12']
    out0[$110store_slice.14] = $const102.9   ['$110store_slice.14', '$const102.9', 'out0']
    $const112.15 = const(int, 0)             ['$const112.15']
    $const116.17 = const(int, -1)            ['$const116.17']
    $const118.18 = const(NoneType, None)     ['$const118.18']
    $120store_slice.19 = global(slice: <class 'slice'>) ['$120store_slice.19']
    $120store_slice.20 = call $120store_slice.19($const116.17, $const118.18, func=$120store_slice.19, args=(Var($const116.17, <string>:5), Var($const118.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$120store_slice.19', '$120store_slice.20', '$const116.17', '$const118.18']
    out0[$120store_slice.20] = $const112.15  ['$120store_slice.20', '$const112.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $132load_global.23 = global(min: <built-in function min>) ['$132load_global.23']
    $const142.25 = const(int, 0)             ['$const142.25']
    $const144.26 = const(int, -1)            ['$const144.26']
    $146call.27 = call $132load_global.23($const142.25, $const144.26, func=$132load_global.23, args=[Var($const142.25, <string>:6), Var($const144.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$132load_global.23', '$146call.27', '$const142.25', '$const144.26']
    $154unary_negative.28 = unary(fn=<built-in function neg>, value=$146call.27) ['$146call.27', '$154unary_negative.28']
    $const158.30 = const(int, 0)             ['$const158.30']
    $160binary_subscr.31 = getitem(value=full_shape0, index=$const158.30, fn=<built-in function getitem>) ['$160binary_subscr.31', '$const158.30', 'full_shape0']
    $164load_global.32 = global(max: <built-in function max>) ['$164load_global.32']
    $const174.34 = const(int, 0)             ['$const174.34']
    $const176.35 = const(int, 1)             ['$const176.35']
    $178call.36 = call $164load_global.32($const174.34, $const176.35, func=$164load_global.32, args=[Var($const174.34, <string>:6), Var($const176.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_global.32', '$178call.36', '$const174.34', '$const176.35']
    $binop_sub186.37 = $160binary_subscr.31 - $178call.36 ['$160binary_subscr.31', '$178call.36', '$binop_sub186.37']
    $190call.38 = call $122load_global.21($154unary_negative.28, $binop_sub186.37, func=$122load_global.21, args=[Var($154unary_negative.28, <string>:6), Var($binop_sub186.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$154unary_negative.28', '$190call.38', '$binop_sub186.37']
    $198get_iter.39 = getiter(value=$190call.38) ['$190call.38', '$198get_iter.39']
    $phi200.0 = $198get_iter.39              ['$198get_iter.39', '$phi200.0']
    jump 200                                 []
label 200:
    $200for_iter.1 = iternext(value=$phi200.0) ['$200for_iter.1', '$phi200.0']
    $200for_iter.2 = pair_first(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.2']
    $200for_iter.3 = pair_second(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.3']
    $phi204.1 = $200for_iter.2               ['$200for_iter.2', '$phi204.1']
    branch $200for_iter.3, 204, 212          ['$200for_iter.3']
label 204:
    index00 = $phi204.1                      ['$phi204.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 200                                 []
label 212:
    $216return_value.3 = cast(value=out0)    ['$216return_value.3', 'out0']
    return $216return_value.3                ['$216return_value.3']

2024-06-06 03:46:35,680 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:35,680 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b994c1d0>
2024-06-06 03:46:35,680 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:35,680 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:35,680 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:35,680 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:35,681 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:35,681 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:35,681 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,681 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:35,681 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:35,681 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:35,681 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:35,681 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,681 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:35,681 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:35,682 - DEBUG - on stmt: $const116.17.1 = const(int, -1)
2024-06-06 03:46:35,682 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:35,682 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:35,682 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,682 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:35,682 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:35,682 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:35,682 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:35,682 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:35,682 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,682 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:35,683 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:35,683 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:35,683 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:35,683 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:35,683 - DEBUG - on stmt: $const176.35.1 = const(int, 1)
2024-06-06 03:46:35,683 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,683 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:35,683 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:35,683 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:35,683 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:35,683 - DEBUG - on stmt: jump 200
2024-06-06 03:46:35,683 - DEBUG - ==== SSA block analysis pass on 200
2024-06-06 03:46:35,683 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b994c1d0>
2024-06-06 03:46:35,684 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:35,684 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:35,684 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:35,684 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:35,684 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 214
2024-06-06 03:46:35,684 - DEBUG - ==== SSA block analysis pass on 204
2024-06-06 03:46:35,684 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b994c1d0>
2024-06-06 03:46:35,684 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:35,684 - DEBUG - on stmt: jump 212
2024-06-06 03:46:35,684 - DEBUG - ==== SSA block analysis pass on 214
2024-06-06 03:46:35,684 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b994c1d0>
2024-06-06 03:46:35,684 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:35,684 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:35,685 - DEBUG - ==== SSA block analysis pass on 212
2024-06-06 03:46:35,685 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b994c1d0>
2024-06-06 03:46:35,685 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:35,685 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:35,685 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:35,685 - DEBUG - on stmt: $const14.4 = const(int, -1)
2024-06-06 03:46:35,685 - DEBUG - on stmt: stencil_index.1 = $const14.4 + index00
2024-06-06 03:46:35,685 - DEBUG - on stmt: $16binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:35,685 - DEBUG - on stmt: $20compare_op.6 = $8binary_subscr.2 > $16binary_subscr.5
2024-06-06 03:46:35,685 - DEBUG - on stmt: $const26.8 = const(int, 0)
2024-06-06 03:46:35,685 - DEBUG - on stmt: stencil_index.2 = $const26.8 + index00
2024-06-06 03:46:35,685 - DEBUG - on stmt: $28binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-06 03:46:35,685 - DEBUG - on stmt: $const34.11 = const(int, 1)
2024-06-06 03:46:35,686 - DEBUG - on stmt: stencil_index.3 = $const34.11 + index00
2024-06-06 03:46:35,686 - DEBUG - on stmt: $36binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-06 03:46:35,686 - DEBUG - on stmt: $40compare_op.13 = $28binary_subscr.9 >= $36binary_subscr.12
2024-06-06 03:46:35,686 - DEBUG - on stmt: $binop_and_44.14 = $20compare_op.6 & $40compare_op.13
2024-06-06 03:46:35,686 - DEBUG - on stmt: $48return_value.15 = cast(value=$binop_and_44.14)
2024-06-06 03:46:35,686 - DEBUG - on stmt: out0[index00] = $48return_value.15
2024-06-06 03:46:35,686 - DEBUG - on stmt: jump 213
2024-06-06 03:46:35,686 - DEBUG - ==== SSA block analysis pass on 213
2024-06-06 03:46:35,686 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b994c1d0>
2024-06-06 03:46:35,686 - DEBUG - on stmt: jump 200
2024-06-06 03:46:35,687 - DEBUG - defs defaultdict(<class 'list'>,
            {'$110store_slice.13.1': [(<numba.core.ir.Assign object at 0x7fe9b9843dd0>,
                                       0)],
             '$110store_slice.14.1': [(<numba.core.ir.Assign object at 0x7fe9b9842510>,
                                       0)],
             '$120store_slice.19.1': [(<numba.core.ir.Assign object at 0x7fe9b98434d0>,
                                       0)],
             '$120store_slice.20.1': [(<numba.core.ir.Assign object at 0x7fe9b98433e0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7fe9b9842f90>,
                                       0)],
             '$132load_global.23.1': [(<numba.core.ir.Assign object at 0x7fe9b98432f0>,
                                       0)],
             '$146call.27.1': [(<numba.core.ir.Assign object at 0x7fe9b98426c0>,
                                0)],
             '$154unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7fe9b9842990>,
                                          0)],
             '$160binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7fe9b9842600>,
                                         0)],
             '$164load_global.32.1': [(<numba.core.ir.Assign object at 0x7fe9b9843c80>,
                                       0)],
             '$16binary_subscr.5': [(<numba.core.ir.Assign object at 0x7fe9b9852b10>,
                                     212)],
             '$178call.36.1': [(<numba.core.ir.Assign object at 0x7fe9b9841eb0>,
                                0)],
             '$190call.38.1': [(<numba.core.ir.Assign object at 0x7fe9b9841ee0>,
                                0)],
             '$198get_iter.39.1': [(<numba.core.ir.Assign object at 0x7fe9b9841730>,
                                    0)],
             '$200for_iter.1.1': [(<numba.core.ir.Assign object at 0x7fe9b9841550>,
                                   200)],
             '$200for_iter.2.1': [(<numba.core.ir.Assign object at 0x7fe9b9841670>,
                                   200)],
             '$200for_iter.3.1': [(<numba.core.ir.Assign object at 0x7fe9b9841460>,
                                   200)],
             '$20compare_op.6': [(<numba.core.ir.Assign object at 0x7fe9b98db530>,
                                  212)],
             '$216return_value.3.1': [(<numba.core.ir.Assign object at 0x7fe9b98411f0>,
                                       214)],
             '$28binary_subscr.9': [(<numba.core.ir.Assign object at 0x7fe9b98520f0>,
                                     212)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x7fe9b98516d0>,
                                     0)],
             '$36binary_subscr.12': [(<numba.core.ir.Assign object at 0x7fe9b9852150>,
                                      212)],
             '$38load_attr.4.1': [(<numba.core.ir.Assign object at 0x7fe9b98510a0>,
                                   0)],
             '$40compare_op.13': [(<numba.core.ir.Assign object at 0x7fe9b9860740>,
                                   212)],
             '$48return_value.15': [(<numba.core.ir.Assign object at 0x7fe9b98604a0>,
                                     212)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x7fe9b9851340>,
                                     0)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x7fe9b9851400>,
                                   0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7fe9b98503e0>,
                                    212)],
             '$binop_and_44.14': [(<numba.core.ir.Assign object at 0x7fe9b9862930>,
                                   212)],
             '$binop_sub186.37.1': [(<numba.core.ir.Assign object at 0x7fe9b9842330>,
                                     0)],
             '$const102.9.1': [(<numba.core.ir.Assign object at 0x7fe9b9850ef0>,
                                0)],
             '$const106.11.1': [(<numba.core.ir.Assign object at 0x7fe9b9a06720>,
                                 0)],
             '$const108.12.1': [(<numba.core.ir.Assign object at 0x7fe9b9843fe0>,
                                 0)],
             '$const112.15.1': [(<numba.core.ir.Assign object at 0x7fe9b9843aa0>,
                                 0)],
             '$const116.17.1': [(<numba.core.ir.Assign object at 0x7fe9b9843830>,
                                 0)],
             '$const118.18.1': [(<numba.core.ir.Assign object at 0x7fe9b9842ab0>,
                                 0)],
             '$const14.4': [(<numba.core.ir.Assign object at 0x7fe9b9863650>,
                             212)],
             '$const142.25.1': [(<numba.core.ir.Assign object at 0x7fe9b9842b70>,
                                 0)],
             '$const144.26.1': [(<numba.core.ir.Assign object at 0x7fe9b9842c60>,
                                 0)],
             '$const158.30.1': [(<numba.core.ir.Assign object at 0x7fe9b98427e0>,
                                 0)],
             '$const174.34.1': [(<numba.core.ir.Assign object at 0x7fe9b9842ea0>,
                                 0)],
             '$const176.35.1': [(<numba.core.ir.Assign object at 0x7fe9b98421e0>,
                                 0)],
             '$const26.8': [(<numba.core.ir.Assign object at 0x7fe9b98741d0>,
                             212)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x7fe9b98dba10>,
                              212)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9b9875e50>,
                            212)],
             '$phi200.0.1': [(<numba.core.ir.Assign object at 0x7fe9b9851760>,
                              0)],
             '$phi204.1.1': [(<numba.core.ir.Assign object at 0x7fe9b98411c0>,
                              200)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7fe9b9851d00>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7fe9b9840fb0>,
                          204)],
             'out0': [(<numba.core.ir.Assign object at 0x7fe9b9851040>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7fe9b98502c0>,
                                212)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7fe9b9850cb0>,
                                  212)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7fe9b98529c0>,
                                  212)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7fe9b9852090>,
                                  212)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b9851880>, 0)]})
2024-06-06 03:46:35,688 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b994c1d0>
2024-06-06 03:46:36,313 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          14	LOAD_FAST(arg=0, lineno=1082)
          16	CALL(arg=1, lineno=1082)
          24	LOAD_FAST(arg=1, lineno=1082)
          26	LOAD_CONST(arg=1, lineno=1082)
          28	LOAD_CONST(arg=1, lineno=1082)
          30	STORE_SLICE(arg=None, lineno=1082)
          32	RETURN_CONST(arg=1, lineno=1082)
2024-06-06 03:46:36,313 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:36,313 - DEBUG - stack: []
2024-06-06 03:46:36,313 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:36,313 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-06-06 03:46:36,313 - DEBUG - stack []
2024-06-06 03:46:36,313 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-06-06 03:46:36,313 - DEBUG - stack []
2024-06-06 03:46:36,313 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-06-06 03:46:36,314 - DEBUG - stack []
2024-06-06 03:46:36,314 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=1082)
2024-06-06 03:46:36,314 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:36,314 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=1082)
2024-06-06 03:46:36,314 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2']
2024-06-06 03:46:36,314 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1082)
2024-06-06 03:46:36,314 - DEBUG - stack ['$16call.3']
2024-06-06 03:46:36,314 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-06 03:46:36,314 - DEBUG - stack ['$16call.3', '$y24.4']
2024-06-06 03:46:36,315 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-06 03:46:36,315 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5']
2024-06-06 03:46:36,315 - DEBUG - dispatch pc=30, inst=STORE_SLICE(arg=None, lineno=1082)
2024-06-06 03:46:36,315 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5', '$const28.6']
2024-06-06 03:46:36,315 - DEBUG - dispatch pc=32, inst=RETURN_CONST(arg=1, lineno=1082)
2024-06-06 03:46:36,315 - DEBUG - stack []
2024-06-06 03:46:36,315 - DEBUG - end state. edges=[]
2024-06-06 03:46:36,315 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:36,315 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:36,315 - DEBUG - defmap: {}
2024-06-06 03:46:36,316 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:36,316 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:36,316 - DEBUG - keep phismap: {}
2024-06-06 03:46:36,316 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:36,316 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:36,316 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$x14.2'}), (16, {'func': '$4load_global.0', 'args': ['$x14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'res': '$y24.4'}), (26, {'res': '$const26.5'}), (28, {'res': '$const28.6'}), (30, {'start': '$const26.5', 'end': '$const28.6', 'container': '$y24.4', 'value': '$16call.3', 'res': '$30store_slice.8', 'slicevar': '$30store_slice.7'}), (32, {'retval': '$const32.9', 'castval': '$32return_const.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:36,316 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f238f0>) ['$4load_global.0']
    $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$16call.3', '$4load_global.0', 'x']
    $const26.5 = const(NoneType, None)       ['$const26.5']
    $const28.6 = const(NoneType, None)       ['$const28.6']
    $30store_slice.7 = global(slice: <class 'slice'>) ['$30store_slice.7']
    $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1082), Var($const28.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$30store_slice.7', '$30store_slice.8', '$const26.5', '$const28.6']
    y[$30store_slice.8] = $16call.3          ['$16call.3', '$30store_slice.8', 'y']
    $const32.9 = const(NoneType, None)       ['$const32.9']
    $32return_const.10 = cast(value=$const32.9) ['$32return_const.10', '$const32.9']
    return $32return_const.10                ['$32return_const.10']

2024-06-06 03:46:36,321 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:36,321 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b96de8d0>
2024-06-06 03:46:36,322 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:36,322 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-06 03:46:36,322 - DEBUG - on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f238f0>)
2024-06-06 03:46:36,322 - DEBUG - on stmt: $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,322 - DEBUG - on stmt: $const26.5 = const(NoneType, None)
2024-06-06 03:46:36,322 - DEBUG - on stmt: $const28.6 = const(NoneType, None)
2024-06-06 03:46:36,322 - DEBUG - on stmt: $30store_slice.7 = global(slice: <class 'slice'>)
2024-06-06 03:46:36,322 - DEBUG - on stmt: $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1082), Var($const28.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,322 - DEBUG - on stmt: y[slice(None, None, None)] = $16call.3
2024-06-06 03:46:36,322 - DEBUG - on stmt: $const32.9 = const(NoneType, None)
2024-06-06 03:46:36,322 - DEBUG - on stmt: $32return_const.10 = cast(value=$const32.9)
2024-06-06 03:46:36,322 - DEBUG - on stmt: return $32return_const.10
2024-06-06 03:46:36,323 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16call.3': [(<numba.core.ir.Assign object at 0x7fe9b96df740>,
                            0)],
             '$30store_slice.7': [(<numba.core.ir.Assign object at 0x7fe9b96dfbf0>,
                                   0)],
             '$30store_slice.8': [(<numba.core.ir.Assign object at 0x7fe9b96dfd10>,
                                   0)],
             '$32return_const.10': [(<numba.core.ir.Assign object at 0x7fe9b96dffe0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b96df380>,
                                  0)],
             '$const26.5': [(<numba.core.ir.Assign object at 0x7fe9b96df950>,
                             0)],
             '$const28.6': [(<numba.core.ir.Assign object at 0x7fe9b96dfaa0>,
                             0)],
             '$const32.9': [(<numba.core.ir.Assign object at 0x7fe9b96dfec0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b96df1a0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7fe9b96df0e0>, 0)]})
2024-06-06 03:46:36,323 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b96de8d0>
2024-06-06 03:46:36,340 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=1, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=1, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	KW_NAMES(arg=1, lineno=3)
          92	CALL(arg=2, lineno=3)
         100	STORE_FAST(arg=2, lineno=3)
         102	LOAD_CONST(arg=2, lineno=4)
         104	LOAD_FAST(arg=2, lineno=4)
         106	LOAD_CONST(arg=0, lineno=4)
         108	LOAD_CONST(arg=3, lineno=4)
         110	STORE_SLICE(arg=None, lineno=4)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_FAST(arg=2, lineno=5)
         116	LOAD_CONST(arg=4, lineno=5)
         118	LOAD_CONST(arg=0, lineno=5)
         120	STORE_SLICE(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         132	LOAD_GLOBAL(arg=11, lineno=6)
         142	LOAD_CONST(arg=2, lineno=6)
         144	LOAD_CONST(arg=4, lineno=6)
         146	CALL(arg=2, lineno=6)
         154	UNARY_NEGATIVE(arg=None, lineno=6)
         156	LOAD_FAST(arg=1, lineno=6)
         158	LOAD_CONST(arg=2, lineno=6)
         160	BINARY_SUBSCR(arg=None, lineno=6)
         164	LOAD_GLOBAL(arg=13, lineno=6)
         174	LOAD_CONST(arg=2, lineno=6)
         176	LOAD_CONST(arg=3, lineno=6)
         178	CALL(arg=2, lineno=6)
         186	BINARY_OP(arg=10, lineno=6)
         190	CALL(arg=2, lineno=6)
         198	GET_ITER(arg=None, lineno=6)
>        200	FOR_ITER(arg=4, lineno=6)
         204	STORE_FAST(arg=3, lineno=6)
         206	LOAD_CONST(arg=2, lineno=7)
         208	STORE_FAST(arg=4, lineno=7)
         210	JUMP_BACKWARD(arg=6, lineno=7)
>        212	END_FOR(arg=None, lineno=6)
         214	LOAD_FAST(arg=2, lineno=8)
         216	RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:36,340 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:36,340 - DEBUG - stack: []
2024-06-06 03:46:36,340 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:36,340 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-06 03:46:36,340 - DEBUG - stack []
2024-06-06 03:46:36,341 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-06 03:46:36,341 - DEBUG - stack []
2024-06-06 03:46:36,341 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-06 03:46:36,341 - DEBUG - stack []
2024-06-06 03:46:36,341 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-06 03:46:36,341 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:36,341 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=1, lineno=2)
2024-06-06 03:46:36,341 - DEBUG - stack ['$6load_attr.1']
2024-06-06 03:46:36,341 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:36,341 - DEBUG - stack []
2024-06-06 03:46:36,342 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2024-06-06 03:46:36,342 - DEBUG - stack ['$28load_global.2']
2024-06-06 03:46:36,342 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-06 03:46:36,342 - DEBUG - stack ['$null$38.3', '$38load_attr.4']
2024-06-06 03:46:36,342 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:36,342 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5']
2024-06-06 03:46:36,342 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2024-06-06 03:46:36,342 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$60load_global.6']
2024-06-06 03:46:36,342 - DEBUG - dispatch pc=90, inst=KW_NAMES(arg=1, lineno=3)
2024-06-06 03:46:36,342 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:36,342 - DEBUG - dispatch pc=92, inst=CALL(arg=2, lineno=3)
2024-06-06 03:46:36,342 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:36,343 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=3)
2024-06-06 03:46:36,343 - DEBUG - stack ['$92call.8']
2024-06-06 03:46:36,343 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-06 03:46:36,343 - DEBUG - stack []
2024-06-06 03:46:36,343 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-06 03:46:36,343 - DEBUG - stack ['$const102.9']
2024-06-06 03:46:36,343 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-06 03:46:36,343 - DEBUG - stack ['$const102.9', '$out0104.10']
2024-06-06 03:46:36,343 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-06 03:46:36,343 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11']
2024-06-06 03:46:36,343 - DEBUG - dispatch pc=110, inst=STORE_SLICE(arg=None, lineno=4)
2024-06-06 03:46:36,343 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11', '$const108.12']
2024-06-06 03:46:36,344 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-06 03:46:36,344 - DEBUG - stack []
2024-06-06 03:46:36,344 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-06 03:46:36,344 - DEBUG - stack ['$const112.15']
2024-06-06 03:46:36,344 - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-06 03:46:36,344 - DEBUG - stack ['$const112.15', '$out0114.16']
2024-06-06 03:46:36,344 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-06 03:46:36,344 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17']
2024-06-06 03:46:36,344 - DEBUG - dispatch pc=120, inst=STORE_SLICE(arg=None, lineno=5)
2024-06-06 03:46:36,344 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17', '$const118.18']
2024-06-06 03:46:36,344 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-06 03:46:36,344 - DEBUG - stack []
2024-06-06 03:46:36,344 - DEBUG - dispatch pc=132, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-06 03:46:36,344 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-06 03:46:36,345 - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:36,345 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23']
2024-06-06 03:46:36,345 - DEBUG - dispatch pc=144, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-06 03:46:36,345 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25']
2024-06-06 03:46:36,345 - DEBUG - dispatch pc=146, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:36,345 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25', '$const144.26']
2024-06-06 03:46:36,345 - DEBUG - dispatch pc=154, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-06 03:46:36,345 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$146call.27']
2024-06-06 03:46:36,345 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-06 03:46:36,345 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28']
2024-06-06 03:46:36,345 - DEBUG - dispatch pc=158, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:36,345 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29']
2024-06-06 03:46:36,345 - DEBUG - dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-06 03:46:36,345 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29', '$const158.30']
2024-06-06 03:46:36,346 - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-06 03:46:36,346 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31']
2024-06-06 03:46:36,346 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:36,346 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32']
2024-06-06 03:46:36,346 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-06 03:46:36,346 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34']
2024-06-06 03:46:36,346 - DEBUG - dispatch pc=178, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:36,346 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34', '$const176.35']
2024-06-06 03:46:36,346 - DEBUG - dispatch pc=186, inst=BINARY_OP(arg=10, lineno=6)
2024-06-06 03:46:36,346 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$178call.36']
2024-06-06 03:46:36,346 - DEBUG - dispatch pc=190, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:36,346 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$binop_sub186.37']
2024-06-06 03:46:36,346 - DEBUG - dispatch pc=198, inst=GET_ITER(arg=None, lineno=6)
2024-06-06 03:46:36,347 - DEBUG - stack ['$190call.38']
2024-06-06 03:46:36,347 - DEBUG - end state. edges=[Edge(pc=200, stack=('$198get_iter.39',), blockstack=(), npush=0)]
2024-06-06 03:46:36,347 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:36,347 - DEBUG - stack: ['$phi200.0']
2024-06-06 03:46:36,347 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=1)
2024-06-06 03:46:36,347 - DEBUG - dispatch pc=200, inst=FOR_ITER(arg=4, lineno=6)
2024-06-06 03:46:36,347 - DEBUG - stack ['$phi200.0']
2024-06-06 03:46:36,347 - DEBUG - end state. edges=[Edge(pc=212, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0), Edge(pc=204, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:36,347 - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:36,347 - DEBUG - stack: ['$phi212.0', '$phi212.1']
2024-06-06 03:46:36,347 - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=2)
2024-06-06 03:46:36,347 - DEBUG - dispatch pc=212, inst=END_FOR(arg=None, lineno=6)
2024-06-06 03:46:36,347 - DEBUG - stack ['$phi212.0', '$phi212.1']
2024-06-06 03:46:36,348 - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-06 03:46:36,348 - DEBUG - stack []
2024-06-06 03:46:36,348 - DEBUG - dispatch pc=216, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:36,348 - DEBUG - stack ['$out0214.2']
2024-06-06 03:46:36,348 - DEBUG - end state. edges=[]
2024-06-06 03:46:36,348 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:36,348 - DEBUG - stack: ['$phi204.0', '$phi204.1']
2024-06-06 03:46:36,348 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=2)
2024-06-06 03:46:36,348 - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=3, lineno=6)
2024-06-06 03:46:36,348 - DEBUG - stack ['$phi204.0', '$phi204.1']
2024-06-06 03:46:36,348 - DEBUG - dispatch pc=206, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-06 03:46:36,348 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:36,348 - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=4, lineno=7)
2024-06-06 03:46:36,348 - DEBUG - stack ['$phi204.0', '$const206.2']
2024-06-06 03:46:36,349 - DEBUG - dispatch pc=210, inst=JUMP_BACKWARD(arg=6, lineno=7)
2024-06-06 03:46:36,349 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:36,349 - DEBUG - end state. edges=[Edge(pc=200, stack=('$phi204.0',), blockstack=(), npush=0)]
2024-06-06 03:46:36,349 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:36,349 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:36,349 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=1): {'$phi200.0'},
             State(pc_initial=204 nstack_initial=2): {'$phi204.1'},
             State(pc_initial=212 nstack_initial=2): set()})
2024-06-06 03:46:36,349 - DEBUG - defmap: {'$phi200.0': State(pc_initial=0 nstack_initial=0),
 '$phi204.1': State(pc_initial=200 nstack_initial=1),
 '$phi212.1': State(pc_initial=200 nstack_initial=1)}
2024-06-06 03:46:36,349 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi204.0',
                            State(pc_initial=204 nstack_initial=2))},
             '$phi204.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:36,350 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:36,351 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:36,351 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:36,352 - DEBUG - keep phismap: {'$phi200.0': {('$198get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi204.1': {('$200for_iter.2', State(pc_initial=200 nstack_initial=1))}}
2024-06-06 03:46:36,352 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi200.0': '$198get_iter.39'},
             State(pc_initial=200 nstack_initial=1): {'$phi204.1': '$200for_iter.2'}})
2024-06-06 03:46:36,352 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:36,352 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.4'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (92, {'func': '$38load_attr.4', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': 1, 'res': '$92call.8'}), (100, {'value': '$92call.8'}), (102, {'res': '$const102.9'}), (104, {'res': '$out0104.10'}), (106, {'res': '$const106.11'}), (108, {'res': '$const108.12'}), (110, {'start': '$const106.11', 'end': '$const108.12', 'container': '$out0104.10', 'value': '$const102.9', 'res': '$110store_slice.14', 'slicevar': '$110store_slice.13'}), (112, {'res': '$const112.15'}), (114, {'res': '$out0114.16'}), (116, {'res': '$const116.17'}), (118, {'res': '$const118.18'}), (120, {'start': '$const116.17', 'end': '$const118.18', 'container': '$out0114.16', 'value': '$const112.15', 'res': '$120store_slice.20', 'slicevar': '$120store_slice.19'}), (122, {'idx': 4, 'res': '$122load_global.21'}), (132, {'idx': 5, 'res': '$132load_global.23'}), (142, {'res': '$const142.25'}), (144, {'res': '$const144.26'}), (146, {'func': '$132load_global.23', 'args': ['$const142.25', '$const144.26'], 'kw_names': None, 'res': '$146call.27'}), (154, {'value': '$146call.27', 'res': '$154unary_negative.28'}), (156, {'res': '$full_shape0156.29'}), (158, {'res': '$const158.30'}), (160, {'index': '$const158.30', 'target': '$full_shape0156.29', 'res': '$160binary_subscr.31'}), (164, {'idx': 6, 'res': '$164load_global.32'}), (174, {'res': '$const174.34'}), (176, {'res': '$const176.35'}), (178, {'func': '$164load_global.32', 'args': ['$const174.34', '$const176.35'], 'kw_names': None, 'res': '$178call.36'}), (186, {'op': '-', 'lhs': '$160binary_subscr.31', 'rhs': '$178call.36', 'res': '$binop_sub186.37'}), (190, {'func': '$122load_global.21', 'args': ['$154unary_negative.28', '$binop_sub186.37'], 'kw_names': None, 'res': '$190call.38'}), (198, {'value': '$190call.38', 'res': '$198get_iter.39'})), outgoing_phis={'$phi200.0': '$198get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$198get_iter.39',)})
2024-06-06 03:46:36,352 - DEBUG - block_infos State(pc_initial=200 nstack_initial=1):
AdaptBlockInfo(insts=((200, {'iterator': '$phi200.0', 'pair': '$200for_iter.1', 'indval': '$200for_iter.2', 'pred': '$200for_iter.3'}),), outgoing_phis={'$phi204.1': '$200for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={212: ('$phi200.0', '$200for_iter.2'), 204: ('$phi200.0', '$200for_iter.2')})
2024-06-06 03:46:36,353 - DEBUG - block_infos State(pc_initial=204 nstack_initial=2):
AdaptBlockInfo(insts=((204, {'value': '$phi204.1'}), (206, {'res': '$const206.2'}), (208, {'value': '$const206.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi204.0',)})
2024-06-06 03:46:36,353 - DEBUG - block_infos State(pc_initial=212 nstack_initial=2):
AdaptBlockInfo(insts=((214, {'res': '$out0214.2'}), (216, {'retval': '$out0214.2', 'castval': '$216return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:36,354 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$28load_global.2']
    $38load_attr.4 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.4']
    $60load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool_) ['$60load_global.6', '$70load_attr.7']
    out0 = call $38load_attr.4(full_shape0, func=$38load_attr.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.4', '$70load_attr.7', 'full_shape0', 'out0']
    $const102.9 = const(int, 0)              ['$const102.9']
    $const106.11 = const(NoneType, None)     ['$const106.11']
    $const108.12 = const(int, 1)             ['$const108.12']
    $110store_slice.13 = global(slice: <class 'slice'>) ['$110store_slice.13']
    $110store_slice.14 = call $110store_slice.13($const106.11, $const108.12, func=$110store_slice.13, args=(Var($const106.11, <string>:4), Var($const108.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$110store_slice.13', '$110store_slice.14', '$const106.11', '$const108.12']
    out0[$110store_slice.14] = $const102.9   ['$110store_slice.14', '$const102.9', 'out0']
    $const112.15 = const(int, 0)             ['$const112.15']
    $const116.17 = const(int, -1)            ['$const116.17']
    $const118.18 = const(NoneType, None)     ['$const118.18']
    $120store_slice.19 = global(slice: <class 'slice'>) ['$120store_slice.19']
    $120store_slice.20 = call $120store_slice.19($const116.17, $const118.18, func=$120store_slice.19, args=(Var($const116.17, <string>:5), Var($const118.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$120store_slice.19', '$120store_slice.20', '$const116.17', '$const118.18']
    out0[$120store_slice.20] = $const112.15  ['$120store_slice.20', '$const112.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $132load_global.23 = global(min: <built-in function min>) ['$132load_global.23']
    $const142.25 = const(int, 0)             ['$const142.25']
    $const144.26 = const(int, -1)            ['$const144.26']
    $146call.27 = call $132load_global.23($const142.25, $const144.26, func=$132load_global.23, args=[Var($const142.25, <string>:6), Var($const144.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$132load_global.23', '$146call.27', '$const142.25', '$const144.26']
    $154unary_negative.28 = unary(fn=<built-in function neg>, value=$146call.27) ['$146call.27', '$154unary_negative.28']
    $const158.30 = const(int, 0)             ['$const158.30']
    $160binary_subscr.31 = getitem(value=full_shape0, index=$const158.30, fn=<built-in function getitem>) ['$160binary_subscr.31', '$const158.30', 'full_shape0']
    $164load_global.32 = global(max: <built-in function max>) ['$164load_global.32']
    $const174.34 = const(int, 0)             ['$const174.34']
    $const176.35 = const(int, 1)             ['$const176.35']
    $178call.36 = call $164load_global.32($const174.34, $const176.35, func=$164load_global.32, args=[Var($const174.34, <string>:6), Var($const176.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_global.32', '$178call.36', '$const174.34', '$const176.35']
    $binop_sub186.37 = $160binary_subscr.31 - $178call.36 ['$160binary_subscr.31', '$178call.36', '$binop_sub186.37']
    $190call.38 = call $122load_global.21($154unary_negative.28, $binop_sub186.37, func=$122load_global.21, args=[Var($154unary_negative.28, <string>:6), Var($binop_sub186.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$154unary_negative.28', '$190call.38', '$binop_sub186.37']
    $198get_iter.39 = getiter(value=$190call.38) ['$190call.38', '$198get_iter.39']
    $phi200.0 = $198get_iter.39              ['$198get_iter.39', '$phi200.0']
    jump 200                                 []
label 200:
    $200for_iter.1 = iternext(value=$phi200.0) ['$200for_iter.1', '$phi200.0']
    $200for_iter.2 = pair_first(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.2']
    $200for_iter.3 = pair_second(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.3']
    $phi204.1 = $200for_iter.2               ['$200for_iter.2', '$phi204.1']
    branch $200for_iter.3, 204, 212          ['$200for_iter.3']
label 204:
    index00 = $phi204.1                      ['$phi204.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 200                                 []
label 212:
    $216return_value.3 = cast(value=out0)    ['$216return_value.3', 'out0']
    return $216return_value.3                ['$216return_value.3']

2024-06-06 03:46:36,364 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:36,364 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b971e390>
2024-06-06 03:46:36,365 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:36,365 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:36,365 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:36,365 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:36,366 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:36,366 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:36,366 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,367 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:36,367 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:36,367 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:36,367 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:36,367 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,367 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:36,367 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:36,367 - DEBUG - on stmt: $const116.17.1 = const(int, -1)
2024-06-06 03:46:36,367 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:36,367 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:36,367 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,367 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:36,368 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:36,368 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:36,368 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:36,368 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:36,368 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,368 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:36,368 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:36,368 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:36,368 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:36,368 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:36,368 - DEBUG - on stmt: $const176.35.1 = const(int, 1)
2024-06-06 03:46:36,368 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,369 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:36,369 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,369 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:36,369 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:36,369 - DEBUG - on stmt: jump 200
2024-06-06 03:46:36,369 - DEBUG - ==== SSA block analysis pass on 200
2024-06-06 03:46:36,369 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b971e390>
2024-06-06 03:46:36,369 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:36,369 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:36,369 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:36,369 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:36,369 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 214
2024-06-06 03:46:36,369 - DEBUG - ==== SSA block analysis pass on 204
2024-06-06 03:46:36,370 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b971e390>
2024-06-06 03:46:36,370 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:36,370 - DEBUG - on stmt: jump 212
2024-06-06 03:46:36,370 - DEBUG - ==== SSA block analysis pass on 214
2024-06-06 03:46:36,370 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b971e390>
2024-06-06 03:46:36,370 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:36,370 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:36,370 - DEBUG - ==== SSA block analysis pass on 212
2024-06-06 03:46:36,370 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b971e390>
2024-06-06 03:46:36,370 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:36,370 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:36,370 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:36,370 - DEBUG - on stmt: $const14.4 = const(int, -1)
2024-06-06 03:46:36,371 - DEBUG - on stmt: stencil_index.1 = $const14.4 + index00
2024-06-06 03:46:36,371 - DEBUG - on stmt: $16binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:36,371 - DEBUG - on stmt: $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5
2024-06-06 03:46:36,371 - DEBUG - on stmt: $const26.8 = const(int, 0)
2024-06-06 03:46:36,371 - DEBUG - on stmt: stencil_index.2 = $const26.8 + index00
2024-06-06 03:46:36,371 - DEBUG - on stmt: $28binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-06 03:46:36,371 - DEBUG - on stmt: $const34.11 = const(int, 1)
2024-06-06 03:46:36,371 - DEBUG - on stmt: stencil_index.3 = $const34.11 + index00
2024-06-06 03:46:36,371 - DEBUG - on stmt: $36binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-06 03:46:36,371 - DEBUG - on stmt: $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12
2024-06-06 03:46:36,371 - DEBUG - on stmt: $binop_and_44.14 = $20compare_op.6 & $40compare_op.13
2024-06-06 03:46:36,371 - DEBUG - on stmt: $48return_value.15 = cast(value=$binop_and_44.14)
2024-06-06 03:46:36,372 - DEBUG - on stmt: out0[index00] = $48return_value.15
2024-06-06 03:46:36,372 - DEBUG - on stmt: jump 213
2024-06-06 03:46:36,372 - DEBUG - ==== SSA block analysis pass on 213
2024-06-06 03:46:36,372 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b971e390>
2024-06-06 03:46:36,372 - DEBUG - on stmt: jump 200
2024-06-06 03:46:36,373 - DEBUG - defs defaultdict(<class 'list'>,
            {'$110store_slice.13.1': [(<numba.core.ir.Assign object at 0x7fe9b97200e0>,
                                       0)],
             '$110store_slice.14.1': [(<numba.core.ir.Assign object at 0x7fe9b9720200>,
                                       0)],
             '$120store_slice.19.1': [(<numba.core.ir.Assign object at 0x7fe9b9720890>,
                                       0)],
             '$120store_slice.20.1': [(<numba.core.ir.Assign object at 0x7fe9b97209b0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7fe9b9720b60>,
                                       0)],
             '$132load_global.23.1': [(<numba.core.ir.Assign object at 0x7fe9b9720cb0>,
                                       0)],
             '$146call.27.1': [(<numba.core.ir.Assign object at 0x7fe9b9721100>,
                                0)],
             '$154unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7fe9b9721220>,
                                          0)],
             '$160binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7fe9b97215e0>,
                                         0)],
             '$164load_global.32.1': [(<numba.core.ir.Assign object at 0x7fe9b9721700>,
                                       0)],
             '$16binary_subscr.5': [(<numba.core.ir.Assign object at 0x7fe9b9716420>,
                                     212)],
             '$178call.36.1': [(<numba.core.ir.Assign object at 0x7fe9b9721b50>,
                                0)],
             '$190call.38.1': [(<numba.core.ir.Assign object at 0x7fe9b9721e20>,
                                0)],
             '$198get_iter.39.1': [(<numba.core.ir.Assign object at 0x7fe9b9721f40>,
                                    0)],
             '$200for_iter.1.1': [(<numba.core.ir.Assign object at 0x7fe9b9721fa0>,
                                   200)],
             '$200for_iter.2.1': [(<numba.core.ir.Assign object at 0x7fe9b97220c0>,
                                   200)],
             '$200for_iter.3.1': [(<numba.core.ir.Assign object at 0x7fe9b97221e0>,
                                   200)],
             '$20compare_op.6': [(<numba.core.ir.Assign object at 0x7fe9b970c9b0>,
                                  212)],
             '$216return_value.3.1': [(<numba.core.ir.Assign object at 0x7fe9b9722960>,
                                       214)],
             '$28binary_subscr.9': [(<numba.core.ir.Assign object at 0x7fe9b9716660>,
                                     212)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x7fe9b9717320>,
                                     0)],
             '$36binary_subscr.12': [(<numba.core.ir.Assign object at 0x7fe9b97168a0>,
                                      212)],
             '$38load_attr.4.1': [(<numba.core.ir.Assign object at 0x7fe9b9717470>,
                                   0)],
             '$40compare_op.13': [(<numba.core.ir.Assign object at 0x7fe9b970ea20>,
                                   212)],
             '$48return_value.15': [(<numba.core.ir.Assign object at 0x7fe9b970ecc0>,
                                     212)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x7fe9b97176b0>,
                                     0)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x7fe9b9717800>,
                                   0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7fe9b97161e0>,
                                    212)],
             '$binop_and_44.14': [(<numba.core.ir.Assign object at 0x7fe9b970fb30>,
                                   212)],
             '$binop_sub186.37.1': [(<numba.core.ir.Assign object at 0x7fe9b9721ca0>,
                                     0)],
             '$const102.9.1': [(<numba.core.ir.Assign object at 0x7fe9b9717bc0>,
                                0)],
             '$const106.11.1': [(<numba.core.ir.Assign object at 0x7fe9b9717e00>,
                                 0)],
             '$const108.12.1': [(<numba.core.ir.Assign object at 0x7fe9b9717f50>,
                                 0)],
             '$const112.15.1': [(<numba.core.ir.Assign object at 0x7fe9b97203b0>,
                                 0)],
             '$const116.17.1': [(<numba.core.ir.Assign object at 0x7fe9b97205f0>,
                                 0)],
             '$const118.18.1': [(<numba.core.ir.Assign object at 0x7fe9b9720740>,
                                 0)],
             '$const14.4': [(<numba.core.ir.Assign object at 0x7fe9b96f39b0>,
                             212)],
             '$const142.25.1': [(<numba.core.ir.Assign object at 0x7fe9b9720e00>,
                                 0)],
             '$const144.26.1': [(<numba.core.ir.Assign object at 0x7fe9b9720f50>,
                                 0)],
             '$const158.30.1': [(<numba.core.ir.Assign object at 0x7fe9b9721460>,
                                 0)],
             '$const174.34.1': [(<numba.core.ir.Assign object at 0x7fe9b9721850>,
                                 0)],
             '$const176.35.1': [(<numba.core.ir.Assign object at 0x7fe9b97219a0>,
                                 0)],
             '$const26.8': [(<numba.core.ir.Assign object at 0x7fe9b970d3d0>,
                             212)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x7fe9b970e390>,
                              212)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9b96f2fc0>,
                            212)],
             '$phi200.0.1': [(<numba.core.ir.Assign object at 0x7fe9b97171d0>,
                              0)],
             '$phi204.1.1': [(<numba.core.ir.Assign object at 0x7fe9b97222a0>,
                              200)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7fe9b97170e0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7fe9b9722450>,
                          204)],
             'out0': [(<numba.core.ir.Assign object at 0x7fe9b97179b0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7fe9b9715b20>,
                                212)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7fe9b9716360>,
                                  212)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7fe9b97165a0>,
                                  212)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7fe9b97167e0>,
                                  212)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b9716e70>, 0)]})
2024-06-06 03:46:36,373 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9975c40>
2024-06-06 03:46:36,585 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          14	LOAD_FAST(arg=0, lineno=1082)
          16	CALL(arg=1, lineno=1082)
          24	LOAD_FAST(arg=1, lineno=1082)
          26	LOAD_CONST(arg=1, lineno=1082)
          28	LOAD_CONST(arg=1, lineno=1082)
          30	STORE_SLICE(arg=None, lineno=1082)
          32	RETURN_CONST(arg=1, lineno=1082)
2024-06-06 03:46:36,586 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:36,586 - DEBUG - stack: []
2024-06-06 03:46:36,586 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:36,586 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-06-06 03:46:36,586 - DEBUG - stack []
2024-06-06 03:46:36,586 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-06-06 03:46:36,586 - DEBUG - stack []
2024-06-06 03:46:36,586 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-06-06 03:46:36,586 - DEBUG - stack []
2024-06-06 03:46:36,586 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=1082)
2024-06-06 03:46:36,587 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:36,587 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=1082)
2024-06-06 03:46:36,587 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2']
2024-06-06 03:46:36,587 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1082)
2024-06-06 03:46:36,587 - DEBUG - stack ['$16call.3']
2024-06-06 03:46:36,587 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-06 03:46:36,587 - DEBUG - stack ['$16call.3', '$y24.4']
2024-06-06 03:46:36,587 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-06 03:46:36,588 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5']
2024-06-06 03:46:36,588 - DEBUG - dispatch pc=30, inst=STORE_SLICE(arg=None, lineno=1082)
2024-06-06 03:46:36,588 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5', '$const28.6']
2024-06-06 03:46:36,588 - DEBUG - dispatch pc=32, inst=RETURN_CONST(arg=1, lineno=1082)
2024-06-06 03:46:36,588 - DEBUG - stack []
2024-06-06 03:46:36,588 - DEBUG - end state. edges=[]
2024-06-06 03:46:36,588 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:36,588 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:36,588 - DEBUG - defmap: {}
2024-06-06 03:46:36,589 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:36,589 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:36,589 - DEBUG - keep phismap: {}
2024-06-06 03:46:36,589 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:36,589 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:36,589 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$x14.2'}), (16, {'func': '$4load_global.0', 'args': ['$x14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'res': '$y24.4'}), (26, {'res': '$const26.5'}), (28, {'res': '$const28.6'}), (30, {'start': '$const26.5', 'end': '$const28.6', 'container': '$y24.4', 'value': '$16call.3', 'res': '$30store_slice.8', 'slicevar': '$30store_slice.7'}), (32, {'retval': '$const32.9', 'castval': '$32return_const.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:36,590 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f238f0>) ['$4load_global.0']
    $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$16call.3', '$4load_global.0', 'x']
    $const26.5 = const(NoneType, None)       ['$const26.5']
    $const28.6 = const(NoneType, None)       ['$const28.6']
    $30store_slice.7 = global(slice: <class 'slice'>) ['$30store_slice.7']
    $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1082), Var($const28.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$30store_slice.7', '$30store_slice.8', '$const26.5', '$const28.6']
    y[$30store_slice.8] = $16call.3          ['$16call.3', '$30store_slice.8', 'y']
    $const32.9 = const(NoneType, None)       ['$const32.9']
    $32return_const.10 = cast(value=$const32.9) ['$32return_const.10', '$const32.9']
    return $32return_const.10                ['$32return_const.10']

2024-06-06 03:46:36,594 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:36,595 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b96de600>
2024-06-06 03:46:36,595 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:36,595 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-06 03:46:36,595 - DEBUG - on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f238f0>)
2024-06-06 03:46:36,595 - DEBUG - on stmt: $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,595 - DEBUG - on stmt: $const26.5 = const(NoneType, None)
2024-06-06 03:46:36,595 - DEBUG - on stmt: $const28.6 = const(NoneType, None)
2024-06-06 03:46:36,595 - DEBUG - on stmt: $30store_slice.7 = global(slice: <class 'slice'>)
2024-06-06 03:46:36,595 - DEBUG - on stmt: $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1082), Var($const28.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,595 - DEBUG - on stmt: y[slice(None, None, None)] = $16call.3
2024-06-06 03:46:36,596 - DEBUG - on stmt: $const32.9 = const(NoneType, None)
2024-06-06 03:46:36,596 - DEBUG - on stmt: $32return_const.10 = cast(value=$const32.9)
2024-06-06 03:46:36,596 - DEBUG - on stmt: return $32return_const.10
2024-06-06 03:46:36,596 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16call.3': [(<numba.core.ir.Assign object at 0x7fe9b9444e60>,
                            0)],
             '$30store_slice.7': [(<numba.core.ir.Assign object at 0x7fe9b9445310>,
                                   0)],
             '$30store_slice.8': [(<numba.core.ir.Assign object at 0x7fe9b9445430>,
                                   0)],
             '$32return_const.10': [(<numba.core.ir.Assign object at 0x7fe9b94456d0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9444c20>,
                                  0)],
             '$const26.5': [(<numba.core.ir.Assign object at 0x7fe9b9445070>,
                             0)],
             '$const28.6': [(<numba.core.ir.Assign object at 0x7fe9b94451c0>,
                             0)],
             '$const32.9': [(<numba.core.ir.Assign object at 0x7fe9b94455e0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b9444ad0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7fe9b9444980>, 0)]})
2024-06-06 03:46:36,596 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b96de600>
2024-06-06 03:46:36,614 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=1, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=1, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	KW_NAMES(arg=1, lineno=3)
          92	CALL(arg=2, lineno=3)
         100	STORE_FAST(arg=2, lineno=3)
         102	LOAD_CONST(arg=2, lineno=4)
         104	LOAD_FAST(arg=2, lineno=4)
         106	LOAD_CONST(arg=0, lineno=4)
         108	LOAD_CONST(arg=3, lineno=4)
         110	STORE_SLICE(arg=None, lineno=4)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_FAST(arg=2, lineno=5)
         116	LOAD_CONST(arg=4, lineno=5)
         118	LOAD_CONST(arg=0, lineno=5)
         120	STORE_SLICE(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         132	LOAD_GLOBAL(arg=11, lineno=6)
         142	LOAD_CONST(arg=2, lineno=6)
         144	LOAD_CONST(arg=4, lineno=6)
         146	CALL(arg=2, lineno=6)
         154	UNARY_NEGATIVE(arg=None, lineno=6)
         156	LOAD_FAST(arg=1, lineno=6)
         158	LOAD_CONST(arg=2, lineno=6)
         160	BINARY_SUBSCR(arg=None, lineno=6)
         164	LOAD_GLOBAL(arg=13, lineno=6)
         174	LOAD_CONST(arg=2, lineno=6)
         176	LOAD_CONST(arg=3, lineno=6)
         178	CALL(arg=2, lineno=6)
         186	BINARY_OP(arg=10, lineno=6)
         190	CALL(arg=2, lineno=6)
         198	GET_ITER(arg=None, lineno=6)
>        200	FOR_ITER(arg=4, lineno=6)
         204	STORE_FAST(arg=3, lineno=6)
         206	LOAD_CONST(arg=2, lineno=7)
         208	STORE_FAST(arg=4, lineno=7)
         210	JUMP_BACKWARD(arg=6, lineno=7)
>        212	END_FOR(arg=None, lineno=6)
         214	LOAD_FAST(arg=2, lineno=8)
         216	RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:36,614 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:36,615 - DEBUG - stack: []
2024-06-06 03:46:36,615 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:36,615 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-06 03:46:36,615 - DEBUG - stack []
2024-06-06 03:46:36,615 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-06 03:46:36,615 - DEBUG - stack []
2024-06-06 03:46:36,615 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-06 03:46:36,615 - DEBUG - stack []
2024-06-06 03:46:36,615 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-06 03:46:36,615 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:36,616 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=1, lineno=2)
2024-06-06 03:46:36,616 - DEBUG - stack ['$6load_attr.1']
2024-06-06 03:46:36,616 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:36,616 - DEBUG - stack []
2024-06-06 03:46:36,616 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2024-06-06 03:46:36,616 - DEBUG - stack ['$28load_global.2']
2024-06-06 03:46:36,616 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-06 03:46:36,616 - DEBUG - stack ['$null$38.3', '$38load_attr.4']
2024-06-06 03:46:36,616 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:36,616 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5']
2024-06-06 03:46:36,617 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2024-06-06 03:46:36,617 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$60load_global.6']
2024-06-06 03:46:36,617 - DEBUG - dispatch pc=90, inst=KW_NAMES(arg=1, lineno=3)
2024-06-06 03:46:36,617 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:36,617 - DEBUG - dispatch pc=92, inst=CALL(arg=2, lineno=3)
2024-06-06 03:46:36,617 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:36,617 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=3)
2024-06-06 03:46:36,617 - DEBUG - stack ['$92call.8']
2024-06-06 03:46:36,617 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-06 03:46:36,617 - DEBUG - stack []
2024-06-06 03:46:36,617 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-06 03:46:36,617 - DEBUG - stack ['$const102.9']
2024-06-06 03:46:36,618 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-06 03:46:36,618 - DEBUG - stack ['$const102.9', '$out0104.10']
2024-06-06 03:46:36,618 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-06 03:46:36,618 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11']
2024-06-06 03:46:36,618 - DEBUG - dispatch pc=110, inst=STORE_SLICE(arg=None, lineno=4)
2024-06-06 03:46:36,618 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11', '$const108.12']
2024-06-06 03:46:36,618 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-06 03:46:36,618 - DEBUG - stack []
2024-06-06 03:46:36,618 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-06 03:46:36,618 - DEBUG - stack ['$const112.15']
2024-06-06 03:46:36,618 - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-06 03:46:36,618 - DEBUG - stack ['$const112.15', '$out0114.16']
2024-06-06 03:46:36,618 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-06 03:46:36,618 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17']
2024-06-06 03:46:36,619 - DEBUG - dispatch pc=120, inst=STORE_SLICE(arg=None, lineno=5)
2024-06-06 03:46:36,619 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17', '$const118.18']
2024-06-06 03:46:36,619 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-06 03:46:36,619 - DEBUG - stack []
2024-06-06 03:46:36,619 - DEBUG - dispatch pc=132, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-06 03:46:36,619 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-06 03:46:36,619 - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:36,619 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23']
2024-06-06 03:46:36,619 - DEBUG - dispatch pc=144, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-06 03:46:36,619 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25']
2024-06-06 03:46:36,619 - DEBUG - dispatch pc=146, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:36,619 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25', '$const144.26']
2024-06-06 03:46:36,619 - DEBUG - dispatch pc=154, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-06 03:46:36,620 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$146call.27']
2024-06-06 03:46:36,620 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-06 03:46:36,620 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28']
2024-06-06 03:46:36,620 - DEBUG - dispatch pc=158, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:36,620 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29']
2024-06-06 03:46:36,620 - DEBUG - dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-06 03:46:36,620 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29', '$const158.30']
2024-06-06 03:46:36,620 - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-06 03:46:36,620 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31']
2024-06-06 03:46:36,620 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:36,620 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32']
2024-06-06 03:46:36,620 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-06 03:46:36,621 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34']
2024-06-06 03:46:36,621 - DEBUG - dispatch pc=178, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:36,621 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34', '$const176.35']
2024-06-06 03:46:36,621 - DEBUG - dispatch pc=186, inst=BINARY_OP(arg=10, lineno=6)
2024-06-06 03:46:36,621 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$178call.36']
2024-06-06 03:46:36,621 - DEBUG - dispatch pc=190, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:36,621 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$binop_sub186.37']
2024-06-06 03:46:36,621 - DEBUG - dispatch pc=198, inst=GET_ITER(arg=None, lineno=6)
2024-06-06 03:46:36,621 - DEBUG - stack ['$190call.38']
2024-06-06 03:46:36,621 - DEBUG - end state. edges=[Edge(pc=200, stack=('$198get_iter.39',), blockstack=(), npush=0)]
2024-06-06 03:46:36,621 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:36,621 - DEBUG - stack: ['$phi200.0']
2024-06-06 03:46:36,621 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=1)
2024-06-06 03:46:36,622 - DEBUG - dispatch pc=200, inst=FOR_ITER(arg=4, lineno=6)
2024-06-06 03:46:36,622 - DEBUG - stack ['$phi200.0']
2024-06-06 03:46:36,622 - DEBUG - end state. edges=[Edge(pc=212, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0), Edge(pc=204, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:36,622 - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:36,622 - DEBUG - stack: ['$phi212.0', '$phi212.1']
2024-06-06 03:46:36,622 - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=2)
2024-06-06 03:46:36,622 - DEBUG - dispatch pc=212, inst=END_FOR(arg=None, lineno=6)
2024-06-06 03:46:36,622 - DEBUG - stack ['$phi212.0', '$phi212.1']
2024-06-06 03:46:36,622 - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-06 03:46:36,622 - DEBUG - stack []
2024-06-06 03:46:36,622 - DEBUG - dispatch pc=216, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:36,622 - DEBUG - stack ['$out0214.2']
2024-06-06 03:46:36,623 - DEBUG - end state. edges=[]
2024-06-06 03:46:36,623 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:36,623 - DEBUG - stack: ['$phi204.0', '$phi204.1']
2024-06-06 03:46:36,623 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=2)
2024-06-06 03:46:36,623 - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=3, lineno=6)
2024-06-06 03:46:36,623 - DEBUG - stack ['$phi204.0', '$phi204.1']
2024-06-06 03:46:36,623 - DEBUG - dispatch pc=206, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-06 03:46:36,623 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:36,623 - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=4, lineno=7)
2024-06-06 03:46:36,624 - DEBUG - stack ['$phi204.0', '$const206.2']
2024-06-06 03:46:36,624 - DEBUG - dispatch pc=210, inst=JUMP_BACKWARD(arg=6, lineno=7)
2024-06-06 03:46:36,624 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:36,624 - DEBUG - end state. edges=[Edge(pc=200, stack=('$phi204.0',), blockstack=(), npush=0)]
2024-06-06 03:46:36,624 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:36,624 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:36,624 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=1): {'$phi200.0'},
             State(pc_initial=204 nstack_initial=2): {'$phi204.1'},
             State(pc_initial=212 nstack_initial=2): set()})
2024-06-06 03:46:36,624 - DEBUG - defmap: {'$phi200.0': State(pc_initial=0 nstack_initial=0),
 '$phi204.1': State(pc_initial=200 nstack_initial=1),
 '$phi212.1': State(pc_initial=200 nstack_initial=1)}
2024-06-06 03:46:36,624 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi204.0',
                            State(pc_initial=204 nstack_initial=2))},
             '$phi204.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:36,625 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:36,626 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:36,626 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:36,628 - DEBUG - keep phismap: {'$phi200.0': {('$198get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi204.1': {('$200for_iter.2', State(pc_initial=200 nstack_initial=1))}}
2024-06-06 03:46:36,628 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi200.0': '$198get_iter.39'},
             State(pc_initial=200 nstack_initial=1): {'$phi204.1': '$200for_iter.2'}})
2024-06-06 03:46:36,628 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:36,628 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.4'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (92, {'func': '$38load_attr.4', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': 1, 'res': '$92call.8'}), (100, {'value': '$92call.8'}), (102, {'res': '$const102.9'}), (104, {'res': '$out0104.10'}), (106, {'res': '$const106.11'}), (108, {'res': '$const108.12'}), (110, {'start': '$const106.11', 'end': '$const108.12', 'container': '$out0104.10', 'value': '$const102.9', 'res': '$110store_slice.14', 'slicevar': '$110store_slice.13'}), (112, {'res': '$const112.15'}), (114, {'res': '$out0114.16'}), (116, {'res': '$const116.17'}), (118, {'res': '$const118.18'}), (120, {'start': '$const116.17', 'end': '$const118.18', 'container': '$out0114.16', 'value': '$const112.15', 'res': '$120store_slice.20', 'slicevar': '$120store_slice.19'}), (122, {'idx': 4, 'res': '$122load_global.21'}), (132, {'idx': 5, 'res': '$132load_global.23'}), (142, {'res': '$const142.25'}), (144, {'res': '$const144.26'}), (146, {'func': '$132load_global.23', 'args': ['$const142.25', '$const144.26'], 'kw_names': None, 'res': '$146call.27'}), (154, {'value': '$146call.27', 'res': '$154unary_negative.28'}), (156, {'res': '$full_shape0156.29'}), (158, {'res': '$const158.30'}), (160, {'index': '$const158.30', 'target': '$full_shape0156.29', 'res': '$160binary_subscr.31'}), (164, {'idx': 6, 'res': '$164load_global.32'}), (174, {'res': '$const174.34'}), (176, {'res': '$const176.35'}), (178, {'func': '$164load_global.32', 'args': ['$const174.34', '$const176.35'], 'kw_names': None, 'res': '$178call.36'}), (186, {'op': '-', 'lhs': '$160binary_subscr.31', 'rhs': '$178call.36', 'res': '$binop_sub186.37'}), (190, {'func': '$122load_global.21', 'args': ['$154unary_negative.28', '$binop_sub186.37'], 'kw_names': None, 'res': '$190call.38'}), (198, {'value': '$190call.38', 'res': '$198get_iter.39'})), outgoing_phis={'$phi200.0': '$198get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$198get_iter.39',)})
2024-06-06 03:46:36,628 - DEBUG - block_infos State(pc_initial=200 nstack_initial=1):
AdaptBlockInfo(insts=((200, {'iterator': '$phi200.0', 'pair': '$200for_iter.1', 'indval': '$200for_iter.2', 'pred': '$200for_iter.3'}),), outgoing_phis={'$phi204.1': '$200for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={212: ('$phi200.0', '$200for_iter.2'), 204: ('$phi200.0', '$200for_iter.2')})
2024-06-06 03:46:36,628 - DEBUG - block_infos State(pc_initial=204 nstack_initial=2):
AdaptBlockInfo(insts=((204, {'value': '$phi204.1'}), (206, {'res': '$const206.2'}), (208, {'value': '$const206.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi204.0',)})
2024-06-06 03:46:36,628 - DEBUG - block_infos State(pc_initial=212 nstack_initial=2):
AdaptBlockInfo(insts=((214, {'res': '$out0214.2'}), (216, {'retval': '$out0214.2', 'castval': '$216return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:36,630 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$28load_global.2']
    $38load_attr.4 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.4']
    $60load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool_) ['$60load_global.6', '$70load_attr.7']
    out0 = call $38load_attr.4(full_shape0, func=$38load_attr.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.4', '$70load_attr.7', 'full_shape0', 'out0']
    $const102.9 = const(int, 0)              ['$const102.9']
    $const106.11 = const(NoneType, None)     ['$const106.11']
    $const108.12 = const(int, 1)             ['$const108.12']
    $110store_slice.13 = global(slice: <class 'slice'>) ['$110store_slice.13']
    $110store_slice.14 = call $110store_slice.13($const106.11, $const108.12, func=$110store_slice.13, args=(Var($const106.11, <string>:4), Var($const108.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$110store_slice.13', '$110store_slice.14', '$const106.11', '$const108.12']
    out0[$110store_slice.14] = $const102.9   ['$110store_slice.14', '$const102.9', 'out0']
    $const112.15 = const(int, 0)             ['$const112.15']
    $const116.17 = const(int, -1)            ['$const116.17']
    $const118.18 = const(NoneType, None)     ['$const118.18']
    $120store_slice.19 = global(slice: <class 'slice'>) ['$120store_slice.19']
    $120store_slice.20 = call $120store_slice.19($const116.17, $const118.18, func=$120store_slice.19, args=(Var($const116.17, <string>:5), Var($const118.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$120store_slice.19', '$120store_slice.20', '$const116.17', '$const118.18']
    out0[$120store_slice.20] = $const112.15  ['$120store_slice.20', '$const112.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $132load_global.23 = global(min: <built-in function min>) ['$132load_global.23']
    $const142.25 = const(int, 0)             ['$const142.25']
    $const144.26 = const(int, -1)            ['$const144.26']
    $146call.27 = call $132load_global.23($const142.25, $const144.26, func=$132load_global.23, args=[Var($const142.25, <string>:6), Var($const144.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$132load_global.23', '$146call.27', '$const142.25', '$const144.26']
    $154unary_negative.28 = unary(fn=<built-in function neg>, value=$146call.27) ['$146call.27', '$154unary_negative.28']
    $const158.30 = const(int, 0)             ['$const158.30']
    $160binary_subscr.31 = getitem(value=full_shape0, index=$const158.30, fn=<built-in function getitem>) ['$160binary_subscr.31', '$const158.30', 'full_shape0']
    $164load_global.32 = global(max: <built-in function max>) ['$164load_global.32']
    $const174.34 = const(int, 0)             ['$const174.34']
    $const176.35 = const(int, 1)             ['$const176.35']
    $178call.36 = call $164load_global.32($const174.34, $const176.35, func=$164load_global.32, args=[Var($const174.34, <string>:6), Var($const176.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_global.32', '$178call.36', '$const174.34', '$const176.35']
    $binop_sub186.37 = $160binary_subscr.31 - $178call.36 ['$160binary_subscr.31', '$178call.36', '$binop_sub186.37']
    $190call.38 = call $122load_global.21($154unary_negative.28, $binop_sub186.37, func=$122load_global.21, args=[Var($154unary_negative.28, <string>:6), Var($binop_sub186.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$154unary_negative.28', '$190call.38', '$binop_sub186.37']
    $198get_iter.39 = getiter(value=$190call.38) ['$190call.38', '$198get_iter.39']
    $phi200.0 = $198get_iter.39              ['$198get_iter.39', '$phi200.0']
    jump 200                                 []
label 200:
    $200for_iter.1 = iternext(value=$phi200.0) ['$200for_iter.1', '$phi200.0']
    $200for_iter.2 = pair_first(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.2']
    $200for_iter.3 = pair_second(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.3']
    $phi204.1 = $200for_iter.2               ['$200for_iter.2', '$phi204.1']
    branch $200for_iter.3, 204, 212          ['$200for_iter.3']
label 204:
    index00 = $phi204.1                      ['$phi204.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 200                                 []
label 212:
    $216return_value.3 = cast(value=out0)    ['$216return_value.3', 'out0']
    return $216return_value.3                ['$216return_value.3']

2024-06-06 03:46:36,642 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:36,642 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b946b230>
2024-06-06 03:46:36,642 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:36,642 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:36,642 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:36,642 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:36,642 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:36,642 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:36,642 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,643 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:36,643 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:36,643 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:36,643 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:36,643 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,643 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:36,643 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:36,643 - DEBUG - on stmt: $const116.17.1 = const(int, -1)
2024-06-06 03:46:36,643 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:36,644 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:36,644 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,644 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:36,644 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:36,644 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:36,644 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:36,644 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:36,644 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,644 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:36,644 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:36,645 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:36,645 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:36,645 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:36,645 - DEBUG - on stmt: $const176.35.1 = const(int, 1)
2024-06-06 03:46:36,645 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,645 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:36,645 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:36,645 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:36,646 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:36,646 - DEBUG - on stmt: jump 200
2024-06-06 03:46:36,646 - DEBUG - ==== SSA block analysis pass on 200
2024-06-06 03:46:36,646 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b946b230>
2024-06-06 03:46:36,646 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:36,646 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:36,646 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:36,646 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:36,646 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 214
2024-06-06 03:46:36,646 - DEBUG - ==== SSA block analysis pass on 204
2024-06-06 03:46:36,646 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b946b230>
2024-06-06 03:46:36,646 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:36,646 - DEBUG - on stmt: jump 212
2024-06-06 03:46:36,647 - DEBUG - ==== SSA block analysis pass on 214
2024-06-06 03:46:36,647 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b946b230>
2024-06-06 03:46:36,647 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:36,647 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:36,647 - DEBUG - ==== SSA block analysis pass on 212
2024-06-06 03:46:36,647 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b946b230>
2024-06-06 03:46:36,647 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:36,647 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:36,647 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:36,647 - DEBUG - on stmt: $const14.4 = const(int, -1)
2024-06-06 03:46:36,647 - DEBUG - on stmt: stencil_index.1 = $const14.4 + index00
2024-06-06 03:46:36,647 - DEBUG - on stmt: $16binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:36,647 - DEBUG - on stmt: $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5
2024-06-06 03:46:36,648 - DEBUG - on stmt: $const26.8 = const(int, 0)
2024-06-06 03:46:36,648 - DEBUG - on stmt: stencil_index.2 = $const26.8 + index00
2024-06-06 03:46:36,648 - DEBUG - on stmt: $28binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-06 03:46:36,648 - DEBUG - on stmt: $const34.11 = const(int, 1)
2024-06-06 03:46:36,648 - DEBUG - on stmt: stencil_index.3 = $const34.11 + index00
2024-06-06 03:46:36,648 - DEBUG - on stmt: $36binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-06 03:46:36,648 - DEBUG - on stmt: $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12
2024-06-06 03:46:36,648 - DEBUG - on stmt: $binop_and_44.14 = $20compare_op.6 & $40compare_op.13
2024-06-06 03:46:36,648 - DEBUG - on stmt: $48return_value.15 = cast(value=$binop_and_44.14)
2024-06-06 03:46:36,648 - DEBUG - on stmt: out0[index00] = $48return_value.15
2024-06-06 03:46:36,648 - DEBUG - on stmt: jump 213
2024-06-06 03:46:36,648 - DEBUG - ==== SSA block analysis pass on 213
2024-06-06 03:46:36,649 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b946b230>
2024-06-06 03:46:36,649 - DEBUG - on stmt: jump 200
2024-06-06 03:46:36,650 - DEBUG - defs defaultdict(<class 'list'>,
            {'$110store_slice.13.1': [(<numba.core.ir.Assign object at 0x7fe9b9465280>,
                                       0)],
             '$110store_slice.14.1': [(<numba.core.ir.Assign object at 0x7fe9b94653a0>,
                                       0)],
             '$120store_slice.19.1': [(<numba.core.ir.Assign object at 0x7fe9b9465a30>,
                                       0)],
             '$120store_slice.20.1': [(<numba.core.ir.Assign object at 0x7fe9b9465b50>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7fe9b9465d00>,
                                       0)],
             '$132load_global.23.1': [(<numba.core.ir.Assign object at 0x7fe9b9465e50>,
                                       0)],
             '$146call.27.1': [(<numba.core.ir.Assign object at 0x7fe9b94662a0>,
                                0)],
             '$154unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7fe9b94663c0>,
                                          0)],
             '$160binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7fe9b9466780>,
                                         0)],
             '$164load_global.32.1': [(<numba.core.ir.Assign object at 0x7fe9b94668a0>,
                                       0)],
             '$16binary_subscr.5': [(<numba.core.ir.Assign object at 0x7fe9b945bc20>,
                                     212)],
             '$178call.36.1': [(<numba.core.ir.Assign object at 0x7fe9b9466cf0>,
                                0)],
             '$190call.38.1': [(<numba.core.ir.Assign object at 0x7fe9b9466fc0>,
                                0)],
             '$198get_iter.39.1': [(<numba.core.ir.Assign object at 0x7fe9b94670e0>,
                                    0)],
             '$200for_iter.1.1': [(<numba.core.ir.Assign object at 0x7fe9b9467140>,
                                   200)],
             '$200for_iter.2.1': [(<numba.core.ir.Assign object at 0x7fe9b9467260>,
                                   200)],
             '$200for_iter.3.1': [(<numba.core.ir.Assign object at 0x7fe9b9467380>,
                                   200)],
             '$20compare_op.6': [(<numba.core.ir.Assign object at 0x7fe9b972e060>,
                                  212)],
             '$216return_value.3.1': [(<numba.core.ir.Assign object at 0x7fe9b9467b00>,
                                       214)],
             '$28binary_subscr.9': [(<numba.core.ir.Assign object at 0x7fe9b945be60>,
                                     212)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x7fe9b9464500>,
                                     0)],
             '$36binary_subscr.12': [(<numba.core.ir.Assign object at 0x7fe9b94640e0>,
                                      212)],
             '$38load_attr.4.1': [(<numba.core.ir.Assign object at 0x7fe9b9464650>,
                                   0)],
             '$40compare_op.13': [(<numba.core.ir.Assign object at 0x7fe9b9458950>,
                                   212)],
             '$48return_value.15': [(<numba.core.ir.Assign object at 0x7fe9b9459ac0>,
                                     212)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x7fe9b9464890>,
                                     0)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x7fe9b94649e0>,
                                   0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7fe9b945b9e0>,
                                    212)],
             '$binop_and_44.14': [(<numba.core.ir.Assign object at 0x7fe9b9459370>,
                                   212)],
             '$binop_sub186.37.1': [(<numba.core.ir.Assign object at 0x7fe9b9466e40>,
                                     0)],
             '$const102.9.1': [(<numba.core.ir.Assign object at 0x7fe9b9464da0>,
                                0)],
             '$const106.11.1': [(<numba.core.ir.Assign object at 0x7fe9b9464fe0>,
                                 0)],
             '$const108.12.1': [(<numba.core.ir.Assign object at 0x7fe9b9465130>,
                                 0)],
             '$const112.15.1': [(<numba.core.ir.Assign object at 0x7fe9b9465550>,
                                 0)],
             '$const116.17.1': [(<numba.core.ir.Assign object at 0x7fe9b9465790>,
                                 0)],
             '$const118.18.1': [(<numba.core.ir.Assign object at 0x7fe9b94658e0>,
                                 0)],
             '$const14.4': [(<numba.core.ir.Assign object at 0x7fe9b972cda0>,
                             212)],
             '$const142.25.1': [(<numba.core.ir.Assign object at 0x7fe9b9465fa0>,
                                 0)],
             '$const144.26.1': [(<numba.core.ir.Assign object at 0x7fe9b94660f0>,
                                 0)],
             '$const158.30.1': [(<numba.core.ir.Assign object at 0x7fe9b9466600>,
                                 0)],
             '$const174.34.1': [(<numba.core.ir.Assign object at 0x7fe9b94669f0>,
                                 0)],
             '$const176.35.1': [(<numba.core.ir.Assign object at 0x7fe9b9466b40>,
                                 0)],
             '$const26.8': [(<numba.core.ir.Assign object at 0x7fe9b972d8e0>,
                             212)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x7fe9b972f950>,
                              212)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9b9446180>,
                            212)],
             '$phi200.0.1': [(<numba.core.ir.Assign object at 0x7fe9b9464140>,
                              0)],
             '$phi204.1.1': [(<numba.core.ir.Assign object at 0x7fe9b9467440>,
                              200)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7fe9b9464290>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7fe9b94675f0>,
                          204)],
             'out0': [(<numba.core.ir.Assign object at 0x7fe9b9464b90>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7fe9b945b320>,
                                212)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7fe9b945bb60>,
                                  212)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7fe9b945bda0>,
                                  212)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7fe9b945bfe0>,
                                  212)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b94442f0>, 0)]})
2024-06-06 03:46:36,650 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b946b230>
2024-06-06 03:46:36,990 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          14	LOAD_FAST(arg=0, lineno=1082)
          16	CALL(arg=1, lineno=1082)
          24	LOAD_FAST(arg=1, lineno=1082)
          26	LOAD_CONST(arg=1, lineno=1082)
          28	LOAD_CONST(arg=1, lineno=1082)
          30	STORE_SLICE(arg=None, lineno=1082)
          32	RETURN_CONST(arg=1, lineno=1082)
2024-06-06 03:46:36,990 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:36,990 - DEBUG - stack: []
2024-06-06 03:46:36,990 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:36,990 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-06-06 03:46:36,990 - DEBUG - stack []
2024-06-06 03:46:36,990 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-06-06 03:46:36,991 - DEBUG - stack []
2024-06-06 03:46:36,991 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-06-06 03:46:36,991 - DEBUG - stack []
2024-06-06 03:46:36,991 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=1082)
2024-06-06 03:46:36,991 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:36,991 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=1082)
2024-06-06 03:46:36,991 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2']
2024-06-06 03:46:36,992 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1082)
2024-06-06 03:46:36,992 - DEBUG - stack ['$16call.3']
2024-06-06 03:46:36,992 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-06 03:46:36,992 - DEBUG - stack ['$16call.3', '$y24.4']
2024-06-06 03:46:36,992 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-06 03:46:36,992 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5']
2024-06-06 03:46:36,992 - DEBUG - dispatch pc=30, inst=STORE_SLICE(arg=None, lineno=1082)
2024-06-06 03:46:36,992 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5', '$const28.6']
2024-06-06 03:46:36,992 - DEBUG - dispatch pc=32, inst=RETURN_CONST(arg=1, lineno=1082)
2024-06-06 03:46:36,993 - DEBUG - stack []
2024-06-06 03:46:36,993 - DEBUG - end state. edges=[]
2024-06-06 03:46:36,993 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:36,993 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:36,993 - DEBUG - defmap: {}
2024-06-06 03:46:36,993 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:36,993 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:36,993 - DEBUG - keep phismap: {}
2024-06-06 03:46:36,994 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:36,994 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:36,994 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$x14.2'}), (16, {'func': '$4load_global.0', 'args': ['$x14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'res': '$y24.4'}), (26, {'res': '$const26.5'}), (28, {'res': '$const28.6'}), (30, {'start': '$const26.5', 'end': '$const28.6', 'container': '$y24.4', 'value': '$16call.3', 'res': '$30store_slice.8', 'slicevar': '$30store_slice.7'}), (32, {'retval': '$const32.9', 'castval': '$32return_const.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:36,994 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f238f0>) ['$4load_global.0']
    $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$16call.3', '$4load_global.0', 'x']
    $const26.5 = const(NoneType, None)       ['$const26.5']
    $const28.6 = const(NoneType, None)       ['$const28.6']
    $30store_slice.7 = global(slice: <class 'slice'>) ['$30store_slice.7']
    $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1082), Var($const28.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$30store_slice.7', '$30store_slice.8', '$const26.5', '$const28.6']
    y[$30store_slice.8] = $16call.3          ['$16call.3', '$30store_slice.8', 'y']
    $const32.9 = const(NoneType, None)       ['$const32.9']
    $32return_const.10 = cast(value=$const32.9) ['$32return_const.10', '$const32.9']
    return $32return_const.10                ['$32return_const.10']

2024-06-06 03:46:36,999 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:36,999 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b994c710>
2024-06-06 03:46:37,000 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:37,000 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-06 03:46:37,000 - DEBUG - on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f238f0>)
2024-06-06 03:46:37,000 - DEBUG - on stmt: $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,000 - DEBUG - on stmt: $const26.5 = const(NoneType, None)
2024-06-06 03:46:37,000 - DEBUG - on stmt: $const28.6 = const(NoneType, None)
2024-06-06 03:46:37,000 - DEBUG - on stmt: $30store_slice.7 = global(slice: <class 'slice'>)
2024-06-06 03:46:37,000 - DEBUG - on stmt: $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1082), Var($const28.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,001 - DEBUG - on stmt: y[slice(None, None, None)] = $16call.3
2024-06-06 03:46:37,001 - DEBUG - on stmt: $const32.9 = const(NoneType, None)
2024-06-06 03:46:37,001 - DEBUG - on stmt: $32return_const.10 = cast(value=$const32.9)
2024-06-06 03:46:37,001 - DEBUG - on stmt: return $32return_const.10
2024-06-06 03:46:37,001 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16call.3': [(<numba.core.ir.Assign object at 0x7fe9b9874740>,
                            0)],
             '$30store_slice.7': [(<numba.core.ir.Assign object at 0x7fe9b98763f0>,
                                   0)],
             '$30store_slice.8': [(<numba.core.ir.Assign object at 0x7fe9b98744a0>,
                                   0)],
             '$32return_const.10': [(<numba.core.ir.Assign object at 0x7fe9b98743b0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9876030>,
                                  0)],
             '$const26.5': [(<numba.core.ir.Assign object at 0x7fe9b9876780>,
                             0)],
             '$const28.6': [(<numba.core.ir.Assign object at 0x7fe9b98742f0>,
                             0)],
             '$const32.9': [(<numba.core.ir.Assign object at 0x7fe9b9874470>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b9876240>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7fe9b9876180>, 0)]})
2024-06-06 03:46:37,001 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b994c710>
2024-06-06 03:46:37,018 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=1, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=1, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	KW_NAMES(arg=1, lineno=3)
          92	CALL(arg=2, lineno=3)
         100	STORE_FAST(arg=2, lineno=3)
         102	LOAD_CONST(arg=2, lineno=4)
         104	LOAD_FAST(arg=2, lineno=4)
         106	LOAD_CONST(arg=0, lineno=4)
         108	LOAD_CONST(arg=3, lineno=4)
         110	STORE_SLICE(arg=None, lineno=4)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_FAST(arg=2, lineno=5)
         116	LOAD_CONST(arg=4, lineno=5)
         118	LOAD_CONST(arg=0, lineno=5)
         120	STORE_SLICE(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         132	LOAD_GLOBAL(arg=11, lineno=6)
         142	LOAD_CONST(arg=2, lineno=6)
         144	LOAD_CONST(arg=4, lineno=6)
         146	CALL(arg=2, lineno=6)
         154	UNARY_NEGATIVE(arg=None, lineno=6)
         156	LOAD_FAST(arg=1, lineno=6)
         158	LOAD_CONST(arg=2, lineno=6)
         160	BINARY_SUBSCR(arg=None, lineno=6)
         164	LOAD_GLOBAL(arg=13, lineno=6)
         174	LOAD_CONST(arg=2, lineno=6)
         176	LOAD_CONST(arg=3, lineno=6)
         178	CALL(arg=2, lineno=6)
         186	BINARY_OP(arg=10, lineno=6)
         190	CALL(arg=2, lineno=6)
         198	GET_ITER(arg=None, lineno=6)
>        200	FOR_ITER(arg=4, lineno=6)
         204	STORE_FAST(arg=3, lineno=6)
         206	LOAD_CONST(arg=2, lineno=7)
         208	STORE_FAST(arg=4, lineno=7)
         210	JUMP_BACKWARD(arg=6, lineno=7)
>        212	END_FOR(arg=None, lineno=6)
         214	LOAD_FAST(arg=2, lineno=8)
         216	RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:37,018 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:37,018 - DEBUG - stack: []
2024-06-06 03:46:37,018 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:37,018 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-06 03:46:37,018 - DEBUG - stack []
2024-06-06 03:46:37,018 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-06 03:46:37,019 - DEBUG - stack []
2024-06-06 03:46:37,019 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-06 03:46:37,019 - DEBUG - stack []
2024-06-06 03:46:37,019 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-06 03:46:37,019 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:37,019 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=1, lineno=2)
2024-06-06 03:46:37,019 - DEBUG - stack ['$6load_attr.1']
2024-06-06 03:46:37,019 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:37,019 - DEBUG - stack []
2024-06-06 03:46:37,020 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2024-06-06 03:46:37,020 - DEBUG - stack ['$28load_global.2']
2024-06-06 03:46:37,020 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-06 03:46:37,020 - DEBUG - stack ['$null$38.3', '$38load_attr.4']
2024-06-06 03:46:37,020 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:37,021 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5']
2024-06-06 03:46:37,021 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2024-06-06 03:46:37,021 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$60load_global.6']
2024-06-06 03:46:37,021 - DEBUG - dispatch pc=90, inst=KW_NAMES(arg=1, lineno=3)
2024-06-06 03:46:37,021 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:37,021 - DEBUG - dispatch pc=92, inst=CALL(arg=2, lineno=3)
2024-06-06 03:46:37,021 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:37,021 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=3)
2024-06-06 03:46:37,021 - DEBUG - stack ['$92call.8']
2024-06-06 03:46:37,021 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-06 03:46:37,021 - DEBUG - stack []
2024-06-06 03:46:37,022 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-06 03:46:37,022 - DEBUG - stack ['$const102.9']
2024-06-06 03:46:37,022 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-06 03:46:37,022 - DEBUG - stack ['$const102.9', '$out0104.10']
2024-06-06 03:46:37,022 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-06 03:46:37,022 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11']
2024-06-06 03:46:37,022 - DEBUG - dispatch pc=110, inst=STORE_SLICE(arg=None, lineno=4)
2024-06-06 03:46:37,022 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11', '$const108.12']
2024-06-06 03:46:37,022 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-06 03:46:37,022 - DEBUG - stack []
2024-06-06 03:46:37,022 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-06 03:46:37,022 - DEBUG - stack ['$const112.15']
2024-06-06 03:46:37,022 - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-06 03:46:37,022 - DEBUG - stack ['$const112.15', '$out0114.16']
2024-06-06 03:46:37,023 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-06 03:46:37,023 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17']
2024-06-06 03:46:37,023 - DEBUG - dispatch pc=120, inst=STORE_SLICE(arg=None, lineno=5)
2024-06-06 03:46:37,023 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17', '$const118.18']
2024-06-06 03:46:37,023 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-06 03:46:37,023 - DEBUG - stack []
2024-06-06 03:46:37,023 - DEBUG - dispatch pc=132, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-06 03:46:37,023 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-06 03:46:37,023 - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:37,023 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23']
2024-06-06 03:46:37,023 - DEBUG - dispatch pc=144, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-06 03:46:37,023 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25']
2024-06-06 03:46:37,024 - DEBUG - dispatch pc=146, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:37,024 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25', '$const144.26']
2024-06-06 03:46:37,024 - DEBUG - dispatch pc=154, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-06 03:46:37,024 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$146call.27']
2024-06-06 03:46:37,024 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-06 03:46:37,024 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28']
2024-06-06 03:46:37,024 - DEBUG - dispatch pc=158, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:37,024 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29']
2024-06-06 03:46:37,024 - DEBUG - dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-06 03:46:37,024 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29', '$const158.30']
2024-06-06 03:46:37,024 - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-06 03:46:37,024 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31']
2024-06-06 03:46:37,024 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:37,024 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32']
2024-06-06 03:46:37,025 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-06 03:46:37,025 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34']
2024-06-06 03:46:37,025 - DEBUG - dispatch pc=178, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:37,025 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34', '$const176.35']
2024-06-06 03:46:37,025 - DEBUG - dispatch pc=186, inst=BINARY_OP(arg=10, lineno=6)
2024-06-06 03:46:37,025 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$178call.36']
2024-06-06 03:46:37,025 - DEBUG - dispatch pc=190, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:37,025 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$binop_sub186.37']
2024-06-06 03:46:37,025 - DEBUG - dispatch pc=198, inst=GET_ITER(arg=None, lineno=6)
2024-06-06 03:46:37,025 - DEBUG - stack ['$190call.38']
2024-06-06 03:46:37,025 - DEBUG - end state. edges=[Edge(pc=200, stack=('$198get_iter.39',), blockstack=(), npush=0)]
2024-06-06 03:46:37,026 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:37,026 - DEBUG - stack: ['$phi200.0']
2024-06-06 03:46:37,026 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=1)
2024-06-06 03:46:37,026 - DEBUG - dispatch pc=200, inst=FOR_ITER(arg=4, lineno=6)
2024-06-06 03:46:37,026 - DEBUG - stack ['$phi200.0']
2024-06-06 03:46:37,026 - DEBUG - end state. edges=[Edge(pc=212, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0), Edge(pc=204, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:37,026 - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:37,026 - DEBUG - stack: ['$phi212.0', '$phi212.1']
2024-06-06 03:46:37,026 - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=2)
2024-06-06 03:46:37,026 - DEBUG - dispatch pc=212, inst=END_FOR(arg=None, lineno=6)
2024-06-06 03:46:37,026 - DEBUG - stack ['$phi212.0', '$phi212.1']
2024-06-06 03:46:37,026 - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-06 03:46:37,026 - DEBUG - stack []
2024-06-06 03:46:37,027 - DEBUG - dispatch pc=216, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:37,027 - DEBUG - stack ['$out0214.2']
2024-06-06 03:46:37,027 - DEBUG - end state. edges=[]
2024-06-06 03:46:37,027 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:37,027 - DEBUG - stack: ['$phi204.0', '$phi204.1']
2024-06-06 03:46:37,027 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=2)
2024-06-06 03:46:37,027 - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=3, lineno=6)
2024-06-06 03:46:37,027 - DEBUG - stack ['$phi204.0', '$phi204.1']
2024-06-06 03:46:37,027 - DEBUG - dispatch pc=206, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-06 03:46:37,027 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:37,027 - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=4, lineno=7)
2024-06-06 03:46:37,027 - DEBUG - stack ['$phi204.0', '$const206.2']
2024-06-06 03:46:37,027 - DEBUG - dispatch pc=210, inst=JUMP_BACKWARD(arg=6, lineno=7)
2024-06-06 03:46:37,027 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:37,028 - DEBUG - end state. edges=[Edge(pc=200, stack=('$phi204.0',), blockstack=(), npush=0)]
2024-06-06 03:46:37,028 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:37,028 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:37,028 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=1): {'$phi200.0'},
             State(pc_initial=204 nstack_initial=2): {'$phi204.1'},
             State(pc_initial=212 nstack_initial=2): set()})
2024-06-06 03:46:37,028 - DEBUG - defmap: {'$phi200.0': State(pc_initial=0 nstack_initial=0),
 '$phi204.1': State(pc_initial=200 nstack_initial=1),
 '$phi212.1': State(pc_initial=200 nstack_initial=1)}
2024-06-06 03:46:37,028 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi204.0',
                            State(pc_initial=204 nstack_initial=2))},
             '$phi204.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:37,029 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:37,030 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:37,030 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:37,031 - DEBUG - keep phismap: {'$phi200.0': {('$198get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi204.1': {('$200for_iter.2', State(pc_initial=200 nstack_initial=1))}}
2024-06-06 03:46:37,031 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi200.0': '$198get_iter.39'},
             State(pc_initial=200 nstack_initial=1): {'$phi204.1': '$200for_iter.2'}})
2024-06-06 03:46:37,031 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:37,031 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.4'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (92, {'func': '$38load_attr.4', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': 1, 'res': '$92call.8'}), (100, {'value': '$92call.8'}), (102, {'res': '$const102.9'}), (104, {'res': '$out0104.10'}), (106, {'res': '$const106.11'}), (108, {'res': '$const108.12'}), (110, {'start': '$const106.11', 'end': '$const108.12', 'container': '$out0104.10', 'value': '$const102.9', 'res': '$110store_slice.14', 'slicevar': '$110store_slice.13'}), (112, {'res': '$const112.15'}), (114, {'res': '$out0114.16'}), (116, {'res': '$const116.17'}), (118, {'res': '$const118.18'}), (120, {'start': '$const116.17', 'end': '$const118.18', 'container': '$out0114.16', 'value': '$const112.15', 'res': '$120store_slice.20', 'slicevar': '$120store_slice.19'}), (122, {'idx': 4, 'res': '$122load_global.21'}), (132, {'idx': 5, 'res': '$132load_global.23'}), (142, {'res': '$const142.25'}), (144, {'res': '$const144.26'}), (146, {'func': '$132load_global.23', 'args': ['$const142.25', '$const144.26'], 'kw_names': None, 'res': '$146call.27'}), (154, {'value': '$146call.27', 'res': '$154unary_negative.28'}), (156, {'res': '$full_shape0156.29'}), (158, {'res': '$const158.30'}), (160, {'index': '$const158.30', 'target': '$full_shape0156.29', 'res': '$160binary_subscr.31'}), (164, {'idx': 6, 'res': '$164load_global.32'}), (174, {'res': '$const174.34'}), (176, {'res': '$const176.35'}), (178, {'func': '$164load_global.32', 'args': ['$const174.34', '$const176.35'], 'kw_names': None, 'res': '$178call.36'}), (186, {'op': '-', 'lhs': '$160binary_subscr.31', 'rhs': '$178call.36', 'res': '$binop_sub186.37'}), (190, {'func': '$122load_global.21', 'args': ['$154unary_negative.28', '$binop_sub186.37'], 'kw_names': None, 'res': '$190call.38'}), (198, {'value': '$190call.38', 'res': '$198get_iter.39'})), outgoing_phis={'$phi200.0': '$198get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$198get_iter.39',)})
2024-06-06 03:46:37,031 - DEBUG - block_infos State(pc_initial=200 nstack_initial=1):
AdaptBlockInfo(insts=((200, {'iterator': '$phi200.0', 'pair': '$200for_iter.1', 'indval': '$200for_iter.2', 'pred': '$200for_iter.3'}),), outgoing_phis={'$phi204.1': '$200for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={212: ('$phi200.0', '$200for_iter.2'), 204: ('$phi200.0', '$200for_iter.2')})
2024-06-06 03:46:37,032 - DEBUG - block_infos State(pc_initial=204 nstack_initial=2):
AdaptBlockInfo(insts=((204, {'value': '$phi204.1'}), (206, {'res': '$const206.2'}), (208, {'value': '$const206.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi204.0',)})
2024-06-06 03:46:37,032 - DEBUG - block_infos State(pc_initial=212 nstack_initial=2):
AdaptBlockInfo(insts=((214, {'res': '$out0214.2'}), (216, {'retval': '$out0214.2', 'castval': '$216return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:37,033 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$28load_global.2']
    $38load_attr.4 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.4']
    $60load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool_) ['$60load_global.6', '$70load_attr.7']
    out0 = call $38load_attr.4(full_shape0, func=$38load_attr.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.4', '$70load_attr.7', 'full_shape0', 'out0']
    $const102.9 = const(int, 0)              ['$const102.9']
    $const106.11 = const(NoneType, None)     ['$const106.11']
    $const108.12 = const(int, 1)             ['$const108.12']
    $110store_slice.13 = global(slice: <class 'slice'>) ['$110store_slice.13']
    $110store_slice.14 = call $110store_slice.13($const106.11, $const108.12, func=$110store_slice.13, args=(Var($const106.11, <string>:4), Var($const108.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$110store_slice.13', '$110store_slice.14', '$const106.11', '$const108.12']
    out0[$110store_slice.14] = $const102.9   ['$110store_slice.14', '$const102.9', 'out0']
    $const112.15 = const(int, 0)             ['$const112.15']
    $const116.17 = const(int, -1)            ['$const116.17']
    $const118.18 = const(NoneType, None)     ['$const118.18']
    $120store_slice.19 = global(slice: <class 'slice'>) ['$120store_slice.19']
    $120store_slice.20 = call $120store_slice.19($const116.17, $const118.18, func=$120store_slice.19, args=(Var($const116.17, <string>:5), Var($const118.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$120store_slice.19', '$120store_slice.20', '$const116.17', '$const118.18']
    out0[$120store_slice.20] = $const112.15  ['$120store_slice.20', '$const112.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $132load_global.23 = global(min: <built-in function min>) ['$132load_global.23']
    $const142.25 = const(int, 0)             ['$const142.25']
    $const144.26 = const(int, -1)            ['$const144.26']
    $146call.27 = call $132load_global.23($const142.25, $const144.26, func=$132load_global.23, args=[Var($const142.25, <string>:6), Var($const144.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$132load_global.23', '$146call.27', '$const142.25', '$const144.26']
    $154unary_negative.28 = unary(fn=<built-in function neg>, value=$146call.27) ['$146call.27', '$154unary_negative.28']
    $const158.30 = const(int, 0)             ['$const158.30']
    $160binary_subscr.31 = getitem(value=full_shape0, index=$const158.30, fn=<built-in function getitem>) ['$160binary_subscr.31', '$const158.30', 'full_shape0']
    $164load_global.32 = global(max: <built-in function max>) ['$164load_global.32']
    $const174.34 = const(int, 0)             ['$const174.34']
    $const176.35 = const(int, 1)             ['$const176.35']
    $178call.36 = call $164load_global.32($const174.34, $const176.35, func=$164load_global.32, args=[Var($const174.34, <string>:6), Var($const176.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_global.32', '$178call.36', '$const174.34', '$const176.35']
    $binop_sub186.37 = $160binary_subscr.31 - $178call.36 ['$160binary_subscr.31', '$178call.36', '$binop_sub186.37']
    $190call.38 = call $122load_global.21($154unary_negative.28, $binop_sub186.37, func=$122load_global.21, args=[Var($154unary_negative.28, <string>:6), Var($binop_sub186.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$154unary_negative.28', '$190call.38', '$binop_sub186.37']
    $198get_iter.39 = getiter(value=$190call.38) ['$190call.38', '$198get_iter.39']
    $phi200.0 = $198get_iter.39              ['$198get_iter.39', '$phi200.0']
    jump 200                                 []
label 200:
    $200for_iter.1 = iternext(value=$phi200.0) ['$200for_iter.1', '$phi200.0']
    $200for_iter.2 = pair_first(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.2']
    $200for_iter.3 = pair_second(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.3']
    $phi204.1 = $200for_iter.2               ['$200for_iter.2', '$phi204.1']
    branch $200for_iter.3, 204, 212          ['$200for_iter.3']
label 204:
    index00 = $phi204.1                      ['$phi204.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 200                                 []
label 212:
    $216return_value.3 = cast(value=out0)    ['$216return_value.3', 'out0']
    return $216return_value.3                ['$216return_value.3']

2024-06-06 03:46:37,044 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:37,044 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9aa5400>
2024-06-06 03:46:37,044 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:37,044 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:37,044 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:37,044 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:37,044 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:37,044 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:37,044 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,044 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:37,044 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:37,045 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:37,045 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:37,045 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,045 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:37,045 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:37,045 - DEBUG - on stmt: $const116.17.1 = const(int, -1)
2024-06-06 03:46:37,045 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:37,045 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:37,045 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,045 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:37,045 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:37,045 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:37,046 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:37,046 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:37,046 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,046 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:37,046 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:37,046 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:37,046 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:37,046 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:37,046 - DEBUG - on stmt: $const176.35.1 = const(int, 1)
2024-06-06 03:46:37,046 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,046 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:37,046 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,047 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:37,047 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:37,047 - DEBUG - on stmt: jump 200
2024-06-06 03:46:37,047 - DEBUG - ==== SSA block analysis pass on 200
2024-06-06 03:46:37,047 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9aa5400>
2024-06-06 03:46:37,047 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:37,047 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:37,047 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:37,047 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:37,047 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 214
2024-06-06 03:46:37,047 - DEBUG - ==== SSA block analysis pass on 204
2024-06-06 03:46:37,048 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9aa5400>
2024-06-06 03:46:37,048 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:37,048 - DEBUG - on stmt: jump 212
2024-06-06 03:46:37,048 - DEBUG - ==== SSA block analysis pass on 214
2024-06-06 03:46:37,048 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9aa5400>
2024-06-06 03:46:37,048 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:37,048 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:37,048 - DEBUG - ==== SSA block analysis pass on 212
2024-06-06 03:46:37,048 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9aa5400>
2024-06-06 03:46:37,048 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:37,048 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:37,048 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:37,048 - DEBUG - on stmt: $const14.4 = const(int, -1)
2024-06-06 03:46:37,049 - DEBUG - on stmt: stencil_index.1 = $const14.4 + index00
2024-06-06 03:46:37,049 - DEBUG - on stmt: $16binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:37,049 - DEBUG - on stmt: $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5
2024-06-06 03:46:37,049 - DEBUG - on stmt: $const26.8 = const(int, 0)
2024-06-06 03:46:37,049 - DEBUG - on stmt: stencil_index.2 = $const26.8 + index00
2024-06-06 03:46:37,049 - DEBUG - on stmt: $28binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-06 03:46:37,049 - DEBUG - on stmt: $const34.11 = const(int, 1)
2024-06-06 03:46:37,049 - DEBUG - on stmt: stencil_index.3 = $const34.11 + index00
2024-06-06 03:46:37,049 - DEBUG - on stmt: $36binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-06 03:46:37,049 - DEBUG - on stmt: $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12
2024-06-06 03:46:37,049 - DEBUG - on stmt: $binop_and_44.14 = $20compare_op.6 & $40compare_op.13
2024-06-06 03:46:37,049 - DEBUG - on stmt: $48return_value.15 = cast(value=$binop_and_44.14)
2024-06-06 03:46:37,050 - DEBUG - on stmt: out0[index00] = $48return_value.15
2024-06-06 03:46:37,050 - DEBUG - on stmt: jump 213
2024-06-06 03:46:37,050 - DEBUG - ==== SSA block analysis pass on 213
2024-06-06 03:46:37,050 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9aa5400>
2024-06-06 03:46:37,050 - DEBUG - on stmt: jump 200
2024-06-06 03:46:37,051 - DEBUG - defs defaultdict(<class 'list'>,
            {'$110store_slice.13.1': [(<numba.core.ir.Assign object at 0x7fe9b9941160>,
                                       0)],
             '$110store_slice.14.1': [(<numba.core.ir.Assign object at 0x7fe9b9941190>,
                                       0)],
             '$120store_slice.19.1': [(<numba.core.ir.Assign object at 0x7fe9b9940890>,
                                       0)],
             '$120store_slice.20.1': [(<numba.core.ir.Assign object at 0x7fe9b9940320>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7fe9b9940590>,
                                       0)],
             '$132load_global.23.1': [(<numba.core.ir.Assign object at 0x7fe9b9940680>,
                                       0)],
             '$146call.27.1': [(<numba.core.ir.Assign object at 0x7fe9b99401a0>,
                                0)],
             '$154unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7fe9b9941580>,
                                          0)],
             '$160binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7fe9b9b33e30>,
                                         0)],
             '$164load_global.32.1': [(<numba.core.ir.Assign object at 0x7fe9b9b33c80>,
                                       0)],
             '$16binary_subscr.5': [(<numba.core.ir.Assign object at 0x7fe9b9943b00>,
                                     212)],
             '$178call.36.1': [(<numba.core.ir.Assign object at 0x7fe9b9b333b0>,
                                0)],
             '$190call.38.1': [(<numba.core.ir.Assign object at 0x7fe9b9b33680>,
                                0)],
             '$198get_iter.39.1': [(<numba.core.ir.Assign object at 0x7fe9b9b337a0>,
                                    0)],
             '$200for_iter.1.1': [(<numba.core.ir.Assign object at 0x7fe9b9b33800>,
                                   200)],
             '$200for_iter.2.1': [(<numba.core.ir.Assign object at 0x7fe9b9b33230>,
                                   200)],
             '$200for_iter.3.1': [(<numba.core.ir.Assign object at 0x7fe9b9b32e40>,
                                   200)],
             '$20compare_op.6': [(<numba.core.ir.Assign object at 0x7fe9b98864b0>,
                                  212)],
             '$216return_value.3.1': [(<numba.core.ir.Assign object at 0x7fe9b9b325d0>,
                                       214)],
             '$28binary_subscr.9': [(<numba.core.ir.Assign object at 0x7fe9b9943980>,
                                     212)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x7fe9b9942300>,
                                     0)],
             '$36binary_subscr.12': [(<numba.core.ir.Assign object at 0x7fe9b9943f50>,
                                      212)],
             '$38load_attr.4.1': [(<numba.core.ir.Assign object at 0x7fe9b9942210>,
                                   0)],
             '$40compare_op.13': [(<numba.core.ir.Assign object at 0x7fe9b98855e0>,
                                   212)],
             '$48return_value.15': [(<numba.core.ir.Assign object at 0x7fe9b9a8d1c0>,
                                     212)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x7fe9b9941f10>,
                                     0)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x7fe9b99425d0>,
                                   0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7fe9b9943b60>,
                                    212)],
             '$binop_and_44.14': [(<numba.core.ir.Assign object at 0x7fe9b9885a60>,
                                   212)],
             '$binop_sub186.37.1': [(<numba.core.ir.Assign object at 0x7fe9b9b33500>,
                                     0)],
             '$const102.9.1': [(<numba.core.ir.Assign object at 0x7fe9b9941d60>,
                                0)],
             '$const106.11.1': [(<numba.core.ir.Assign object at 0x7fe9b9941a00>,
                                 0)],
             '$const108.12.1': [(<numba.core.ir.Assign object at 0x7fe9b99414c0>,
                                 0)],
             '$const112.15.1': [(<numba.core.ir.Assign object at 0x7fe9b9940d40>,
                                 0)],
             '$const116.17.1': [(<numba.core.ir.Assign object at 0x7fe9b9941760>,
                                 0)],
             '$const118.18.1': [(<numba.core.ir.Assign object at 0x7fe9b9940290>,
                                 0)],
             '$const14.4': [(<numba.core.ir.Assign object at 0x7fe9b98a1880>,
                             212)],
             '$const142.25.1': [(<numba.core.ir.Assign object at 0x7fe9b9940bf0>,
                                 0)],
             '$const144.26.1': [(<numba.core.ir.Assign object at 0x7fe9b99408f0>,
                                 0)],
             '$const158.30.1': [(<numba.core.ir.Assign object at 0x7fe9b9b330e0>,
                                 0)],
             '$const174.34.1': [(<numba.core.ir.Assign object at 0x7fe9b9b33b60>,
                                 0)],
             '$const176.35.1': [(<numba.core.ir.Assign object at 0x7fe9b9b33920>,
                                 0)],
             '$const26.8': [(<numba.core.ir.Assign object at 0x7fe9b9887c50>,
                             212)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x7fe9b9885130>,
                              212)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9b9876660>,
                            212)],
             '$phi200.0.1': [(<numba.core.ir.Assign object at 0x7fe9b99423f0>,
                              0)],
             '$phi204.1.1': [(<numba.core.ir.Assign object at 0x7fe9b9b32e10>,
                              200)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7fe9b9942510>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7fe9b9b32cf0>,
                          204)],
             'out0': [(<numba.core.ir.Assign object at 0x7fe9b99419d0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7fe9b9943e00>,
                                212)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7fe9b9943680>,
                                  212)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7fe9b9943200>,
                                  212)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7fe9b9941df0>,
                                  212)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b99428d0>, 0)]})
2024-06-06 03:46:37,051 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9b30380>
2024-06-06 03:46:37,305 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          14	LOAD_FAST(arg=0, lineno=1082)
          16	CALL(arg=1, lineno=1082)
          24	LOAD_FAST(arg=1, lineno=1082)
          26	LOAD_CONST(arg=1, lineno=1082)
          28	LOAD_CONST(arg=1, lineno=1082)
          30	STORE_SLICE(arg=None, lineno=1082)
          32	RETURN_CONST(arg=1, lineno=1082)
2024-06-06 03:46:37,305 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:37,305 - DEBUG - stack: []
2024-06-06 03:46:37,305 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:37,306 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-06-06 03:46:37,306 - DEBUG - stack []
2024-06-06 03:46:37,306 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-06-06 03:46:37,306 - DEBUG - stack []
2024-06-06 03:46:37,306 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-06-06 03:46:37,306 - DEBUG - stack []
2024-06-06 03:46:37,306 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=1082)
2024-06-06 03:46:37,306 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:37,306 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=1082)
2024-06-06 03:46:37,306 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2']
2024-06-06 03:46:37,306 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1082)
2024-06-06 03:46:37,306 - DEBUG - stack ['$16call.3']
2024-06-06 03:46:37,306 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-06 03:46:37,306 - DEBUG - stack ['$16call.3', '$y24.4']
2024-06-06 03:46:37,307 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-06 03:46:37,307 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5']
2024-06-06 03:46:37,307 - DEBUG - dispatch pc=30, inst=STORE_SLICE(arg=None, lineno=1082)
2024-06-06 03:46:37,307 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5', '$const28.6']
2024-06-06 03:46:37,307 - DEBUG - dispatch pc=32, inst=RETURN_CONST(arg=1, lineno=1082)
2024-06-06 03:46:37,307 - DEBUG - stack []
2024-06-06 03:46:37,307 - DEBUG - end state. edges=[]
2024-06-06 03:46:37,307 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:37,307 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:37,307 - DEBUG - defmap: {}
2024-06-06 03:46:37,307 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:37,308 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:37,308 - DEBUG - keep phismap: {}
2024-06-06 03:46:37,308 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:37,308 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:37,308 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$x14.2'}), (16, {'func': '$4load_global.0', 'args': ['$x14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'res': '$y24.4'}), (26, {'res': '$const26.5'}), (28, {'res': '$const28.6'}), (30, {'start': '$const26.5', 'end': '$const28.6', 'container': '$y24.4', 'value': '$16call.3', 'res': '$30store_slice.8', 'slicevar': '$30store_slice.7'}), (32, {'retval': '$const32.9', 'castval': '$32return_const.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:37,308 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f238f0>) ['$4load_global.0']
    $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$16call.3', '$4load_global.0', 'x']
    $const26.5 = const(NoneType, None)       ['$const26.5']
    $const28.6 = const(NoneType, None)       ['$const28.6']
    $30store_slice.7 = global(slice: <class 'slice'>) ['$30store_slice.7']
    $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1082), Var($const28.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$30store_slice.7', '$30store_slice.8', '$const26.5', '$const28.6']
    y[$30store_slice.8] = $16call.3          ['$16call.3', '$30store_slice.8', 'y']
    $const32.9 = const(NoneType, None)       ['$const32.9']
    $32return_const.10 = cast(value=$const32.9) ['$32return_const.10', '$const32.9']
    return $32return_const.10                ['$32return_const.10']

2024-06-06 03:46:37,314 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:37,314 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1fec110>
2024-06-06 03:46:37,314 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:37,314 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-06 03:46:37,314 - DEBUG - on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f238f0>)
2024-06-06 03:46:37,314 - DEBUG - on stmt: $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,314 - DEBUG - on stmt: $const26.5 = const(NoneType, None)
2024-06-06 03:46:37,315 - DEBUG - on stmt: $const28.6 = const(NoneType, None)
2024-06-06 03:46:37,315 - DEBUG - on stmt: $30store_slice.7 = global(slice: <class 'slice'>)
2024-06-06 03:46:37,315 - DEBUG - on stmt: $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1082), Var($const28.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,315 - DEBUG - on stmt: y[slice(None, None, None)] = $16call.3
2024-06-06 03:46:37,315 - DEBUG - on stmt: $const32.9 = const(NoneType, None)
2024-06-06 03:46:37,315 - DEBUG - on stmt: $32return_const.10 = cast(value=$const32.9)
2024-06-06 03:46:37,315 - DEBUG - on stmt: return $32return_const.10
2024-06-06 03:46:37,315 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16call.3': [(<numba.core.ir.Assign object at 0x7fe9d1fec860>,
                            0)],
             '$30store_slice.7': [(<numba.core.ir.Assign object at 0x7fe9d1feec60>,
                                   0)],
             '$30store_slice.8': [(<numba.core.ir.Assign object at 0x7fe9d1feea20>,
                                   0)],
             '$32return_const.10': [(<numba.core.ir.Assign object at 0x7fe9d1fefef0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d1e210d0>,
                                  0)],
             '$const26.5': [(<numba.core.ir.Assign object at 0x7fe9d1fedf10>,
                             0)],
             '$const28.6': [(<numba.core.ir.Assign object at 0x7fe9d1fee8a0>,
                             0)],
             '$const32.9': [(<numba.core.ir.Assign object at 0x7fe9d1fef500>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9d1e23dd0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7fe9d1e212e0>, 0)]})
2024-06-06 03:46:37,316 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d1fec110>
2024-06-06 03:46:37,333 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=1, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=1, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	KW_NAMES(arg=1, lineno=3)
          92	CALL(arg=2, lineno=3)
         100	STORE_FAST(arg=2, lineno=3)
         102	LOAD_CONST(arg=2, lineno=4)
         104	LOAD_FAST(arg=2, lineno=4)
         106	LOAD_CONST(arg=0, lineno=4)
         108	LOAD_CONST(arg=3, lineno=4)
         110	STORE_SLICE(arg=None, lineno=4)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_FAST(arg=2, lineno=5)
         116	LOAD_CONST(arg=4, lineno=5)
         118	LOAD_CONST(arg=0, lineno=5)
         120	STORE_SLICE(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         132	LOAD_GLOBAL(arg=11, lineno=6)
         142	LOAD_CONST(arg=2, lineno=6)
         144	LOAD_CONST(arg=4, lineno=6)
         146	CALL(arg=2, lineno=6)
         154	UNARY_NEGATIVE(arg=None, lineno=6)
         156	LOAD_FAST(arg=1, lineno=6)
         158	LOAD_CONST(arg=2, lineno=6)
         160	BINARY_SUBSCR(arg=None, lineno=6)
         164	LOAD_GLOBAL(arg=13, lineno=6)
         174	LOAD_CONST(arg=2, lineno=6)
         176	LOAD_CONST(arg=3, lineno=6)
         178	CALL(arg=2, lineno=6)
         186	BINARY_OP(arg=10, lineno=6)
         190	CALL(arg=2, lineno=6)
         198	GET_ITER(arg=None, lineno=6)
>        200	FOR_ITER(arg=4, lineno=6)
         204	STORE_FAST(arg=3, lineno=6)
         206	LOAD_CONST(arg=2, lineno=7)
         208	STORE_FAST(arg=4, lineno=7)
         210	JUMP_BACKWARD(arg=6, lineno=7)
>        212	END_FOR(arg=None, lineno=6)
         214	LOAD_FAST(arg=2, lineno=8)
         216	RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:37,333 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:37,333 - DEBUG - stack: []
2024-06-06 03:46:37,333 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:37,333 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-06 03:46:37,333 - DEBUG - stack []
2024-06-06 03:46:37,333 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-06 03:46:37,333 - DEBUG - stack []
2024-06-06 03:46:37,333 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-06 03:46:37,333 - DEBUG - stack []
2024-06-06 03:46:37,334 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-06 03:46:37,334 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:37,334 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=1, lineno=2)
2024-06-06 03:46:37,334 - DEBUG - stack ['$6load_attr.1']
2024-06-06 03:46:37,334 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:37,334 - DEBUG - stack []
2024-06-06 03:46:37,334 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2024-06-06 03:46:37,334 - DEBUG - stack ['$28load_global.2']
2024-06-06 03:46:37,334 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-06 03:46:37,334 - DEBUG - stack ['$null$38.3', '$38load_attr.4']
2024-06-06 03:46:37,334 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:37,335 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5']
2024-06-06 03:46:37,335 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2024-06-06 03:46:37,335 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$60load_global.6']
2024-06-06 03:46:37,335 - DEBUG - dispatch pc=90, inst=KW_NAMES(arg=1, lineno=3)
2024-06-06 03:46:37,335 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:37,335 - DEBUG - dispatch pc=92, inst=CALL(arg=2, lineno=3)
2024-06-06 03:46:37,335 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:37,335 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=3)
2024-06-06 03:46:37,335 - DEBUG - stack ['$92call.8']
2024-06-06 03:46:37,335 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-06 03:46:37,335 - DEBUG - stack []
2024-06-06 03:46:37,335 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-06 03:46:37,335 - DEBUG - stack ['$const102.9']
2024-06-06 03:46:37,335 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-06 03:46:37,336 - DEBUG - stack ['$const102.9', '$out0104.10']
2024-06-06 03:46:37,336 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-06 03:46:37,336 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11']
2024-06-06 03:46:37,336 - DEBUG - dispatch pc=110, inst=STORE_SLICE(arg=None, lineno=4)
2024-06-06 03:46:37,336 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11', '$const108.12']
2024-06-06 03:46:37,336 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-06 03:46:37,336 - DEBUG - stack []
2024-06-06 03:46:37,336 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-06 03:46:37,336 - DEBUG - stack ['$const112.15']
2024-06-06 03:46:37,336 - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-06 03:46:37,336 - DEBUG - stack ['$const112.15', '$out0114.16']
2024-06-06 03:46:37,336 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-06 03:46:37,336 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17']
2024-06-06 03:46:37,336 - DEBUG - dispatch pc=120, inst=STORE_SLICE(arg=None, lineno=5)
2024-06-06 03:46:37,337 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17', '$const118.18']
2024-06-06 03:46:37,337 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-06 03:46:37,337 - DEBUG - stack []
2024-06-06 03:46:37,337 - DEBUG - dispatch pc=132, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-06 03:46:37,337 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-06 03:46:37,337 - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:37,337 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23']
2024-06-06 03:46:37,337 - DEBUG - dispatch pc=144, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-06 03:46:37,337 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25']
2024-06-06 03:46:37,337 - DEBUG - dispatch pc=146, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:37,337 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25', '$const144.26']
2024-06-06 03:46:37,337 - DEBUG - dispatch pc=154, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-06 03:46:37,337 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$146call.27']
2024-06-06 03:46:37,337 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-06 03:46:37,338 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28']
2024-06-06 03:46:37,338 - DEBUG - dispatch pc=158, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:37,338 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29']
2024-06-06 03:46:37,338 - DEBUG - dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-06 03:46:37,338 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29', '$const158.30']
2024-06-06 03:46:37,338 - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-06 03:46:37,338 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31']
2024-06-06 03:46:37,338 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:37,338 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32']
2024-06-06 03:46:37,338 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-06 03:46:37,338 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34']
2024-06-06 03:46:37,338 - DEBUG - dispatch pc=178, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:37,338 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34', '$const176.35']
2024-06-06 03:46:37,338 - DEBUG - dispatch pc=186, inst=BINARY_OP(arg=10, lineno=6)
2024-06-06 03:46:37,339 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$178call.36']
2024-06-06 03:46:37,339 - DEBUG - dispatch pc=190, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:37,339 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$binop_sub186.37']
2024-06-06 03:46:37,339 - DEBUG - dispatch pc=198, inst=GET_ITER(arg=None, lineno=6)
2024-06-06 03:46:37,339 - DEBUG - stack ['$190call.38']
2024-06-06 03:46:37,339 - DEBUG - end state. edges=[Edge(pc=200, stack=('$198get_iter.39',), blockstack=(), npush=0)]
2024-06-06 03:46:37,339 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:37,339 - DEBUG - stack: ['$phi200.0']
2024-06-06 03:46:37,339 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=1)
2024-06-06 03:46:37,339 - DEBUG - dispatch pc=200, inst=FOR_ITER(arg=4, lineno=6)
2024-06-06 03:46:37,339 - DEBUG - stack ['$phi200.0']
2024-06-06 03:46:37,339 - DEBUG - end state. edges=[Edge(pc=212, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0), Edge(pc=204, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:37,340 - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:37,340 - DEBUG - stack: ['$phi212.0', '$phi212.1']
2024-06-06 03:46:37,340 - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=2)
2024-06-06 03:46:37,340 - DEBUG - dispatch pc=212, inst=END_FOR(arg=None, lineno=6)
2024-06-06 03:46:37,340 - DEBUG - stack ['$phi212.0', '$phi212.1']
2024-06-06 03:46:37,340 - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-06 03:46:37,340 - DEBUG - stack []
2024-06-06 03:46:37,340 - DEBUG - dispatch pc=216, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:37,340 - DEBUG - stack ['$out0214.2']
2024-06-06 03:46:37,340 - DEBUG - end state. edges=[]
2024-06-06 03:46:37,340 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:37,340 - DEBUG - stack: ['$phi204.0', '$phi204.1']
2024-06-06 03:46:37,340 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=2)
2024-06-06 03:46:37,341 - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=3, lineno=6)
2024-06-06 03:46:37,341 - DEBUG - stack ['$phi204.0', '$phi204.1']
2024-06-06 03:46:37,341 - DEBUG - dispatch pc=206, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-06 03:46:37,341 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:37,341 - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=4, lineno=7)
2024-06-06 03:46:37,341 - DEBUG - stack ['$phi204.0', '$const206.2']
2024-06-06 03:46:37,341 - DEBUG - dispatch pc=210, inst=JUMP_BACKWARD(arg=6, lineno=7)
2024-06-06 03:46:37,341 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:37,341 - DEBUG - end state. edges=[Edge(pc=200, stack=('$phi204.0',), blockstack=(), npush=0)]
2024-06-06 03:46:37,341 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:37,341 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:37,341 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=1): {'$phi200.0'},
             State(pc_initial=204 nstack_initial=2): {'$phi204.1'},
             State(pc_initial=212 nstack_initial=2): set()})
2024-06-06 03:46:37,342 - DEBUG - defmap: {'$phi200.0': State(pc_initial=0 nstack_initial=0),
 '$phi204.1': State(pc_initial=200 nstack_initial=1),
 '$phi212.1': State(pc_initial=200 nstack_initial=1)}
2024-06-06 03:46:37,342 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi204.0',
                            State(pc_initial=204 nstack_initial=2))},
             '$phi204.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:37,343 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:37,343 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:37,344 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:37,345 - DEBUG - keep phismap: {'$phi200.0': {('$198get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi204.1': {('$200for_iter.2', State(pc_initial=200 nstack_initial=1))}}
2024-06-06 03:46:37,345 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi200.0': '$198get_iter.39'},
             State(pc_initial=200 nstack_initial=1): {'$phi204.1': '$200for_iter.2'}})
2024-06-06 03:46:37,345 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:37,345 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.4'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (92, {'func': '$38load_attr.4', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': 1, 'res': '$92call.8'}), (100, {'value': '$92call.8'}), (102, {'res': '$const102.9'}), (104, {'res': '$out0104.10'}), (106, {'res': '$const106.11'}), (108, {'res': '$const108.12'}), (110, {'start': '$const106.11', 'end': '$const108.12', 'container': '$out0104.10', 'value': '$const102.9', 'res': '$110store_slice.14', 'slicevar': '$110store_slice.13'}), (112, {'res': '$const112.15'}), (114, {'res': '$out0114.16'}), (116, {'res': '$const116.17'}), (118, {'res': '$const118.18'}), (120, {'start': '$const116.17', 'end': '$const118.18', 'container': '$out0114.16', 'value': '$const112.15', 'res': '$120store_slice.20', 'slicevar': '$120store_slice.19'}), (122, {'idx': 4, 'res': '$122load_global.21'}), (132, {'idx': 5, 'res': '$132load_global.23'}), (142, {'res': '$const142.25'}), (144, {'res': '$const144.26'}), (146, {'func': '$132load_global.23', 'args': ['$const142.25', '$const144.26'], 'kw_names': None, 'res': '$146call.27'}), (154, {'value': '$146call.27', 'res': '$154unary_negative.28'}), (156, {'res': '$full_shape0156.29'}), (158, {'res': '$const158.30'}), (160, {'index': '$const158.30', 'target': '$full_shape0156.29', 'res': '$160binary_subscr.31'}), (164, {'idx': 6, 'res': '$164load_global.32'}), (174, {'res': '$const174.34'}), (176, {'res': '$const176.35'}), (178, {'func': '$164load_global.32', 'args': ['$const174.34', '$const176.35'], 'kw_names': None, 'res': '$178call.36'}), (186, {'op': '-', 'lhs': '$160binary_subscr.31', 'rhs': '$178call.36', 'res': '$binop_sub186.37'}), (190, {'func': '$122load_global.21', 'args': ['$154unary_negative.28', '$binop_sub186.37'], 'kw_names': None, 'res': '$190call.38'}), (198, {'value': '$190call.38', 'res': '$198get_iter.39'})), outgoing_phis={'$phi200.0': '$198get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$198get_iter.39',)})
2024-06-06 03:46:37,345 - DEBUG - block_infos State(pc_initial=200 nstack_initial=1):
AdaptBlockInfo(insts=((200, {'iterator': '$phi200.0', 'pair': '$200for_iter.1', 'indval': '$200for_iter.2', 'pred': '$200for_iter.3'}),), outgoing_phis={'$phi204.1': '$200for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={212: ('$phi200.0', '$200for_iter.2'), 204: ('$phi200.0', '$200for_iter.2')})
2024-06-06 03:46:37,345 - DEBUG - block_infos State(pc_initial=204 nstack_initial=2):
AdaptBlockInfo(insts=((204, {'value': '$phi204.1'}), (206, {'res': '$const206.2'}), (208, {'value': '$const206.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi204.0',)})
2024-06-06 03:46:37,345 - DEBUG - block_infos State(pc_initial=212 nstack_initial=2):
AdaptBlockInfo(insts=((214, {'res': '$out0214.2'}), (216, {'retval': '$out0214.2', 'castval': '$216return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:37,347 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$28load_global.2']
    $38load_attr.4 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.4']
    $60load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool_) ['$60load_global.6', '$70load_attr.7']
    out0 = call $38load_attr.4(full_shape0, func=$38load_attr.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.4', '$70load_attr.7', 'full_shape0', 'out0']
    $const102.9 = const(int, 0)              ['$const102.9']
    $const106.11 = const(NoneType, None)     ['$const106.11']
    $const108.12 = const(int, 1)             ['$const108.12']
    $110store_slice.13 = global(slice: <class 'slice'>) ['$110store_slice.13']
    $110store_slice.14 = call $110store_slice.13($const106.11, $const108.12, func=$110store_slice.13, args=(Var($const106.11, <string>:4), Var($const108.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$110store_slice.13', '$110store_slice.14', '$const106.11', '$const108.12']
    out0[$110store_slice.14] = $const102.9   ['$110store_slice.14', '$const102.9', 'out0']
    $const112.15 = const(int, 0)             ['$const112.15']
    $const116.17 = const(int, -1)            ['$const116.17']
    $const118.18 = const(NoneType, None)     ['$const118.18']
    $120store_slice.19 = global(slice: <class 'slice'>) ['$120store_slice.19']
    $120store_slice.20 = call $120store_slice.19($const116.17, $const118.18, func=$120store_slice.19, args=(Var($const116.17, <string>:5), Var($const118.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$120store_slice.19', '$120store_slice.20', '$const116.17', '$const118.18']
    out0[$120store_slice.20] = $const112.15  ['$120store_slice.20', '$const112.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $132load_global.23 = global(min: <built-in function min>) ['$132load_global.23']
    $const142.25 = const(int, 0)             ['$const142.25']
    $const144.26 = const(int, -1)            ['$const144.26']
    $146call.27 = call $132load_global.23($const142.25, $const144.26, func=$132load_global.23, args=[Var($const142.25, <string>:6), Var($const144.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$132load_global.23', '$146call.27', '$const142.25', '$const144.26']
    $154unary_negative.28 = unary(fn=<built-in function neg>, value=$146call.27) ['$146call.27', '$154unary_negative.28']
    $const158.30 = const(int, 0)             ['$const158.30']
    $160binary_subscr.31 = getitem(value=full_shape0, index=$const158.30, fn=<built-in function getitem>) ['$160binary_subscr.31', '$const158.30', 'full_shape0']
    $164load_global.32 = global(max: <built-in function max>) ['$164load_global.32']
    $const174.34 = const(int, 0)             ['$const174.34']
    $const176.35 = const(int, 1)             ['$const176.35']
    $178call.36 = call $164load_global.32($const174.34, $const176.35, func=$164load_global.32, args=[Var($const174.34, <string>:6), Var($const176.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_global.32', '$178call.36', '$const174.34', '$const176.35']
    $binop_sub186.37 = $160binary_subscr.31 - $178call.36 ['$160binary_subscr.31', '$178call.36', '$binop_sub186.37']
    $190call.38 = call $122load_global.21($154unary_negative.28, $binop_sub186.37, func=$122load_global.21, args=[Var($154unary_negative.28, <string>:6), Var($binop_sub186.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$154unary_negative.28', '$190call.38', '$binop_sub186.37']
    $198get_iter.39 = getiter(value=$190call.38) ['$190call.38', '$198get_iter.39']
    $phi200.0 = $198get_iter.39              ['$198get_iter.39', '$phi200.0']
    jump 200                                 []
label 200:
    $200for_iter.1 = iternext(value=$phi200.0) ['$200for_iter.1', '$phi200.0']
    $200for_iter.2 = pair_first(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.2']
    $200for_iter.3 = pair_second(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.3']
    $phi204.1 = $200for_iter.2               ['$200for_iter.2', '$phi204.1']
    branch $200for_iter.3, 204, 212          ['$200for_iter.3']
label 204:
    index00 = $phi204.1                      ['$phi204.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 200                                 []
label 212:
    $216return_value.3 = cast(value=out0)    ['$216return_value.3', 'out0']
    return $216return_value.3                ['$216return_value.3']

2024-06-06 03:46:37,357 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:37,357 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d20c73e0>
2024-06-06 03:46:37,357 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:37,357 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:37,358 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:37,358 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:37,358 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:37,358 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:37,358 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,358 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:37,358 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:37,358 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:37,358 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:37,358 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,359 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:37,359 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:37,359 - DEBUG - on stmt: $const116.17.1 = const(int, -1)
2024-06-06 03:46:37,359 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:37,359 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:37,359 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,359 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:37,359 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:37,359 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:37,359 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:37,360 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:37,360 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,360 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:37,360 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:37,360 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:37,360 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:37,360 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:37,360 - DEBUG - on stmt: $const176.35.1 = const(int, 1)
2024-06-06 03:46:37,360 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,360 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:37,361 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,361 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:37,361 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:37,361 - DEBUG - on stmt: jump 200
2024-06-06 03:46:37,361 - DEBUG - ==== SSA block analysis pass on 200
2024-06-06 03:46:37,361 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d20c73e0>
2024-06-06 03:46:37,361 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:37,361 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:37,361 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:37,361 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:37,361 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 214
2024-06-06 03:46:37,361 - DEBUG - ==== SSA block analysis pass on 204
2024-06-06 03:46:37,361 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d20c73e0>
2024-06-06 03:46:37,362 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:37,362 - DEBUG - on stmt: jump 212
2024-06-06 03:46:37,362 - DEBUG - ==== SSA block analysis pass on 214
2024-06-06 03:46:37,362 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d20c73e0>
2024-06-06 03:46:37,362 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:37,362 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:37,362 - DEBUG - ==== SSA block analysis pass on 212
2024-06-06 03:46:37,362 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d20c73e0>
2024-06-06 03:46:37,362 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:37,362 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:37,362 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:37,362 - DEBUG - on stmt: $const14.4 = const(int, -1)
2024-06-06 03:46:37,362 - DEBUG - on stmt: stencil_index.1 = $const14.4 + index00
2024-06-06 03:46:37,363 - DEBUG - on stmt: $16binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:37,363 - DEBUG - on stmt: $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5
2024-06-06 03:46:37,363 - DEBUG - on stmt: $const26.8 = const(int, 0)
2024-06-06 03:46:37,363 - DEBUG - on stmt: stencil_index.2 = $const26.8 + index00
2024-06-06 03:46:37,363 - DEBUG - on stmt: $28binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-06 03:46:37,363 - DEBUG - on stmt: $const34.11 = const(int, 1)
2024-06-06 03:46:37,363 - DEBUG - on stmt: stencil_index.3 = $const34.11 + index00
2024-06-06 03:46:37,363 - DEBUG - on stmt: $36binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-06 03:46:37,363 - DEBUG - on stmt: $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12
2024-06-06 03:46:37,363 - DEBUG - on stmt: $binop_and_44.14 = $20compare_op.6 & $40compare_op.13
2024-06-06 03:46:37,363 - DEBUG - on stmt: $48return_value.15 = cast(value=$binop_and_44.14)
2024-06-06 03:46:37,363 - DEBUG - on stmt: out0[index00] = $48return_value.15
2024-06-06 03:46:37,364 - DEBUG - on stmt: jump 213
2024-06-06 03:46:37,364 - DEBUG - ==== SSA block analysis pass on 213
2024-06-06 03:46:37,364 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d20c73e0>
2024-06-06 03:46:37,364 - DEBUG - on stmt: jump 200
2024-06-06 03:46:37,365 - DEBUG - defs defaultdict(<class 'list'>,
            {'$110store_slice.13.1': [(<numba.core.ir.Assign object at 0x7fe9d1f88140>,
                                       0)],
             '$110store_slice.14.1': [(<numba.core.ir.Assign object at 0x7fe9d1f88590>,
                                       0)],
             '$120store_slice.19.1': [(<numba.core.ir.Assign object at 0x7fe9d1f18350>,
                                       0)],
             '$120store_slice.20.1': [(<numba.core.ir.Assign object at 0x7fe9d1f189e0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7fe9d1f187d0>,
                                       0)],
             '$132load_global.23.1': [(<numba.core.ir.Assign object at 0x7fe9d1f18050>,
                                       0)],
             '$146call.27.1': [(<numba.core.ir.Assign object at 0x7fe9d1f1a5d0>,
                                0)],
             '$154unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7fe9d1f1b290>,
                                          0)],
             '$160binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7fe9d1f1aed0>,
                                         0)],
             '$164load_global.32.1': [(<numba.core.ir.Assign object at 0x7fe9d21680e0>,
                                       0)],
             '$16binary_subscr.5': [(<numba.core.ir.Assign object at 0x7fe9d1f8af00>,
                                     212)],
             '$178call.36.1': [(<numba.core.ir.Assign object at 0x7fe9d216b6b0>,
                                0)],
             '$190call.38.1': [(<numba.core.ir.Assign object at 0x7fe9d217af30>,
                                0)],
             '$198get_iter.39.1': [(<numba.core.ir.Assign object at 0x7fe9d217b050>,
                                    0)],
             '$200for_iter.1.1': [(<numba.core.ir.Assign object at 0x7fe9d1f8bce0>,
                                   200)],
             '$200for_iter.2.1': [(<numba.core.ir.Assign object at 0x7fe9d217a9c0>,
                                   200)],
             '$200for_iter.3.1': [(<numba.core.ir.Assign object at 0x7fe9d2178e90>,
                                   200)],
             '$20compare_op.6': [(<numba.core.ir.Assign object at 0x7fe9d1fbbe00>,
                                  212)],
             '$216return_value.3.1': [(<numba.core.ir.Assign object at 0x7fe9d21b8740>,
                                       214)],
             '$28binary_subscr.9': [(<numba.core.ir.Assign object at 0x7fe9d1f8b680>,
                                     212)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x7fe9d1f8b6e0>,
                                     0)],
             '$36binary_subscr.12': [(<numba.core.ir.Assign object at 0x7fe9d1f8a990>,
                                      212)],
             '$38load_attr.4.1': [(<numba.core.ir.Assign object at 0x7fe9d1f88da0>,
                                   0)],
             '$40compare_op.13': [(<numba.core.ir.Assign object at 0x7fe9d1fdf920>,
                                   212)],
             '$48return_value.15': [(<numba.core.ir.Assign object at 0x7fe9d1fdef00>,
                                     212)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x7fe9d1f888f0>,
                                     0)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x7fe9d1f88a70>,
                                   0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7fe9d1f8b050>,
                                    212)],
             '$binop_and_44.14': [(<numba.core.ir.Assign object at 0x7fe9d1fdfcb0>,
                                   212)],
             '$binop_sub186.37.1': [(<numba.core.ir.Assign object at 0x7fe9d2169970>,
                                     0)],
             '$const102.9.1': [(<numba.core.ir.Assign object at 0x7fe9d1f88650>,
                                0)],
             '$const106.11.1': [(<numba.core.ir.Assign object at 0x7fe9d1f884a0>,
                                 0)],
             '$const108.12.1': [(<numba.core.ir.Assign object at 0x7fe9d1f88200>,
                                 0)],
             '$const112.15.1': [(<numba.core.ir.Assign object at 0x7fe9d1f19280>,
                                 0)],
             '$const116.17.1': [(<numba.core.ir.Assign object at 0x7fe9d1f18500>,
                                 0)],
             '$const118.18.1': [(<numba.core.ir.Assign object at 0x7fe9d1f19eb0>,
                                 0)],
             '$const14.4': [(<numba.core.ir.Assign object at 0x7fe9d1fd2750>,
                             212)],
             '$const142.25.1': [(<numba.core.ir.Assign object at 0x7fe9d1f18950>,
                                 0)],
             '$const144.26.1': [(<numba.core.ir.Assign object at 0x7fe9d1f1b740>,
                                 0)],
             '$const158.30.1': [(<numba.core.ir.Assign object at 0x7fe9d1f18410>,
                                 0)],
             '$const174.34.1': [(<numba.core.ir.Assign object at 0x7fe9d2169850>,
                                 0)],
             '$const176.35.1': [(<numba.core.ir.Assign object at 0x7fe9d2169b80>,
                                 0)],
             '$const26.8': [(<numba.core.ir.Assign object at 0x7fe9d1fbb110>,
                             212)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x7fe9d1fba300>,
                              212)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9d1fd2090>,
                            212)],
             '$phi200.0.1': [(<numba.core.ir.Assign object at 0x7fe9d1f1a480>,
                              0)],
             '$phi204.1.1': [(<numba.core.ir.Assign object at 0x7fe9d2178f80>,
                              200)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7fe9d1f8b800>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7fe9d22b2ae0>,
                          204)],
             'out0': [(<numba.core.ir.Assign object at 0x7fe9d1f88860>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7fe9d1f8b3b0>,
                                212)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7fe9d1f8b0b0>,
                                  212)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7fe9d1f8aab0>,
                                  212)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7fe9d1f8a330>,
                                  212)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9d1f8bc20>, 0)]})
2024-06-06 03:46:37,365 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d20c73e0>
2024-06-06 03:46:37,592 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	RESUME(arg=0, lineno=1068)
           4	LOAD_GLOBAL(arg=1, lineno=1082)
          14	LOAD_FAST(arg=0, lineno=1082)
          16	CALL(arg=1, lineno=1082)
          24	LOAD_FAST(arg=1, lineno=1082)
          26	LOAD_CONST(arg=1, lineno=1082)
          28	LOAD_CONST(arg=1, lineno=1082)
          30	STORE_SLICE(arg=None, lineno=1082)
          32	RETURN_CONST(arg=1, lineno=1082)
2024-06-06 03:46:37,592 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:37,592 - DEBUG - stack: []
2024-06-06 03:46:37,592 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:37,593 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
2024-06-06 03:46:37,593 - DEBUG - stack []
2024-06-06 03:46:37,593 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1068)
2024-06-06 03:46:37,593 - DEBUG - stack []
2024-06-06 03:46:37,593 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1082)
2024-06-06 03:46:37,593 - DEBUG - stack []
2024-06-06 03:46:37,593 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=1082)
2024-06-06 03:46:37,593 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:37,593 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=1082)
2024-06-06 03:46:37,594 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x14.2']
2024-06-06 03:46:37,594 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1082)
2024-06-06 03:46:37,594 - DEBUG - stack ['$16call.3']
2024-06-06 03:46:37,594 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-06 03:46:37,594 - DEBUG - stack ['$16call.3', '$y24.4']
2024-06-06 03:46:37,594 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1082)
2024-06-06 03:46:37,594 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5']
2024-06-06 03:46:37,594 - DEBUG - dispatch pc=30, inst=STORE_SLICE(arg=None, lineno=1082)
2024-06-06 03:46:37,594 - DEBUG - stack ['$16call.3', '$y24.4', '$const26.5', '$const28.6']
2024-06-06 03:46:37,594 - DEBUG - dispatch pc=32, inst=RETURN_CONST(arg=1, lineno=1082)
2024-06-06 03:46:37,594 - DEBUG - stack []
2024-06-06 03:46:37,594 - DEBUG - end state. edges=[]
2024-06-06 03:46:37,595 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:37,595 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:37,595 - DEBUG - defmap: {}
2024-06-06 03:46:37,595 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:37,595 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:37,595 - DEBUG - keep phismap: {}
2024-06-06 03:46:37,595 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:37,595 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:37,595 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$x14.2'}), (16, {'func': '$4load_global.0', 'args': ['$x14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'res': '$y24.4'}), (26, {'res': '$const26.5'}), (28, {'res': '$const28.6'}), (30, {'start': '$const26.5', 'end': '$const28.6', 'container': '$y24.4', 'value': '$16call.3', 'res': '$30store_slice.8', 'slicevar': '$30store_slice.7'}), (32, {'retval': '$const32.9', 'castval': '$32return_const.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:37,596 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f238f0>) ['$4load_global.0']
    $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$16call.3', '$4load_global.0', 'x']
    $const26.5 = const(NoneType, None)       ['$const26.5']
    $const28.6 = const(NoneType, None)       ['$const28.6']
    $30store_slice.7 = global(slice: <class 'slice'>) ['$30store_slice.7']
    $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1082), Var($const28.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$30store_slice.7', '$30store_slice.8', '$const26.5', '$const28.6']
    y[$30store_slice.8] = $16call.3          ['$16call.3', '$30store_slice.8', 'y']
    $const32.9 = const(NoneType, None)       ['$const32.9']
    $32return_const.10 = cast(value=$const32.9) ['$32return_const.10', '$const32.9']
    return $32return_const.10                ['$32return_const.10']

2024-06-06 03:46:37,601 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:37,601 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d22381a0>
2024-06-06 03:46:37,601 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:37,601 - DEBUG - on stmt: y = arg(1, name=y)
2024-06-06 03:46:37,601 - DEBUG - on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x7fe9d1f238f0>)
2024-06-06 03:46:37,601 - DEBUG - on stmt: $16call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,601 - DEBUG - on stmt: $const26.5 = const(NoneType, None)
2024-06-06 03:46:37,601 - DEBUG - on stmt: $const28.6 = const(NoneType, None)
2024-06-06 03:46:37,601 - DEBUG - on stmt: $30store_slice.7 = global(slice: <class 'slice'>)
2024-06-06 03:46:37,601 - DEBUG - on stmt: $30store_slice.8 = call $30store_slice.7($const26.5, $const28.6, func=$30store_slice.7, args=(Var($const26.5, utils.py:1082), Var($const28.6, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,601 - DEBUG - on stmt: y[slice(None, None, None)] = $16call.3
2024-06-06 03:46:37,602 - DEBUG - on stmt: $const32.9 = const(NoneType, None)
2024-06-06 03:46:37,602 - DEBUG - on stmt: $32return_const.10 = cast(value=$const32.9)
2024-06-06 03:46:37,602 - DEBUG - on stmt: return $32return_const.10
2024-06-06 03:46:37,602 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16call.3': [(<numba.core.ir.Assign object at 0x7fe9d23d3530>,
                            0)],
             '$30store_slice.7': [(<numba.core.ir.Assign object at 0x7fe9d23d1b80>,
                                   0)],
             '$30store_slice.8': [(<numba.core.ir.Assign object at 0x7fe9d23d3c20>,
                                   0)],
             '$32return_const.10': [(<numba.core.ir.Assign object at 0x7fe9d23d1c70>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d223b5c0>,
                                  0)],
             '$const26.5': [(<numba.core.ir.Assign object at 0x7fe9d23d1f10>,
                             0)],
             '$const28.6': [(<numba.core.ir.Assign object at 0x7fe9d23d3cb0>,
                             0)],
             '$const32.9': [(<numba.core.ir.Assign object at 0x7fe9d23d1100>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9d223bfb0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7fe9d2239c40>, 0)]})
2024-06-06 03:46:37,602 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d22381a0>
2024-06-06 03:46:37,619 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          26	STORE_FAST(arg=1, lineno=2)
          28	LOAD_GLOBAL(arg=2, lineno=3)
          38	LOAD_ATTR(arg=5, lineno=3)
          58	LOAD_FAST(arg=1, lineno=3)
          60	LOAD_GLOBAL(arg=2, lineno=3)
          70	LOAD_ATTR(arg=6, lineno=3)
          90	KW_NAMES(arg=1, lineno=3)
          92	CALL(arg=2, lineno=3)
         100	STORE_FAST(arg=2, lineno=3)
         102	LOAD_CONST(arg=2, lineno=4)
         104	LOAD_FAST(arg=2, lineno=4)
         106	LOAD_CONST(arg=0, lineno=4)
         108	LOAD_CONST(arg=3, lineno=4)
         110	STORE_SLICE(arg=None, lineno=4)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_FAST(arg=2, lineno=5)
         116	LOAD_CONST(arg=4, lineno=5)
         118	LOAD_CONST(arg=0, lineno=5)
         120	STORE_SLICE(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         132	LOAD_GLOBAL(arg=11, lineno=6)
         142	LOAD_CONST(arg=2, lineno=6)
         144	LOAD_CONST(arg=4, lineno=6)
         146	CALL(arg=2, lineno=6)
         154	UNARY_NEGATIVE(arg=None, lineno=6)
         156	LOAD_FAST(arg=1, lineno=6)
         158	LOAD_CONST(arg=2, lineno=6)
         160	BINARY_SUBSCR(arg=None, lineno=6)
         164	LOAD_GLOBAL(arg=13, lineno=6)
         174	LOAD_CONST(arg=2, lineno=6)
         176	LOAD_CONST(arg=3, lineno=6)
         178	CALL(arg=2, lineno=6)
         186	BINARY_OP(arg=10, lineno=6)
         190	CALL(arg=2, lineno=6)
         198	GET_ITER(arg=None, lineno=6)
>        200	FOR_ITER(arg=4, lineno=6)
         204	STORE_FAST(arg=3, lineno=6)
         206	LOAD_CONST(arg=2, lineno=7)
         208	STORE_FAST(arg=4, lineno=7)
         210	JUMP_BACKWARD(arg=6, lineno=7)
>        212	END_FOR(arg=None, lineno=6)
         214	LOAD_FAST(arg=2, lineno=8)
         216	RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:37,619 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:37,620 - DEBUG - stack: []
2024-06-06 03:46:37,620 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:37,620 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2024-06-06 03:46:37,620 - DEBUG - stack []
2024-06-06 03:46:37,620 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2024-06-06 03:46:37,620 - DEBUG - stack []
2024-06-06 03:46:37,620 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
2024-06-06 03:46:37,620 - DEBUG - stack []
2024-06-06 03:46:37,620 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
2024-06-06 03:46:37,621 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:37,621 - DEBUG - dispatch pc=26, inst=STORE_FAST(arg=1, lineno=2)
2024-06-06 03:46:37,621 - DEBUG - stack ['$6load_attr.1']
2024-06-06 03:46:37,621 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:37,621 - DEBUG - stack []
2024-06-06 03:46:37,621 - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=3)
2024-06-06 03:46:37,621 - DEBUG - stack ['$28load_global.2']
2024-06-06 03:46:37,621 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=3)
2024-06-06 03:46:37,621 - DEBUG - stack ['$null$38.3', '$38load_attr.4']
2024-06-06 03:46:37,622 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=2, lineno=3)
2024-06-06 03:46:37,622 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5']
2024-06-06 03:46:37,622 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=6, lineno=3)
2024-06-06 03:46:37,622 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$60load_global.6']
2024-06-06 03:46:37,622 - DEBUG - dispatch pc=90, inst=KW_NAMES(arg=1, lineno=3)
2024-06-06 03:46:37,622 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:37,622 - DEBUG - dispatch pc=92, inst=CALL(arg=2, lineno=3)
2024-06-06 03:46:37,622 - DEBUG - stack ['$null$38.3', '$38load_attr.4', '$full_shape058.5', '$70load_attr.7']
2024-06-06 03:46:37,622 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=3)
2024-06-06 03:46:37,622 - DEBUG - stack ['$92call.8']
2024-06-06 03:46:37,622 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=2, lineno=4)
2024-06-06 03:46:37,622 - DEBUG - stack []
2024-06-06 03:46:37,622 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=4)
2024-06-06 03:46:37,623 - DEBUG - stack ['$const102.9']
2024-06-06 03:46:37,623 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=0, lineno=4)
2024-06-06 03:46:37,623 - DEBUG - stack ['$const102.9', '$out0104.10']
2024-06-06 03:46:37,623 - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=4)
2024-06-06 03:46:37,623 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11']
2024-06-06 03:46:37,623 - DEBUG - dispatch pc=110, inst=STORE_SLICE(arg=None, lineno=4)
2024-06-06 03:46:37,623 - DEBUG - stack ['$const102.9', '$out0104.10', '$const106.11', '$const108.12']
2024-06-06 03:46:37,623 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
2024-06-06 03:46:37,623 - DEBUG - stack []
2024-06-06 03:46:37,623 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=2, lineno=5)
2024-06-06 03:46:37,623 - DEBUG - stack ['$const112.15']
2024-06-06 03:46:37,623 - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=4, lineno=5)
2024-06-06 03:46:37,623 - DEBUG - stack ['$const112.15', '$out0114.16']
2024-06-06 03:46:37,623 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=0, lineno=5)
2024-06-06 03:46:37,624 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17']
2024-06-06 03:46:37,624 - DEBUG - dispatch pc=120, inst=STORE_SLICE(arg=None, lineno=5)
2024-06-06 03:46:37,624 - DEBUG - stack ['$const112.15', '$out0114.16', '$const116.17', '$const118.18']
2024-06-06 03:46:37,624 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
2024-06-06 03:46:37,624 - DEBUG - stack []
2024-06-06 03:46:37,624 - DEBUG - dispatch pc=132, inst=LOAD_GLOBAL(arg=11, lineno=6)
2024-06-06 03:46:37,624 - DEBUG - stack ['$null$122.22', '$122load_global.21']
2024-06-06 03:46:37,624 - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:37,624 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23']
2024-06-06 03:46:37,624 - DEBUG - dispatch pc=144, inst=LOAD_CONST(arg=4, lineno=6)
2024-06-06 03:46:37,624 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25']
2024-06-06 03:46:37,624 - DEBUG - dispatch pc=146, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:37,624 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$null$132.24', '$132load_global.23', '$const142.25', '$const144.26']
2024-06-06 03:46:37,625 - DEBUG - dispatch pc=154, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2024-06-06 03:46:37,625 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$146call.27']
2024-06-06 03:46:37,625 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=6)
2024-06-06 03:46:37,625 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28']
2024-06-06 03:46:37,625 - DEBUG - dispatch pc=158, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:37,625 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29']
2024-06-06 03:46:37,625 - DEBUG - dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=6)
2024-06-06 03:46:37,625 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$full_shape0156.29', '$const158.30']
2024-06-06 03:46:37,625 - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=13, lineno=6)
2024-06-06 03:46:37,625 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31']
2024-06-06 03:46:37,625 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=2, lineno=6)
2024-06-06 03:46:37,625 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32']
2024-06-06 03:46:37,625 - DEBUG - dispatch pc=176, inst=LOAD_CONST(arg=3, lineno=6)
2024-06-06 03:46:37,625 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34']
2024-06-06 03:46:37,626 - DEBUG - dispatch pc=178, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:37,626 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$null$164.33', '$164load_global.32', '$const174.34', '$const176.35']
2024-06-06 03:46:37,626 - DEBUG - dispatch pc=186, inst=BINARY_OP(arg=10, lineno=6)
2024-06-06 03:46:37,626 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$160binary_subscr.31', '$178call.36']
2024-06-06 03:46:37,626 - DEBUG - dispatch pc=190, inst=CALL(arg=2, lineno=6)
2024-06-06 03:46:37,626 - DEBUG - stack ['$null$122.22', '$122load_global.21', '$154unary_negative.28', '$binop_sub186.37']
2024-06-06 03:46:37,626 - DEBUG - dispatch pc=198, inst=GET_ITER(arg=None, lineno=6)
2024-06-06 03:46:37,626 - DEBUG - stack ['$190call.38']
2024-06-06 03:46:37,626 - DEBUG - end state. edges=[Edge(pc=200, stack=('$198get_iter.39',), blockstack=(), npush=0)]
2024-06-06 03:46:37,626 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:37,626 - DEBUG - stack: ['$phi200.0']
2024-06-06 03:46:37,626 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=1)
2024-06-06 03:46:37,626 - DEBUG - dispatch pc=200, inst=FOR_ITER(arg=4, lineno=6)
2024-06-06 03:46:37,627 - DEBUG - stack ['$phi200.0']
2024-06-06 03:46:37,627 - DEBUG - end state. edges=[Edge(pc=212, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0), Edge(pc=204, stack=('$phi200.0', '$200for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:37,627 - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:37,627 - DEBUG - stack: ['$phi212.0', '$phi212.1']
2024-06-06 03:46:37,627 - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=2)
2024-06-06 03:46:37,627 - DEBUG - dispatch pc=212, inst=END_FOR(arg=None, lineno=6)
2024-06-06 03:46:37,627 - DEBUG - stack ['$phi212.0', '$phi212.1']
2024-06-06 03:46:37,627 - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=2, lineno=8)
2024-06-06 03:46:37,627 - DEBUG - stack []
2024-06-06 03:46:37,627 - DEBUG - dispatch pc=216, inst=RETURN_VALUE(arg=None, lineno=8)
2024-06-06 03:46:37,627 - DEBUG - stack ['$out0214.2']
2024-06-06 03:46:37,627 - DEBUG - end state. edges=[]
2024-06-06 03:46:37,627 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=2)])
2024-06-06 03:46:37,627 - DEBUG - stack: ['$phi204.0', '$phi204.1']
2024-06-06 03:46:37,628 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=2)
2024-06-06 03:46:37,628 - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=3, lineno=6)
2024-06-06 03:46:37,628 - DEBUG - stack ['$phi204.0', '$phi204.1']
2024-06-06 03:46:37,628 - DEBUG - dispatch pc=206, inst=LOAD_CONST(arg=2, lineno=7)
2024-06-06 03:46:37,628 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:37,628 - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=4, lineno=7)
2024-06-06 03:46:37,628 - DEBUG - stack ['$phi204.0', '$const206.2']
2024-06-06 03:46:37,628 - DEBUG - dispatch pc=210, inst=JUMP_BACKWARD(arg=6, lineno=7)
2024-06-06 03:46:37,628 - DEBUG - stack ['$phi204.0']
2024-06-06 03:46:37,628 - DEBUG - end state. edges=[Edge(pc=200, stack=('$phi204.0',), blockstack=(), npush=0)]
2024-06-06 03:46:37,628 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1)])
2024-06-06 03:46:37,628 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:37,628 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=1): {'$phi200.0'},
             State(pc_initial=204 nstack_initial=2): {'$phi204.1'},
             State(pc_initial=212 nstack_initial=2): set()})
2024-06-06 03:46:37,629 - DEBUG - defmap: {'$phi200.0': State(pc_initial=0 nstack_initial=0),
 '$phi204.1': State(pc_initial=200 nstack_initial=1),
 '$phi212.1': State(pc_initial=200 nstack_initial=1)}
2024-06-06 03:46:37,629 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi204.0',
                            State(pc_initial=204 nstack_initial=2))},
             '$phi204.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:37,630 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:37,630 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:37,631 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi200.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi212.0': {('$198get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi212.1': {('$200for_iter.2',
                            State(pc_initial=200 nstack_initial=1))}})
2024-06-06 03:46:37,632 - DEBUG - keep phismap: {'$phi200.0': {('$198get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi204.1': {('$200for_iter.2', State(pc_initial=200 nstack_initial=1))}}
2024-06-06 03:46:37,632 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi200.0': '$198get_iter.39'},
             State(pc_initial=200 nstack_initial=1): {'$phi204.1': '$200for_iter.2'}})
2024-06-06 03:46:37,632 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:37,632 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'value': '$6load_attr.1'}), (28, {'idx': 1, 'res': '$28load_global.2'}), (38, {'item': '$28load_global.2', 'res': '$38load_attr.4'}), (58, {'res': '$full_shape058.5'}), (60, {'idx': 1, 'res': '$60load_global.6'}), (70, {'item': '$60load_global.6', 'res': '$70load_attr.7'}), (92, {'func': '$38load_attr.4', 'args': ['$full_shape058.5', '$70load_attr.7'], 'kw_names': 1, 'res': '$92call.8'}), (100, {'value': '$92call.8'}), (102, {'res': '$const102.9'}), (104, {'res': '$out0104.10'}), (106, {'res': '$const106.11'}), (108, {'res': '$const108.12'}), (110, {'start': '$const106.11', 'end': '$const108.12', 'container': '$out0104.10', 'value': '$const102.9', 'res': '$110store_slice.14', 'slicevar': '$110store_slice.13'}), (112, {'res': '$const112.15'}), (114, {'res': '$out0114.16'}), (116, {'res': '$const116.17'}), (118, {'res': '$const118.18'}), (120, {'start': '$const116.17', 'end': '$const118.18', 'container': '$out0114.16', 'value': '$const112.15', 'res': '$120store_slice.20', 'slicevar': '$120store_slice.19'}), (122, {'idx': 4, 'res': '$122load_global.21'}), (132, {'idx': 5, 'res': '$132load_global.23'}), (142, {'res': '$const142.25'}), (144, {'res': '$const144.26'}), (146, {'func': '$132load_global.23', 'args': ['$const142.25', '$const144.26'], 'kw_names': None, 'res': '$146call.27'}), (154, {'value': '$146call.27', 'res': '$154unary_negative.28'}), (156, {'res': '$full_shape0156.29'}), (158, {'res': '$const158.30'}), (160, {'index': '$const158.30', 'target': '$full_shape0156.29', 'res': '$160binary_subscr.31'}), (164, {'idx': 6, 'res': '$164load_global.32'}), (174, {'res': '$const174.34'}), (176, {'res': '$const176.35'}), (178, {'func': '$164load_global.32', 'args': ['$const174.34', '$const176.35'], 'kw_names': None, 'res': '$178call.36'}), (186, {'op': '-', 'lhs': '$160binary_subscr.31', 'rhs': '$178call.36', 'res': '$binop_sub186.37'}), (190, {'func': '$122load_global.21', 'args': ['$154unary_negative.28', '$binop_sub186.37'], 'kw_names': None, 'res': '$190call.38'}), (198, {'value': '$190call.38', 'res': '$198get_iter.39'})), outgoing_phis={'$phi200.0': '$198get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$198get_iter.39',)})
2024-06-06 03:46:37,632 - DEBUG - block_infos State(pc_initial=200 nstack_initial=1):
AdaptBlockInfo(insts=((200, {'iterator': '$phi200.0', 'pair': '$200for_iter.1', 'indval': '$200for_iter.2', 'pred': '$200for_iter.3'}),), outgoing_phis={'$phi204.1': '$200for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={212: ('$phi200.0', '$200for_iter.2'), 204: ('$phi200.0', '$200for_iter.2')})
2024-06-06 03:46:37,632 - DEBUG - block_infos State(pc_initial=204 nstack_initial=2):
AdaptBlockInfo(insts=((204, {'value': '$phi204.1'}), (206, {'res': '$const206.2'}), (208, {'value': '$const206.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi204.0',)})
2024-06-06 03:46:37,633 - DEBUG - block_infos State(pc_initial=212 nstack_initial=2):
AdaptBlockInfo(insts=((214, {'res': '$out0214.2'}), (216, {'retval': '$out0214.2', 'castval': '$216return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:37,634 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $28load_global.2 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$28load_global.2']
    $38load_attr.4 = getattr(value=$28load_global.2, attr=empty) ['$28load_global.2', '$38load_attr.4']
    $60load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$60load_global.6']
    $70load_attr.7 = getattr(value=$60load_global.6, attr=bool_) ['$60load_global.6', '$70load_attr.7']
    out0 = call $38load_attr.4(full_shape0, func=$38load_attr.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$38load_attr.4', '$70load_attr.7', 'full_shape0', 'out0']
    $const102.9 = const(int, 0)              ['$const102.9']
    $const106.11 = const(NoneType, None)     ['$const106.11']
    $const108.12 = const(int, 1)             ['$const108.12']
    $110store_slice.13 = global(slice: <class 'slice'>) ['$110store_slice.13']
    $110store_slice.14 = call $110store_slice.13($const106.11, $const108.12, func=$110store_slice.13, args=(Var($const106.11, <string>:4), Var($const108.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$110store_slice.13', '$110store_slice.14', '$const106.11', '$const108.12']
    out0[$110store_slice.14] = $const102.9   ['$110store_slice.14', '$const102.9', 'out0']
    $const112.15 = const(int, 0)             ['$const112.15']
    $const116.17 = const(int, -1)            ['$const116.17']
    $const118.18 = const(NoneType, None)     ['$const118.18']
    $120store_slice.19 = global(slice: <class 'slice'>) ['$120store_slice.19']
    $120store_slice.20 = call $120store_slice.19($const116.17, $const118.18, func=$120store_slice.19, args=(Var($const116.17, <string>:5), Var($const118.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$120store_slice.19', '$120store_slice.20', '$const116.17', '$const118.18']
    out0[$120store_slice.20] = $const112.15  ['$120store_slice.20', '$const112.15', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $132load_global.23 = global(min: <built-in function min>) ['$132load_global.23']
    $const142.25 = const(int, 0)             ['$const142.25']
    $const144.26 = const(int, -1)            ['$const144.26']
    $146call.27 = call $132load_global.23($const142.25, $const144.26, func=$132load_global.23, args=[Var($const142.25, <string>:6), Var($const144.26, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$132load_global.23', '$146call.27', '$const142.25', '$const144.26']
    $154unary_negative.28 = unary(fn=<built-in function neg>, value=$146call.27) ['$146call.27', '$154unary_negative.28']
    $const158.30 = const(int, 0)             ['$const158.30']
    $160binary_subscr.31 = getitem(value=full_shape0, index=$const158.30, fn=<built-in function getitem>) ['$160binary_subscr.31', '$const158.30', 'full_shape0']
    $164load_global.32 = global(max: <built-in function max>) ['$164load_global.32']
    $const174.34 = const(int, 0)             ['$const174.34']
    $const176.35 = const(int, 1)             ['$const176.35']
    $178call.36 = call $164load_global.32($const174.34, $const176.35, func=$164load_global.32, args=[Var($const174.34, <string>:6), Var($const176.35, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_global.32', '$178call.36', '$const174.34', '$const176.35']
    $binop_sub186.37 = $160binary_subscr.31 - $178call.36 ['$160binary_subscr.31', '$178call.36', '$binop_sub186.37']
    $190call.38 = call $122load_global.21($154unary_negative.28, $binop_sub186.37, func=$122load_global.21, args=[Var($154unary_negative.28, <string>:6), Var($binop_sub186.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$154unary_negative.28', '$190call.38', '$binop_sub186.37']
    $198get_iter.39 = getiter(value=$190call.38) ['$190call.38', '$198get_iter.39']
    $phi200.0 = $198get_iter.39              ['$198get_iter.39', '$phi200.0']
    jump 200                                 []
label 200:
    $200for_iter.1 = iternext(value=$phi200.0) ['$200for_iter.1', '$phi200.0']
    $200for_iter.2 = pair_first(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.2']
    $200for_iter.3 = pair_second(value=$200for_iter.1) ['$200for_iter.1', '$200for_iter.3']
    $phi204.1 = $200for_iter.2               ['$200for_iter.2', '$phi204.1']
    branch $200for_iter.3, 204, 212          ['$200for_iter.3']
label 204:
    index00 = $phi204.1                      ['$phi204.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 200                                 []
label 212:
    $216return_value.3 = cast(value=out0)    ['$216return_value.3', 'out0']
    return $216return_value.3                ['$216return_value.3']

2024-06-06 03:46:37,644 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:37,644 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d22325d0>
2024-06-06 03:46:37,644 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:37,645 - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2024-06-06 03:46:37,645 - DEBUG - on stmt: $28load_global.2.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:37,645 - DEBUG - on stmt: $38load_attr.4.1 = getattr(value=$28load_global.2.1, attr=empty)
2024-06-06 03:46:37,645 - DEBUG - on stmt: $60load_global.6.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:37,645 - DEBUG - on stmt: $70load_attr.7.1 = getattr(value=$60load_global.6.1, attr=bool_)
2024-06-06 03:46:37,645 - DEBUG - on stmt: out0 = call $38load_attr.4.1(full_shape0, func=$38load_attr.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($70load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,645 - DEBUG - on stmt: $const102.9.1 = const(int, 0)
2024-06-06 03:46:37,645 - DEBUG - on stmt: $const106.11.1 = const(NoneType, None)
2024-06-06 03:46:37,645 - DEBUG - on stmt: $const108.12.1 = const(int, 1)
2024-06-06 03:46:37,645 - DEBUG - on stmt: $110store_slice.13.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:37,645 - DEBUG - on stmt: $110store_slice.14.1 = call $110store_slice.13.1($const106.11.1, $const108.12.1, func=$110store_slice.13.1, args=(Var($const106.11.1, <string>:4), Var($const108.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,645 - DEBUG - on stmt: out0[$110store_slice.14.1] = $const102.9.1
2024-06-06 03:46:37,646 - DEBUG - on stmt: $const112.15.1 = const(int, 0)
2024-06-06 03:46:37,646 - DEBUG - on stmt: $const116.17.1 = const(int, -1)
2024-06-06 03:46:37,646 - DEBUG - on stmt: $const118.18.1 = const(NoneType, None)
2024-06-06 03:46:37,646 - DEBUG - on stmt: $120store_slice.19.1 = global(slice: <class 'slice'>)
2024-06-06 03:46:37,646 - DEBUG - on stmt: $120store_slice.20.1 = call $120store_slice.19.1($const116.17.1, $const118.18.1, func=$120store_slice.19.1, args=(Var($const116.17.1, <string>:5), Var($const118.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,646 - DEBUG - on stmt: out0[$120store_slice.20.1] = $const112.15.1
2024-06-06 03:46:37,646 - DEBUG - on stmt: $122load_global.21.1 = global(range: <class 'range'>)
2024-06-06 03:46:37,646 - DEBUG - on stmt: $132load_global.23.1 = global(min: <built-in function min>)
2024-06-06 03:46:37,646 - DEBUG - on stmt: $const142.25.1 = const(int, 0)
2024-06-06 03:46:37,646 - DEBUG - on stmt: $const144.26.1 = const(int, -1)
2024-06-06 03:46:37,646 - DEBUG - on stmt: $146call.27.1 = call $132load_global.23.1($const142.25.1, $const144.26.1, func=$132load_global.23.1, args=[Var($const142.25.1, <string>:6), Var($const144.26.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,646 - DEBUG - on stmt: $154unary_negative.28.1 = unary(fn=<built-in function neg>, value=$146call.27.1)
2024-06-06 03:46:37,647 - DEBUG - on stmt: $const158.30.1 = const(int, 0)
2024-06-06 03:46:37,647 - DEBUG - on stmt: $160binary_subscr.31.1 = getitem(value=full_shape0, index=$const158.30.1, fn=<built-in function getitem>)
2024-06-06 03:46:37,647 - DEBUG - on stmt: $164load_global.32.1 = global(max: <built-in function max>)
2024-06-06 03:46:37,647 - DEBUG - on stmt: $const174.34.1 = const(int, 0)
2024-06-06 03:46:37,647 - DEBUG - on stmt: $const176.35.1 = const(int, 1)
2024-06-06 03:46:37,647 - DEBUG - on stmt: $178call.36.1 = call $164load_global.32.1($const174.34.1, $const176.35.1, func=$164load_global.32.1, args=[Var($const174.34.1, <string>:6), Var($const176.35.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,647 - DEBUG - on stmt: $binop_sub186.37.1 = $160binary_subscr.31.1 - $178call.36.1
2024-06-06 03:46:37,647 - DEBUG - on stmt: $190call.38.1 = call $122load_global.21.1($154unary_negative.28.1, $binop_sub186.37.1, func=$122load_global.21.1, args=[Var($154unary_negative.28.1, <string>:6), Var($binop_sub186.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:37,647 - DEBUG - on stmt: $198get_iter.39.1 = getiter(value=$190call.38.1)
2024-06-06 03:46:37,647 - DEBUG - on stmt: $phi200.0.1 = $198get_iter.39.1
2024-06-06 03:46:37,647 - DEBUG - on stmt: jump 200
2024-06-06 03:46:37,647 - DEBUG - ==== SSA block analysis pass on 200
2024-06-06 03:46:37,648 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d22325d0>
2024-06-06 03:46:37,648 - DEBUG - on stmt: $200for_iter.1.1 = iternext(value=$phi200.0.1)
2024-06-06 03:46:37,648 - DEBUG - on stmt: $200for_iter.2.1 = pair_first(value=$200for_iter.1.1)
2024-06-06 03:46:37,648 - DEBUG - on stmt: $200for_iter.3.1 = pair_second(value=$200for_iter.1.1)
2024-06-06 03:46:37,648 - DEBUG - on stmt: $phi204.1.1 = $200for_iter.2.1
2024-06-06 03:46:37,648 - DEBUG - on stmt: branch $200for_iter.3.1, 204, 214
2024-06-06 03:46:37,648 - DEBUG - ==== SSA block analysis pass on 204
2024-06-06 03:46:37,648 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d22325d0>
2024-06-06 03:46:37,648 - DEBUG - on stmt: index00 = $phi204.1.1
2024-06-06 03:46:37,648 - DEBUG - on stmt: jump 212
2024-06-06 03:46:37,648 - DEBUG - ==== SSA block analysis pass on 214
2024-06-06 03:46:37,648 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d22325d0>
2024-06-06 03:46:37,648 - DEBUG - on stmt: $216return_value.3.1 = cast(value=out0)
2024-06-06 03:46:37,648 - DEBUG - on stmt: return $216return_value.3.1
2024-06-06 03:46:37,649 - DEBUG - ==== SSA block analysis pass on 212
2024-06-06 03:46:37,649 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d22325d0>
2024-06-06 03:46:37,649 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:37,649 - DEBUG - on stmt: stencil_index = $const6.1 + index00
2024-06-06 03:46:37,649 - DEBUG - on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2024-06-06 03:46:37,649 - DEBUG - on stmt: $const14.4 = const(int, -1)
2024-06-06 03:46:37,649 - DEBUG - on stmt: stencil_index.1 = $const14.4 + index00
2024-06-06 03:46:37,649 - DEBUG - on stmt: $16binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2024-06-06 03:46:37,649 - DEBUG - on stmt: $20compare_op.6 = $8binary_subscr.2 < $16binary_subscr.5
2024-06-06 03:46:37,649 - DEBUG - on stmt: $const26.8 = const(int, 0)
2024-06-06 03:46:37,649 - DEBUG - on stmt: stencil_index.2 = $const26.8 + index00
2024-06-06 03:46:37,649 - DEBUG - on stmt: $28binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2024-06-06 03:46:37,649 - DEBUG - on stmt: $const34.11 = const(int, 1)
2024-06-06 03:46:37,650 - DEBUG - on stmt: stencil_index.3 = $const34.11 + index00
2024-06-06 03:46:37,650 - DEBUG - on stmt: $36binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2024-06-06 03:46:37,650 - DEBUG - on stmt: $40compare_op.13 = $28binary_subscr.9 <= $36binary_subscr.12
2024-06-06 03:46:37,650 - DEBUG - on stmt: $binop_and_44.14 = $20compare_op.6 & $40compare_op.13
2024-06-06 03:46:37,650 - DEBUG - on stmt: $48return_value.15 = cast(value=$binop_and_44.14)
2024-06-06 03:46:37,650 - DEBUG - on stmt: out0[index00] = $48return_value.15
2024-06-06 03:46:37,650 - DEBUG - on stmt: jump 213
2024-06-06 03:46:37,650 - DEBUG - ==== SSA block analysis pass on 213
2024-06-06 03:46:37,650 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d22325d0>
2024-06-06 03:46:37,650 - DEBUG - on stmt: jump 200
2024-06-06 03:46:37,651 - DEBUG - defs defaultdict(<class 'list'>,
            {'$110store_slice.13.1': [(<numba.core.ir.Assign object at 0x7fe9d239d880>,
                                       0)],
             '$110store_slice.14.1': [(<numba.core.ir.Assign object at 0x7fe9d239ca10>,
                                       0)],
             '$120store_slice.19.1': [(<numba.core.ir.Assign object at 0x7fe9d239d2b0>,
                                       0)],
             '$120store_slice.20.1': [(<numba.core.ir.Assign object at 0x7fe9d239c290>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x7fe9d23806b0>,
                                       0)],
             '$132load_global.23.1': [(<numba.core.ir.Assign object at 0x7fe9d23800b0>,
                                       0)],
             '$146call.27.1': [(<numba.core.ir.Assign object at 0x7fe9d2383a40>,
                                0)],
             '$154unary_negative.28.1': [(<numba.core.ir.Assign object at 0x7fe9d2383830>,
                                          0)],
             '$160binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x7fe9d23835f0>,
                                         0)],
             '$164load_global.32.1': [(<numba.core.ir.Assign object at 0x7fe9d23836b0>,
                                       0)],
             '$16binary_subscr.5': [(<numba.core.ir.Assign object at 0x7fe9d239ed20>,
                                     212)],
             '$178call.36.1': [(<numba.core.ir.Assign object at 0x7fe9d2383110>,
                                0)],
             '$190call.38.1': [(<numba.core.ir.Assign object at 0x7fe9d2382ab0>,
                                0)],
             '$198get_iter.39.1': [(<numba.core.ir.Assign object at 0x7fe9d23828d0>,
                                    0)],
             '$200for_iter.1.1': [(<numba.core.ir.Assign object at 0x7fe9d2383920>,
                                   200)],
             '$200for_iter.2.1': [(<numba.core.ir.Assign object at 0x7fe9d2382e10>,
                                   200)],
             '$200for_iter.3.1': [(<numba.core.ir.Assign object at 0x7fe9d2382c30>,
                                   200)],
             '$20compare_op.6': [(<numba.core.ir.Assign object at 0x7fe9d23d22d0>,
                                  212)],
             '$216return_value.3.1': [(<numba.core.ir.Assign object at 0x7fe9d23821b0>,
                                       214)],
             '$28binary_subscr.9': [(<numba.core.ir.Assign object at 0x7fe9d239e2d0>,
                                     212)],
             '$28load_global.2.1': [(<numba.core.ir.Assign object at 0x7fe9d239d310>,
                                     0)],
             '$36binary_subscr.12': [(<numba.core.ir.Assign object at 0x7fe9d239cb00>,
                                      212)],
             '$38load_attr.4.1': [(<numba.core.ir.Assign object at 0x7fe9d239cad0>,
                                   0)],
             '$40compare_op.13': [(<numba.core.ir.Assign object at 0x7fe9d2228fe0>,
                                   212)],
             '$48return_value.15': [(<numba.core.ir.Assign object at 0x7fe9d2228080>,
                                     212)],
             '$60load_global.6.1': [(<numba.core.ir.Assign object at 0x7fe9d239e7b0>,
                                     0)],
             '$70load_attr.7.1': [(<numba.core.ir.Assign object at 0x7fe9d239d790>,
                                   0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7fe9d239f800>,
                                    212)],
             '$binop_and_44.14': [(<numba.core.ir.Assign object at 0x7fe9d2228ce0>,
                                   212)],
             '$binop_sub186.37.1': [(<numba.core.ir.Assign object at 0x7fe9d2382ae0>,
                                     0)],
             '$const102.9.1': [(<numba.core.ir.Assign object at 0x7fe9d239dc10>,
                                0)],
             '$const106.11.1': [(<numba.core.ir.Assign object at 0x7fe9d239e7e0>,
                                 0)],
             '$const108.12.1': [(<numba.core.ir.Assign object at 0x7fe9d239db50>,
                                 0)],
             '$const112.15.1': [(<numba.core.ir.Assign object at 0x7fe9d239c470>,
                                 0)],
             '$const116.17.1': [(<numba.core.ir.Assign object at 0x7fe9d239c140>,
                                 0)],
             '$const118.18.1': [(<numba.core.ir.Assign object at 0x7fe9d239c380>,
                                 0)],
             '$const14.4': [(<numba.core.ir.Assign object at 0x7fe9d23f6360>,
                             212)],
             '$const142.25.1': [(<numba.core.ir.Assign object at 0x7fe9d2381310>,
                                 0)],
             '$const144.26.1': [(<numba.core.ir.Assign object at 0x7fe9d2383e60>,
                                 0)],
             '$const158.30.1': [(<numba.core.ir.Assign object at 0x7fe9d23833b0>,
                                 0)],
             '$const174.34.1': [(<numba.core.ir.Assign object at 0x7fe9d2382b40>,
                                 0)],
             '$const176.35.1': [(<numba.core.ir.Assign object at 0x7fe9d2383290>,
                                 0)],
             '$const26.8': [(<numba.core.ir.Assign object at 0x7fe9d23d2930>,
                             212)],
             '$const34.11': [(<numba.core.ir.Assign object at 0x7fe9d222b020>,
                              212)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9d23f5640>,
                            212)],
             '$phi200.0.1': [(<numba.core.ir.Assign object at 0x7fe9d239d940>,
                              0)],
             '$phi204.1.1': [(<numba.core.ir.Assign object at 0x7fe9d2382cc0>,
                              200)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7fe9d239e000>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7fe9d23825a0>,
                          204)],
             'out0': [(<numba.core.ir.Assign object at 0x7fe9d239d190>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7fe9d239f710>,
                                212)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7fe9d239f410>,
                                  212)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7fe9d239e1b0>,
                                  212)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7fe9d239c950>,
                                  212)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9d239d3d0>, 0)]})
2024-06-06 03:46:37,652 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d22325d0>
2024-06-06 03:46:38,247 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          12	LOAD_GLOBAL(arg=1, lineno=1221)
          22	LOAD_ATTR(arg=2, lineno=1221)
          42	LOAD_FAST(arg=0, lineno=1221)
          44	LOAD_CONST(arg=2, lineno=1221)
          46	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=6, lineno=1221)
          80	LOAD_CONST(arg=1, lineno=1221)
          82	BINARY_SUBSCR(arg=None, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          94	BINARY_SLICE(arg=None, lineno=1221)
          96	CALL(arg=1, lineno=1221)
         104	COMPARE_OP(arg=92, lineno=1221)
         108	LOAD_FAST(arg=7, lineno=1221)
         110	LOAD_CONST(arg=1, lineno=1221)
         112	STORE_SUBSCR(arg=None, lineno=1221)
         116	LOAD_FAST(arg=7, lineno=1222)
         118	LOAD_CONST(arg=1, lineno=1222)
         120	COPY(arg=2, lineno=1222)
         122	COPY(arg=2, lineno=1222)
         124	BINARY_SUBSCR(arg=None, lineno=1222)
         128	LOAD_FAST(arg=0, lineno=1222)
         130	LOAD_CONST(arg=1, lineno=1222)
         132	BINARY_SUBSCR(arg=None, lineno=1222)
         136	LOAD_GLOBAL(arg=1, lineno=1222)
         146	LOAD_ATTR(arg=8, lineno=1222)
         166	LOAD_FAST(arg=0, lineno=1222)
         168	LOAD_CONST(arg=2, lineno=1222)
         170	LOAD_GLOBAL(arg=5, lineno=1222)
         180	LOAD_FAST(arg=4, lineno=1222)
         182	LOAD_FAST(arg=0, lineno=1222)
         184	LOAD_ATTR(arg=6, lineno=1222)
         204	LOAD_CONST(arg=1, lineno=1222)
         206	BINARY_SUBSCR(arg=None, lineno=1222)
         210	CALL(arg=2, lineno=1222)
         218	BINARY_SLICE(arg=None, lineno=1222)
         220	CALL(arg=1, lineno=1222)
         228	LOAD_FAST(arg=5, lineno=1222)
         230	BINARY_OP(arg=0, lineno=1222)
         234	COMPARE_OP(arg=92, lineno=1222)
         238	BINARY_OP(arg=14, lineno=1222)
         242	SWAP(arg=3, lineno=1222)
         244	SWAP(arg=2, lineno=1222)
         246	STORE_SUBSCR(arg=None, lineno=1222)
         250	LOAD_FAST(arg=7, lineno=1224)
         252	LOAD_CONST(arg=1, lineno=1224)
         254	BINARY_SUBSCR(arg=None, lineno=1224)
         258	POP_JUMP_IF_FALSE(arg=6, lineno=1224)
         260	LOAD_FAST(arg=6, lineno=1225)
         262	LOAD_CONST(arg=3, lineno=1225)
         264	BINARY_OP(arg=0, lineno=1225)
         268	STORE_FAST(arg=8, lineno=1225)
         270	JUMP_FORWARD(arg=2, lineno=1225)
>        272	LOAD_CONST(arg=3, lineno=1227)
         274	STORE_FAST(arg=8, lineno=1227)
>        276	LOAD_FAST(arg=8, lineno=1229)
         278	LOAD_FAST(arg=0, lineno=1229)
         280	LOAD_ATTR(arg=6, lineno=1229)
         300	LOAD_CONST(arg=1, lineno=1229)
         302	BINARY_SUBSCR(arg=None, lineno=1229)
         306	COMPARE_OP(arg=2, lineno=1229)
         310	POP_JUMP_IF_FALSE(arg=209, lineno=1229)
>        312	LOAD_GLOBAL(arg=1, lineno=1230)
         322	LOAD_ATTR(arg=2, lineno=1230)
         342	LOAD_FAST(arg=0, lineno=1230)
         344	LOAD_GLOBAL(arg=3, lineno=1230)
         354	LOAD_CONST(arg=1, lineno=1230)
         356	LOAD_FAST(arg=8, lineno=1230)
         358	LOAD_FAST(arg=1, lineno=1230)
         360	BINARY_OP(arg=10, lineno=1230)
         364	CALL(arg=2, lineno=1230)
         372	LOAD_GLOBAL(arg=5, lineno=1230)
         382	LOAD_FAST(arg=8, lineno=1230)
         384	LOAD_FAST(arg=2, lineno=1230)
         386	BINARY_OP(arg=0, lineno=1230)
         390	LOAD_FAST(arg=0, lineno=1230)
         392	LOAD_ATTR(arg=6, lineno=1230)
         412	LOAD_CONST(arg=1, lineno=1230)
         414	BINARY_SUBSCR(arg=None, lineno=1230)
         418	CALL(arg=2, lineno=1230)
         426	BINARY_SLICE(arg=None, lineno=1230)
         428	CALL(arg=1, lineno=1230)
         436	STORE_FAST(arg=9, lineno=1230)
         438	LOAD_FAST(arg=0, lineno=1233)
         440	LOAD_FAST(arg=8, lineno=1233)
         442	BINARY_SUBSCR(arg=None, lineno=1233)
         446	LOAD_FAST(arg=9, lineno=1233)
         448	COMPARE_OP(arg=40, lineno=1233)
         452	LOAD_FAST(arg=7, lineno=1233)
         454	LOAD_FAST(arg=8, lineno=1233)
         456	STORE_SUBSCR(arg=None, lineno=1233)
         460	LOAD_FAST(arg=7, lineno=1235)
         462	LOAD_FAST(arg=8, lineno=1235)
         464	BINARY_SUBSCR(arg=None, lineno=1235)
         468	POP_JUMP_IF_TRUE(arg=6, lineno=1235)
         470	LOAD_FAST(arg=8, lineno=1236)
         472	LOAD_CONST(arg=3, lineno=1236)
         474	BINARY_OP(arg=13, lineno=1236)
         478	STORE_FAST(arg=8, lineno=1236)
         480	JUMP_BACKWARD(arg=103, lineno=1237)
>        482	LOAD_GLOBAL(arg=1, lineno=1239)
         492	LOAD_ATTR(arg=8, lineno=1239)
         512	LOAD_FAST(arg=0, lineno=1239)
         514	LOAD_GLOBAL(arg=3, lineno=1239)
         524	LOAD_CONST(arg=1, lineno=1239)
         526	LOAD_FAST(arg=8, lineno=1239)
         528	LOAD_FAST(arg=3, lineno=1239)
         530	BINARY_OP(arg=10, lineno=1239)
         534	CALL(arg=2, lineno=1239)
         542	LOAD_GLOBAL(arg=5, lineno=1239)
         552	LOAD_FAST(arg=8, lineno=1239)
         554	LOAD_FAST(arg=4, lineno=1239)
         556	BINARY_OP(arg=0, lineno=1239)
         560	LOAD_FAST(arg=0, lineno=1239)
         562	LOAD_ATTR(arg=6, lineno=1239)
         582	LOAD_CONST(arg=1, lineno=1239)
         584	BINARY_SUBSCR(arg=None, lineno=1239)
         588	CALL(arg=2, lineno=1239)
         596	BINARY_SLICE(arg=None, lineno=1239)
         598	CALL(arg=1, lineno=1239)
         606	STORE_FAST(arg=10, lineno=1239)
         608	LOAD_FAST(arg=7, lineno=1240)
         610	LOAD_FAST(arg=8, lineno=1240)
         612	COPY(arg=2, lineno=1240)
         614	COPY(arg=2, lineno=1240)
         616	BINARY_SUBSCR(arg=None, lineno=1240)
         620	LOAD_FAST(arg=0, lineno=1240)
         622	LOAD_FAST(arg=8, lineno=1240)
         624	BINARY_SUBSCR(arg=None, lineno=1240)
         628	LOAD_FAST(arg=10, lineno=1240)
         630	LOAD_FAST(arg=5, lineno=1240)
         632	BINARY_OP(arg=0, lineno=1240)
         636	COMPARE_OP(arg=92, lineno=1240)
         640	BINARY_OP(arg=14, lineno=1240)
         644	SWAP(arg=3, lineno=1240)
         646	SWAP(arg=2, lineno=1240)
         648	STORE_SUBSCR(arg=None, lineno=1240)
         652	LOAD_FAST(arg=7, lineno=1242)
         654	LOAD_FAST(arg=8, lineno=1242)
         656	BINARY_SUBSCR(arg=None, lineno=1242)
         660	POP_JUMP_IF_TRUE(arg=6, lineno=1242)
         662	LOAD_FAST(arg=8, lineno=1243)
         664	LOAD_CONST(arg=3, lineno=1243)
         666	BINARY_OP(arg=13, lineno=1243)
         670	STORE_FAST(arg=8, lineno=1243)
         672	JUMP_BACKWARD(arg=199, lineno=1244)
>        674	LOAD_FAST(arg=8, lineno=1247)
         676	LOAD_FAST(arg=6, lineno=1247)
         678	LOAD_CONST(arg=3, lineno=1247)
         680	BINARY_OP(arg=0, lineno=1247)
         684	BINARY_OP(arg=13, lineno=1247)
         688	STORE_FAST(arg=8, lineno=1247)
         690	LOAD_FAST(arg=8, lineno=1229)
         692	LOAD_FAST(arg=0, lineno=1229)
         694	LOAD_ATTR(arg=6, lineno=1229)
         714	LOAD_CONST(arg=1, lineno=1229)
         716	BINARY_SUBSCR(arg=None, lineno=1229)
         720	COMPARE_OP(arg=2, lineno=1229)
         724	POP_JUMP_IF_FALSE(arg=1, lineno=1229)
         726	JUMP_BACKWARD(arg=208, lineno=1229)
>        728	RETURN_CONST(arg=2, lineno=1229)
>        730	RETURN_CONST(arg=2, lineno=1229)
2024-06-06 03:46:38,247 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:38,247 - DEBUG - stack: []
2024-06-06 03:46:38,248 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:38,248 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-06-06 03:46:38,248 - DEBUG - stack []
2024-06-06 03:46:38,248 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-06-06 03:46:38,248 - DEBUG - stack []
2024-06-06 03:46:38,248 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-06 03:46:38,248 - DEBUG - stack []
2024-06-06 03:46:38,248 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-06 03:46:38,248 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:38,248 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-06 03:46:38,249 - DEBUG - stack ['$x4.0', '$const6.1']
2024-06-06 03:46:38,249 - DEBUG - dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-06-06 03:46:38,249 - DEBUG - stack ['$8binary_subscr.2']
2024-06-06 03:46:38,249 - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=2, lineno=1221)
2024-06-06 03:46:38,249 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$12load_global.3']
2024-06-06 03:46:38,249 - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-06 03:46:38,249 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5']
2024-06-06 03:46:38,249 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=1221)
2024-06-06 03:46:38,249 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6']
2024-06-06 03:46:38,249 - DEBUG - dispatch pc=46, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-06-06 03:46:38,249 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7']
2024-06-06 03:46:38,250 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-06-06 03:46:38,250 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8']
2024-06-06 03:46:38,250 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-06 03:46:38,250 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10']
2024-06-06 03:46:38,250 - DEBUG - dispatch pc=60, inst=LOAD_ATTR(arg=6, lineno=1221)
2024-06-06 03:46:38,250 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$x58.11']
2024-06-06 03:46:38,250 - DEBUG - dispatch pc=80, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-06 03:46:38,250 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$60load_attr.12']
2024-06-06 03:46:38,250 - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-06 03:46:38,250 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$60load_attr.12', '$const80.13']
2024-06-06 03:46:38,251 - DEBUG - dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-06-06 03:46:38,251 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$82binary_subscr.14']
2024-06-06 03:46:38,251 - DEBUG - dispatch pc=94, inst=BINARY_SLICE(arg=None, lineno=1221)
2024-06-06 03:46:38,251 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$86call.15']
2024-06-06 03:46:38,251 - DEBUG - dispatch pc=96, inst=CALL(arg=1, lineno=1221)
2024-06-06 03:46:38,251 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$94binary_slice.17']
2024-06-06 03:46:38,251 - DEBUG - dispatch pc=104, inst=COMPARE_OP(arg=92, lineno=1221)
2024-06-06 03:46:38,251 - DEBUG - stack ['$8binary_subscr.2', '$96call.19']
2024-06-06 03:46:38,251 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=7, lineno=1221)
2024-06-06 03:46:38,251 - DEBUG - stack ['$104compare_op.20']
2024-06-06 03:46:38,251 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-06 03:46:38,251 - DEBUG - stack ['$104compare_op.20', '$peaks108.21']
2024-06-06 03:46:38,251 - DEBUG - dispatch pc=112, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-06-06 03:46:38,252 - DEBUG - stack ['$104compare_op.20', '$peaks108.21', '$const110.22']
2024-06-06 03:46:38,252 - DEBUG - dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=1222)
2024-06-06 03:46:38,252 - DEBUG - stack []
2024-06-06 03:46:38,252 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-06 03:46:38,252 - DEBUG - stack ['$peaks116.23']
2024-06-06 03:46:38,252 - DEBUG - dispatch pc=120, inst=COPY(arg=2, lineno=1222)
2024-06-06 03:46:38,252 - DEBUG - stack ['$peaks116.23', '$const118.24']
2024-06-06 03:46:38,252 - DEBUG - dispatch pc=122, inst=COPY(arg=2, lineno=1222)
2024-06-06 03:46:38,252 - DEBUG - stack ['$peaks116.23', '$const118.24', '$peaks116.23']
2024-06-06 03:46:38,252 - DEBUG - dispatch pc=124, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:38,252 - DEBUG - stack ['$peaks116.23', '$const118.24', '$peaks116.23', '$const118.24']
2024-06-06 03:46:38,252 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-06 03:46:38,252 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25']
2024-06-06 03:46:38,252 - DEBUG - dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-06 03:46:38,253 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$x128.26']
2024-06-06 03:46:38,253 - DEBUG - dispatch pc=132, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:38,253 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$x128.26', '$const130.27']
2024-06-06 03:46:38,253 - DEBUG - dispatch pc=136, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-06-06 03:46:38,253 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28']
2024-06-06 03:46:38,253 - DEBUG - dispatch pc=146, inst=LOAD_ATTR(arg=8, lineno=1222)
2024-06-06 03:46:38,253 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$136load_global.29']
2024-06-06 03:46:38,253 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-06 03:46:38,253 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31']
2024-06-06 03:46:38,253 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=1222)
2024-06-06 03:46:38,253 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32']
2024-06-06 03:46:38,253 - DEBUG - dispatch pc=170, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-06-06 03:46:38,253 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33']
2024-06-06 03:46:38,253 - DEBUG - dispatch pc=180, inst=LOAD_FAST(arg=4, lineno=1222)
2024-06-06 03:46:38,254 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34']
2024-06-06 03:46:38,254 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-06 03:46:38,254 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36']
2024-06-06 03:46:38,254 - DEBUG - dispatch pc=184, inst=LOAD_ATTR(arg=6, lineno=1222)
2024-06-06 03:46:38,254 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$x182.37']
2024-06-06 03:46:38,254 - DEBUG - dispatch pc=204, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-06 03:46:38,254 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$184load_attr.38']
2024-06-06 03:46:38,254 - DEBUG - dispatch pc=206, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:38,254 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$184load_attr.38', '$const204.39']
2024-06-06 03:46:38,254 - DEBUG - dispatch pc=210, inst=CALL(arg=2, lineno=1222)
2024-06-06 03:46:38,254 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$206binary_subscr.40']
2024-06-06 03:46:38,254 - DEBUG - dispatch pc=218, inst=BINARY_SLICE(arg=None, lineno=1222)
2024-06-06 03:46:38,254 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$210call.41']
2024-06-06 03:46:38,255 - DEBUG - dispatch pc=220, inst=CALL(arg=1, lineno=1222)
2024-06-06 03:46:38,255 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$218binary_slice.43']
2024-06-06 03:46:38,255 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=1222)
2024-06-06 03:46:38,255 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$220call.45']
2024-06-06 03:46:38,255 - DEBUG - dispatch pc=230, inst=BINARY_OP(arg=0, lineno=1222)
2024-06-06 03:46:38,255 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$220call.45', '$delta228.46']
2024-06-06 03:46:38,255 - DEBUG - dispatch pc=234, inst=COMPARE_OP(arg=92, lineno=1222)
2024-06-06 03:46:38,255 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$binop_add230.47']
2024-06-06 03:46:38,255 - DEBUG - dispatch pc=238, inst=BINARY_OP(arg=14, lineno=1222)
2024-06-06 03:46:38,255 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$234compare_op.48']
2024-06-06 03:46:38,255 - DEBUG - dispatch pc=242, inst=SWAP(arg=3, lineno=1222)
2024-06-06 03:46:38,255 - DEBUG - stack ['$peaks116.23', '$const118.24', '$binop_iand238.49']
2024-06-06 03:46:38,255 - DEBUG - dispatch pc=244, inst=SWAP(arg=2, lineno=1222)
2024-06-06 03:46:38,256 - DEBUG - stack ['$binop_iand238.49', '$const118.24', '$peaks116.23']
2024-06-06 03:46:38,256 - DEBUG - dispatch pc=246, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:38,256 - DEBUG - stack ['$binop_iand238.49', '$peaks116.23', '$const118.24']
2024-06-06 03:46:38,256 - DEBUG - dispatch pc=250, inst=LOAD_FAST(arg=7, lineno=1224)
2024-06-06 03:46:38,256 - DEBUG - stack []
2024-06-06 03:46:38,256 - DEBUG - dispatch pc=252, inst=LOAD_CONST(arg=1, lineno=1224)
2024-06-06 03:46:38,256 - DEBUG - stack ['$peaks250.50']
2024-06-06 03:46:38,256 - DEBUG - dispatch pc=254, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-06-06 03:46:38,256 - DEBUG - stack ['$peaks250.50', '$const252.51']
2024-06-06 03:46:38,256 - DEBUG - dispatch pc=258, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1224)
2024-06-06 03:46:38,256 - DEBUG - stack ['$254binary_subscr.52']
2024-06-06 03:46:38,256 - DEBUG - end state. edges=[Edge(pc=260, stack=(), blockstack=(), npush=0), Edge(pc=272, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,256 - DEBUG - pending: deque([State(pc_initial=260 nstack_initial=0), State(pc_initial=272 nstack_initial=0)])
2024-06-06 03:46:38,257 - DEBUG - stack: []
2024-06-06 03:46:38,257 - DEBUG - state.pc_initial: State(pc_initial=260 nstack_initial=0)
2024-06-06 03:46:38,257 - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=6, lineno=1225)
2024-06-06 03:46:38,257 - DEBUG - stack []
2024-06-06 03:46:38,257 - DEBUG - dispatch pc=262, inst=LOAD_CONST(arg=3, lineno=1225)
2024-06-06 03:46:38,257 - DEBUG - stack ['$wait260.0']
2024-06-06 03:46:38,257 - DEBUG - dispatch pc=264, inst=BINARY_OP(arg=0, lineno=1225)
2024-06-06 03:46:38,257 - DEBUG - stack ['$wait260.0', '$const262.1']
2024-06-06 03:46:38,257 - DEBUG - dispatch pc=268, inst=STORE_FAST(arg=8, lineno=1225)
2024-06-06 03:46:38,257 - DEBUG - stack ['$binop_add264.2']
2024-06-06 03:46:38,257 - DEBUG - dispatch pc=270, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-06-06 03:46:38,257 - DEBUG - stack []
2024-06-06 03:46:38,257 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,258 - DEBUG - pending: deque([State(pc_initial=272 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:38,258 - DEBUG - stack: []
2024-06-06 03:46:38,258 - DEBUG - state.pc_initial: State(pc_initial=272 nstack_initial=0)
2024-06-06 03:46:38,258 - DEBUG - dispatch pc=272, inst=LOAD_CONST(arg=3, lineno=1227)
2024-06-06 03:46:38,258 - DEBUG - stack []
2024-06-06 03:46:38,258 - DEBUG - dispatch pc=274, inst=STORE_FAST(arg=8, lineno=1227)
2024-06-06 03:46:38,258 - DEBUG - stack ['$const272.0']
2024-06-06 03:46:38,258 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,258 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:38,258 - DEBUG - stack: []
2024-06-06 03:46:38,258 - DEBUG - state.pc_initial: State(pc_initial=276 nstack_initial=0)
2024-06-06 03:46:38,258 - DEBUG - dispatch pc=276, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-06 03:46:38,258 - DEBUG - stack []
2024-06-06 03:46:38,259 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-06 03:46:38,259 - DEBUG - stack ['$n276.0']
2024-06-06 03:46:38,259 - DEBUG - dispatch pc=280, inst=LOAD_ATTR(arg=6, lineno=1229)
2024-06-06 03:46:38,259 - DEBUG - stack ['$n276.0', '$x278.1']
2024-06-06 03:46:38,259 - DEBUG - dispatch pc=300, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-06 03:46:38,259 - DEBUG - stack ['$n276.0', '$280load_attr.2']
2024-06-06 03:46:38,259 - DEBUG - dispatch pc=302, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-06 03:46:38,259 - DEBUG - stack ['$n276.0', '$280load_attr.2', '$const300.3']
2024-06-06 03:46:38,259 - DEBUG - dispatch pc=306, inst=COMPARE_OP(arg=2, lineno=1229)
2024-06-06 03:46:38,259 - DEBUG - stack ['$n276.0', '$302binary_subscr.4']
2024-06-06 03:46:38,259 - DEBUG - dispatch pc=310, inst=POP_JUMP_IF_FALSE(arg=209, lineno=1229)
2024-06-06 03:46:38,259 - DEBUG - stack ['$306compare_op.5']
2024-06-06 03:46:38,260 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=730, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,260 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=312 nstack_initial=0), State(pc_initial=730 nstack_initial=0)])
2024-06-06 03:46:38,260 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=730 nstack_initial=0)])
2024-06-06 03:46:38,260 - DEBUG - stack: []
2024-06-06 03:46:38,260 - DEBUG - state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-06-06 03:46:38,260 - DEBUG - dispatch pc=312, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-06-06 03:46:38,260 - DEBUG - stack []
2024-06-06 03:46:38,260 - DEBUG - dispatch pc=322, inst=LOAD_ATTR(arg=2, lineno=1230)
2024-06-06 03:46:38,260 - DEBUG - stack ['$null$312.1', '$312load_global.0']
2024-06-06 03:46:38,260 - DEBUG - dispatch pc=342, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-06 03:46:38,260 - DEBUG - stack ['$null$312.1', '$322load_attr.2']
2024-06-06 03:46:38,260 - DEBUG - dispatch pc=344, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-06-06 03:46:38,260 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3']
2024-06-06 03:46:38,261 - DEBUG - dispatch pc=354, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-06 03:46:38,261 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4']
2024-06-06 03:46:38,261 - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-06 03:46:38,261 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6']
2024-06-06 03:46:38,261 - DEBUG - dispatch pc=358, inst=LOAD_FAST(arg=1, lineno=1230)
2024-06-06 03:46:38,261 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6', '$n356.7']
2024-06-06 03:46:38,261 - DEBUG - dispatch pc=360, inst=BINARY_OP(arg=10, lineno=1230)
2024-06-06 03:46:38,261 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6', '$n356.7', '$pre_max358.8']
2024-06-06 03:46:38,261 - DEBUG - dispatch pc=364, inst=CALL(arg=2, lineno=1230)
2024-06-06 03:46:38,261 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6', '$binop_sub360.9']
2024-06-06 03:46:38,261 - DEBUG - dispatch pc=372, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-06-06 03:46:38,261 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10']
2024-06-06 03:46:38,261 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-06 03:46:38,262 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11']
2024-06-06 03:46:38,262 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=2, lineno=1230)
2024-06-06 03:46:38,262 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$n382.13']
2024-06-06 03:46:38,262 - DEBUG - dispatch pc=386, inst=BINARY_OP(arg=0, lineno=1230)
2024-06-06 03:46:38,262 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$n382.13', '$post_max384.14']
2024-06-06 03:46:38,262 - DEBUG - dispatch pc=390, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-06 03:46:38,262 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15']
2024-06-06 03:46:38,262 - DEBUG - dispatch pc=392, inst=LOAD_ATTR(arg=6, lineno=1230)
2024-06-06 03:46:38,262 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$x390.16']
2024-06-06 03:46:38,262 - DEBUG - dispatch pc=412, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-06 03:46:38,262 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$392load_attr.17']
2024-06-06 03:46:38,262 - DEBUG - dispatch pc=414, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-06-06 03:46:38,262 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$392load_attr.17', '$const412.18']
2024-06-06 03:46:38,263 - DEBUG - dispatch pc=418, inst=CALL(arg=2, lineno=1230)
2024-06-06 03:46:38,263 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$414binary_subscr.19']
2024-06-06 03:46:38,263 - DEBUG - dispatch pc=426, inst=BINARY_SLICE(arg=None, lineno=1230)
2024-06-06 03:46:38,263 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$418call.20']
2024-06-06 03:46:38,263 - DEBUG - dispatch pc=428, inst=CALL(arg=1, lineno=1230)
2024-06-06 03:46:38,263 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$426binary_slice.22']
2024-06-06 03:46:38,263 - DEBUG - dispatch pc=436, inst=STORE_FAST(arg=9, lineno=1230)
2024-06-06 03:46:38,263 - DEBUG - stack ['$428call.24']
2024-06-06 03:46:38,263 - DEBUG - dispatch pc=438, inst=LOAD_FAST(arg=0, lineno=1233)
2024-06-06 03:46:38,263 - DEBUG - stack []
2024-06-06 03:46:38,263 - DEBUG - dispatch pc=440, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-06 03:46:38,263 - DEBUG - stack ['$x438.25']
2024-06-06 03:46:38,263 - DEBUG - dispatch pc=442, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-06-06 03:46:38,264 - DEBUG - stack ['$x438.25', '$n440.26']
2024-06-06 03:46:38,264 - DEBUG - dispatch pc=446, inst=LOAD_FAST(arg=9, lineno=1233)
2024-06-06 03:46:38,264 - DEBUG - stack ['$442binary_subscr.27']
2024-06-06 03:46:38,264 - DEBUG - dispatch pc=448, inst=COMPARE_OP(arg=40, lineno=1233)
2024-06-06 03:46:38,264 - DEBUG - stack ['$442binary_subscr.27', '$maxn446.28']
2024-06-06 03:46:38,264 - DEBUG - dispatch pc=452, inst=LOAD_FAST(arg=7, lineno=1233)
2024-06-06 03:46:38,264 - DEBUG - stack ['$448compare_op.29']
2024-06-06 03:46:38,264 - DEBUG - dispatch pc=454, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-06 03:46:38,264 - DEBUG - stack ['$448compare_op.29', '$peaks452.30']
2024-06-06 03:46:38,264 - DEBUG - dispatch pc=456, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-06-06 03:46:38,264 - DEBUG - stack ['$448compare_op.29', '$peaks452.30', '$n454.31']
2024-06-06 03:46:38,264 - DEBUG - dispatch pc=460, inst=LOAD_FAST(arg=7, lineno=1235)
2024-06-06 03:46:38,264 - DEBUG - stack []
2024-06-06 03:46:38,265 - DEBUG - dispatch pc=462, inst=LOAD_FAST(arg=8, lineno=1235)
2024-06-06 03:46:38,265 - DEBUG - stack ['$peaks460.32']
2024-06-06 03:46:38,265 - DEBUG - dispatch pc=464, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-06-06 03:46:38,265 - DEBUG - stack ['$peaks460.32', '$n462.33']
2024-06-06 03:46:38,265 - DEBUG - dispatch pc=468, inst=POP_JUMP_IF_TRUE(arg=6, lineno=1235)
2024-06-06 03:46:38,265 - DEBUG - stack ['$464binary_subscr.34']
2024-06-06 03:46:38,265 - DEBUG - end state. edges=[Edge(pc=470, stack=(), blockstack=(), npush=0), Edge(pc=482, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,265 - DEBUG - pending: deque([State(pc_initial=730 nstack_initial=0), State(pc_initial=470 nstack_initial=0), State(pc_initial=482 nstack_initial=0)])
2024-06-06 03:46:38,265 - DEBUG - stack: []
2024-06-06 03:46:38,265 - DEBUG - state.pc_initial: State(pc_initial=730 nstack_initial=0)
2024-06-06 03:46:38,265 - DEBUG - dispatch pc=730, inst=RETURN_CONST(arg=2, lineno=1229)
2024-06-06 03:46:38,265 - DEBUG - stack []
2024-06-06 03:46:38,265 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,265 - DEBUG - pending: deque([State(pc_initial=470 nstack_initial=0), State(pc_initial=482 nstack_initial=0)])
2024-06-06 03:46:38,266 - DEBUG - stack: []
2024-06-06 03:46:38,266 - DEBUG - state.pc_initial: State(pc_initial=470 nstack_initial=0)
2024-06-06 03:46:38,266 - DEBUG - dispatch pc=470, inst=LOAD_FAST(arg=8, lineno=1236)
2024-06-06 03:46:38,266 - DEBUG - stack []
2024-06-06 03:46:38,266 - DEBUG - dispatch pc=472, inst=LOAD_CONST(arg=3, lineno=1236)
2024-06-06 03:46:38,266 - DEBUG - stack ['$n470.0']
2024-06-06 03:46:38,266 - DEBUG - dispatch pc=474, inst=BINARY_OP(arg=13, lineno=1236)
2024-06-06 03:46:38,266 - DEBUG - stack ['$n470.0', '$const472.1']
2024-06-06 03:46:38,266 - DEBUG - dispatch pc=478, inst=STORE_FAST(arg=8, lineno=1236)
2024-06-06 03:46:38,266 - DEBUG - stack ['$binop_iadd474.2']
2024-06-06 03:46:38,266 - DEBUG - dispatch pc=480, inst=JUMP_BACKWARD(arg=103, lineno=1237)
2024-06-06 03:46:38,266 - DEBUG - stack []
2024-06-06 03:46:38,266 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,267 - DEBUG - pending: deque([State(pc_initial=482 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:38,267 - DEBUG - stack: []
2024-06-06 03:46:38,267 - DEBUG - state.pc_initial: State(pc_initial=482 nstack_initial=0)
2024-06-06 03:46:38,267 - DEBUG - dispatch pc=482, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-06-06 03:46:38,267 - DEBUG - stack []
2024-06-06 03:46:38,267 - DEBUG - dispatch pc=492, inst=LOAD_ATTR(arg=8, lineno=1239)
2024-06-06 03:46:38,267 - DEBUG - stack ['$null$482.1', '$482load_global.0']
2024-06-06 03:46:38,267 - DEBUG - dispatch pc=512, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-06 03:46:38,267 - DEBUG - stack ['$null$482.1', '$492load_attr.2']
2024-06-06 03:46:38,267 - DEBUG - dispatch pc=514, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-06-06 03:46:38,267 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3']
2024-06-06 03:46:38,267 - DEBUG - dispatch pc=524, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-06 03:46:38,268 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4']
2024-06-06 03:46:38,268 - DEBUG - dispatch pc=526, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-06 03:46:38,268 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6']
2024-06-06 03:46:38,268 - DEBUG - dispatch pc=528, inst=LOAD_FAST(arg=3, lineno=1239)
2024-06-06 03:46:38,268 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6', '$n526.7']
2024-06-06 03:46:38,268 - DEBUG - dispatch pc=530, inst=BINARY_OP(arg=10, lineno=1239)
2024-06-06 03:46:38,268 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6', '$n526.7', '$pre_avg528.8']
2024-06-06 03:46:38,268 - DEBUG - dispatch pc=534, inst=CALL(arg=2, lineno=1239)
2024-06-06 03:46:38,268 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6', '$binop_sub530.9']
2024-06-06 03:46:38,268 - DEBUG - dispatch pc=542, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-06-06 03:46:38,268 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10']
2024-06-06 03:46:38,268 - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-06 03:46:38,268 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11']
2024-06-06 03:46:38,269 - DEBUG - dispatch pc=554, inst=LOAD_FAST(arg=4, lineno=1239)
2024-06-06 03:46:38,269 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$n552.13']
2024-06-06 03:46:38,269 - DEBUG - dispatch pc=556, inst=BINARY_OP(arg=0, lineno=1239)
2024-06-06 03:46:38,269 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$n552.13', '$post_avg554.14']
2024-06-06 03:46:38,269 - DEBUG - dispatch pc=560, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-06 03:46:38,269 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15']
2024-06-06 03:46:38,269 - DEBUG - dispatch pc=562, inst=LOAD_ATTR(arg=6, lineno=1239)
2024-06-06 03:46:38,269 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$x560.16']
2024-06-06 03:46:38,269 - DEBUG - dispatch pc=582, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-06 03:46:38,269 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$562load_attr.17']
2024-06-06 03:46:38,269 - DEBUG - dispatch pc=584, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-06-06 03:46:38,269 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$562load_attr.17', '$const582.18']
2024-06-06 03:46:38,269 - DEBUG - dispatch pc=588, inst=CALL(arg=2, lineno=1239)
2024-06-06 03:46:38,270 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$584binary_subscr.19']
2024-06-06 03:46:38,270 - DEBUG - dispatch pc=596, inst=BINARY_SLICE(arg=None, lineno=1239)
2024-06-06 03:46:38,270 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$588call.20']
2024-06-06 03:46:38,270 - DEBUG - dispatch pc=598, inst=CALL(arg=1, lineno=1239)
2024-06-06 03:46:38,270 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$596binary_slice.22']
2024-06-06 03:46:38,270 - DEBUG - dispatch pc=606, inst=STORE_FAST(arg=10, lineno=1239)
2024-06-06 03:46:38,270 - DEBUG - stack ['$598call.24']
2024-06-06 03:46:38,270 - DEBUG - dispatch pc=608, inst=LOAD_FAST(arg=7, lineno=1240)
2024-06-06 03:46:38,270 - DEBUG - stack []
2024-06-06 03:46:38,270 - DEBUG - dispatch pc=610, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-06 03:46:38,270 - DEBUG - stack ['$peaks608.25']
2024-06-06 03:46:38,270 - DEBUG - dispatch pc=612, inst=COPY(arg=2, lineno=1240)
2024-06-06 03:46:38,271 - DEBUG - stack ['$peaks608.25', '$n610.26']
2024-06-06 03:46:38,271 - DEBUG - dispatch pc=614, inst=COPY(arg=2, lineno=1240)
2024-06-06 03:46:38,271 - DEBUG - stack ['$peaks608.25', '$n610.26', '$peaks608.25']
2024-06-06 03:46:38,271 - DEBUG - dispatch pc=616, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-06 03:46:38,271 - DEBUG - stack ['$peaks608.25', '$n610.26', '$peaks608.25', '$n610.26']
2024-06-06 03:46:38,271 - DEBUG - dispatch pc=620, inst=LOAD_FAST(arg=0, lineno=1240)
2024-06-06 03:46:38,271 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27']
2024-06-06 03:46:38,271 - DEBUG - dispatch pc=622, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-06 03:46:38,271 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$x620.28']
2024-06-06 03:46:38,271 - DEBUG - dispatch pc=624, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-06 03:46:38,271 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$x620.28', '$n622.29']
2024-06-06 03:46:38,271 - DEBUG - dispatch pc=628, inst=LOAD_FAST(arg=10, lineno=1240)
2024-06-06 03:46:38,271 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30']
2024-06-06 03:46:38,271 - DEBUG - dispatch pc=630, inst=LOAD_FAST(arg=5, lineno=1240)
2024-06-06 03:46:38,272 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30', '$avgn628.31']
2024-06-06 03:46:38,272 - DEBUG - dispatch pc=632, inst=BINARY_OP(arg=0, lineno=1240)
2024-06-06 03:46:38,274 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30', '$avgn628.31', '$delta630.32']
2024-06-06 03:46:38,274 - DEBUG - dispatch pc=636, inst=COMPARE_OP(arg=92, lineno=1240)
2024-06-06 03:46:38,274 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30', '$binop_add632.33']
2024-06-06 03:46:38,274 - DEBUG - dispatch pc=640, inst=BINARY_OP(arg=14, lineno=1240)
2024-06-06 03:46:38,274 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$636compare_op.34']
2024-06-06 03:46:38,274 - DEBUG - dispatch pc=644, inst=SWAP(arg=3, lineno=1240)
2024-06-06 03:46:38,274 - DEBUG - stack ['$peaks608.25', '$n610.26', '$binop_iand640.35']
2024-06-06 03:46:38,274 - DEBUG - dispatch pc=646, inst=SWAP(arg=2, lineno=1240)
2024-06-06 03:46:38,274 - DEBUG - stack ['$binop_iand640.35', '$n610.26', '$peaks608.25']
2024-06-06 03:46:38,274 - DEBUG - dispatch pc=648, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-06-06 03:46:38,274 - DEBUG - stack ['$binop_iand640.35', '$peaks608.25', '$n610.26']
2024-06-06 03:46:38,274 - DEBUG - dispatch pc=652, inst=LOAD_FAST(arg=7, lineno=1242)
2024-06-06 03:46:38,275 - DEBUG - stack []
2024-06-06 03:46:38,275 - DEBUG - dispatch pc=654, inst=LOAD_FAST(arg=8, lineno=1242)
2024-06-06 03:46:38,275 - DEBUG - stack ['$peaks652.36']
2024-06-06 03:46:38,275 - DEBUG - dispatch pc=656, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-06-06 03:46:38,275 - DEBUG - stack ['$peaks652.36', '$n654.37']
2024-06-06 03:46:38,275 - DEBUG - dispatch pc=660, inst=POP_JUMP_IF_TRUE(arg=6, lineno=1242)
2024-06-06 03:46:38,275 - DEBUG - stack ['$656binary_subscr.38']
2024-06-06 03:46:38,275 - DEBUG - end state. edges=[Edge(pc=662, stack=(), blockstack=(), npush=0), Edge(pc=674, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,275 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=662 nstack_initial=0), State(pc_initial=674 nstack_initial=0)])
2024-06-06 03:46:38,275 - DEBUG - pending: deque([State(pc_initial=662 nstack_initial=0), State(pc_initial=674 nstack_initial=0)])
2024-06-06 03:46:38,275 - DEBUG - stack: []
2024-06-06 03:46:38,275 - DEBUG - state.pc_initial: State(pc_initial=662 nstack_initial=0)
2024-06-06 03:46:38,275 - DEBUG - dispatch pc=662, inst=LOAD_FAST(arg=8, lineno=1243)
2024-06-06 03:46:38,275 - DEBUG - stack []
2024-06-06 03:46:38,276 - DEBUG - dispatch pc=664, inst=LOAD_CONST(arg=3, lineno=1243)
2024-06-06 03:46:38,276 - DEBUG - stack ['$n662.0']
2024-06-06 03:46:38,276 - DEBUG - dispatch pc=666, inst=BINARY_OP(arg=13, lineno=1243)
2024-06-06 03:46:38,276 - DEBUG - stack ['$n662.0', '$const664.1']
2024-06-06 03:46:38,276 - DEBUG - dispatch pc=670, inst=STORE_FAST(arg=8, lineno=1243)
2024-06-06 03:46:38,276 - DEBUG - stack ['$binop_iadd666.2']
2024-06-06 03:46:38,276 - DEBUG - dispatch pc=672, inst=JUMP_BACKWARD(arg=199, lineno=1244)
2024-06-06 03:46:38,276 - DEBUG - stack []
2024-06-06 03:46:38,276 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,276 - DEBUG - pending: deque([State(pc_initial=674 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:38,276 - DEBUG - stack: []
2024-06-06 03:46:38,276 - DEBUG - state.pc_initial: State(pc_initial=674 nstack_initial=0)
2024-06-06 03:46:38,276 - DEBUG - dispatch pc=674, inst=LOAD_FAST(arg=8, lineno=1247)
2024-06-06 03:46:38,277 - DEBUG - stack []
2024-06-06 03:46:38,277 - DEBUG - dispatch pc=676, inst=LOAD_FAST(arg=6, lineno=1247)
2024-06-06 03:46:38,277 - DEBUG - stack ['$n674.0']
2024-06-06 03:46:38,277 - DEBUG - dispatch pc=678, inst=LOAD_CONST(arg=3, lineno=1247)
2024-06-06 03:46:38,277 - DEBUG - stack ['$n674.0', '$wait676.1']
2024-06-06 03:46:38,277 - DEBUG - dispatch pc=680, inst=BINARY_OP(arg=0, lineno=1247)
2024-06-06 03:46:38,277 - DEBUG - stack ['$n674.0', '$wait676.1', '$const678.2']
2024-06-06 03:46:38,277 - DEBUG - dispatch pc=684, inst=BINARY_OP(arg=13, lineno=1247)
2024-06-06 03:46:38,277 - DEBUG - stack ['$n674.0', '$binop_add680.3']
2024-06-06 03:46:38,277 - DEBUG - dispatch pc=688, inst=STORE_FAST(arg=8, lineno=1247)
2024-06-06 03:46:38,277 - DEBUG - stack ['$binop_iadd684.4']
2024-06-06 03:46:38,277 - DEBUG - dispatch pc=690, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-06 03:46:38,277 - DEBUG - stack []
2024-06-06 03:46:38,277 - DEBUG - dispatch pc=692, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-06 03:46:38,278 - DEBUG - stack ['$n690.5']
2024-06-06 03:46:38,278 - DEBUG - dispatch pc=694, inst=LOAD_ATTR(arg=6, lineno=1229)
2024-06-06 03:46:38,278 - DEBUG - stack ['$n690.5', '$x692.6']
2024-06-06 03:46:38,278 - DEBUG - dispatch pc=714, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-06 03:46:38,278 - DEBUG - stack ['$n690.5', '$694load_attr.7']
2024-06-06 03:46:38,278 - DEBUG - dispatch pc=716, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-06 03:46:38,278 - DEBUG - stack ['$n690.5', '$694load_attr.7', '$const714.8']
2024-06-06 03:46:38,278 - DEBUG - dispatch pc=720, inst=COMPARE_OP(arg=2, lineno=1229)
2024-06-06 03:46:38,278 - DEBUG - stack ['$n690.5', '$716binary_subscr.9']
2024-06-06 03:46:38,278 - DEBUG - dispatch pc=724, inst=POP_JUMP_IF_FALSE(arg=1, lineno=1229)
2024-06-06 03:46:38,278 - DEBUG - stack ['$720compare_op.10']
2024-06-06 03:46:38,278 - DEBUG - end state. edges=[Edge(pc=726, stack=(), blockstack=(), npush=0), Edge(pc=728, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,278 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=726 nstack_initial=0), State(pc_initial=728 nstack_initial=0)])
2024-06-06 03:46:38,279 - DEBUG - pending: deque([State(pc_initial=726 nstack_initial=0), State(pc_initial=728 nstack_initial=0)])
2024-06-06 03:46:38,279 - DEBUG - stack: []
2024-06-06 03:46:38,279 - DEBUG - state.pc_initial: State(pc_initial=726 nstack_initial=0)
2024-06-06 03:46:38,279 - DEBUG - dispatch pc=726, inst=JUMP_BACKWARD(arg=208, lineno=1229)
2024-06-06 03:46:38,279 - DEBUG - stack []
2024-06-06 03:46:38,279 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,279 - DEBUG - pending: deque([State(pc_initial=728 nstack_initial=0), State(pc_initial=312 nstack_initial=0)])
2024-06-06 03:46:38,279 - DEBUG - stack: []
2024-06-06 03:46:38,279 - DEBUG - state.pc_initial: State(pc_initial=728 nstack_initial=0)
2024-06-06 03:46:38,279 - DEBUG - dispatch pc=728, inst=RETURN_CONST(arg=2, lineno=1229)
2024-06-06 03:46:38,279 - DEBUG - stack []
2024-06-06 03:46:38,279 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,279 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0)])
2024-06-06 03:46:38,280 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:38,280 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=260 nstack_initial=0): set(),
             State(pc_initial=272 nstack_initial=0): set(),
             State(pc_initial=276 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=470 nstack_initial=0): set(),
             State(pc_initial=482 nstack_initial=0): set(),
             State(pc_initial=662 nstack_initial=0): set(),
             State(pc_initial=674 nstack_initial=0): set(),
             State(pc_initial=726 nstack_initial=0): set(),
             State(pc_initial=728 nstack_initial=0): set(),
             State(pc_initial=730 nstack_initial=0): set()})
2024-06-06 03:46:38,280 - DEBUG - defmap: {}
2024-06-06 03:46:38,280 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:38,280 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:38,280 - DEBUG - keep phismap: {}
2024-06-06 03:46:38,280 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:38,281 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:38,281 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'idx': 0, 'res': '$12load_global.3'}), (22, {'item': '$12load_global.3', 'res': '$22load_attr.5'}), (42, {'res': '$x42.6'}), (44, {'res': '$const44.7'}), (46, {'idx': 2, 'res': '$46load_global.8'}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (80, {'res': '$const80.13'}), (82, {'index': '$const80.13', 'target': '$60load_attr.12', 'res': '$82binary_subscr.14'}), (86, {'func': '$46load_global.8', 'args': ['$post_max56.10', '$82binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (94, {'start': '$const44.7', 'end': '$86call.15', 'container': '$x42.6', 'res': '$94binary_slice.17', 'slicevar': '$94binary_slice.18', 'temp_res': '$94binary_slice.16'}), (96, {'func': '$22load_attr.5', 'args': ['$94binary_slice.17'], 'kw_names': None, 'res': '$96call.19'}), (104, {'lhs': '$8binary_subscr.2', 'rhs': '$96call.19', 'res': '$104compare_op.20'}), (108, {'res': '$peaks108.21'}), (110, {'res': '$const110.22'}), (112, {'target': '$peaks108.21', 'index': '$const110.22', 'value': '$104compare_op.20'}), (116, {'res': '$peaks116.23'}), (118, {'res': '$const118.24'}), (124, {'index': '$const118.24', 'target': '$peaks116.23', 'res': '$124binary_subscr.25'}), (128, {'res': '$x128.26'}), (130, {'res': '$const130.27'}), (132, {'index': '$const130.27', 'target': '$x128.26', 'res': '$132binary_subscr.28'}), (136, {'idx': 0, 'res': '$136load_global.29'}), (146, {'item': '$136load_global.29', 'res': '$146load_attr.31'}), (166, {'res': '$x166.32'}), (168, {'res': '$const168.33'}), (170, {'idx': 2, 'res': '$170load_global.34'}), (180, {'res': '$post_avg180.36'}), (182, {'res': '$x182.37'}), (184, {'item': '$x182.37', 'res': '$184load_attr.38'}), (204, {'res': '$const204.39'}), (206, {'index': '$const204.39', 'target': '$184load_attr.38', 'res': '$206binary_subscr.40'}), (210, {'func': '$170load_global.34', 'args': ['$post_avg180.36', '$206binary_subscr.40'], 'kw_names': None, 'res': '$210call.41'}), (218, {'start': '$const168.33', 'end': '$210call.41', 'container': '$x166.32', 'res': '$218binary_slice.43', 'slicevar': '$218binary_slice.44', 'temp_res': '$218binary_slice.42'}), (220, {'func': '$146load_attr.31', 'args': ['$218binary_slice.43'], 'kw_names': None, 'res': '$220call.45'}), (228, {'res': '$delta228.46'}), (230, {'op': '+', 'lhs': '$220call.45', 'rhs': '$delta228.46', 'res': '$binop_add230.47'}), (234, {'lhs': '$132binary_subscr.28', 'rhs': '$binop_add230.47', 'res': '$234compare_op.48'}), (238, {'op': '&=', 'lhs': '$124binary_subscr.25', 'rhs': '$234compare_op.48', 'res': '$binop_iand238.49'}), (246, {'target': '$peaks116.23', 'index': '$const118.24', 'value': '$binop_iand238.49'}), (250, {'res': '$peaks250.50'}), (252, {'res': '$const252.51'}), (254, {'index': '$const252.51', 'target': '$peaks250.50', 'res': '$254binary_subscr.52'}), (258, {'pred': '$254binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={260: (), 272: ()})
2024-06-06 03:46:38,281 - DEBUG - block_infos State(pc_initial=260 nstack_initial=0):
AdaptBlockInfo(insts=((260, {'res': '$wait260.0'}), (262, {'res': '$const262.1'}), (264, {'op': '+', 'lhs': '$wait260.0', 'rhs': '$const262.1', 'res': '$binop_add264.2'}), (268, {'value': '$binop_add264.2'}), (270, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:38,281 - DEBUG - block_infos State(pc_initial=272 nstack_initial=0):
AdaptBlockInfo(insts=((272, {'res': '$const272.0'}), (274, {'value': '$const272.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:38,281 - DEBUG - block_infos State(pc_initial=276 nstack_initial=0):
AdaptBlockInfo(insts=((276, {'res': '$n276.0'}), (278, {'res': '$x278.1'}), (280, {'item': '$x278.1', 'res': '$280load_attr.2'}), (300, {'res': '$const300.3'}), (302, {'index': '$const300.3', 'target': '$280load_attr.2', 'res': '$302binary_subscr.4'}), (306, {'lhs': '$n276.0', 'rhs': '$302binary_subscr.4', 'res': '$306compare_op.5'}), (310, {'pred': '$306compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 730: ()})
2024-06-06 03:46:38,281 - DEBUG - block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'idx': 0, 'res': '$312load_global.0'}), (322, {'item': '$312load_global.0', 'res': '$322load_attr.2'}), (342, {'res': '$x342.3'}), (344, {'idx': 1, 'res': '$344load_global.4'}), (354, {'res': '$const354.6'}), (356, {'res': '$n356.7'}), (358, {'res': '$pre_max358.8'}), (360, {'op': '-', 'lhs': '$n356.7', 'rhs': '$pre_max358.8', 'res': '$binop_sub360.9'}), (364, {'func': '$344load_global.4', 'args': ['$const354.6', '$binop_sub360.9'], 'kw_names': None, 'res': '$364call.10'}), (372, {'idx': 2, 'res': '$372load_global.11'}), (382, {'res': '$n382.13'}), (384, {'res': '$post_max384.14'}), (386, {'op': '+', 'lhs': '$n382.13', 'rhs': '$post_max384.14', 'res': '$binop_add386.15'}), (390, {'res': '$x390.16'}), (392, {'item': '$x390.16', 'res': '$392load_attr.17'}), (412, {'res': '$const412.18'}), (414, {'index': '$const412.18', 'target': '$392load_attr.17', 'res': '$414binary_subscr.19'}), (418, {'func': '$372load_global.11', 'args': ['$binop_add386.15', '$414binary_subscr.19'], 'kw_names': None, 'res': '$418call.20'}), (426, {'start': '$364call.10', 'end': '$418call.20', 'container': '$x342.3', 'res': '$426binary_slice.22', 'slicevar': '$426binary_slice.23', 'temp_res': '$426binary_slice.21'}), (428, {'func': '$322load_attr.2', 'args': ['$426binary_slice.22'], 'kw_names': None, 'res': '$428call.24'}), (436, {'value': '$428call.24'}), (438, {'res': '$x438.25'}), (440, {'res': '$n440.26'}), (442, {'index': '$n440.26', 'target': '$x438.25', 'res': '$442binary_subscr.27'}), (446, {'res': '$maxn446.28'}), (448, {'lhs': '$442binary_subscr.27', 'rhs': '$maxn446.28', 'res': '$448compare_op.29'}), (452, {'res': '$peaks452.30'}), (454, {'res': '$n454.31'}), (456, {'target': '$peaks452.30', 'index': '$n454.31', 'value': '$448compare_op.29'}), (460, {'res': '$peaks460.32'}), (462, {'res': '$n462.33'}), (464, {'index': '$n462.33', 'target': '$peaks460.32', 'res': '$464binary_subscr.34'}), (468, {'pred': '$464binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={470: (), 482: ()})
2024-06-06 03:46:38,281 - DEBUG - block_infos State(pc_initial=470 nstack_initial=0):
AdaptBlockInfo(insts=((470, {'res': '$n470.0'}), (472, {'res': '$const472.1'}), (474, {'op': '+=', 'lhs': '$n470.0', 'rhs': '$const472.1', 'res': '$binop_iadd474.2'}), (478, {'value': '$binop_iadd474.2'}), (480, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:38,281 - DEBUG - block_infos State(pc_initial=482 nstack_initial=0):
AdaptBlockInfo(insts=((482, {'idx': 0, 'res': '$482load_global.0'}), (492, {'item': '$482load_global.0', 'res': '$492load_attr.2'}), (512, {'res': '$x512.3'}), (514, {'idx': 1, 'res': '$514load_global.4'}), (524, {'res': '$const524.6'}), (526, {'res': '$n526.7'}), (528, {'res': '$pre_avg528.8'}), (530, {'op': '-', 'lhs': '$n526.7', 'rhs': '$pre_avg528.8', 'res': '$binop_sub530.9'}), (534, {'func': '$514load_global.4', 'args': ['$const524.6', '$binop_sub530.9'], 'kw_names': None, 'res': '$534call.10'}), (542, {'idx': 2, 'res': '$542load_global.11'}), (552, {'res': '$n552.13'}), (554, {'res': '$post_avg554.14'}), (556, {'op': '+', 'lhs': '$n552.13', 'rhs': '$post_avg554.14', 'res': '$binop_add556.15'}), (560, {'res': '$x560.16'}), (562, {'item': '$x560.16', 'res': '$562load_attr.17'}), (582, {'res': '$const582.18'}), (584, {'index': '$const582.18', 'target': '$562load_attr.17', 'res': '$584binary_subscr.19'}), (588, {'func': '$542load_global.11', 'args': ['$binop_add556.15', '$584binary_subscr.19'], 'kw_names': None, 'res': '$588call.20'}), (596, {'start': '$534call.10', 'end': '$588call.20', 'container': '$x512.3', 'res': '$596binary_slice.22', 'slicevar': '$596binary_slice.23', 'temp_res': '$596binary_slice.21'}), (598, {'func': '$492load_attr.2', 'args': ['$596binary_slice.22'], 'kw_names': None, 'res': '$598call.24'}), (606, {'value': '$598call.24'}), (608, {'res': '$peaks608.25'}), (610, {'res': '$n610.26'}), (616, {'index': '$n610.26', 'target': '$peaks608.25', 'res': '$616binary_subscr.27'}), (620, {'res': '$x620.28'}), (622, {'res': '$n622.29'}), (624, {'index': '$n622.29', 'target': '$x620.28', 'res': '$624binary_subscr.30'}), (628, {'res': '$avgn628.31'}), (630, {'res': '$delta630.32'}), (632, {'op': '+', 'lhs': '$avgn628.31', 'rhs': '$delta630.32', 'res': '$binop_add632.33'}), (636, {'lhs': '$624binary_subscr.30', 'rhs': '$binop_add632.33', 'res': '$636compare_op.34'}), (640, {'op': '&=', 'lhs': '$616binary_subscr.27', 'rhs': '$636compare_op.34', 'res': '$binop_iand640.35'}), (648, {'target': '$peaks608.25', 'index': '$n610.26', 'value': '$binop_iand640.35'}), (652, {'res': '$peaks652.36'}), (654, {'res': '$n654.37'}), (656, {'index': '$n654.37', 'target': '$peaks652.36', 'res': '$656binary_subscr.38'}), (660, {'pred': '$656binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={662: (), 674: ()})
2024-06-06 03:46:38,282 - DEBUG - block_infos State(pc_initial=662 nstack_initial=0):
AdaptBlockInfo(insts=((662, {'res': '$n662.0'}), (664, {'res': '$const664.1'}), (666, {'op': '+=', 'lhs': '$n662.0', 'rhs': '$const664.1', 'res': '$binop_iadd666.2'}), (670, {'value': '$binop_iadd666.2'}), (672, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:38,282 - DEBUG - block_infos State(pc_initial=674 nstack_initial=0):
AdaptBlockInfo(insts=((674, {'res': '$n674.0'}), (676, {'res': '$wait676.1'}), (678, {'res': '$const678.2'}), (680, {'op': '+', 'lhs': '$wait676.1', 'rhs': '$const678.2', 'res': '$binop_add680.3'}), (684, {'op': '+=', 'lhs': '$n674.0', 'rhs': '$binop_add680.3', 'res': '$binop_iadd684.4'}), (688, {'value': '$binop_iadd684.4'}), (690, {'res': '$n690.5'}), (692, {'res': '$x692.6'}), (694, {'item': '$x692.6', 'res': '$694load_attr.7'}), (714, {'res': '$const714.8'}), (716, {'index': '$const714.8', 'target': '$694load_attr.7', 'res': '$716binary_subscr.9'}), (720, {'lhs': '$n690.5', 'rhs': '$716binary_subscr.9', 'res': '$720compare_op.10'}), (724, {'pred': '$720compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={726: (), 728: ()})
2024-06-06 03:46:38,282 - DEBUG - block_infos State(pc_initial=726 nstack_initial=0):
AdaptBlockInfo(insts=((726, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: ()})
2024-06-06 03:46:38,282 - DEBUG - block_infos State(pc_initial=728 nstack_initial=0):
AdaptBlockInfo(insts=((728, {'retval': '$const728.0', 'castval': '$728return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,282 - DEBUG - block_infos State(pc_initial=730 nstack_initial=0):
AdaptBlockInfo(insts=((730, {'retval': '$const730.0', 'castval': '$730return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,286 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$12load_global.3']
    $22load_attr.5 = getattr(value=$12load_global.3, attr=max) ['$12load_global.3', '$22load_attr.5']
    $const44.7 = const(NoneType, None)       ['$const44.7']
    $46load_global.8 = global(min: <built-in function min>) ['$46load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const80.13 = const(int, 0)              ['$const80.13']
    $82binary_subscr.14 = getitem(value=$60load_attr.12, index=$const80.13, fn=<built-in function getitem>) ['$60load_attr.12', '$82binary_subscr.14', '$const80.13']
    $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.8', '$82binary_subscr.14', '$86call.15', 'post_max']
    $94binary_slice.18 = global(slice: <class 'slice'>) ['$94binary_slice.18']
    $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$94binary_slice.16', '$94binary_slice.18', '$const44.7']
    $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>) ['$94binary_slice.16', '$94binary_slice.17', 'x']
    $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.5', '$94binary_slice.17', '$96call.19']
    $104compare_op.20 = $8binary_subscr.2 >= $96call.19 ['$104compare_op.20', '$8binary_subscr.2', '$96call.19']
    $const110.22 = const(int, 0)             ['$const110.22']
    peaks[$const110.22] = $104compare_op.20  ['$104compare_op.20', '$const110.22', 'peaks']
    $const118.24 = const(int, 0)             ['$const118.24']
    $124binary_subscr.25 = getitem(value=peaks, index=$const118.24, fn=<built-in function getitem>) ['$124binary_subscr.25', '$const118.24', 'peaks']
    $const130.27 = const(int, 0)             ['$const130.27']
    $132binary_subscr.28 = getitem(value=x, index=$const130.27, fn=<built-in function getitem>) ['$132binary_subscr.28', '$const130.27', 'x']
    $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$136load_global.29']
    $146load_attr.31 = getattr(value=$136load_global.29, attr=mean) ['$136load_global.29', '$146load_attr.31']
    $const168.33 = const(NoneType, None)     ['$const168.33']
    $170load_global.34 = global(min: <built-in function min>) ['$170load_global.34']
    $184load_attr.38 = getattr(value=x, attr=shape) ['$184load_attr.38', 'x']
    $const204.39 = const(int, 0)             ['$const204.39']
    $206binary_subscr.40 = getitem(value=$184load_attr.38, index=$const204.39, fn=<built-in function getitem>) ['$184load_attr.38', '$206binary_subscr.40', '$const204.39']
    $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$170load_global.34', '$206binary_subscr.40', '$210call.41', 'post_avg']
    $218binary_slice.44 = global(slice: <class 'slice'>) ['$218binary_slice.44']
    $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$210call.41', '$218binary_slice.42', '$218binary_slice.44', '$const168.33']
    $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>) ['$218binary_slice.42', '$218binary_slice.43', 'x']
    $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_attr.31', '$218binary_slice.43', '$220call.45']
    $binop_add230.47 = $220call.45 + delta   ['$220call.45', '$binop_add230.47', 'delta']
    $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47 ['$132binary_subscr.28', '$234compare_op.48', '$binop_add230.47']
    $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$124binary_subscr.25', '$234compare_op.48', '$binop_iand238.49']
    peaks[$const118.24] = $binop_iand238.49  ['$binop_iand238.49', '$const118.24', 'peaks']
    $const252.51 = const(int, 0)             ['$const252.51']
    $254binary_subscr.52 = getitem(value=peaks, index=$const252.51, fn=<built-in function getitem>) ['$254binary_subscr.52', '$const252.51', 'peaks']
    bool258 = global(bool: <class 'bool'>)   ['bool258']
    $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$254binary_subscr.52', '$258pred', 'bool258']
    branch $258pred, 260, 272                ['$258pred']
label 260:
    $const262.1 = const(int, 1)              ['$const262.1']
    n = wait + $const262.1                   ['$const262.1', 'n', 'wait']
    jump 276                                 []
label 272:
    n = const(int, 1)                        ['n']
    jump 276                                 []
label 276:
    $280load_attr.2 = getattr(value=x, attr=shape) ['$280load_attr.2', 'x']
    $const300.3 = const(int, 0)              ['$const300.3']
    $302binary_subscr.4 = getitem(value=$280load_attr.2, index=$const300.3, fn=<built-in function getitem>) ['$280load_attr.2', '$302binary_subscr.4', '$const300.3']
    $306compare_op.5 = n < $302binary_subscr.4 ['$302binary_subscr.4', '$306compare_op.5', 'n']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$306compare_op.5', '$310pred', 'bool310']
    branch $310pred, 312, 730                ['$310pred']
label 312:
    $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$312load_global.0']
    $322load_attr.2 = getattr(value=$312load_global.0, attr=max) ['$312load_global.0', '$322load_attr.2']
    $344load_global.4 = global(max: <built-in function max>) ['$344load_global.4']
    $const354.6 = const(int, 0)              ['$const354.6']
    $binop_sub360.9 = n - pre_max            ['$binop_sub360.9', 'n', 'pre_max']
    $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.4', '$364call.10', '$binop_sub360.9', '$const354.6']
    $372load_global.11 = global(min: <built-in function min>) ['$372load_global.11']
    $binop_add386.15 = n + post_max          ['$binop_add386.15', 'n', 'post_max']
    $392load_attr.17 = getattr(value=x, attr=shape) ['$392load_attr.17', 'x']
    $const412.18 = const(int, 0)             ['$const412.18']
    $414binary_subscr.19 = getitem(value=$392load_attr.17, index=$const412.18, fn=<built-in function getitem>) ['$392load_attr.17', '$414binary_subscr.19', '$const412.18']
    $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$372load_global.11', '$414binary_subscr.19', '$418call.20', '$binop_add386.15']
    $426binary_slice.23 = global(slice: <class 'slice'>) ['$426binary_slice.23']
    $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$364call.10', '$418call.20', '$426binary_slice.21', '$426binary_slice.23']
    $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>) ['$426binary_slice.21', '$426binary_slice.22', 'x']
    maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$322load_attr.2', '$426binary_slice.22', 'maxn']
    $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$442binary_subscr.27', 'n', 'x']
    $448compare_op.29 = $442binary_subscr.27 == maxn ['$442binary_subscr.27', '$448compare_op.29', 'maxn']
    peaks[n] = $448compare_op.29             ['$448compare_op.29', 'n', 'peaks']
    $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$464binary_subscr.34', 'n', 'peaks']
    bool468 = global(bool: <class 'bool'>)   ['bool468']
    $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$464binary_subscr.34', '$468pred', 'bool468']
    branch $468pred, 482, 470                ['$468pred']
label 470:
    $const472.1 = const(int, 1)              ['$const472.1']
    $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd474.2', '$const472.1', 'n']
    n = $binop_iadd474.2                     ['$binop_iadd474.2', 'n']
    jump 276                                 []
label 482:
    $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$482load_global.0']
    $492load_attr.2 = getattr(value=$482load_global.0, attr=mean) ['$482load_global.0', '$492load_attr.2']
    $514load_global.4 = global(max: <built-in function max>) ['$514load_global.4']
    $const524.6 = const(int, 0)              ['$const524.6']
    $binop_sub530.9 = n - pre_avg            ['$binop_sub530.9', 'n', 'pre_avg']
    $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$514load_global.4', '$534call.10', '$binop_sub530.9', '$const524.6']
    $542load_global.11 = global(min: <built-in function min>) ['$542load_global.11']
    $binop_add556.15 = n + post_avg          ['$binop_add556.15', 'n', 'post_avg']
    $562load_attr.17 = getattr(value=x, attr=shape) ['$562load_attr.17', 'x']
    $const582.18 = const(int, 0)             ['$const582.18']
    $584binary_subscr.19 = getitem(value=$562load_attr.17, index=$const582.18, fn=<built-in function getitem>) ['$562load_attr.17', '$584binary_subscr.19', '$const582.18']
    $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$542load_global.11', '$584binary_subscr.19', '$588call.20', '$binop_add556.15']
    $596binary_slice.23 = global(slice: <class 'slice'>) ['$596binary_slice.23']
    $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$534call.10', '$588call.20', '$596binary_slice.21', '$596binary_slice.23']
    $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>) ['$596binary_slice.21', '$596binary_slice.22', 'x']
    avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$492load_attr.2', '$596binary_slice.22', 'avgn']
    $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$616binary_subscr.27', 'n', 'peaks']
    $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$624binary_subscr.30', 'n', 'x']
    $binop_add632.33 = avgn + delta          ['$binop_add632.33', 'avgn', 'delta']
    $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33 ['$624binary_subscr.30', '$636compare_op.34', '$binop_add632.33']
    $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$616binary_subscr.27', '$636compare_op.34', '$binop_iand640.35']
    peaks[n] = $binop_iand640.35             ['$binop_iand640.35', 'n', 'peaks']
    $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$656binary_subscr.38', 'n', 'peaks']
    bool660 = global(bool: <class 'bool'>)   ['bool660']
    $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$656binary_subscr.38', '$660pred', 'bool660']
    branch $660pred, 674, 662                ['$660pred']
label 662:
    $const664.1 = const(int, 1)              ['$const664.1']
    $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd666.2', '$const664.1', 'n']
    n = $binop_iadd666.2                     ['$binop_iadd666.2', 'n']
    jump 276                                 []
label 674:
    $const678.2 = const(int, 1)              ['$const678.2']
    $binop_add680.3 = wait + $const678.2     ['$binop_add680.3', '$const678.2', 'wait']
    $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add680.3', '$binop_iadd684.4', 'n']
    n = $binop_iadd684.4                     ['$binop_iadd684.4', 'n']
    $694load_attr.7 = getattr(value=x, attr=shape) ['$694load_attr.7', 'x']
    $const714.8 = const(int, 0)              ['$const714.8']
    $716binary_subscr.9 = getitem(value=$694load_attr.7, index=$const714.8, fn=<built-in function getitem>) ['$694load_attr.7', '$716binary_subscr.9', '$const714.8']
    $720compare_op.10 = n < $716binary_subscr.9 ['$716binary_subscr.9', '$720compare_op.10', 'n']
    bool724 = global(bool: <class 'bool'>)   ['bool724']
    $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$720compare_op.10', '$724pred', 'bool724']
    branch $724pred, 726, 728                ['$724pred']
label 726:
    jump 312                                 []
label 728:
    $const728.0 = const(NoneType, None)      ['$const728.0']
    $728return_const.1 = cast(value=$const728.0) ['$728return_const.1', '$const728.0']
    return $728return_const.1                ['$728return_const.1']
label 730:
    $const730.0 = const(NoneType, None)      ['$const730.0']
    $730return_const.1 = cast(value=$const730.0) ['$730return_const.1', '$const730.0']
    return $730return_const.1                ['$730return_const.1']

2024-06-06 03:46:38,304 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:38,305 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21e0350>
2024-06-06 03:46:38,305 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:38,305 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-06 03:46:38,305 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-06 03:46:38,305 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-06 03:46:38,305 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-06 03:46:38,305 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-06 03:46:38,305 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-06 03:46:38,305 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-06 03:46:38,305 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:38,305 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-06 03:46:38,305 - DEBUG - on stmt: $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:38,306 - DEBUG - on stmt: $22load_attr.5 = getattr(value=$12load_global.3, attr=max)
2024-06-06 03:46:38,306 - DEBUG - on stmt: $const44.7 = const(NoneType, None)
2024-06-06 03:46:38,306 - DEBUG - on stmt: $46load_global.8 = global(min: <built-in function min>)
2024-06-06 03:46:38,306 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,306 - DEBUG - on stmt: $const80.13 = const(int, 0)
2024-06-06 03:46:38,306 - DEBUG - on stmt: $82binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const80.13, fn=<built-in function getitem>)
2024-06-06 03:46:38,306 - DEBUG - on stmt: $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,306 - DEBUG - on stmt: $94binary_slice.18 = global(slice: <class 'slice'>)
2024-06-06 03:46:38,306 - DEBUG - on stmt: $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,306 - DEBUG - on stmt: $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>)
2024-06-06 03:46:38,306 - DEBUG - on stmt: $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,307 - DEBUG - on stmt: $104compare_op.20 = $8binary_subscr.2 >= $96call.19
2024-06-06 03:46:38,307 - DEBUG - on stmt: $const110.22 = const(int, 0)
2024-06-06 03:46:38,307 - DEBUG - on stmt: peaks[0] = $104compare_op.20
2024-06-06 03:46:38,307 - DEBUG - on stmt: $const118.24 = const(int, 0)
2024-06-06 03:46:38,307 - DEBUG - on stmt: $124binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const118.24, fn=<built-in function getitem>)
2024-06-06 03:46:38,307 - DEBUG - on stmt: $const130.27 = const(int, 0)
2024-06-06 03:46:38,307 - DEBUG - on stmt: $132binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const130.27, fn=<built-in function getitem>)
2024-06-06 03:46:38,307 - DEBUG - on stmt: $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:38,307 - DEBUG - on stmt: $146load_attr.31 = getattr(value=$136load_global.29, attr=mean)
2024-06-06 03:46:38,307 - DEBUG - on stmt: $const168.33 = const(NoneType, None)
2024-06-06 03:46:38,307 - DEBUG - on stmt: $170load_global.34 = global(min: <built-in function min>)
2024-06-06 03:46:38,307 - DEBUG - on stmt: $184load_attr.38 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,308 - DEBUG - on stmt: $const204.39 = const(int, 0)
2024-06-06 03:46:38,308 - DEBUG - on stmt: $206binary_subscr.40 = static_getitem(value=$184load_attr.38, index=0, index_var=$const204.39, fn=<built-in function getitem>)
2024-06-06 03:46:38,308 - DEBUG - on stmt: $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,308 - DEBUG - on stmt: $218binary_slice.44 = global(slice: <class 'slice'>)
2024-06-06 03:46:38,308 - DEBUG - on stmt: $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,308 - DEBUG - on stmt: $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>)
2024-06-06 03:46:38,308 - DEBUG - on stmt: $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,308 - DEBUG - on stmt: $binop_add230.47 = $220call.45 + delta
2024-06-06 03:46:38,308 - DEBUG - on stmt: $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47
2024-06-06 03:46:38,309 - DEBUG - on stmt: $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,309 - DEBUG - on stmt: peaks[0] = $binop_iand238.49
2024-06-06 03:46:38,309 - DEBUG - on stmt: $const252.51 = const(int, 0)
2024-06-06 03:46:38,309 - DEBUG - on stmt: $254binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const252.51, fn=<built-in function getitem>)
2024-06-06 03:46:38,309 - DEBUG - on stmt: bool258 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,309 - DEBUG - on stmt: $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,309 - DEBUG - on stmt: branch $258pred, 260, 272
2024-06-06 03:46:38,309 - DEBUG - ==== SSA block analysis pass on 260
2024-06-06 03:46:38,309 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21e0350>
2024-06-06 03:46:38,309 - DEBUG - on stmt: $const262.1 = const(int, 1)
2024-06-06 03:46:38,309 - DEBUG - on stmt: n = wait + $const262.1
2024-06-06 03:46:38,309 - DEBUG - on stmt: jump 276
2024-06-06 03:46:38,310 - DEBUG - ==== SSA block analysis pass on 272
2024-06-06 03:46:38,310 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21e0350>
2024-06-06 03:46:38,310 - DEBUG - on stmt: n = const(int, 1)
2024-06-06 03:46:38,310 - DEBUG - on stmt: jump 276
2024-06-06 03:46:38,310 - DEBUG - ==== SSA block analysis pass on 276
2024-06-06 03:46:38,310 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21e0350>
2024-06-06 03:46:38,310 - DEBUG - on stmt: $280load_attr.2 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,310 - DEBUG - on stmt: $const300.3 = const(int, 0)
2024-06-06 03:46:38,310 - DEBUG - on stmt: $302binary_subscr.4 = static_getitem(value=$280load_attr.2, index=0, index_var=$const300.3, fn=<built-in function getitem>)
2024-06-06 03:46:38,310 - DEBUG - on stmt: $306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:38,310 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,310 - DEBUG - on stmt: $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,311 - DEBUG - on stmt: branch $310pred, 312, 730
2024-06-06 03:46:38,311 - DEBUG - ==== SSA block analysis pass on 312
2024-06-06 03:46:38,311 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21e0350>
2024-06-06 03:46:38,311 - DEBUG - on stmt: $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:38,311 - DEBUG - on stmt: $322load_attr.2 = getattr(value=$312load_global.0, attr=max)
2024-06-06 03:46:38,311 - DEBUG - on stmt: $344load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:38,311 - DEBUG - on stmt: $const354.6 = const(int, 0)
2024-06-06 03:46:38,311 - DEBUG - on stmt: $binop_sub360.9 = n - pre_max
2024-06-06 03:46:38,311 - DEBUG - on stmt: $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,311 - DEBUG - on stmt: $372load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:38,311 - DEBUG - on stmt: $binop_add386.15 = n + post_max
2024-06-06 03:46:38,312 - DEBUG - on stmt: $392load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,312 - DEBUG - on stmt: $const412.18 = const(int, 0)
2024-06-06 03:46:38,312 - DEBUG - on stmt: $414binary_subscr.19 = static_getitem(value=$392load_attr.17, index=0, index_var=$const412.18, fn=<built-in function getitem>)
2024-06-06 03:46:38,312 - DEBUG - on stmt: $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,312 - DEBUG - on stmt: $426binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:38,312 - DEBUG - on stmt: $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,312 - DEBUG - on stmt: $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:38,312 - DEBUG - on stmt: maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,312 - DEBUG - on stmt: $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,312 - DEBUG - on stmt: $448compare_op.29 = $442binary_subscr.27 == maxn
2024-06-06 03:46:38,312 - DEBUG - on stmt: peaks[n] = $448compare_op.29
2024-06-06 03:46:38,313 - DEBUG - on stmt: $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,313 - DEBUG - on stmt: bool468 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,313 - DEBUG - on stmt: $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,313 - DEBUG - on stmt: branch $468pred, 482, 470
2024-06-06 03:46:38,313 - DEBUG - ==== SSA block analysis pass on 470
2024-06-06 03:46:38,313 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21e0350>
2024-06-06 03:46:38,313 - DEBUG - on stmt: $const472.1 = const(int, 1)
2024-06-06 03:46:38,313 - DEBUG - on stmt: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,313 - DEBUG - on stmt: n = $binop_iadd474.2
2024-06-06 03:46:38,313 - DEBUG - on stmt: jump 731
2024-06-06 03:46:38,313 - DEBUG - ==== SSA block analysis pass on 482
2024-06-06 03:46:38,313 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21e0350>
2024-06-06 03:46:38,313 - DEBUG - on stmt: $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:38,314 - DEBUG - on stmt: $492load_attr.2 = getattr(value=$482load_global.0, attr=mean)
2024-06-06 03:46:38,314 - DEBUG - on stmt: $514load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:38,314 - DEBUG - on stmt: $const524.6 = const(int, 0)
2024-06-06 03:46:38,314 - DEBUG - on stmt: $binop_sub530.9 = n - pre_avg
2024-06-06 03:46:38,314 - DEBUG - on stmt: $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,314 - DEBUG - on stmt: $542load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:38,314 - DEBUG - on stmt: $binop_add556.15 = n + post_avg
2024-06-06 03:46:38,314 - DEBUG - on stmt: $562load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,314 - DEBUG - on stmt: $const582.18 = const(int, 0)
2024-06-06 03:46:38,314 - DEBUG - on stmt: $584binary_subscr.19 = static_getitem(value=$562load_attr.17, index=0, index_var=$const582.18, fn=<built-in function getitem>)
2024-06-06 03:46:38,315 - DEBUG - on stmt: $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,315 - DEBUG - on stmt: $596binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:38,315 - DEBUG - on stmt: $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,315 - DEBUG - on stmt: $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:38,315 - DEBUG - on stmt: avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,315 - DEBUG - on stmt: $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,315 - DEBUG - on stmt: $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,315 - DEBUG - on stmt: $binop_add632.33 = avgn + delta
2024-06-06 03:46:38,316 - DEBUG - on stmt: $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33
2024-06-06 03:46:38,316 - DEBUG - on stmt: $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,316 - DEBUG - on stmt: peaks[n] = $binop_iand640.35
2024-06-06 03:46:38,316 - DEBUG - on stmt: $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,316 - DEBUG - on stmt: bool660 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,316 - DEBUG - on stmt: $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,316 - DEBUG - on stmt: branch $660pred, 674, 662
2024-06-06 03:46:38,316 - DEBUG - ==== SSA block analysis pass on 662
2024-06-06 03:46:38,316 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21e0350>
2024-06-06 03:46:38,317 - DEBUG - on stmt: $const664.1 = const(int, 1)
2024-06-06 03:46:38,317 - DEBUG - on stmt: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,317 - DEBUG - on stmt: n = $binop_iadd666.2
2024-06-06 03:46:38,317 - DEBUG - on stmt: jump 731
2024-06-06 03:46:38,317 - DEBUG - ==== SSA block analysis pass on 674
2024-06-06 03:46:38,317 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21e0350>
2024-06-06 03:46:38,317 - DEBUG - on stmt: $const678.2 = const(int, 1)
2024-06-06 03:46:38,317 - DEBUG - on stmt: $binop_add680.3 = wait + $const678.2
2024-06-06 03:46:38,317 - DEBUG - on stmt: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,317 - DEBUG - on stmt: n = $binop_iadd684.4
2024-06-06 03:46:38,317 - DEBUG - on stmt: $694load_attr.7 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,318 - DEBUG - on stmt: $const714.8 = const(int, 0)
2024-06-06 03:46:38,318 - DEBUG - on stmt: $716binary_subscr.9 = static_getitem(value=$694load_attr.7, index=0, index_var=$const714.8, fn=<built-in function getitem>)
2024-06-06 03:46:38,318 - DEBUG - on stmt: $720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:38,318 - DEBUG - on stmt: bool724 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,318 - DEBUG - on stmt: $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,318 - DEBUG - on stmt: branch $724pred, 726, 728
2024-06-06 03:46:38,318 - DEBUG - ==== SSA block analysis pass on 726
2024-06-06 03:46:38,318 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21e0350>
2024-06-06 03:46:38,318 - DEBUG - on stmt: jump 312
2024-06-06 03:46:38,318 - DEBUG - ==== SSA block analysis pass on 728
2024-06-06 03:46:38,318 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21e0350>
2024-06-06 03:46:38,318 - DEBUG - on stmt: $const728.0 = const(NoneType, None)
2024-06-06 03:46:38,319 - DEBUG - on stmt: $728return_const.1 = cast(value=$const728.0)
2024-06-06 03:46:38,319 - DEBUG - on stmt: return $728return_const.1
2024-06-06 03:46:38,319 - DEBUG - ==== SSA block analysis pass on 730
2024-06-06 03:46:38,319 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21e0350>
2024-06-06 03:46:38,319 - DEBUG - on stmt: $const730.0 = const(NoneType, None)
2024-06-06 03:46:38,319 - DEBUG - on stmt: $730return_const.1 = cast(value=$const730.0)
2024-06-06 03:46:38,319 - DEBUG - on stmt: return $730return_const.1
2024-06-06 03:46:38,319 - DEBUG - ==== SSA block analysis pass on 731
2024-06-06 03:46:38,319 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21e0350>
2024-06-06 03:46:38,319 - DEBUG - on stmt: jump 276
2024-06-06 03:46:38,322 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104compare_op.20': [(<numba.core.ir.Assign object at 0x7fe9d213be60>,
                                    0)],
             '$124binary_subscr.25': [(<numba.core.ir.Assign object at 0x7fe9d21e10d0>,
                                       0)],
             '$12load_global.3': [(<numba.core.ir.Assign object at 0x7fe9d2138ef0>,
                                   0)],
             '$132binary_subscr.28': [(<numba.core.ir.Assign object at 0x7fe9d21e2d50>,
                                       0)],
             '$136load_global.29': [(<numba.core.ir.Assign object at 0x7fe9d213b7a0>,
                                     0)],
             '$146load_attr.31': [(<numba.core.ir.Assign object at 0x7fe9d213bb00>,
                                   0)],
             '$170load_global.34': [(<numba.core.ir.Assign object at 0x7fe9d213b440>,
                                     0)],
             '$184load_attr.38': [(<numba.core.ir.Assign object at 0x7fe9d2138380>,
                                   0)],
             '$206binary_subscr.40': [(<numba.core.ir.Assign object at 0x7fe9d21e2de0>,
                                       0)],
             '$210call.41': [(<numba.core.ir.Assign object at 0x7fe9b9701b50>,
                              0)],
             '$218binary_slice.42': [(<numba.core.ir.Assign object at 0x7fe9b97017c0>,
                                      0)],
             '$218binary_slice.43': [(<numba.core.ir.Assign object at 0x7fe9b97013a0>,
                                      0)],
             '$218binary_slice.44': [(<numba.core.ir.Assign object at 0x7fe9b97019a0>,
                                      0)],
             '$220call.45': [(<numba.core.ir.Assign object at 0x7fe9b9701760>,
                              0)],
             '$22load_attr.5': [(<numba.core.ir.Assign object at 0x7fe9d2138c20>,
                                 0)],
             '$234compare_op.48': [(<numba.core.ir.Assign object at 0x7fe9b9700da0>,
                                    0)],
             '$254binary_subscr.52': [(<numba.core.ir.Assign object at 0x7fe9d21e29c0>,
                                       0)],
             '$258pred': [(<numba.core.ir.Assign object at 0x7fe9b9703dd0>, 0)],
             '$280load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b9703b90>,
                                  276)],
             '$302binary_subscr.4': [(<numba.core.ir.Assign object at 0x7fe9d21e0b60>,
                                      276)],
             '$306compare_op.5': [(<numba.core.ir.Assign object at 0x7fe9b9700860>,
                                   276)],
             '$310pred': [(<numba.core.ir.Assign object at 0x7fe9b97004d0>,
                           276)],
             '$312load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b97039b0>,
                                    312)],
             '$322load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b9702570>,
                                  312)],
             '$344load_global.4': [(<numba.core.ir.Assign object at 0x7fe9b97037d0>,
                                    312)],
             '$364call.10': [(<numba.core.ir.Assign object at 0x7fe9b9702960>,
                              312)],
             '$372load_global.11': [(<numba.core.ir.Assign object at 0x7fe9b97029f0>,
                                     312)],
             '$392load_attr.17': [(<numba.core.ir.Assign object at 0x7fe9b9702fc0>,
                                   312)],
             '$414binary_subscr.19': [(<numba.core.ir.Assign object at 0x7fe9d21e1070>,
                                       312)],
             '$418call.20': [(<numba.core.ir.Assign object at 0x7fe9b9703470>,
                              312)],
             '$426binary_slice.21': [(<numba.core.ir.Assign object at 0x7fe9b9701d00>,
                                      312)],
             '$426binary_slice.22': [(<numba.core.ir.Assign object at 0x7fe9b97023c0>,
                                      312)],
             '$426binary_slice.23': [(<numba.core.ir.Assign object at 0x7fe9b97035c0>,
                                      312)],
             '$442binary_subscr.27': [(<numba.core.ir.Assign object at 0x7fe9b9702120>,
                                       312)],
             '$448compare_op.29': [(<numba.core.ir.Assign object at 0x7fe9b96e1df0>,
                                    312)],
             '$464binary_subscr.34': [(<numba.core.ir.Assign object at 0x7fe9b96e3890>,
                                       312)],
             '$468pred': [(<numba.core.ir.Assign object at 0x7fe9b96e3260>,
                           312)],
             '$46load_global.8': [(<numba.core.ir.Assign object at 0x7fe9d2139f70>,
                                   0)],
             '$482load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b96e34d0>,
                                    482)],
             '$492load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b96e3ec0>,
                                  482)],
             '$514load_global.4': [(<numba.core.ir.Assign object at 0x7fe9b96e3560>,
                                    482)],
             '$534call.10': [(<numba.core.ir.Assign object at 0x7fe9b96e2c30>,
                              482)],
             '$542load_global.11': [(<numba.core.ir.Assign object at 0x7fe9b96e2990>,
                                     482)],
             '$562load_attr.17': [(<numba.core.ir.Assign object at 0x7fe9b96e2300>,
                                   482)],
             '$584binary_subscr.19': [(<numba.core.ir.Assign object at 0x7fe9d21e0e60>,
                                       482)],
             '$588call.20': [(<numba.core.ir.Assign object at 0x7fe9b96e2030>,
                              482)],
             '$596binary_slice.21': [(<numba.core.ir.Assign object at 0x7fe9b96e1b50>,
                                      482)],
             '$596binary_slice.22': [(<numba.core.ir.Assign object at 0x7fe9b96e1850>,
                                      482)],
             '$596binary_slice.23': [(<numba.core.ir.Assign object at 0x7fe9b96e1d60>,
                                      482)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x7fe9d21388f0>,
                                  0)],
             '$616binary_subscr.27': [(<numba.core.ir.Assign object at 0x7fe9b96e1490>,
                                       482)],
             '$624binary_subscr.30': [(<numba.core.ir.Assign object at 0x7fe9b96e0f50>,
                                       482)],
             '$636compare_op.34': [(<numba.core.ir.Assign object at 0x7fe9b96e0350>,
                                    482)],
             '$656binary_subscr.38': [(<numba.core.ir.Assign object at 0x7fe9b96e0890>,
                                       482)],
             '$660pred': [(<numba.core.ir.Assign object at 0x7fe9b96e0ad0>,
                           482)],
             '$694load_attr.7': [(<numba.core.ir.Assign object at 0x7fe9d21e37a0>,
                                  674)],
             '$716binary_subscr.9': [(<numba.core.ir.Assign object at 0x7fe9d21e0b90>,
                                      674)],
             '$720compare_op.10': [(<numba.core.ir.Assign object at 0x7fe9d21e2f90>,
                                    674)],
             '$724pred': [(<numba.core.ir.Assign object at 0x7fe9d21e03b0>,
                           674)],
             '$728return_const.1': [(<numba.core.ir.Assign object at 0x7fe9d21e35c0>,
                                     728)],
             '$730return_const.1': [(<numba.core.ir.Assign object at 0x7fe9d21e2f30>,
                                     730)],
             '$82binary_subscr.14': [(<numba.core.ir.Assign object at 0x7fe9d21e0590>,
                                      0)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x7fe9d21380e0>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7fe9d21e0d70>,
                                    0)],
             '$94binary_slice.16': [(<numba.core.ir.Assign object at 0x7fe9d213b260>,
                                     0)],
             '$94binary_slice.17': [(<numba.core.ir.Assign object at 0x7fe9d213acf0>,
                                     0)],
             '$94binary_slice.18': [(<numba.core.ir.Assign object at 0x7fe9d213ab70>,
                                     0)],
             '$96call.19': [(<numba.core.ir.Assign object at 0x7fe9d21387a0>,
                             0)],
             '$binop_add230.47': [(<numba.core.ir.Assign object at 0x7fe9b9701040>,
                                   0)],
             '$binop_add386.15': [(<numba.core.ir.Assign object at 0x7fe9b9702db0>,
                                   312)],
             '$binop_add556.15': [(<numba.core.ir.Assign object at 0x7fe9b96e3230>,
                                   482)],
             '$binop_add632.33': [(<numba.core.ir.Assign object at 0x7fe9b96e0230>,
                                   482)],
             '$binop_add680.3': [(<numba.core.ir.Assign object at 0x7fe9b96e1040>,
                                  674)],
             '$binop_iadd474.2': [(<numba.core.ir.Assign object at 0x7fe9b96e2210>,
                                   470)],
             '$binop_iadd666.2': [(<numba.core.ir.Assign object at 0x7fe9b96e1100>,
                                   662)],
             '$binop_iadd684.4': [(<numba.core.ir.Assign object at 0x7fe9b96e1f70>,
                                   674)],
             '$binop_iand238.49': [(<numba.core.ir.Assign object at 0x7fe9b9701220>,
                                    0)],
             '$binop_iand640.35': [(<numba.core.ir.Assign object at 0x7fe9b96e04a0>,
                                    482)],
             '$binop_sub360.9': [(<numba.core.ir.Assign object at 0x7fe9b97027e0>,
                                  312)],
             '$binop_sub530.9': [(<numba.core.ir.Assign object at 0x7fe9b96e29c0>,
                                  482)],
             '$const110.22': [(<numba.core.ir.Assign object at 0x7fe9d2139700>,
                               0)],
             '$const118.24': [(<numba.core.ir.Assign object at 0x7fe9d21396a0>,
                               0)],
             '$const130.27': [(<numba.core.ir.Assign object at 0x7fe9d213b080>,
                               0)],
             '$const168.33': [(<numba.core.ir.Assign object at 0x7fe9d2139e50>,
                               0)],
             '$const204.39': [(<numba.core.ir.Assign object at 0x7fe9d2138440>,
                               0)],
             '$const252.51': [(<numba.core.ir.Assign object at 0x7fe9b9700bc0>,
                               0)],
             '$const262.1': [(<numba.core.ir.Assign object at 0x7fe9d213b980>,
                              260)],
             '$const300.3': [(<numba.core.ir.Assign object at 0x7fe9b9703b00>,
                              276)],
             '$const354.6': [(<numba.core.ir.Assign object at 0x7fe9b9703650>,
                              312)],
             '$const412.18': [(<numba.core.ir.Assign object at 0x7fe9b9703140>,
                               312)],
             '$const44.7': [(<numba.core.ir.Assign object at 0x7fe9d2138b90>,
                             0)],
             '$const472.1': [(<numba.core.ir.Assign object at 0x7fe9b9701e50>,
                              470)],
             '$const524.6': [(<numba.core.ir.Assign object at 0x7fe9b96e2f60>,
                              482)],
             '$const582.18': [(<numba.core.ir.Assign object at 0x7fe9b96e25a0>,
                               482)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9d2139460>,
                            0)],
             '$const664.1': [(<numba.core.ir.Assign object at 0x7fe9b96e1130>,
                              662)],
             '$const678.2': [(<numba.core.ir.Assign object at 0x7fe9b96e0e60>,
                              674)],
             '$const714.8': [(<numba.core.ir.Assign object at 0x7fe9d21e2e70>,
                              674)],
             '$const728.0': [(<numba.core.ir.Assign object at 0x7fe9d21e38f0>,
                              728)],
             '$const730.0': [(<numba.core.ir.Assign object at 0x7fe9d21e30e0>,
                              730)],
             '$const80.13': [(<numba.core.ir.Assign object at 0x7fe9d2139130>,
                              0)],
             'avgn': [(<numba.core.ir.Assign object at 0x7fe9b96e1a30>, 482)],
             'bool258': [(<numba.core.ir.Assign object at 0x7fe9b9700c50>, 0)],
             'bool310': [(<numba.core.ir.Assign object at 0x7fe9b9703e00>,
                          276)],
             'bool468': [(<numba.core.ir.Assign object at 0x7fe9b96e3980>,
                          312)],
             'bool660': [(<numba.core.ir.Assign object at 0x7fe9b96e09e0>,
                          482)],
             'bool724': [(<numba.core.ir.Assign object at 0x7fe9d21e0e00>,
                          674)],
             'delta': [(<numba.core.ir.Assign object at 0x7fe9d2139f10>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7fe9b9703ec0>, 312)],
             'n': [(<numba.core.ir.Assign object at 0x7fe9b9701400>, 260),
                   (<numba.core.ir.Assign object at 0x7fe9b9703d10>, 272),
                   (<numba.core.ir.Assign object at 0x7fe9b96e2720>, 470),
                   (<numba.core.ir.Assign object at 0x7fe9b96e1820>, 662),
                   (<numba.core.ir.Assign object at 0x7fe9b96e1f40>, 674)],
             'peaks': [(<numba.core.ir.Assign object at 0x7fe9d2139940>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7fe9d2139f40>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7fe9d213a300>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7fe9d213a030>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7fe9d213a570>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7fe9d21399d0>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9d213ac90>, 0)]})
2024-06-06 03:46:38,322 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d213a270>
2024-06-06 03:46:38,322 - DEBUG - Fix SSA violator on var n
2024-06-06 03:46:38,322 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:38,323 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,323 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:38,323 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-06 03:46:38,323 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-06 03:46:38,323 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-06 03:46:38,323 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-06 03:46:38,323 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-06 03:46:38,323 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-06 03:46:38,323 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-06 03:46:38,323 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:38,323 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-06 03:46:38,323 - DEBUG - on stmt: $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:38,324 - DEBUG - on stmt: $22load_attr.5 = getattr(value=$12load_global.3, attr=max)
2024-06-06 03:46:38,324 - DEBUG - on stmt: $const44.7 = const(NoneType, None)
2024-06-06 03:46:38,324 - DEBUG - on stmt: $46load_global.8 = global(min: <built-in function min>)
2024-06-06 03:46:38,324 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,324 - DEBUG - on stmt: $const80.13 = const(int, 0)
2024-06-06 03:46:38,324 - DEBUG - on stmt: $82binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const80.13, fn=<built-in function getitem>)
2024-06-06 03:46:38,324 - DEBUG - on stmt: $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,324 - DEBUG - on stmt: $94binary_slice.18 = global(slice: <class 'slice'>)
2024-06-06 03:46:38,324 - DEBUG - on stmt: $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,324 - DEBUG - on stmt: $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>)
2024-06-06 03:46:38,324 - DEBUG - on stmt: $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,324 - DEBUG - on stmt: $104compare_op.20 = $8binary_subscr.2 >= $96call.19
2024-06-06 03:46:38,324 - DEBUG - on stmt: $const110.22 = const(int, 0)
2024-06-06 03:46:38,325 - DEBUG - on stmt: peaks[0] = $104compare_op.20
2024-06-06 03:46:38,325 - DEBUG - on stmt: $const118.24 = const(int, 0)
2024-06-06 03:46:38,325 - DEBUG - on stmt: $124binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const118.24, fn=<built-in function getitem>)
2024-06-06 03:46:38,325 - DEBUG - on stmt: $const130.27 = const(int, 0)
2024-06-06 03:46:38,325 - DEBUG - on stmt: $132binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const130.27, fn=<built-in function getitem>)
2024-06-06 03:46:38,325 - DEBUG - on stmt: $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:38,325 - DEBUG - on stmt: $146load_attr.31 = getattr(value=$136load_global.29, attr=mean)
2024-06-06 03:46:38,325 - DEBUG - on stmt: $const168.33 = const(NoneType, None)
2024-06-06 03:46:38,325 - DEBUG - on stmt: $170load_global.34 = global(min: <built-in function min>)
2024-06-06 03:46:38,325 - DEBUG - on stmt: $184load_attr.38 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,325 - DEBUG - on stmt: $const204.39 = const(int, 0)
2024-06-06 03:46:38,325 - DEBUG - on stmt: $206binary_subscr.40 = static_getitem(value=$184load_attr.38, index=0, index_var=$const204.39, fn=<built-in function getitem>)
2024-06-06 03:46:38,326 - DEBUG - on stmt: $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,326 - DEBUG - on stmt: $218binary_slice.44 = global(slice: <class 'slice'>)
2024-06-06 03:46:38,326 - DEBUG - on stmt: $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,326 - DEBUG - on stmt: $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>)
2024-06-06 03:46:38,326 - DEBUG - on stmt: $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,326 - DEBUG - on stmt: $binop_add230.47 = $220call.45 + delta
2024-06-06 03:46:38,326 - DEBUG - on stmt: $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47
2024-06-06 03:46:38,326 - DEBUG - on stmt: $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,326 - DEBUG - on stmt: peaks[0] = $binop_iand238.49
2024-06-06 03:46:38,326 - DEBUG - on stmt: $const252.51 = const(int, 0)
2024-06-06 03:46:38,326 - DEBUG - on stmt: $254binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const252.51, fn=<built-in function getitem>)
2024-06-06 03:46:38,326 - DEBUG - on stmt: bool258 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,327 - DEBUG - on stmt: $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,327 - DEBUG - on stmt: branch $258pred, 260, 272
2024-06-06 03:46:38,327 - DEBUG - ==== SSA block rewrite pass on 260
2024-06-06 03:46:38,327 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,327 - DEBUG - on stmt: $const262.1 = const(int, 1)
2024-06-06 03:46:38,327 - DEBUG - on stmt: n = wait + $const262.1
2024-06-06 03:46:38,327 - DEBUG - first assign: n
2024-06-06 03:46:38,327 - DEBUG - replaced with: n = wait + $const262.1
2024-06-06 03:46:38,327 - DEBUG - on stmt: jump 276
2024-06-06 03:46:38,327 - DEBUG - ==== SSA block rewrite pass on 272
2024-06-06 03:46:38,327 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,327 - DEBUG - on stmt: n = const(int, 1)
2024-06-06 03:46:38,328 - DEBUG - replaced with: n.1 = const(int, 1)
2024-06-06 03:46:38,328 - DEBUG - on stmt: jump 276
2024-06-06 03:46:38,328 - DEBUG - ==== SSA block rewrite pass on 276
2024-06-06 03:46:38,328 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,328 - DEBUG - on stmt: $280load_attr.2 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,328 - DEBUG - on stmt: $const300.3 = const(int, 0)
2024-06-06 03:46:38,328 - DEBUG - on stmt: $302binary_subscr.4 = static_getitem(value=$280load_attr.2, index=0, index_var=$const300.3, fn=<built-in function getitem>)
2024-06-06 03:46:38,328 - DEBUG - on stmt: $306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:38,328 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,328 - DEBUG - on stmt: $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,328 - DEBUG - on stmt: branch $310pred, 312, 730
2024-06-06 03:46:38,328 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-06 03:46:38,329 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,329 - DEBUG - on stmt: $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:38,329 - DEBUG - on stmt: $322load_attr.2 = getattr(value=$312load_global.0, attr=max)
2024-06-06 03:46:38,329 - DEBUG - on stmt: $344load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:38,329 - DEBUG - on stmt: $const354.6 = const(int, 0)
2024-06-06 03:46:38,329 - DEBUG - on stmt: $binop_sub360.9 = n - pre_max
2024-06-06 03:46:38,329 - DEBUG - on stmt: $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,329 - DEBUG - on stmt: $372load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:38,329 - DEBUG - on stmt: $binop_add386.15 = n + post_max
2024-06-06 03:46:38,329 - DEBUG - on stmt: $392load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,329 - DEBUG - on stmt: $const412.18 = const(int, 0)
2024-06-06 03:46:38,329 - DEBUG - on stmt: $414binary_subscr.19 = static_getitem(value=$392load_attr.17, index=0, index_var=$const412.18, fn=<built-in function getitem>)
2024-06-06 03:46:38,330 - DEBUG - on stmt: $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,330 - DEBUG - on stmt: $426binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:38,330 - DEBUG - on stmt: $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,330 - DEBUG - on stmt: $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:38,330 - DEBUG - on stmt: maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,330 - DEBUG - on stmt: $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,330 - DEBUG - on stmt: $448compare_op.29 = $442binary_subscr.27 == maxn
2024-06-06 03:46:38,330 - DEBUG - on stmt: peaks[n] = $448compare_op.29
2024-06-06 03:46:38,330 - DEBUG - on stmt: $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,330 - DEBUG - on stmt: bool468 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,330 - DEBUG - on stmt: $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,331 - DEBUG - on stmt: branch $468pred, 482, 470
2024-06-06 03:46:38,331 - DEBUG - ==== SSA block rewrite pass on 470
2024-06-06 03:46:38,331 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,331 - DEBUG - on stmt: $const472.1 = const(int, 1)
2024-06-06 03:46:38,331 - DEBUG - on stmt: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,331 - DEBUG - on stmt: n = $binop_iadd474.2
2024-06-06 03:46:38,331 - DEBUG - replaced with: n.2 = $binop_iadd474.2
2024-06-06 03:46:38,331 - DEBUG - on stmt: jump 731
2024-06-06 03:46:38,331 - DEBUG - ==== SSA block rewrite pass on 482
2024-06-06 03:46:38,331 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,332 - DEBUG - on stmt: $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:38,332 - DEBUG - on stmt: $492load_attr.2 = getattr(value=$482load_global.0, attr=mean)
2024-06-06 03:46:38,332 - DEBUG - on stmt: $514load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:38,332 - DEBUG - on stmt: $const524.6 = const(int, 0)
2024-06-06 03:46:38,332 - DEBUG - on stmt: $binop_sub530.9 = n - pre_avg
2024-06-06 03:46:38,332 - DEBUG - on stmt: $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,332 - DEBUG - on stmt: $542load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:38,332 - DEBUG - on stmt: $binop_add556.15 = n + post_avg
2024-06-06 03:46:38,332 - DEBUG - on stmt: $562load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,332 - DEBUG - on stmt: $const582.18 = const(int, 0)
2024-06-06 03:46:38,333 - DEBUG - on stmt: $584binary_subscr.19 = static_getitem(value=$562load_attr.17, index=0, index_var=$const582.18, fn=<built-in function getitem>)
2024-06-06 03:46:38,333 - DEBUG - on stmt: $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,333 - DEBUG - on stmt: $596binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:38,333 - DEBUG - on stmt: $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,333 - DEBUG - on stmt: $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:38,333 - DEBUG - on stmt: avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,333 - DEBUG - on stmt: $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,333 - DEBUG - on stmt: $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,333 - DEBUG - on stmt: $binop_add632.33 = avgn + delta
2024-06-06 03:46:38,333 - DEBUG - on stmt: $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33
2024-06-06 03:46:38,333 - DEBUG - on stmt: $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,334 - DEBUG - on stmt: peaks[n] = $binop_iand640.35
2024-06-06 03:46:38,334 - DEBUG - on stmt: $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,334 - DEBUG - on stmt: bool660 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,334 - DEBUG - on stmt: $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,334 - DEBUG - on stmt: branch $660pred, 674, 662
2024-06-06 03:46:38,334 - DEBUG - ==== SSA block rewrite pass on 662
2024-06-06 03:46:38,334 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,334 - DEBUG - on stmt: $const664.1 = const(int, 1)
2024-06-06 03:46:38,334 - DEBUG - on stmt: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,334 - DEBUG - on stmt: n = $binop_iadd666.2
2024-06-06 03:46:38,334 - DEBUG - replaced with: n.3 = $binop_iadd666.2
2024-06-06 03:46:38,334 - DEBUG - on stmt: jump 731
2024-06-06 03:46:38,335 - DEBUG - ==== SSA block rewrite pass on 674
2024-06-06 03:46:38,335 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,335 - DEBUG - on stmt: $const678.2 = const(int, 1)
2024-06-06 03:46:38,335 - DEBUG - on stmt: $binop_add680.3 = wait + $const678.2
2024-06-06 03:46:38,335 - DEBUG - on stmt: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,335 - DEBUG - on stmt: n = $binop_iadd684.4
2024-06-06 03:46:38,335 - DEBUG - replaced with: n.4 = $binop_iadd684.4
2024-06-06 03:46:38,335 - DEBUG - on stmt: $694load_attr.7 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,335 - DEBUG - on stmt: $const714.8 = const(int, 0)
2024-06-06 03:46:38,335 - DEBUG - on stmt: $716binary_subscr.9 = static_getitem(value=$694load_attr.7, index=0, index_var=$const714.8, fn=<built-in function getitem>)
2024-06-06 03:46:38,335 - DEBUG - on stmt: $720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:38,335 - DEBUG - on stmt: bool724 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,335 - DEBUG - on stmt: $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,336 - DEBUG - on stmt: branch $724pred, 726, 728
2024-06-06 03:46:38,336 - DEBUG - ==== SSA block rewrite pass on 726
2024-06-06 03:46:38,336 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,336 - DEBUG - on stmt: jump 312
2024-06-06 03:46:38,336 - DEBUG - ==== SSA block rewrite pass on 728
2024-06-06 03:46:38,336 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,336 - DEBUG - on stmt: $const728.0 = const(NoneType, None)
2024-06-06 03:46:38,336 - DEBUG - on stmt: $728return_const.1 = cast(value=$const728.0)
2024-06-06 03:46:38,336 - DEBUG - on stmt: return $728return_const.1
2024-06-06 03:46:38,336 - DEBUG - ==== SSA block rewrite pass on 730
2024-06-06 03:46:38,336 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,336 - DEBUG - on stmt: $const730.0 = const(NoneType, None)
2024-06-06 03:46:38,336 - DEBUG - on stmt: $730return_const.1 = cast(value=$const730.0)
2024-06-06 03:46:38,337 - DEBUG - on stmt: return $730return_const.1
2024-06-06 03:46:38,337 - DEBUG - ==== SSA block rewrite pass on 731
2024-06-06 03:46:38,337 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,337 - DEBUG - on stmt: jump 276
2024-06-06 03:46:38,337 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {260: [<numba.core.ir.Assign object at 0x7fe9d21e0650>],
             272: [<numba.core.ir.Assign object at 0x7fe9d21e2150>],
             470: [<numba.core.ir.Assign object at 0x7fe9d21e19a0>],
             662: [<numba.core.ir.Assign object at 0x7fe9d21e0830>],
             674: [<numba.core.ir.Assign object at 0x7fe9d21e2690>]})
2024-06-06 03:46:38,337 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:38,337 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,337 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:38,337 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-06 03:46:38,337 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-06 03:46:38,337 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-06 03:46:38,337 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-06 03:46:38,338 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-06 03:46:38,338 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-06 03:46:38,338 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-06 03:46:38,338 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:38,338 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-06 03:46:38,338 - DEBUG - on stmt: $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:38,338 - DEBUG - on stmt: $22load_attr.5 = getattr(value=$12load_global.3, attr=max)
2024-06-06 03:46:38,338 - DEBUG - on stmt: $const44.7 = const(NoneType, None)
2024-06-06 03:46:38,338 - DEBUG - on stmt: $46load_global.8 = global(min: <built-in function min>)
2024-06-06 03:46:38,338 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,338 - DEBUG - on stmt: $const80.13 = const(int, 0)
2024-06-06 03:46:38,338 - DEBUG - on stmt: $82binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const80.13, fn=<built-in function getitem>)
2024-06-06 03:46:38,339 - DEBUG - on stmt: $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,339 - DEBUG - on stmt: $94binary_slice.18 = global(slice: <class 'slice'>)
2024-06-06 03:46:38,339 - DEBUG - on stmt: $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,339 - DEBUG - on stmt: $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>)
2024-06-06 03:46:38,339 - DEBUG - on stmt: $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,339 - DEBUG - on stmt: $104compare_op.20 = $8binary_subscr.2 >= $96call.19
2024-06-06 03:46:38,339 - DEBUG - on stmt: $const110.22 = const(int, 0)
2024-06-06 03:46:38,339 - DEBUG - on stmt: peaks[0] = $104compare_op.20
2024-06-06 03:46:38,339 - DEBUG - on stmt: $const118.24 = const(int, 0)
2024-06-06 03:46:38,339 - DEBUG - on stmt: $124binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const118.24, fn=<built-in function getitem>)
2024-06-06 03:46:38,339 - DEBUG - on stmt: $const130.27 = const(int, 0)
2024-06-06 03:46:38,340 - DEBUG - on stmt: $132binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const130.27, fn=<built-in function getitem>)
2024-06-06 03:46:38,340 - DEBUG - on stmt: $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:38,340 - DEBUG - on stmt: $146load_attr.31 = getattr(value=$136load_global.29, attr=mean)
2024-06-06 03:46:38,340 - DEBUG - on stmt: $const168.33 = const(NoneType, None)
2024-06-06 03:46:38,340 - DEBUG - on stmt: $170load_global.34 = global(min: <built-in function min>)
2024-06-06 03:46:38,340 - DEBUG - on stmt: $184load_attr.38 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,340 - DEBUG - on stmt: $const204.39 = const(int, 0)
2024-06-06 03:46:38,340 - DEBUG - on stmt: $206binary_subscr.40 = static_getitem(value=$184load_attr.38, index=0, index_var=$const204.39, fn=<built-in function getitem>)
2024-06-06 03:46:38,340 - DEBUG - on stmt: $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,340 - DEBUG - on stmt: $218binary_slice.44 = global(slice: <class 'slice'>)
2024-06-06 03:46:38,340 - DEBUG - on stmt: $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,341 - DEBUG - on stmt: $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>)
2024-06-06 03:46:38,341 - DEBUG - on stmt: $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,341 - DEBUG - on stmt: $binop_add230.47 = $220call.45 + delta
2024-06-06 03:46:38,341 - DEBUG - on stmt: $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47
2024-06-06 03:46:38,341 - DEBUG - on stmt: $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,341 - DEBUG - on stmt: peaks[0] = $binop_iand238.49
2024-06-06 03:46:38,341 - DEBUG - on stmt: $const252.51 = const(int, 0)
2024-06-06 03:46:38,341 - DEBUG - on stmt: $254binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const252.51, fn=<built-in function getitem>)
2024-06-06 03:46:38,341 - DEBUG - on stmt: bool258 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,341 - DEBUG - on stmt: $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,341 - DEBUG - on stmt: branch $258pred, 260, 272
2024-06-06 03:46:38,342 - DEBUG - ==== SSA block rewrite pass on 260
2024-06-06 03:46:38,342 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,342 - DEBUG - on stmt: $const262.1 = const(int, 1)
2024-06-06 03:46:38,342 - DEBUG - on stmt: n = wait + $const262.1
2024-06-06 03:46:38,342 - DEBUG - on stmt: jump 276
2024-06-06 03:46:38,342 - DEBUG - ==== SSA block rewrite pass on 272
2024-06-06 03:46:38,342 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,342 - DEBUG - on stmt: n.1 = const(int, 1)
2024-06-06 03:46:38,342 - DEBUG - on stmt: jump 276
2024-06-06 03:46:38,342 - DEBUG - ==== SSA block rewrite pass on 276
2024-06-06 03:46:38,342 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,342 - DEBUG - on stmt: $280load_attr.2 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,342 - DEBUG - on stmt: $const300.3 = const(int, 0)
2024-06-06 03:46:38,342 - DEBUG - on stmt: $302binary_subscr.4 = static_getitem(value=$280load_attr.2, index=0, index_var=$const300.3, fn=<built-in function getitem>)
2024-06-06 03:46:38,343 - DEBUG - on stmt: $306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:38,343 - DEBUG - find_def var='n' stmt=$306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:38,343 - DEBUG - find_def_from_top label 276
2024-06-06 03:46:38,343 - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 276
2024-06-06 03:46:38,343 - DEBUG - find_def_from_bottom label 272
2024-06-06 03:46:38,343 - DEBUG - incoming_def n.1 = const(int, 1)
2024-06-06 03:46:38,343 - DEBUG - find_def_from_bottom label 731
2024-06-06 03:46:38,343 - DEBUG - find_def_from_top label 731
2024-06-06 03:46:38,343 - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 731
2024-06-06 03:46:38,343 - DEBUG - find_def_from_bottom label 662
2024-06-06 03:46:38,344 - DEBUG - incoming_def n.3 = $binop_iadd666.2
2024-06-06 03:46:38,344 - DEBUG - find_def_from_bottom label 470
2024-06-06 03:46:38,344 - DEBUG - incoming_def n.2 = $binop_iadd474.2
2024-06-06 03:46:38,344 - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.3, utils.py:1243), Var(n.2, utils.py:1236)], incoming_blocks=[662, 470])
2024-06-06 03:46:38,344 - DEBUG - find_def_from_bottom label 260
2024-06-06 03:46:38,344 - DEBUG - incoming_def n = wait + $const262.1
2024-06-06 03:46:38,344 - DEBUG - replaced with: $306compare_op.5 = n.5 < $302binary_subscr.4
2024-06-06 03:46:38,344 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,344 - DEBUG - on stmt: $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,344 - DEBUG - on stmt: branch $310pred, 312, 730
2024-06-06 03:46:38,344 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-06 03:46:38,345 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,345 - DEBUG - on stmt: $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:38,345 - DEBUG - on stmt: $322load_attr.2 = getattr(value=$312load_global.0, attr=max)
2024-06-06 03:46:38,345 - DEBUG - on stmt: $344load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:38,345 - DEBUG - on stmt: $const354.6 = const(int, 0)
2024-06-06 03:46:38,345 - DEBUG - on stmt: $binop_sub360.9 = n - pre_max
2024-06-06 03:46:38,345 - DEBUG - find_def var='n' stmt=$binop_sub360.9 = n - pre_max
2024-06-06 03:46:38,345 - DEBUG - find_def_from_top label 312
2024-06-06 03:46:38,345 - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 312
2024-06-06 03:46:38,345 - DEBUG - find_def_from_bottom label 276
2024-06-06 03:46:38,345 - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n.1, utils.py:1227), Var(n.6, utils.py:1229), Var(n, utils.py:1225)], incoming_blocks=[272, 731, 260])
2024-06-06 03:46:38,345 - DEBUG - find_def_from_bottom label 726
2024-06-06 03:46:38,346 - DEBUG - find_def_from_top label 726
2024-06-06 03:46:38,346 - DEBUG - idom 674 from label 726
2024-06-06 03:46:38,346 - DEBUG - find_def_from_bottom label 674
2024-06-06 03:46:38,346 - DEBUG - incoming_def n.4 = $binop_iadd684.4
2024-06-06 03:46:38,346 - DEBUG - replaced with: $binop_sub360.9 = n.7 - pre_max
2024-06-06 03:46:38,346 - DEBUG - on stmt: $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,346 - DEBUG - on stmt: $372load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:38,346 - DEBUG - on stmt: $binop_add386.15 = n + post_max
2024-06-06 03:46:38,346 - DEBUG - find_def var='n' stmt=$binop_add386.15 = n + post_max
2024-06-06 03:46:38,346 - DEBUG - replaced with: $binop_add386.15 = n.7 + post_max
2024-06-06 03:46:38,346 - DEBUG - on stmt: $392load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,347 - DEBUG - on stmt: $const412.18 = const(int, 0)
2024-06-06 03:46:38,347 - DEBUG - on stmt: $414binary_subscr.19 = static_getitem(value=$392load_attr.17, index=0, index_var=$const412.18, fn=<built-in function getitem>)
2024-06-06 03:46:38,347 - DEBUG - on stmt: $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,347 - DEBUG - on stmt: $426binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:38,347 - DEBUG - on stmt: $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,347 - DEBUG - on stmt: $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:38,347 - DEBUG - on stmt: maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,347 - DEBUG - on stmt: $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,347 - DEBUG - find_def var='n' stmt=$442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,348 - DEBUG - replaced with: $442binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:38,348 - DEBUG - on stmt: $448compare_op.29 = $442binary_subscr.27 == maxn
2024-06-06 03:46:38,348 - DEBUG - on stmt: peaks[n] = $448compare_op.29
2024-06-06 03:46:38,348 - DEBUG - find_def var='n' stmt=peaks[n] = $448compare_op.29
2024-06-06 03:46:38,348 - DEBUG - replaced with: peaks[n.7] = $448compare_op.29
2024-06-06 03:46:38,348 - DEBUG - on stmt: $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,348 - DEBUG - find_def var='n' stmt=$464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,348 - DEBUG - replaced with: $464binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:38,348 - DEBUG - on stmt: bool468 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,348 - DEBUG - on stmt: $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,348 - DEBUG - on stmt: branch $468pred, 482, 470
2024-06-06 03:46:38,349 - DEBUG - ==== SSA block rewrite pass on 470
2024-06-06 03:46:38,349 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,349 - DEBUG - on stmt: $const472.1 = const(int, 1)
2024-06-06 03:46:38,349 - DEBUG - on stmt: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,349 - DEBUG - find_def var='n' stmt=$binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,349 - DEBUG - find_def_from_top label 470
2024-06-06 03:46:38,349 - DEBUG - idom 312 from label 470
2024-06-06 03:46:38,349 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:38,349 - DEBUG - replaced with: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,349 - DEBUG - on stmt: n.2 = $binop_iadd474.2
2024-06-06 03:46:38,349 - DEBUG - on stmt: jump 731
2024-06-06 03:46:38,349 - DEBUG - ==== SSA block rewrite pass on 482
2024-06-06 03:46:38,349 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,350 - DEBUG - on stmt: $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:38,350 - DEBUG - on stmt: $492load_attr.2 = getattr(value=$482load_global.0, attr=mean)
2024-06-06 03:46:38,350 - DEBUG - on stmt: $514load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:38,350 - DEBUG - on stmt: $const524.6 = const(int, 0)
2024-06-06 03:46:38,350 - DEBUG - on stmt: $binop_sub530.9 = n - pre_avg
2024-06-06 03:46:38,350 - DEBUG - find_def var='n' stmt=$binop_sub530.9 = n - pre_avg
2024-06-06 03:46:38,350 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:38,350 - DEBUG - idom 312 from label 482
2024-06-06 03:46:38,350 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:38,350 - DEBUG - replaced with: $binop_sub530.9 = n.7 - pre_avg
2024-06-06 03:46:38,350 - DEBUG - on stmt: $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,350 - DEBUG - on stmt: $542load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:38,350 - DEBUG - on stmt: $binop_add556.15 = n + post_avg
2024-06-06 03:46:38,351 - DEBUG - find_def var='n' stmt=$binop_add556.15 = n + post_avg
2024-06-06 03:46:38,351 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:38,351 - DEBUG - idom 312 from label 482
2024-06-06 03:46:38,351 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:38,351 - DEBUG - replaced with: $binop_add556.15 = n.7 + post_avg
2024-06-06 03:46:38,351 - DEBUG - on stmt: $562load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,351 - DEBUG - on stmt: $const582.18 = const(int, 0)
2024-06-06 03:46:38,351 - DEBUG - on stmt: $584binary_subscr.19 = static_getitem(value=$562load_attr.17, index=0, index_var=$const582.18, fn=<built-in function getitem>)
2024-06-06 03:46:38,351 - DEBUG - on stmt: $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,351 - DEBUG - on stmt: $596binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:38,351 - DEBUG - on stmt: $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,351 - DEBUG - on stmt: $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:38,352 - DEBUG - on stmt: avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,352 - DEBUG - on stmt: $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,352 - DEBUG - find_def var='n' stmt=$616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,352 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:38,352 - DEBUG - idom 312 from label 482
2024-06-06 03:46:38,352 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:38,352 - DEBUG - replaced with: $616binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:38,352 - DEBUG - on stmt: $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,352 - DEBUG - find_def var='n' stmt=$624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,352 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:38,352 - DEBUG - idom 312 from label 482
2024-06-06 03:46:38,352 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:38,352 - DEBUG - replaced with: $624binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:38,353 - DEBUG - on stmt: $binop_add632.33 = avgn + delta
2024-06-06 03:46:38,353 - DEBUG - on stmt: $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33
2024-06-06 03:46:38,353 - DEBUG - on stmt: $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,353 - DEBUG - on stmt: peaks[n] = $binop_iand640.35
2024-06-06 03:46:38,353 - DEBUG - find_def var='n' stmt=peaks[n] = $binop_iand640.35
2024-06-06 03:46:38,353 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:38,353 - DEBUG - idom 312 from label 482
2024-06-06 03:46:38,353 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:38,353 - DEBUG - replaced with: peaks[n.7] = $binop_iand640.35
2024-06-06 03:46:38,353 - DEBUG - on stmt: $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,353 - DEBUG - find_def var='n' stmt=$656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:38,353 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:38,353 - DEBUG - idom 312 from label 482
2024-06-06 03:46:38,354 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:38,354 - DEBUG - replaced with: $656binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:38,354 - DEBUG - on stmt: bool660 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,354 - DEBUG - on stmt: $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,354 - DEBUG - on stmt: branch $660pred, 674, 662
2024-06-06 03:46:38,354 - DEBUG - ==== SSA block rewrite pass on 662
2024-06-06 03:46:38,354 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,354 - DEBUG - on stmt: $const664.1 = const(int, 1)
2024-06-06 03:46:38,354 - DEBUG - on stmt: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,354 - DEBUG - find_def var='n' stmt=$binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,354 - DEBUG - find_def_from_top label 662
2024-06-06 03:46:38,354 - DEBUG - idom 482 from label 662
2024-06-06 03:46:38,355 - DEBUG - find_def_from_bottom label 482
2024-06-06 03:46:38,355 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:38,355 - DEBUG - idom 312 from label 482
2024-06-06 03:46:38,355 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:38,355 - DEBUG - replaced with: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,355 - DEBUG - on stmt: n.3 = $binop_iadd666.2
2024-06-06 03:46:38,355 - DEBUG - on stmt: jump 731
2024-06-06 03:46:38,355 - DEBUG - ==== SSA block rewrite pass on 674
2024-06-06 03:46:38,355 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,355 - DEBUG - on stmt: $const678.2 = const(int, 1)
2024-06-06 03:46:38,355 - DEBUG - on stmt: $binop_add680.3 = wait + $const678.2
2024-06-06 03:46:38,355 - DEBUG - on stmt: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,355 - DEBUG - find_def var='n' stmt=$binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,356 - DEBUG - find_def_from_top label 674
2024-06-06 03:46:38,356 - DEBUG - idom 482 from label 674
2024-06-06 03:46:38,356 - DEBUG - find_def_from_bottom label 482
2024-06-06 03:46:38,356 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:38,356 - DEBUG - idom 312 from label 482
2024-06-06 03:46:38,356 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:38,356 - DEBUG - replaced with: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,356 - DEBUG - on stmt: n.4 = $binop_iadd684.4
2024-06-06 03:46:38,356 - DEBUG - on stmt: $694load_attr.7 = getattr(value=x, attr=shape)
2024-06-06 03:46:38,356 - DEBUG - on stmt: $const714.8 = const(int, 0)
2024-06-06 03:46:38,356 - DEBUG - on stmt: $716binary_subscr.9 = static_getitem(value=$694load_attr.7, index=0, index_var=$const714.8, fn=<built-in function getitem>)
2024-06-06 03:46:38,356 - DEBUG - on stmt: $720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:38,356 - DEBUG - find_def var='n' stmt=$720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:38,357 - DEBUG - replaced with: $720compare_op.10 = n.4 < $716binary_subscr.9
2024-06-06 03:46:38,357 - DEBUG - on stmt: bool724 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,357 - DEBUG - on stmt: $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,357 - DEBUG - on stmt: branch $724pred, 726, 728
2024-06-06 03:46:38,357 - DEBUG - ==== SSA block rewrite pass on 726
2024-06-06 03:46:38,357 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,357 - DEBUG - on stmt: jump 312
2024-06-06 03:46:38,357 - DEBUG - ==== SSA block rewrite pass on 728
2024-06-06 03:46:38,357 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,357 - DEBUG - on stmt: $const728.0 = const(NoneType, None)
2024-06-06 03:46:38,357 - DEBUG - on stmt: $728return_const.1 = cast(value=$const728.0)
2024-06-06 03:46:38,357 - DEBUG - on stmt: return $728return_const.1
2024-06-06 03:46:38,357 - DEBUG - ==== SSA block rewrite pass on 730
2024-06-06 03:46:38,358 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,358 - DEBUG - on stmt: $const730.0 = const(NoneType, None)
2024-06-06 03:46:38,358 - DEBUG - on stmt: $730return_const.1 = cast(value=$const730.0)
2024-06-06 03:46:38,358 - DEBUG - on stmt: return $730return_const.1
2024-06-06 03:46:38,358 - DEBUG - ==== SSA block rewrite pass on 731
2024-06-06 03:46:38,358 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2139dc0>
2024-06-06 03:46:38,358 - DEBUG - on stmt: jump 276
2024-06-06 03:46:38,367 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          28	LOAD_CONST(arg=1, lineno=571)
          30	COMPARE_OP(arg=40, lineno=571)
          34	POP_JUMP_IF_FALSE(arg=11, lineno=571)
          36	LOAD_GLOBAL(arg=3, lineno=572)
          46	LOAD_CONST(arg=2, lineno=572)
          48	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          68	LOAD_ATTR(arg=6, lineno=575)
          88	LOAD_FAST(arg=0, lineno=575)
          90	CALL(arg=1, lineno=575)
          98	STORE_FAST(arg=1, lineno=575)
         100	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	CALL(arg=1, lineno=576)
         120	LOAD_ATTR(arg=11, lineno=576)
         140	LOAD_CONST(arg=1, lineno=576)
         142	CALL(arg=1, lineno=576)
         150	STORE_FAST(arg=2, lineno=576)
         152	PUSH_NULL(arg=None, lineno=577)
         154	LOAD_DEREF(arg=6, lineno=577)
         156	LOAD_FAST(arg=2, lineno=577)
         158	CALL(arg=1, lineno=577)
         166	POP_JUMP_IF_FALSE(arg=2, lineno=577)
         168	LOAD_FAST(arg=2, lineno=578)
         170	RETURN_VALUE(arg=None, lineno=578)
>        172	LOAD_FAST(arg=1, lineno=580)
         174	GET_ITER(arg=None, lineno=580)
>        176	FOR_ITER(arg=42, lineno=580)
         180	STORE_FAST(arg=3, lineno=580)
         182	LOAD_FAST(arg=3, lineno=581)
         184	LOAD_ATTR(arg=13, lineno=581)
         204	CALL(arg=0, lineno=581)
         212	STORE_FAST(arg=4, lineno=581)
         214	PUSH_NULL(arg=None, lineno=582)
         216	LOAD_DEREF(arg=6, lineno=582)
         218	LOAD_FAST(arg=4, lineno=582)
         220	CALL(arg=1, lineno=582)
         228	POP_JUMP_IF_FALSE(arg=4, lineno=582)
         230	LOAD_FAST(arg=4, lineno=583)
         232	SWAP(arg=2, lineno=583)
         234	POP_TOP(arg=None, lineno=583)
         236	RETURN_VALUE(arg=None, lineno=583)
>        238	PUSH_NULL(arg=None, lineno=584)
         240	LOAD_DEREF(arg=5, lineno=584)
         242	LOAD_FAST(arg=4, lineno=584)
         244	LOAD_FAST(arg=2, lineno=584)
         246	CALL(arg=2, lineno=584)
         254	POP_JUMP_IF_TRUE(arg=1, lineno=584)
         256	JUMP_BACKWARD(arg=41, lineno=584)
>        258	LOAD_FAST(arg=4, lineno=585)
         260	STORE_FAST(arg=2, lineno=585)
         262	JUMP_BACKWARD(arg=44, lineno=585)
>        264	END_FOR(arg=None, lineno=580)
         266	LOAD_FAST(arg=2, lineno=586)
         268	RETURN_VALUE(arg=None, lineno=586)
2024-06-06 03:46:38,367 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:38,367 - DEBUG - stack: []
2024-06-06 03:46:38,367 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:38,367 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-06-06 03:46:38,367 - DEBUG - stack []
2024-06-06 03:46:38,367 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-06-06 03:46:38,368 - DEBUG - stack []
2024-06-06 03:46:38,368 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-06-06 03:46:38,368 - DEBUG - stack []
2024-06-06 03:46:38,368 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-06-06 03:46:38,368 - DEBUG - stack []
2024-06-06 03:46:38,368 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-06-06 03:46:38,368 - DEBUG - stack ['$a6.0']
2024-06-06 03:46:38,368 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=571)
2024-06-06 03:46:38,368 - DEBUG - stack ['$8load_attr.1']
2024-06-06 03:46:38,368 - DEBUG - dispatch pc=30, inst=COMPARE_OP(arg=40, lineno=571)
2024-06-06 03:46:38,368 - DEBUG - stack ['$8load_attr.1', '$const28.2']
2024-06-06 03:46:38,369 - DEBUG - dispatch pc=34, inst=POP_JUMP_IF_FALSE(arg=11, lineno=571)
2024-06-06 03:46:38,369 - DEBUG - stack ['$30compare_op.3']
2024-06-06 03:46:38,369 - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,369 - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-06-06 03:46:38,369 - DEBUG - stack: []
2024-06-06 03:46:38,369 - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2024-06-06 03:46:38,369 - DEBUG - dispatch pc=36, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-06-06 03:46:38,369 - DEBUG - stack []
2024-06-06 03:46:38,369 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=2, lineno=572)
2024-06-06 03:46:38,369 - DEBUG - stack ['$null$36.1', '$36load_global.0']
2024-06-06 03:46:38,370 - DEBUG - dispatch pc=48, inst=CALL(arg=1, lineno=572)
2024-06-06 03:46:38,370 - DEBUG - stack ['$null$36.1', '$36load_global.0', '$const46.2']
2024-06-06 03:46:38,370 - DEBUG - dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-06-06 03:46:38,370 - DEBUG - stack ['$48call.3']
2024-06-06 03:46:38,370 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,370 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-06-06 03:46:38,370 - DEBUG - stack: []
2024-06-06 03:46:38,370 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-06-06 03:46:38,370 - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-06-06 03:46:38,370 - DEBUG - stack []
2024-06-06 03:46:38,371 - DEBUG - dispatch pc=68, inst=LOAD_ATTR(arg=6, lineno=575)
2024-06-06 03:46:38,371 - DEBUG - stack ['$null$58.1', '$58load_global.0']
2024-06-06 03:46:38,371 - DEBUG - dispatch pc=88, inst=LOAD_FAST(arg=0, lineno=575)
2024-06-06 03:46:38,371 - DEBUG - stack ['$null$58.1', '$68load_attr.2']
2024-06-06 03:46:38,371 - DEBUG - dispatch pc=90, inst=CALL(arg=1, lineno=575)
2024-06-06 03:46:38,371 - DEBUG - stack ['$null$58.1', '$68load_attr.2', '$a88.3']
2024-06-06 03:46:38,371 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=1, lineno=575)
2024-06-06 03:46:38,371 - DEBUG - stack ['$90call.4']
2024-06-06 03:46:38,371 - DEBUG - dispatch pc=100, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-06-06 03:46:38,371 - DEBUG - stack []
2024-06-06 03:46:38,371 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-06-06 03:46:38,371 - DEBUG - stack ['$null$100.6', '$100load_global.5']
2024-06-06 03:46:38,371 - DEBUG - dispatch pc=112, inst=CALL(arg=1, lineno=576)
2024-06-06 03:46:38,372 - DEBUG - stack ['$null$100.6', '$100load_global.5', '$it110.7']
2024-06-06 03:46:38,372 - DEBUG - dispatch pc=120, inst=LOAD_ATTR(arg=11, lineno=576)
2024-06-06 03:46:38,372 - DEBUG - stack ['$112call.8']
2024-06-06 03:46:38,372 - DEBUG - dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=576)
2024-06-06 03:46:38,372 - DEBUG - stack ['$null$120.9', '$120load_attr.10']
2024-06-06 03:46:38,372 - DEBUG - dispatch pc=142, inst=CALL(arg=1, lineno=576)
2024-06-06 03:46:38,372 - DEBUG - stack ['$null$120.9', '$120load_attr.10', '$const140.11']
2024-06-06 03:46:38,372 - DEBUG - dispatch pc=150, inst=STORE_FAST(arg=2, lineno=576)
2024-06-06 03:46:38,372 - DEBUG - stack ['$142call.12']
2024-06-06 03:46:38,372 - DEBUG - dispatch pc=152, inst=PUSH_NULL(arg=None, lineno=577)
2024-06-06 03:46:38,372 - DEBUG - stack []
2024-06-06 03:46:38,372 - DEBUG - dispatch pc=154, inst=LOAD_DEREF(arg=6, lineno=577)
2024-06-06 03:46:38,372 - DEBUG - stack ['$null$152.13']
2024-06-06 03:46:38,373 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=2, lineno=577)
2024-06-06 03:46:38,373 - DEBUG - stack ['$null$152.13', '$154load_deref.14']
2024-06-06 03:46:38,373 - DEBUG - dispatch pc=158, inst=CALL(arg=1, lineno=577)
2024-06-06 03:46:38,373 - DEBUG - stack ['$null$152.13', '$154load_deref.14', '$max_value156.15']
2024-06-06 03:46:38,373 - DEBUG - dispatch pc=166, inst=POP_JUMP_IF_FALSE(arg=2, lineno=577)
2024-06-06 03:46:38,373 - DEBUG - stack ['$158call.16']
2024-06-06 03:46:38,373 - DEBUG - end state. edges=[Edge(pc=168, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,373 - DEBUG - pending: deque([State(pc_initial=168 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
2024-06-06 03:46:38,373 - DEBUG - stack: []
2024-06-06 03:46:38,373 - DEBUG - state.pc_initial: State(pc_initial=168 nstack_initial=0)
2024-06-06 03:46:38,373 - DEBUG - dispatch pc=168, inst=LOAD_FAST(arg=2, lineno=578)
2024-06-06 03:46:38,373 - DEBUG - stack []
2024-06-06 03:46:38,373 - DEBUG - dispatch pc=170, inst=RETURN_VALUE(arg=None, lineno=578)
2024-06-06 03:46:38,374 - DEBUG - stack ['$max_value168.0']
2024-06-06 03:46:38,374 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,374 - DEBUG - pending: deque([State(pc_initial=172 nstack_initial=0)])
2024-06-06 03:46:38,374 - DEBUG - stack: []
2024-06-06 03:46:38,374 - DEBUG - state.pc_initial: State(pc_initial=172 nstack_initial=0)
2024-06-06 03:46:38,374 - DEBUG - dispatch pc=172, inst=LOAD_FAST(arg=1, lineno=580)
2024-06-06 03:46:38,374 - DEBUG - stack []
2024-06-06 03:46:38,374 - DEBUG - dispatch pc=174, inst=GET_ITER(arg=None, lineno=580)
2024-06-06 03:46:38,374 - DEBUG - stack ['$it172.0']
2024-06-06 03:46:38,374 - DEBUG - end state. edges=[Edge(pc=176, stack=('$174get_iter.1',), blockstack=(), npush=0)]
2024-06-06 03:46:38,374 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:38,374 - DEBUG - stack: ['$phi176.0']
2024-06-06 03:46:38,374 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=1)
2024-06-06 03:46:38,375 - DEBUG - dispatch pc=176, inst=FOR_ITER(arg=42, lineno=580)
2024-06-06 03:46:38,375 - DEBUG - stack ['$phi176.0']
2024-06-06 03:46:38,375 - DEBUG - end state. edges=[Edge(pc=264, stack=('$phi176.0', '$176for_iter.2'), blockstack=(), npush=0), Edge(pc=180, stack=('$phi176.0', '$176for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:38,375 - DEBUG - pending: deque([State(pc_initial=264 nstack_initial=2), State(pc_initial=180 nstack_initial=2)])
2024-06-06 03:46:38,375 - DEBUG - stack: ['$phi264.0', '$phi264.1']
2024-06-06 03:46:38,375 - DEBUG - state.pc_initial: State(pc_initial=264 nstack_initial=2)
2024-06-06 03:46:38,375 - DEBUG - dispatch pc=264, inst=END_FOR(arg=None, lineno=580)
2024-06-06 03:46:38,375 - DEBUG - stack ['$phi264.0', '$phi264.1']
2024-06-06 03:46:38,375 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=2, lineno=586)
2024-06-06 03:46:38,375 - DEBUG - stack []
2024-06-06 03:46:38,375 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=586)
2024-06-06 03:46:38,375 - DEBUG - stack ['$max_value266.2']
2024-06-06 03:46:38,375 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,376 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=2)])
2024-06-06 03:46:38,376 - DEBUG - stack: ['$phi180.0', '$phi180.1']
2024-06-06 03:46:38,376 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=2)
2024-06-06 03:46:38,376 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=3, lineno=580)
2024-06-06 03:46:38,376 - DEBUG - stack ['$phi180.0', '$phi180.1']
2024-06-06 03:46:38,376 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=3, lineno=581)
2024-06-06 03:46:38,376 - DEBUG - stack ['$phi180.0']
2024-06-06 03:46:38,376 - DEBUG - dispatch pc=184, inst=LOAD_ATTR(arg=13, lineno=581)
2024-06-06 03:46:38,376 - DEBUG - stack ['$phi180.0', '$view182.2']
2024-06-06 03:46:38,376 - DEBUG - dispatch pc=204, inst=CALL(arg=0, lineno=581)
2024-06-06 03:46:38,376 - DEBUG - stack ['$phi180.0', '$null$184.3', '$184load_attr.4']
2024-06-06 03:46:38,376 - DEBUG - dispatch pc=212, inst=STORE_FAST(arg=4, lineno=581)
2024-06-06 03:46:38,377 - DEBUG - stack ['$phi180.0', '$204call.5']
2024-06-06 03:46:38,377 - DEBUG - dispatch pc=214, inst=PUSH_NULL(arg=None, lineno=582)
2024-06-06 03:46:38,377 - DEBUG - stack ['$phi180.0']
2024-06-06 03:46:38,377 - DEBUG - dispatch pc=216, inst=LOAD_DEREF(arg=6, lineno=582)
2024-06-06 03:46:38,377 - DEBUG - stack ['$phi180.0', '$null$214.6']
2024-06-06 03:46:38,377 - DEBUG - dispatch pc=218, inst=LOAD_FAST(arg=4, lineno=582)
2024-06-06 03:46:38,377 - DEBUG - stack ['$phi180.0', '$null$214.6', '$216load_deref.7']
2024-06-06 03:46:38,377 - DEBUG - dispatch pc=220, inst=CALL(arg=1, lineno=582)
2024-06-06 03:46:38,377 - DEBUG - stack ['$phi180.0', '$null$214.6', '$216load_deref.7', '$v218.8']
2024-06-06 03:46:38,377 - DEBUG - dispatch pc=228, inst=POP_JUMP_IF_FALSE(arg=4, lineno=582)
2024-06-06 03:46:38,377 - DEBUG - stack ['$phi180.0', '$220call.9']
2024-06-06 03:46:38,377 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi180.0',), blockstack=(), npush=0), Edge(pc=238, stack=('$phi180.0',), blockstack=(), npush=0)]
2024-06-06 03:46:38,378 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1), State(pc_initial=238 nstack_initial=1)])
2024-06-06 03:46:38,378 - DEBUG - stack: ['$phi230.0']
2024-06-06 03:46:38,378 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-06 03:46:38,378 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=4, lineno=583)
2024-06-06 03:46:38,378 - DEBUG - stack ['$phi230.0']
2024-06-06 03:46:38,378 - DEBUG - dispatch pc=232, inst=SWAP(arg=2, lineno=583)
2024-06-06 03:46:38,378 - DEBUG - stack ['$phi230.0', '$v230.1']
2024-06-06 03:46:38,378 - DEBUG - dispatch pc=234, inst=POP_TOP(arg=None, lineno=583)
2024-06-06 03:46:38,378 - DEBUG - stack ['$v230.1', '$phi230.0']
2024-06-06 03:46:38,378 - DEBUG - dispatch pc=236, inst=RETURN_VALUE(arg=None, lineno=583)
2024-06-06 03:46:38,378 - DEBUG - stack ['$v230.1']
2024-06-06 03:46:38,378 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,378 - DEBUG - pending: deque([State(pc_initial=238 nstack_initial=1)])
2024-06-06 03:46:38,379 - DEBUG - stack: ['$phi238.0']
2024-06-06 03:46:38,379 - DEBUG - state.pc_initial: State(pc_initial=238 nstack_initial=1)
2024-06-06 03:46:38,379 - DEBUG - dispatch pc=238, inst=PUSH_NULL(arg=None, lineno=584)
2024-06-06 03:46:38,379 - DEBUG - stack ['$phi238.0']
2024-06-06 03:46:38,379 - DEBUG - dispatch pc=240, inst=LOAD_DEREF(arg=5, lineno=584)
2024-06-06 03:46:38,379 - DEBUG - stack ['$phi238.0', '$null$238.1']
2024-06-06 03:46:38,379 - DEBUG - dispatch pc=242, inst=LOAD_FAST(arg=4, lineno=584)
2024-06-06 03:46:38,379 - DEBUG - stack ['$phi238.0', '$null$238.1', '$240load_deref.2']
2024-06-06 03:46:38,379 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=2, lineno=584)
2024-06-06 03:46:38,379 - DEBUG - stack ['$phi238.0', '$null$238.1', '$240load_deref.2', '$v242.3']
2024-06-06 03:46:38,379 - DEBUG - dispatch pc=246, inst=CALL(arg=2, lineno=584)
2024-06-06 03:46:38,379 - DEBUG - stack ['$phi238.0', '$null$238.1', '$240load_deref.2', '$v242.3', '$max_value244.4']
2024-06-06 03:46:38,379 - DEBUG - dispatch pc=254, inst=POP_JUMP_IF_TRUE(arg=1, lineno=584)
2024-06-06 03:46:38,380 - DEBUG - stack ['$phi238.0', '$246call.5']
2024-06-06 03:46:38,380 - DEBUG - end state. edges=[Edge(pc=256, stack=('$phi238.0',), blockstack=(), npush=0), Edge(pc=258, stack=('$phi238.0',), blockstack=(), npush=0)]
2024-06-06 03:46:38,380 - DEBUG - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=258 nstack_initial=1)])
2024-06-06 03:46:38,380 - DEBUG - stack: ['$phi256.0']
2024-06-06 03:46:38,380 - DEBUG - state.pc_initial: State(pc_initial=256 nstack_initial=1)
2024-06-06 03:46:38,380 - DEBUG - dispatch pc=256, inst=JUMP_BACKWARD(arg=41, lineno=584)
2024-06-06 03:46:38,380 - DEBUG - stack ['$phi256.0']
2024-06-06 03:46:38,380 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi256.0',), blockstack=(), npush=0)]
2024-06-06 03:46:38,380 - DEBUG - pending: deque([State(pc_initial=258 nstack_initial=1), State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:38,380 - DEBUG - stack: ['$phi258.0']
2024-06-06 03:46:38,380 - DEBUG - state.pc_initial: State(pc_initial=258 nstack_initial=1)
2024-06-06 03:46:38,380 - DEBUG - dispatch pc=258, inst=LOAD_FAST(arg=4, lineno=585)
2024-06-06 03:46:38,380 - DEBUG - stack ['$phi258.0']
2024-06-06 03:46:38,381 - DEBUG - dispatch pc=260, inst=STORE_FAST(arg=2, lineno=585)
2024-06-06 03:46:38,381 - DEBUG - stack ['$phi258.0', '$v258.1']
2024-06-06 03:46:38,381 - DEBUG - dispatch pc=262, inst=JUMP_BACKWARD(arg=44, lineno=585)
2024-06-06 03:46:38,381 - DEBUG - stack ['$phi258.0']
2024-06-06 03:46:38,381 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi258.0',), blockstack=(), npush=0)]
2024-06-06 03:46:38,381 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:38,381 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:38,381 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:38,381 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=168 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): {'$phi176.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=230 nstack_initial=1): set(),
             State(pc_initial=238 nstack_initial=1): set(),
             State(pc_initial=256 nstack_initial=1): set(),
             State(pc_initial=258 nstack_initial=1): set(),
             State(pc_initial=264 nstack_initial=2): set()})
2024-06-06 03:46:38,382 - DEBUG - defmap: {'$phi176.0': State(pc_initial=172 nstack_initial=0),
 '$phi180.1': State(pc_initial=176 nstack_initial=1),
 '$phi264.1': State(pc_initial=176 nstack_initial=1)}
2024-06-06 03:46:38,382 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi256.0',
                            State(pc_initial=256 nstack_initial=1)),
                           ('$phi258.0',
                            State(pc_initial=258 nstack_initial=1))},
             '$phi180.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi238.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi256.0': {('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi258.0': {('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi264.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:38,384 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi180.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi238.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi256.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi258.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:38,385 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi238.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi256.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi258.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:38,386 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi238.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi256.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi258.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:38,387 - DEBUG - keep phismap: {'$phi176.0': {('$174get_iter.1', State(pc_initial=172 nstack_initial=0))},
 '$phi180.1': {('$176for_iter.2', State(pc_initial=176 nstack_initial=1))}}
2024-06-06 03:46:38,388 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=172 nstack_initial=0): {'$phi176.0': '$174get_iter.1'},
             State(pc_initial=176 nstack_initial=1): {'$phi180.1': '$176for_iter.2'}})
2024-06-06 03:46:38,388 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:38,388 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (28, {'res': '$const28.2'}), (30, {'lhs': '$8load_attr.1', 'rhs': '$const28.2', 'res': '$30compare_op.3'}), (34, {'pred': '$30compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: (), 58: ()})
2024-06-06 03:46:38,388 - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'idx': 1, 'res': '$36load_global.0'}), (46, {'res': '$const46.2'}), (48, {'func': '$36load_global.0', 'args': ['$const46.2'], 'kw_names': None, 'res': '$48call.3'}), (56, {'exc': '$48call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,388 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (68, {'item': '$58load_global.0', 'res': '$68load_attr.2'}), (88, {'res': '$a88.3'}), (90, {'func': '$68load_attr.2', 'args': ['$a88.3'], 'kw_names': None, 'res': '$90call.4'}), (98, {'value': '$90call.4'}), (100, {'idx': 4, 'res': '$100load_global.5'}), (110, {'res': '$it110.7'}), (112, {'func': '$100load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$112call.8'}), (120, {'item': '$112call.8', 'res': '$120load_attr.10'}), (140, {'res': '$const140.11'}), (142, {'func': '$120load_attr.10', 'args': ['$const140.11'], 'kw_names': None, 'res': '$142call.12'}), (150, {'value': '$142call.12'}), (152, {}), (154, {'res': '$154load_deref.14'}), (156, {'res': '$max_value156.15'}), (158, {'func': '$154load_deref.14', 'args': ['$max_value156.15'], 'kw_names': None, 'res': '$158call.16'}), (166, {'pred': '$158call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={168: (), 172: ()})
2024-06-06 03:46:38,389 - DEBUG - block_infos State(pc_initial=168 nstack_initial=0):
AdaptBlockInfo(insts=((168, {'res': '$max_value168.0'}), (170, {'retval': '$max_value168.0', 'castval': '$170return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,389 - DEBUG - block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$it172.0'}), (174, {'value': '$it172.0', 'res': '$174get_iter.1'})), outgoing_phis={'$phi176.0': '$174get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.1',)})
2024-06-06 03:46:38,389 - DEBUG - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {'iterator': '$phi176.0', 'pair': '$176for_iter.1', 'indval': '$176for_iter.2', 'pred': '$176for_iter.3'}),), outgoing_phis={'$phi180.1': '$176for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={264: ('$phi176.0', '$176for_iter.2'), 180: ('$phi176.0', '$176for_iter.2')})
2024-06-06 03:46:38,389 - DEBUG - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$view182.2'}), (184, {'item': '$view182.2', 'res': '$184load_attr.4'}), (204, {'func': '$184load_attr.4', 'args': [], 'kw_names': None, 'res': '$204call.5'}), (212, {'value': '$204call.5'}), (214, {}), (216, {'res': '$216load_deref.7'}), (218, {'res': '$v218.8'}), (220, {'func': '$216load_deref.7', 'args': ['$v218.8'], 'kw_names': None, 'res': '$220call.9'}), (228, {'pred': '$220call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi180.0',), 238: ('$phi180.0',)})
2024-06-06 03:46:38,389 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'res': '$v230.1'}), (236, {'retval': '$v230.1', 'castval': '$236return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,389 - DEBUG - block_infos State(pc_initial=238 nstack_initial=1):
AdaptBlockInfo(insts=((238, {}), (240, {'res': '$240load_deref.2'}), (242, {'res': '$v242.3'}), (244, {'res': '$max_value244.4'}), (246, {'func': '$240load_deref.2', 'args': ['$v242.3', '$max_value244.4'], 'kw_names': None, 'res': '$246call.5'}), (254, {'pred': '$246call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={256: ('$phi238.0',), 258: ('$phi238.0',)})
2024-06-06 03:46:38,389 - DEBUG - block_infos State(pc_initial=256 nstack_initial=1):
AdaptBlockInfo(insts=((256, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi256.0',)})
2024-06-06 03:46:38,389 - DEBUG - block_infos State(pc_initial=258 nstack_initial=1):
AdaptBlockInfo(insts=((258, {'res': '$v258.1'}), (260, {'value': '$v258.1'}), (262, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi258.0',)})
2024-06-06 03:46:38,389 - DEBUG - block_infos State(pc_initial=264 nstack_initial=2):
AdaptBlockInfo(insts=((266, {'res': '$max_value266.2'}), (268, {'retval': '$max_value266.2', 'castval': '$268return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,391 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const28.2 = const(int, 0)               ['$const28.2']
    $30compare_op.3 = $8load_attr.1 == $const28.2 ['$30compare_op.3', '$8load_attr.1', '$const28.2']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$34pred', 'bool34']
    branch $34pred, 36, 58                   ['$34pred']
label 36:
    $36load_global.0 = global(ValueError: <class 'ValueError'>) ['$36load_global.0']
    $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const46.2']
    $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_global.0', '$48call.3', '$const46.2']
    raise $48call.3                          ['$48call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$58load_global.0']
    $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$68load_attr.2']
    it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_attr.2', 'a', 'it']
    $100load_global.5 = global(next: <built-in function next>) ['$100load_global.5']
    $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.5', '$112call.8', 'it']
    $120load_attr.10 = getattr(value=$112call.8, attr=take) ['$112call.8', '$120load_attr.10']
    $const140.11 = const(int, 0)             ['$const140.11']
    max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_attr.10', '$const140.11', 'max_value']
    $154load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>) ['$154load_deref.14']
    $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$154load_deref.14', '$158call.16', 'max_value']
    bool166 = global(bool: <class 'bool'>)   ['bool166']
    $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$158call.16', '$166pred', 'bool166']
    branch $166pred, 168, 172                ['$166pred']
label 168:
    $170return_value.1 = cast(value=max_value) ['$170return_value.1', 'max_value']
    return $170return_value.1                ['$170return_value.1']
label 172:
    $174get_iter.1 = getiter(value=it)       ['$174get_iter.1', 'it']
    $phi176.0 = $174get_iter.1               ['$174get_iter.1', '$phi176.0']
    jump 176                                 []
label 176:
    $176for_iter.1 = iternext(value=$phi176.0) ['$176for_iter.1', '$phi176.0']
    $176for_iter.2 = pair_first(value=$176for_iter.1) ['$176for_iter.1', '$176for_iter.2']
    $176for_iter.3 = pair_second(value=$176for_iter.1) ['$176for_iter.1', '$176for_iter.3']
    $phi180.1 = $176for_iter.2               ['$176for_iter.2', '$phi180.1']
    branch $176for_iter.3, 180, 264          ['$176for_iter.3']
label 180:
    view = $phi180.1                         ['$phi180.1', 'view']
    $184load_attr.4 = getattr(value=view, attr=item) ['$184load_attr.4', 'view']
    v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$184load_attr.4', 'v']
    $216load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>) ['$216load_deref.7']
    $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$216load_deref.7', '$220call.9', 'v']
    bool228 = global(bool: <class 'bool'>)   ['bool228']
    $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$220call.9', '$228pred', 'bool228']
    branch $228pred, 230, 238                ['$228pred']
label 230:
    $236return_value.2 = cast(value=v)       ['$236return_value.2', 'v']
    return $236return_value.2                ['$236return_value.2']
label 238:
    $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>) ['$240load_deref.2']
    $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$240load_deref.2', '$246call.5', 'max_value', 'v']
    bool254 = global(bool: <class 'bool'>)   ['bool254']
    $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$246call.5', '$254pred', 'bool254']
    branch $254pred, 258, 256                ['$254pred']
label 256:
    jump 176                                 []
label 258:
    max_value = v                            ['max_value', 'v']
    jump 176                                 []
label 264:
    $268return_value.3 = cast(value=max_value) ['$268return_value.3', 'max_value']
    return $268return_value.3                ['$268return_value.3']

2024-06-06 03:46:38,405 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:38,405 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2162cf0>
2024-06-06 03:46:38,405 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:38,405 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-06 03:46:38,406 - DEBUG - on stmt: $const28.2 = const(int, 0)
2024-06-06 03:46:38,406 - DEBUG - on stmt: $30compare_op.3 = $8load_attr.1 == $const28.2
2024-06-06 03:46:38,406 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,406 - DEBUG - on stmt: $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,406 - DEBUG - on stmt: branch $34pred, 36, 58
2024-06-06 03:46:38,406 - DEBUG - ==== SSA block analysis pass on 36
2024-06-06 03:46:38,406 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2162cf0>
2024-06-06 03:46:38,406 - DEBUG - on stmt: $36load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,406 - DEBUG - on stmt: $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-06 03:46:38,406 - DEBUG - on stmt: $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,406 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-06 03:46:38,407 - DEBUG - ==== SSA block analysis pass on 58
2024-06-06 03:46:38,407 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2162cf0>
2024-06-06 03:46:38,407 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:38,407 - DEBUG - on stmt: $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-06 03:46:38,407 - DEBUG - on stmt: it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,407 - DEBUG - on stmt: $100load_global.5 = global(next: <built-in function next>)
2024-06-06 03:46:38,407 - DEBUG - on stmt: $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,407 - DEBUG - on stmt: $120load_attr.10 = getattr(value=$112call.8, attr=take)
2024-06-06 03:46:38,407 - DEBUG - on stmt: $const140.11 = const(int, 0)
2024-06-06 03:46:38,407 - DEBUG - on stmt: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,407 - DEBUG - on stmt: $154load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-06 03:46:38,408 - DEBUG - on stmt: $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,408 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,408 - DEBUG - on stmt: $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,408 - DEBUG - on stmt: branch $166pred, 168, 172
2024-06-06 03:46:38,408 - DEBUG - ==== SSA block analysis pass on 168
2024-06-06 03:46:38,408 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2162cf0>
2024-06-06 03:46:38,408 - DEBUG - on stmt: $170return_value.1 = cast(value=max_value)
2024-06-06 03:46:38,408 - DEBUG - on stmt: return $170return_value.1
2024-06-06 03:46:38,408 - DEBUG - ==== SSA block analysis pass on 172
2024-06-06 03:46:38,408 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2162cf0>
2024-06-06 03:46:38,408 - DEBUG - on stmt: $174get_iter.1 = getiter(value=it)
2024-06-06 03:46:38,408 - DEBUG - on stmt: $phi176.0 = $174get_iter.1
2024-06-06 03:46:38,409 - DEBUG - on stmt: jump 176
2024-06-06 03:46:38,409 - DEBUG - ==== SSA block analysis pass on 176
2024-06-06 03:46:38,409 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2162cf0>
2024-06-06 03:46:38,409 - DEBUG - on stmt: $176for_iter.1 = iternext(value=$phi176.0)
2024-06-06 03:46:38,409 - DEBUG - on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
2024-06-06 03:46:38,409 - DEBUG - on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
2024-06-06 03:46:38,409 - DEBUG - on stmt: $phi180.1 = $176for_iter.2
2024-06-06 03:46:38,409 - DEBUG - on stmt: branch $176for_iter.3, 180, 264
2024-06-06 03:46:38,409 - DEBUG - ==== SSA block analysis pass on 180
2024-06-06 03:46:38,409 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2162cf0>
2024-06-06 03:46:38,409 - DEBUG - on stmt: view = $phi180.1
2024-06-06 03:46:38,409 - DEBUG - on stmt: $184load_attr.4 = getattr(value=view, attr=item)
2024-06-06 03:46:38,409 - DEBUG - on stmt: v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,410 - DEBUG - on stmt: $216load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-06 03:46:38,410 - DEBUG - on stmt: $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,410 - DEBUG - on stmt: bool228 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,410 - DEBUG - on stmt: $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,410 - DEBUG - on stmt: branch $228pred, 230, 238
2024-06-06 03:46:38,410 - DEBUG - ==== SSA block analysis pass on 230
2024-06-06 03:46:38,410 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2162cf0>
2024-06-06 03:46:38,410 - DEBUG - on stmt: $236return_value.2 = cast(value=v)
2024-06-06 03:46:38,410 - DEBUG - on stmt: return $236return_value.2
2024-06-06 03:46:38,410 - DEBUG - ==== SSA block analysis pass on 238
2024-06-06 03:46:38,410 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2162cf0>
2024-06-06 03:46:38,410 - DEBUG - on stmt: $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>)
2024-06-06 03:46:38,411 - DEBUG - on stmt: $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,411 - DEBUG - on stmt: bool254 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,411 - DEBUG - on stmt: $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,411 - DEBUG - on stmt: branch $254pred, 258, 256
2024-06-06 03:46:38,411 - DEBUG - ==== SSA block analysis pass on 256
2024-06-06 03:46:38,411 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2162cf0>
2024-06-06 03:46:38,411 - DEBUG - on stmt: jump 265
2024-06-06 03:46:38,411 - DEBUG - ==== SSA block analysis pass on 258
2024-06-06 03:46:38,411 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2162cf0>
2024-06-06 03:46:38,411 - DEBUG - on stmt: max_value = v
2024-06-06 03:46:38,411 - DEBUG - on stmt: jump 265
2024-06-06 03:46:38,411 - DEBUG - ==== SSA block analysis pass on 264
2024-06-06 03:46:38,412 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2162cf0>
2024-06-06 03:46:38,412 - DEBUG - on stmt: $268return_value.3 = cast(value=max_value)
2024-06-06 03:46:38,412 - DEBUG - on stmt: return $268return_value.3
2024-06-06 03:46:38,412 - DEBUG - ==== SSA block analysis pass on 265
2024-06-06 03:46:38,412 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2162cf0>
2024-06-06 03:46:38,412 - DEBUG - on stmt: jump 176
2024-06-06 03:46:38,415 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100load_global.5': [(<numba.core.ir.Assign object at 0x7fe9d2163590>,
                                    58)],
             '$112call.8': [(<numba.core.ir.Assign object at 0x7fe9d2162e40>,
                             58)],
             '$120load_attr.10': [(<numba.core.ir.Assign object at 0x7fe9d2162720>,
                                   58)],
             '$154load_deref.14': [(<numba.core.ir.Assign object at 0x7fe9d21fac00>,
                                    58)],
             '$158call.16': [(<numba.core.ir.Assign object at 0x7fe9d21fa990>,
                              58)],
             '$166pred': [(<numba.core.ir.Assign object at 0x7fe9d21fa000>,
                           58)],
             '$170return_value.1': [(<numba.core.ir.Assign object at 0x7fe9d21f97f0>,
                                     168)],
             '$174get_iter.1': [(<numba.core.ir.Assign object at 0x7fe9d2162330>,
                                 172)],
             '$176for_iter.1': [(<numba.core.ir.Assign object at 0x7fe9d2163d70>,
                                 176)],
             '$176for_iter.2': [(<numba.core.ir.Assign object at 0x7fe9d2163f80>,
                                 176)],
             '$176for_iter.3': [(<numba.core.ir.Assign object at 0x7fe9d2163bf0>,
                                 176)],
             '$184load_attr.4': [(<numba.core.ir.Assign object at 0x7fe9d2161a60>,
                                  180)],
             '$216load_deref.7': [(<numba.core.ir.Assign object at 0x7fe9d2161ee0>,
                                   180)],
             '$220call.9': [(<numba.core.ir.Assign object at 0x7fe9d2161460>,
                             180)],
             '$228pred': [(<numba.core.ir.Assign object at 0x7fe9d2160fb0>,
                           180)],
             '$236return_value.2': [(<numba.core.ir.Assign object at 0x7fe9d21611f0>,
                                     230)],
             '$240load_deref.2': [(<numba.core.ir.Assign object at 0x7fe9d21614c0>,
                                   238)],
             '$246call.5': [(<numba.core.ir.Assign object at 0x7fe9d2160b90>,
                             238)],
             '$254pred': [(<numba.core.ir.Assign object at 0x7fe9d2160ec0>,
                           238)],
             '$268return_value.3': [(<numba.core.ir.Assign object at 0x7fe9d2160560>,
                                     264)],
             '$30compare_op.3': [(<numba.core.ir.Assign object at 0x7fe9d2163d10>,
                                  0)],
             '$34pred': [(<numba.core.ir.Assign object at 0x7fe9d21639e0>, 0)],
             '$36load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d21638c0>,
                                   36)],
             '$48call.3': [(<numba.core.ir.Assign object at 0x7fe9d21636b0>,
                            36)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d2163380>,
                                   58)],
             '$68load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9d2163140>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x7fe9d21f9580>,
                                0)],
             '$const140.11': [(<numba.core.ir.Assign object at 0x7fe9d21625d0>,
                               58)],
             '$const28.2': [(<numba.core.ir.Assign object at 0x7fe9d21f8d70>,
                             0)],
             '$const46.2': [(<numba.core.ir.Assign object at 0x7fe9d2163770>,
                             36)],
             '$phi176.0': [(<numba.core.ir.Assign object at 0x7fe9d2162810>,
                            172)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x7fe9d2163dd0>,
                            176)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9d21fa540>, 0)],
             'bool166': [(<numba.core.ir.Assign object at 0x7fe9d21fa450>, 58)],
             'bool228': [(<numba.core.ir.Assign object at 0x7fe9d21613a0>,
                          180)],
             'bool254': [(<numba.core.ir.Assign object at 0x7fe9d21608f0>,
                          238)],
             'bool34': [(<numba.core.ir.Assign object at 0x7fe9d2162870>, 0)],
             'it': [(<numba.core.ir.Assign object at 0x7fe9d2162b10>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x7fe9d21620c0>,
                            58),
                           (<numba.core.ir.Assign object at 0x7fe9d2160260>,
                            258)],
             'v': [(<numba.core.ir.Assign object at 0x7fe9d2161e80>, 180)],
             'view': [(<numba.core.ir.Assign object at 0x7fe9d2162780>, 180)]})
2024-06-06 03:46:38,415 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d1f30b00>
2024-06-06 03:46:38,415 - DEBUG - Fix SSA violator on var max_value
2024-06-06 03:46:38,415 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:38,415 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2160080>
2024-06-06 03:46:38,415 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:38,415 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-06 03:46:38,415 - DEBUG - on stmt: $const28.2 = const(int, 0)
2024-06-06 03:46:38,415 - DEBUG - on stmt: $30compare_op.3 = $8load_attr.1 == $const28.2
2024-06-06 03:46:38,415 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,416 - DEBUG - on stmt: $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,416 - DEBUG - on stmt: branch $34pred, 36, 58
2024-06-06 03:46:38,416 - DEBUG - ==== SSA block rewrite pass on 36
2024-06-06 03:46:38,416 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2160080>
2024-06-06 03:46:38,416 - DEBUG - on stmt: $36load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,416 - DEBUG - on stmt: $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-06 03:46:38,416 - DEBUG - on stmt: $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,416 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-06 03:46:38,416 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-06 03:46:38,416 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2160080>
2024-06-06 03:46:38,416 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:38,416 - DEBUG - on stmt: $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-06 03:46:38,416 - DEBUG - on stmt: it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,416 - DEBUG - on stmt: $100load_global.5 = global(next: <built-in function next>)
2024-06-06 03:46:38,417 - DEBUG - on stmt: $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,417 - DEBUG - on stmt: $120load_attr.10 = getattr(value=$112call.8, attr=take)
2024-06-06 03:46:38,417 - DEBUG - on stmt: $const140.11 = const(int, 0)
2024-06-06 03:46:38,417 - DEBUG - on stmt: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,417 - DEBUG - first assign: max_value
2024-06-06 03:46:38,417 - DEBUG - replaced with: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,417 - DEBUG - on stmt: $154load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-06 03:46:38,417 - DEBUG - on stmt: $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,417 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,417 - DEBUG - on stmt: $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,417 - DEBUG - on stmt: branch $166pred, 168, 172
2024-06-06 03:46:38,417 - DEBUG - ==== SSA block rewrite pass on 168
2024-06-06 03:46:38,417 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2160080>
2024-06-06 03:46:38,418 - DEBUG - on stmt: $170return_value.1 = cast(value=max_value)
2024-06-06 03:46:38,418 - DEBUG - on stmt: return $170return_value.1
2024-06-06 03:46:38,418 - DEBUG - ==== SSA block rewrite pass on 172
2024-06-06 03:46:38,418 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2160080>
2024-06-06 03:46:38,418 - DEBUG - on stmt: $174get_iter.1 = getiter(value=it)
2024-06-06 03:46:38,418 - DEBUG - on stmt: $phi176.0 = $174get_iter.1
2024-06-06 03:46:38,418 - DEBUG - on stmt: jump 176
2024-06-06 03:46:38,418 - DEBUG - ==== SSA block rewrite pass on 176
2024-06-06 03:46:38,418 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2160080>
2024-06-06 03:46:38,418 - DEBUG - on stmt: $176for_iter.1 = iternext(value=$phi176.0)
2024-06-06 03:46:38,418 - DEBUG - on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
2024-06-06 03:46:38,418 - DEBUG - on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
2024-06-06 03:46:38,419 - DEBUG - on stmt: $phi180.1 = $176for_iter.2
2024-06-06 03:46:38,419 - DEBUG - on stmt: branch $176for_iter.3, 180, 264
2024-06-06 03:46:38,419 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-06 03:46:38,419 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2160080>
2024-06-06 03:46:38,419 - DEBUG - on stmt: view = $phi180.1
2024-06-06 03:46:38,419 - DEBUG - on stmt: $184load_attr.4 = getattr(value=view, attr=item)
2024-06-06 03:46:38,419 - DEBUG - on stmt: v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,419 - DEBUG - on stmt: $216load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-06 03:46:38,419 - DEBUG - on stmt: $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,419 - DEBUG - on stmt: bool228 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,419 - DEBUG - on stmt: $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,419 - DEBUG - on stmt: branch $228pred, 230, 238
2024-06-06 03:46:38,419 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:38,419 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2160080>
2024-06-06 03:46:38,420 - DEBUG - on stmt: $236return_value.2 = cast(value=v)
2024-06-06 03:46:38,420 - DEBUG - on stmt: return $236return_value.2
2024-06-06 03:46:38,420 - DEBUG - ==== SSA block rewrite pass on 238
2024-06-06 03:46:38,420 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2160080>
2024-06-06 03:46:38,420 - DEBUG - on stmt: $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>)
2024-06-06 03:46:38,420 - DEBUG - on stmt: $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,420 - DEBUG - on stmt: bool254 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,420 - DEBUG - on stmt: $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,420 - DEBUG - on stmt: branch $254pred, 258, 256
2024-06-06 03:46:38,420 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:38,421 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2160080>
2024-06-06 03:46:38,421 - DEBUG - on stmt: jump 265
2024-06-06 03:46:38,421 - DEBUG - ==== SSA block rewrite pass on 258
2024-06-06 03:46:38,421 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2160080>
2024-06-06 03:46:38,421 - DEBUG - on stmt: max_value = v
2024-06-06 03:46:38,421 - DEBUG - replaced with: max_value.1 = v
2024-06-06 03:46:38,421 - DEBUG - on stmt: jump 265
2024-06-06 03:46:38,421 - DEBUG - ==== SSA block rewrite pass on 264
2024-06-06 03:46:38,422 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2160080>
2024-06-06 03:46:38,422 - DEBUG - on stmt: $268return_value.3 = cast(value=max_value)
2024-06-06 03:46:38,422 - DEBUG - on stmt: return $268return_value.3
2024-06-06 03:46:38,422 - DEBUG - ==== SSA block rewrite pass on 265
2024-06-06 03:46:38,422 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2160080>
2024-06-06 03:46:38,422 - DEBUG - on stmt: jump 176
2024-06-06 03:46:38,422 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x7fe9d2160e30>],
             258: [<numba.core.ir.Assign object at 0x7fe9d21fb050>]})
2024-06-06 03:46:38,422 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:38,422 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2160080>
2024-06-06 03:46:38,422 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:38,422 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-06 03:46:38,422 - DEBUG - on stmt: $const28.2 = const(int, 0)
2024-06-06 03:46:38,423 - DEBUG - on stmt: $30compare_op.3 = $8load_attr.1 == $const28.2
2024-06-06 03:46:38,423 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,423 - DEBUG - on stmt: $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,423 - DEBUG - on stmt: branch $34pred, 36, 58
2024-06-06 03:46:38,423 - DEBUG - ==== SSA block rewrite pass on 36
2024-06-06 03:46:38,423 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2160080>
2024-06-06 03:46:38,423 - DEBUG - on stmt: $36load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,423 - DEBUG - on stmt: $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-06 03:46:38,423 - DEBUG - on stmt: $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,423 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-06 03:46:38,424 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-06 03:46:38,424 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2160080>
2024-06-06 03:46:38,424 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:38,424 - DEBUG - on stmt: $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-06 03:46:38,424 - DEBUG - on stmt: it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,424 - DEBUG - on stmt: $100load_global.5 = global(next: <built-in function next>)
2024-06-06 03:46:38,424 - DEBUG - on stmt: $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,424 - DEBUG - on stmt: $120load_attr.10 = getattr(value=$112call.8, attr=take)
2024-06-06 03:46:38,424 - DEBUG - on stmt: $const140.11 = const(int, 0)
2024-06-06 03:46:38,424 - DEBUG - on stmt: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,424 - DEBUG - on stmt: $154load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-06 03:46:38,425 - DEBUG - on stmt: $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,425 - DEBUG - find_def var='max_value' stmt=$158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,425 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,425 - DEBUG - on stmt: $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,425 - DEBUG - on stmt: branch $166pred, 168, 172
2024-06-06 03:46:38,425 - DEBUG - ==== SSA block rewrite pass on 168
2024-06-06 03:46:38,425 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2160080>
2024-06-06 03:46:38,425 - DEBUG - on stmt: $170return_value.1 = cast(value=max_value)
2024-06-06 03:46:38,425 - DEBUG - find_def var='max_value' stmt=$170return_value.1 = cast(value=max_value)
2024-06-06 03:46:38,425 - DEBUG - find_def_from_top label 168
2024-06-06 03:46:38,425 - DEBUG - idom 58 from label 168
2024-06-06 03:46:38,426 - DEBUG - find_def_from_bottom label 58
2024-06-06 03:46:38,426 - DEBUG - on stmt: return $170return_value.1
2024-06-06 03:46:38,426 - DEBUG - ==== SSA block rewrite pass on 172
2024-06-06 03:46:38,426 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2160080>
2024-06-06 03:46:38,426 - DEBUG - on stmt: $174get_iter.1 = getiter(value=it)
2024-06-06 03:46:38,426 - DEBUG - on stmt: $phi176.0 = $174get_iter.1
2024-06-06 03:46:38,426 - DEBUG - on stmt: jump 176
2024-06-06 03:46:38,426 - DEBUG - ==== SSA block rewrite pass on 176
2024-06-06 03:46:38,426 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2160080>
2024-06-06 03:46:38,426 - DEBUG - on stmt: $176for_iter.1 = iternext(value=$phi176.0)
2024-06-06 03:46:38,426 - DEBUG - on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
2024-06-06 03:46:38,426 - DEBUG - on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
2024-06-06 03:46:38,426 - DEBUG - on stmt: $phi180.1 = $176for_iter.2
2024-06-06 03:46:38,427 - DEBUG - on stmt: branch $176for_iter.3, 180, 264
2024-06-06 03:46:38,427 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-06 03:46:38,427 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2160080>
2024-06-06 03:46:38,427 - DEBUG - on stmt: view = $phi180.1
2024-06-06 03:46:38,427 - DEBUG - on stmt: $184load_attr.4 = getattr(value=view, attr=item)
2024-06-06 03:46:38,427 - DEBUG - on stmt: v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,427 - DEBUG - on stmt: $216load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-06 03:46:38,427 - DEBUG - on stmt: $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,427 - DEBUG - on stmt: bool228 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,427 - DEBUG - on stmt: $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,427 - DEBUG - on stmt: branch $228pred, 230, 238
2024-06-06 03:46:38,427 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:38,428 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2160080>
2024-06-06 03:46:38,428 - DEBUG - on stmt: $236return_value.2 = cast(value=v)
2024-06-06 03:46:38,428 - DEBUG - on stmt: return $236return_value.2
2024-06-06 03:46:38,428 - DEBUG - ==== SSA block rewrite pass on 238
2024-06-06 03:46:38,428 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2160080>
2024-06-06 03:46:38,428 - DEBUG - on stmt: $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>)
2024-06-06 03:46:38,428 - DEBUG - on stmt: $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,428 - DEBUG - find_def var='max_value' stmt=$246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,428 - DEBUG - find_def_from_top label 238
2024-06-06 03:46:38,428 - DEBUG - idom 180 from label 238
2024-06-06 03:46:38,428 - DEBUG - find_def_from_bottom label 180
2024-06-06 03:46:38,428 - DEBUG - find_def_from_top label 180
2024-06-06 03:46:38,429 - DEBUG - idom 176 from label 180
2024-06-06 03:46:38,429 - DEBUG - find_def_from_bottom label 176
2024-06-06 03:46:38,429 - DEBUG - find_def_from_top label 176
2024-06-06 03:46:38,429 - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 176
2024-06-06 03:46:38,429 - DEBUG - find_def_from_bottom label 265
2024-06-06 03:46:38,429 - DEBUG - find_def_from_top label 265
2024-06-06 03:46:38,429 - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 265
2024-06-06 03:46:38,429 - DEBUG - find_def_from_bottom label 256
2024-06-06 03:46:38,430 - DEBUG - find_def_from_top label 256
2024-06-06 03:46:38,430 - DEBUG - idom 238 from label 256
2024-06-06 03:46:38,430 - DEBUG - find_def_from_bottom label 238
2024-06-06 03:46:38,430 - DEBUG - find_def_from_top label 238
2024-06-06 03:46:38,430 - DEBUG - idom 180 from label 238
2024-06-06 03:46:38,430 - DEBUG - find_def_from_bottom label 180
2024-06-06 03:46:38,430 - DEBUG - find_def_from_top label 180
2024-06-06 03:46:38,430 - DEBUG - idom 176 from label 180
2024-06-06 03:46:38,430 - DEBUG - find_def_from_bottom label 176
2024-06-06 03:46:38,431 - DEBUG - incoming_def max_value.2 = phi(incoming_values=[], incoming_blocks=[])
2024-06-06 03:46:38,431 - DEBUG - find_def_from_bottom label 258
2024-06-06 03:46:38,431 - DEBUG - incoming_def max_value.1 = v
2024-06-06 03:46:38,431 - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.2, arraymath.py:584), Var(max_value.1, arraymath.py:585)], incoming_blocks=[256, 258])
2024-06-06 03:46:38,431 - DEBUG - find_def_from_bottom label 172
2024-06-06 03:46:38,431 - DEBUG - find_def_from_top label 172
2024-06-06 03:46:38,431 - DEBUG - idom 58 from label 172
2024-06-06 03:46:38,432 - DEBUG - find_def_from_bottom label 58
2024-06-06 03:46:38,432 - DEBUG - incoming_def max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,432 - DEBUG - replaced with: $246call.5 = call $240load_deref.2(v, max_value.2, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,432 - DEBUG - on stmt: bool254 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,432 - DEBUG - on stmt: $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,432 - DEBUG - on stmt: branch $254pred, 258, 256
2024-06-06 03:46:38,433 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:38,433 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2160080>
2024-06-06 03:46:38,433 - DEBUG - on stmt: jump 265
2024-06-06 03:46:38,433 - DEBUG - ==== SSA block rewrite pass on 258
2024-06-06 03:46:38,433 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2160080>
2024-06-06 03:46:38,433 - DEBUG - on stmt: max_value.1 = v
2024-06-06 03:46:38,433 - DEBUG - on stmt: jump 265
2024-06-06 03:46:38,433 - DEBUG - ==== SSA block rewrite pass on 264
2024-06-06 03:46:38,433 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2160080>
2024-06-06 03:46:38,433 - DEBUG - on stmt: $268return_value.3 = cast(value=max_value)
2024-06-06 03:46:38,433 - DEBUG - find_def var='max_value' stmt=$268return_value.3 = cast(value=max_value)
2024-06-06 03:46:38,433 - DEBUG - find_def_from_top label 264
2024-06-06 03:46:38,433 - DEBUG - idom 176 from label 264
2024-06-06 03:46:38,434 - DEBUG - find_def_from_bottom label 176
2024-06-06 03:46:38,434 - DEBUG - replaced with: $268return_value.3 = cast(value=max_value.2)
2024-06-06 03:46:38,434 - DEBUG - on stmt: return $268return_value.3
2024-06-06 03:46:38,434 - DEBUG - ==== SSA block rewrite pass on 265
2024-06-06 03:46:38,434 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2160080>
2024-06-06 03:46:38,434 - DEBUG - on stmt: jump 176
2024-06-06 03:46:38,441 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4680)
           2	RESUME(arg=0, lineno=4680)
           4	LOAD_FAST(arg=1, lineno=4681)
           6	LOAD_FAST(arg=0, lineno=4681)
           8	LOAD_ATTR(arg=0, lineno=4681)
          28	LOAD_CONST(arg=1, lineno=4681)
          30	BINARY_OP(arg=10, lineno=4681)
          34	COMPARE_OP(arg=68, lineno=4681)
          38	POP_JUMP_IF_TRUE(arg=16, lineno=4681)
          40	LOAD_FAST(arg=1, lineno=4681)
          42	LOAD_FAST(arg=0, lineno=4681)
          44	LOAD_ATTR(arg=0, lineno=4681)
          64	UNARY_NEGATIVE(arg=None, lineno=4681)
          66	COMPARE_OP(arg=2, lineno=4681)
          70	POP_JUMP_IF_FALSE(arg=11, lineno=4681)
>         72	LOAD_GLOBAL(arg=3, lineno=4682)
          82	LOAD_CONST(arg=2, lineno=4682)
          84	CALL(arg=1, lineno=4682)
          92	RAISE_VARARGS(arg=1, lineno=4682)
>         94	LOAD_FAST(arg=0, lineno=4683)
          96	LOAD_ATTR(arg=5, lineno=4683)
         116	CALL(arg=0, lineno=4683)
         124	LOAD_FAST(arg=1, lineno=4683)
         126	BINARY_SUBSCR(arg=None, lineno=4683)
         130	RETURN_VALUE(arg=None, lineno=4683)
2024-06-06 03:46:38,441 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:38,441 - DEBUG - stack: []
2024-06-06 03:46:38,441 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:38,441 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4680)
2024-06-06 03:46:38,441 - DEBUG - stack []
2024-06-06 03:46:38,441 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4680)
2024-06-06 03:46:38,441 - DEBUG - stack []
2024-06-06 03:46:38,441 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4681)
2024-06-06 03:46:38,442 - DEBUG - stack []
2024-06-06 03:46:38,442 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4681)
2024-06-06 03:46:38,442 - DEBUG - stack ['$indices4.0']
2024-06-06 03:46:38,442 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4681)
2024-06-06 03:46:38,442 - DEBUG - stack ['$indices4.0', '$a6.1']
2024-06-06 03:46:38,442 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=4681)
2024-06-06 03:46:38,442 - DEBUG - stack ['$indices4.0', '$8load_attr.2']
2024-06-06 03:46:38,442 - DEBUG - dispatch pc=30, inst=BINARY_OP(arg=10, lineno=4681)
2024-06-06 03:46:38,442 - DEBUG - stack ['$indices4.0', '$8load_attr.2', '$const28.3']
2024-06-06 03:46:38,442 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=68, lineno=4681)
2024-06-06 03:46:38,442 - DEBUG - stack ['$indices4.0', '$binop_sub30.4']
2024-06-06 03:46:38,442 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_TRUE(arg=16, lineno=4681)
2024-06-06 03:46:38,442 - DEBUG - stack ['$34compare_op.5']
2024-06-06 03:46:38,443 - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=72, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,443 - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=72 nstack_initial=0)])
2024-06-06 03:46:38,443 - DEBUG - stack: []
2024-06-06 03:46:38,443 - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2024-06-06 03:46:38,443 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=4681)
2024-06-06 03:46:38,443 - DEBUG - stack []
2024-06-06 03:46:38,443 - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=4681)
2024-06-06 03:46:38,443 - DEBUG - stack ['$indices40.0']
2024-06-06 03:46:38,443 - DEBUG - dispatch pc=44, inst=LOAD_ATTR(arg=0, lineno=4681)
2024-06-06 03:46:38,443 - DEBUG - stack ['$indices40.0', '$a42.1']
2024-06-06 03:46:38,443 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=4681)
2024-06-06 03:46:38,443 - DEBUG - stack ['$indices40.0', '$44load_attr.2']
2024-06-06 03:46:38,443 - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=2, lineno=4681)
2024-06-06 03:46:38,444 - DEBUG - stack ['$indices40.0', '$64unary_negative.3']
2024-06-06 03:46:38,444 - DEBUG - dispatch pc=70, inst=POP_JUMP_IF_FALSE(arg=11, lineno=4681)
2024-06-06 03:46:38,444 - DEBUG - stack ['$66compare_op.4']
2024-06-06 03:46:38,444 - DEBUG - end state. edges=[Edge(pc=72, stack=(), blockstack=(), npush=0), Edge(pc=94, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,444 - DEBUG - pending: deque([State(pc_initial=72 nstack_initial=0), State(pc_initial=72 nstack_initial=0), State(pc_initial=94 nstack_initial=0)])
2024-06-06 03:46:38,444 - DEBUG - stack: []
2024-06-06 03:46:38,444 - DEBUG - state.pc_initial: State(pc_initial=72 nstack_initial=0)
2024-06-06 03:46:38,444 - DEBUG - dispatch pc=72, inst=LOAD_GLOBAL(arg=3, lineno=4682)
2024-06-06 03:46:38,444 - DEBUG - stack []
2024-06-06 03:46:38,444 - DEBUG - dispatch pc=82, inst=LOAD_CONST(arg=2, lineno=4682)
2024-06-06 03:46:38,444 - DEBUG - stack ['$null$72.1', '$72load_global.0']
2024-06-06 03:46:38,444 - DEBUG - dispatch pc=84, inst=CALL(arg=1, lineno=4682)
2024-06-06 03:46:38,444 - DEBUG - stack ['$null$72.1', '$72load_global.0', '$const82.2']
2024-06-06 03:46:38,445 - DEBUG - dispatch pc=92, inst=RAISE_VARARGS(arg=1, lineno=4682)
2024-06-06 03:46:38,445 - DEBUG - stack ['$84call.3']
2024-06-06 03:46:38,445 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,445 - DEBUG - pending: deque([State(pc_initial=72 nstack_initial=0), State(pc_initial=94 nstack_initial=0)])
2024-06-06 03:46:38,445 - DEBUG - pending: deque([State(pc_initial=94 nstack_initial=0)])
2024-06-06 03:46:38,445 - DEBUG - stack: []
2024-06-06 03:46:38,445 - DEBUG - state.pc_initial: State(pc_initial=94 nstack_initial=0)
2024-06-06 03:46:38,445 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=4683)
2024-06-06 03:46:38,445 - DEBUG - stack []
2024-06-06 03:46:38,445 - DEBUG - dispatch pc=96, inst=LOAD_ATTR(arg=5, lineno=4683)
2024-06-06 03:46:38,445 - DEBUG - stack ['$a94.0']
2024-06-06 03:46:38,445 - DEBUG - dispatch pc=116, inst=CALL(arg=0, lineno=4683)
2024-06-06 03:46:38,445 - DEBUG - stack ['$null$96.1', '$96load_attr.2']
2024-06-06 03:46:38,445 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4683)
2024-06-06 03:46:38,446 - DEBUG - stack ['$116call.3']
2024-06-06 03:46:38,446 - DEBUG - dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4683)
2024-06-06 03:46:38,446 - DEBUG - stack ['$116call.3', '$indices124.4']
2024-06-06 03:46:38,446 - DEBUG - dispatch pc=130, inst=RETURN_VALUE(arg=None, lineno=4683)
2024-06-06 03:46:38,446 - DEBUG - stack ['$126binary_subscr.5']
2024-06-06 03:46:38,446 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,446 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:38,446 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=72 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set()})
2024-06-06 03:46:38,446 - DEBUG - defmap: {}
2024-06-06 03:46:38,446 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:38,446 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:38,447 - DEBUG - keep phismap: {}
2024-06-06 03:46:38,447 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:38,447 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:38,447 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (28, {'res': '$const28.3'}), (30, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const28.3', 'res': '$binop_sub30.4'}), (34, {'lhs': '$indices4.0', 'rhs': '$binop_sub30.4', 'res': '$34compare_op.5'}), (38, {'pred': '$34compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 72: ()})
2024-06-06 03:46:38,447 - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$indices40.0'}), (42, {'res': '$a42.1'}), (44, {'item': '$a42.1', 'res': '$44load_attr.2'}), (64, {'value': '$44load_attr.2', 'res': '$64unary_negative.3'}), (66, {'lhs': '$indices40.0', 'rhs': '$64unary_negative.3', 'res': '$66compare_op.4'}), (70, {'pred': '$66compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={72: (), 94: ()})
2024-06-06 03:46:38,447 - DEBUG - block_infos State(pc_initial=72 nstack_initial=0):
AdaptBlockInfo(insts=((72, {'idx': 1, 'res': '$72load_global.0'}), (82, {'res': '$const82.2'}), (84, {'func': '$72load_global.0', 'args': ['$const82.2'], 'kw_names': None, 'res': '$84call.3'}), (92, {'exc': '$84call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,447 - DEBUG - block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$a94.0'}), (96, {'item': '$a94.0', 'res': '$96load_attr.2'}), (116, {'func': '$96load_attr.2', 'args': [], 'kw_names': None, 'res': '$116call.3'}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$116call.3', 'res': '$126binary_subscr.5'}), (130, {'retval': '$126binary_subscr.5', 'castval': '$130return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,448 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const28.3 = const(int, 1)               ['$const28.3']
    $binop_sub30.4 = $8load_attr.2 - $const28.3 ['$8load_attr.2', '$binop_sub30.4', '$const28.3']
    $34compare_op.5 = indices > $binop_sub30.4 ['$34compare_op.5', '$binop_sub30.4', 'indices']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
    $38pred = call bool38($34compare_op.5, func=bool38, args=(Var($34compare_op.5, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.5', '$38pred', 'bool38']
    branch $38pred, 72, 40                   ['$38pred']
label 40:
    $44load_attr.2 = getattr(value=a, attr=size) ['$44load_attr.2', 'a']
    $64unary_negative.3 = unary(fn=<built-in function neg>, value=$44load_attr.2) ['$44load_attr.2', '$64unary_negative.3']
    $66compare_op.4 = indices < $64unary_negative.3 ['$64unary_negative.3', '$66compare_op.4', 'indices']
    bool70 = global(bool: <class 'bool'>)    ['bool70']
    $70pred = call bool70($66compare_op.4, func=bool70, args=(Var($66compare_op.4, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.4', '$70pred', 'bool70']
    branch $70pred, 72, 94                   ['$70pred']
label 72:
    $72load_global.0 = global(IndexError: <class 'IndexError'>) ['$72load_global.0']
    $const82.2 = const(str, Index out of bounds) ['$const82.2']
    $84call.3 = call $72load_global.0($const82.2, func=$72load_global.0, args=[Var($const82.2, arrayobj.py:4682)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_global.0', '$84call.3', '$const82.2']
    raise $84call.3                          ['$84call.3']
label 94:
    $96load_attr.2 = getattr(value=a, attr=ravel) ['$96load_attr.2', 'a']
    $116call.3 = call $96load_attr.2(func=$96load_attr.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.3', '$96load_attr.2']
    $126binary_subscr.5 = getitem(value=$116call.3, index=indices, fn=<built-in function getitem>) ['$116call.3', '$126binary_subscr.5', 'indices']
    $130return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$130return_value.6']
    return $130return_value.6                ['$130return_value.6']

2024-06-06 03:46:38,455 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:38,455 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f51b20>
2024-06-06 03:46:38,455 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:38,455 - DEBUG - on stmt: indices = arg(1, name=indices)
2024-06-06 03:46:38,455 - DEBUG - on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-06-06 03:46:38,455 - DEBUG - on stmt: $const28.3 = const(int, 1)
2024-06-06 03:46:38,455 - DEBUG - on stmt: $binop_sub30.4 = $8load_attr.2 - $const28.3
2024-06-06 03:46:38,456 - DEBUG - on stmt: $34compare_op.5 = indices > $binop_sub30.4
2024-06-06 03:46:38,456 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,456 - DEBUG - on stmt: $38pred = call bool38($34compare_op.5, func=bool38, args=(Var($34compare_op.5, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,456 - DEBUG - on stmt: branch $38pred, 72, 40
2024-06-06 03:46:38,456 - DEBUG - ==== SSA block analysis pass on 40
2024-06-06 03:46:38,456 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f51b20>
2024-06-06 03:46:38,456 - DEBUG - on stmt: $44load_attr.2 = getattr(value=a, attr=size)
2024-06-06 03:46:38,456 - DEBUG - on stmt: $64unary_negative.3 = unary(fn=<built-in function neg>, value=$44load_attr.2)
2024-06-06 03:46:38,456 - DEBUG - on stmt: $66compare_op.4 = indices < $64unary_negative.3
2024-06-06 03:46:38,456 - DEBUG - on stmt: bool70 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,456 - DEBUG - on stmt: $70pred = call bool70($66compare_op.4, func=bool70, args=(Var($66compare_op.4, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,457 - DEBUG - on stmt: branch $70pred, 72, 94
2024-06-06 03:46:38,457 - DEBUG - ==== SSA block analysis pass on 72
2024-06-06 03:46:38,457 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f51b20>
2024-06-06 03:46:38,457 - DEBUG - on stmt: $72load_global.0 = global(IndexError: <class 'IndexError'>)
2024-06-06 03:46:38,457 - DEBUG - on stmt: $const82.2 = const(str, Index out of bounds)
2024-06-06 03:46:38,457 - DEBUG - on stmt: $84call.3 = call $72load_global.0($const82.2, func=$72load_global.0, args=[Var($const82.2, arrayobj.py:4682)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,457 - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-06-06 03:46:38,457 - DEBUG - ==== SSA block analysis pass on 94
2024-06-06 03:46:38,457 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f51b20>
2024-06-06 03:46:38,457 - DEBUG - on stmt: $96load_attr.2 = getattr(value=a, attr=ravel)
2024-06-06 03:46:38,457 - DEBUG - on stmt: $116call.3 = call $96load_attr.2(func=$96load_attr.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,457 - DEBUG - on stmt: $126binary_subscr.5 = getitem(value=$116call.3, index=indices, fn=<built-in function getitem>)
2024-06-06 03:46:38,458 - DEBUG - on stmt: $130return_value.6 = cast(value=$126binary_subscr.5)
2024-06-06 03:46:38,458 - DEBUG - on stmt: return $130return_value.6
2024-06-06 03:46:38,458 - DEBUG - defs defaultdict(<class 'list'>,
            {'$116call.3': [(<numba.core.ir.Assign object at 0x7fe9d1f51370>,
                             94)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x7fe9d1f50c20>,
                                      94)],
             '$130return_value.6': [(<numba.core.ir.Assign object at 0x7fe9d1f509e0>,
                                     94)],
             '$34compare_op.5': [(<numba.core.ir.Assign object at 0x7fe9d2140470>,
                                  0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x7fe9d2140620>, 0)],
             '$44load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9d21421b0>,
                                 40)],
             '$64unary_negative.3': [(<numba.core.ir.Assign object at 0x7fe9d1f510d0>,
                                      40)],
             '$66compare_op.4': [(<numba.core.ir.Assign object at 0x7fe9d1f512e0>,
                                  40)],
             '$70pred': [(<numba.core.ir.Assign object at 0x7fe9d1f51580>, 40)],
             '$72load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d1f50fb0>,
                                   72)],
             '$84call.3': [(<numba.core.ir.Assign object at 0x7fe9d1f50d10>,
                            72)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9d2140920>,
                                0)],
             '$96load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9d1f514c0>,
                                 94)],
             '$binop_sub30.4': [(<numba.core.ir.Assign object at 0x7fe9d2140560>,
                                 0)],
             '$const28.3': [(<numba.core.ir.Assign object at 0x7fe9d2141070>,
                             0)],
             '$const82.2': [(<numba.core.ir.Assign object at 0x7fe9d1f51190>,
                             72)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9d2141400>, 0)],
             'bool38': [(<numba.core.ir.Assign object at 0x7fe9d2140050>, 0)],
             'bool70': [(<numba.core.ir.Assign object at 0x7fe9d1f53710>, 40)],
             'indices': [(<numba.core.ir.Assign object at 0x7fe9d2141af0>, 0)]})
2024-06-06 03:46:38,458 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d21415e0>
2024-06-06 03:46:38,480 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2229)
           2	RESUME(arg=0, lineno=2229)
           4	LOAD_FAST(arg=0, lineno=2231)
           6	LOAD_ATTR(arg=1, lineno=2231)
          26	LOAD_FAST(arg=0, lineno=2231)
          28	LOAD_ATTR(arg=2, lineno=2231)
          48	CALL(arg=1, lineno=2231)
          56	RETURN_VALUE(arg=None, lineno=2231)
2024-06-06 03:46:38,480 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:38,480 - DEBUG - stack: []
2024-06-06 03:46:38,480 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:38,480 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2229)
2024-06-06 03:46:38,481 - DEBUG - stack []
2024-06-06 03:46:38,481 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2229)
2024-06-06 03:46:38,481 - DEBUG - stack []
2024-06-06 03:46:38,481 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2231)
2024-06-06 03:46:38,481 - DEBUG - stack []
2024-06-06 03:46:38,481 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=2231)
2024-06-06 03:46:38,481 - DEBUG - stack ['$ary4.0']
2024-06-06 03:46:38,481 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=2231)
2024-06-06 03:46:38,481 - DEBUG - stack ['$null$6.1', '$6load_attr.2']
2024-06-06 03:46:38,481 - DEBUG - dispatch pc=28, inst=LOAD_ATTR(arg=2, lineno=2231)
2024-06-06 03:46:38,482 - DEBUG - stack ['$null$6.1', '$6load_attr.2', '$ary26.3']
2024-06-06 03:46:38,482 - DEBUG - dispatch pc=48, inst=CALL(arg=1, lineno=2231)
2024-06-06 03:46:38,482 - DEBUG - stack ['$null$6.1', '$6load_attr.2', '$28load_attr.4']
2024-06-06 03:46:38,482 - DEBUG - dispatch pc=56, inst=RETURN_VALUE(arg=None, lineno=2231)
2024-06-06 03:46:38,482 - DEBUG - stack ['$48call.5']
2024-06-06 03:46:38,482 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,482 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:38,482 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:38,482 - DEBUG - defmap: {}
2024-06-06 03:46:38,482 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:38,483 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:38,483 - DEBUG - keep phismap: {}
2024-06-06 03:46:38,483 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:38,483 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:38,483 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_attr.2'}), (26, {'res': '$ary26.3'}), (28, {'item': '$ary26.3', 'res': '$28load_attr.4'}), (48, {'func': '$6load_attr.2', 'args': ['$28load_attr.4'], 'kw_names': None, 'res': '$48call.5'}), (56, {'retval': '$48call.5', 'castval': '$56return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,483 - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_attr.2 = getattr(value=ary, attr=reshape) ['$6load_attr.2', 'ary']
    $28load_attr.4 = getattr(value=ary, attr=size) ['$28load_attr.4', 'ary']
    $48call.5 = call $6load_attr.2($28load_attr.4, func=$6load_attr.2, args=[Var($28load_attr.4, arrayobj.py:2231)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_attr.4', '$48call.5', '$6load_attr.2']
    $56return_value.6 = cast(value=$48call.5) ['$48call.5', '$56return_value.6']
    return $56return_value.6                 ['$56return_value.6']

2024-06-06 03:46:38,488 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:38,489 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f58950>
2024-06-06 03:46:38,489 - DEBUG - on stmt: ary = arg(0, name=ary)
2024-06-06 03:46:38,489 - DEBUG - on stmt: $6load_attr.2 = getattr(value=ary, attr=reshape)
2024-06-06 03:46:38,489 - DEBUG - on stmt: $28load_attr.4 = getattr(value=ary, attr=size)
2024-06-06 03:46:38,489 - DEBUG - on stmt: $48call.5 = call $6load_attr.2($28load_attr.4, func=$6load_attr.2, args=[Var($28load_attr.4, arrayobj.py:2231)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,489 - DEBUG - on stmt: $56return_value.6 = cast(value=$48call.5)
2024-06-06 03:46:38,489 - DEBUG - on stmt: return $56return_value.6
2024-06-06 03:46:38,490 - DEBUG - defs defaultdict(<class 'list'>,
            {'$28load_attr.4': [(<numba.core.ir.Assign object at 0x7fe9d1f5a990>,
                                 0)],
             '$48call.5': [(<numba.core.ir.Assign object at 0x7fe9d1f5b800>,
                            0)],
             '$56return_value.6': [(<numba.core.ir.Assign object at 0x7fe9d1f5b710>,
                                    0)],
             '$6load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9d1f5a6c0>,
                                0)],
             'ary': [(<numba.core.ir.Assign object at 0x7fe9d1f5a270>, 0)]})
2024-06-06 03:46:38,490 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d1f58950>
2024-06-06 03:46:38,499 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2045)
           2	RESUME(arg=0, lineno=2045)
           4	LOAD_CONST(arg=1, lineno=2046)
           6	STORE_FAST(arg=2, lineno=2046)
           8	LOAD_CONST(arg=2, lineno=2047)
          10	STORE_FAST(arg=3, lineno=2047)
          12	LOAD_GLOBAL(arg=1, lineno=2048)
          22	LOAD_FAST(arg=1, lineno=2048)
          24	CALL(arg=1, lineno=2048)
          32	GET_ITER(arg=None, lineno=2048)
>         34	FOR_ITER(arg=23, lineno=2048)
          38	UNPACK_SEQUENCE(arg=2, lineno=2048)
          42	STORE_FAST(arg=4, lineno=2048)
          44	STORE_FAST(arg=5, lineno=2048)
          46	LOAD_FAST(arg=5, lineno=2049)
          48	LOAD_CONST(arg=1, lineno=2049)
          50	COMPARE_OP(arg=2, lineno=2049)
          54	POP_JUMP_IF_FALSE(arg=8, lineno=2049)
          56	LOAD_FAST(arg=2, lineno=2050)
          58	LOAD_CONST(arg=2, lineno=2050)
          60	BINARY_OP(arg=13, lineno=2050)
          64	STORE_FAST(arg=2, lineno=2050)
          66	LOAD_FAST(arg=4, lineno=2051)
          68	STORE_FAST(arg=6, lineno=2051)
          70	JUMP_BACKWARD(arg=19, lineno=2051)
>         72	LOAD_FAST(arg=3, lineno=2053)
          74	LOAD_FAST(arg=5, lineno=2053)
          76	BINARY_OP(arg=18, lineno=2053)
          80	STORE_FAST(arg=3, lineno=2053)
          82	JUMP_BACKWARD(arg=25, lineno=2053)
>         84	END_FOR(arg=None, lineno=2048)
          86	LOAD_FAST(arg=2, lineno=2055)
          88	LOAD_CONST(arg=1, lineno=2055)
          90	COMPARE_OP(arg=40, lineno=2055)
          94	POP_JUMP_IF_FALSE(arg=17, lineno=2055)
          96	LOAD_FAST(arg=0, lineno=2056)
          98	LOAD_FAST(arg=3, lineno=2056)
         100	COMPARE_OP(arg=55, lineno=2056)
         104	POP_JUMP_IF_FALSE(arg=11, lineno=2056)
         106	LOAD_GLOBAL(arg=3, lineno=2057)
         116	LOAD_CONST(arg=3, lineno=2057)
         118	CALL(arg=1, lineno=2057)
         126	RAISE_VARARGS(arg=1, lineno=2057)
>        128	RETURN_CONST(arg=0, lineno=2056)
>        130	LOAD_FAST(arg=2, lineno=2059)
         132	LOAD_CONST(arg=2, lineno=2059)
         134	COMPARE_OP(arg=40, lineno=2059)
         138	POP_JUMP_IF_FALSE(arg=45, lineno=2059)
         140	LOAD_FAST(arg=3, lineno=2061)
         142	LOAD_CONST(arg=1, lineno=2061)
         144	COMPARE_OP(arg=40, lineno=2061)
         148	POP_JUMP_IF_FALSE(arg=8, lineno=2061)
         150	LOAD_CONST(arg=1, lineno=2062)
         152	STORE_FAST(arg=7, lineno=2062)
         154	LOAD_FAST(arg=0, lineno=2063)
         156	LOAD_CONST(arg=1, lineno=2063)
         158	COMPARE_OP(arg=40, lineno=2063)
         162	STORE_FAST(arg=8, lineno=2063)
         164	JUMP_FORWARD(arg=13, lineno=2063)
>        166	LOAD_FAST(arg=0, lineno=2065)
         168	LOAD_FAST(arg=3, lineno=2065)
         170	BINARY_OP(arg=2, lineno=2065)
         174	STORE_FAST(arg=7, lineno=2065)
         176	LOAD_FAST(arg=0, lineno=2066)
         178	LOAD_FAST(arg=3, lineno=2066)
         180	BINARY_OP(arg=6, lineno=2066)
         184	LOAD_CONST(arg=1, lineno=2066)
         186	COMPARE_OP(arg=40, lineno=2066)
         190	STORE_FAST(arg=8, lineno=2066)
>        192	LOAD_FAST(arg=8, lineno=2067)
         194	POP_JUMP_IF_TRUE(arg=11, lineno=2067)
         196	LOAD_GLOBAL(arg=3, lineno=2068)
         206	LOAD_CONST(arg=3, lineno=2068)
         208	CALL(arg=1, lineno=2068)
         216	RAISE_VARARGS(arg=1, lineno=2068)
>        218	LOAD_FAST(arg=7, lineno=2069)
         220	LOAD_FAST(arg=1, lineno=2069)
         222	LOAD_FAST_CHECK(arg=6, lineno=2069)
         224	STORE_SUBSCR(arg=None, lineno=2069)
         228	RETURN_CONST(arg=0, lineno=2069)
>        230	LOAD_GLOBAL(arg=3, lineno=2072)
         240	LOAD_CONST(arg=4, lineno=2072)
         242	CALL(arg=1, lineno=2072)
         250	RAISE_VARARGS(arg=1, lineno=2072)
2024-06-06 03:46:38,499 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:38,499 - DEBUG - stack: []
2024-06-06 03:46:38,499 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:38,499 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2045)
2024-06-06 03:46:38,499 - DEBUG - stack []
2024-06-06 03:46:38,499 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2045)
2024-06-06 03:46:38,499 - DEBUG - stack []
2024-06-06 03:46:38,500 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=2046)
2024-06-06 03:46:38,500 - DEBUG - stack []
2024-06-06 03:46:38,500 - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=2, lineno=2046)
2024-06-06 03:46:38,500 - DEBUG - stack ['$const4.0']
2024-06-06 03:46:38,500 - DEBUG - dispatch pc=8, inst=LOAD_CONST(arg=2, lineno=2047)
2024-06-06 03:46:38,500 - DEBUG - stack []
2024-06-06 03:46:38,500 - DEBUG - dispatch pc=10, inst=STORE_FAST(arg=3, lineno=2047)
2024-06-06 03:46:38,500 - DEBUG - stack ['$const8.1']
2024-06-06 03:46:38,500 - DEBUG - dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=2048)
2024-06-06 03:46:38,500 - DEBUG - stack []
2024-06-06 03:46:38,501 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=1, lineno=2048)
2024-06-06 03:46:38,501 - DEBUG - stack ['$null$12.3', '$12load_global.2']
2024-06-06 03:46:38,501 - DEBUG - dispatch pc=24, inst=CALL(arg=1, lineno=2048)
2024-06-06 03:46:38,501 - DEBUG - stack ['$null$12.3', '$12load_global.2', '$shape22.4']
2024-06-06 03:46:38,501 - DEBUG - dispatch pc=32, inst=GET_ITER(arg=None, lineno=2048)
2024-06-06 03:46:38,501 - DEBUG - stack ['$24call.5']
2024-06-06 03:46:38,501 - DEBUG - end state. edges=[Edge(pc=34, stack=('$32get_iter.6',), blockstack=(), npush=0)]
2024-06-06 03:46:38,501 - DEBUG - pending: deque([State(pc_initial=34 nstack_initial=1)])
2024-06-06 03:46:38,501 - DEBUG - stack: ['$phi34.0']
2024-06-06 03:46:38,501 - DEBUG - state.pc_initial: State(pc_initial=34 nstack_initial=1)
2024-06-06 03:46:38,501 - DEBUG - dispatch pc=34, inst=FOR_ITER(arg=23, lineno=2048)
2024-06-06 03:46:38,501 - DEBUG - stack ['$phi34.0']
2024-06-06 03:46:38,502 - DEBUG - end state. edges=[Edge(pc=84, stack=('$phi34.0', '$34for_iter.2'), blockstack=(), npush=0), Edge(pc=38, stack=('$phi34.0', '$34for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:38,502 - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=2), State(pc_initial=38 nstack_initial=2)])
2024-06-06 03:46:38,502 - DEBUG - stack: ['$phi84.0', '$phi84.1']
2024-06-06 03:46:38,502 - DEBUG - state.pc_initial: State(pc_initial=84 nstack_initial=2)
2024-06-06 03:46:38,502 - DEBUG - dispatch pc=84, inst=END_FOR(arg=None, lineno=2048)
2024-06-06 03:46:38,502 - DEBUG - stack ['$phi84.0', '$phi84.1']
2024-06-06 03:46:38,502 - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=2, lineno=2055)
2024-06-06 03:46:38,502 - DEBUG - stack []
2024-06-06 03:46:38,502 - DEBUG - dispatch pc=88, inst=LOAD_CONST(arg=1, lineno=2055)
2024-06-06 03:46:38,502 - DEBUG - stack ['$num_neg_value86.2']
2024-06-06 03:46:38,502 - DEBUG - dispatch pc=90, inst=COMPARE_OP(arg=40, lineno=2055)
2024-06-06 03:46:38,502 - DEBUG - stack ['$num_neg_value86.2', '$const88.3']
2024-06-06 03:46:38,502 - DEBUG - dispatch pc=94, inst=POP_JUMP_IF_FALSE(arg=17, lineno=2055)
2024-06-06 03:46:38,503 - DEBUG - stack ['$90compare_op.4']
2024-06-06 03:46:38,503 - DEBUG - end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,503 - DEBUG - pending: deque([State(pc_initial=38 nstack_initial=2), State(pc_initial=96 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2024-06-06 03:46:38,503 - DEBUG - stack: ['$phi38.0', '$phi38.1']
2024-06-06 03:46:38,503 - DEBUG - state.pc_initial: State(pc_initial=38 nstack_initial=2)
2024-06-06 03:46:38,503 - DEBUG - dispatch pc=38, inst=UNPACK_SEQUENCE(arg=2, lineno=2048)
2024-06-06 03:46:38,503 - DEBUG - stack ['$phi38.0', '$phi38.1']
2024-06-06 03:46:38,503 - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=4, lineno=2048)
2024-06-06 03:46:38,503 - DEBUG - stack ['$phi38.0', '$38unpack_sequence.3', '$38unpack_sequence.2']
2024-06-06 03:46:38,503 - DEBUG - dispatch pc=44, inst=STORE_FAST(arg=5, lineno=2048)
2024-06-06 03:46:38,503 - DEBUG - stack ['$phi38.0', '$38unpack_sequence.3']
2024-06-06 03:46:38,503 - DEBUG - dispatch pc=46, inst=LOAD_FAST(arg=5, lineno=2049)
2024-06-06 03:46:38,503 - DEBUG - stack ['$phi38.0']
2024-06-06 03:46:38,504 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=2049)
2024-06-06 03:46:38,504 - DEBUG - stack ['$phi38.0', '$s46.5']
2024-06-06 03:46:38,504 - DEBUG - dispatch pc=50, inst=COMPARE_OP(arg=2, lineno=2049)
2024-06-06 03:46:38,504 - DEBUG - stack ['$phi38.0', '$s46.5', '$const48.6']
2024-06-06 03:46:38,504 - DEBUG - dispatch pc=54, inst=POP_JUMP_IF_FALSE(arg=8, lineno=2049)
2024-06-06 03:46:38,504 - DEBUG - stack ['$phi38.0', '$50compare_op.7']
2024-06-06 03:46:38,504 - DEBUG - end state. edges=[Edge(pc=56, stack=('$phi38.0',), blockstack=(), npush=0), Edge(pc=72, stack=('$phi38.0',), blockstack=(), npush=0)]
2024-06-06 03:46:38,504 - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=56 nstack_initial=1), State(pc_initial=72 nstack_initial=1)])
2024-06-06 03:46:38,504 - DEBUG - stack: []
2024-06-06 03:46:38,504 - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2024-06-06 03:46:38,504 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=0, lineno=2056)
2024-06-06 03:46:38,504 - DEBUG - stack []
2024-06-06 03:46:38,504 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=3, lineno=2056)
2024-06-06 03:46:38,505 - DEBUG - stack ['$origsize96.0']
2024-06-06 03:46:38,505 - DEBUG - dispatch pc=100, inst=COMPARE_OP(arg=55, lineno=2056)
2024-06-06 03:46:38,505 - DEBUG - stack ['$origsize96.0', '$known_size98.1']
2024-06-06 03:46:38,505 - DEBUG - dispatch pc=104, inst=POP_JUMP_IF_FALSE(arg=11, lineno=2056)
2024-06-06 03:46:38,505 - DEBUG - stack ['$100compare_op.2']
2024-06-06 03:46:38,505 - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0), Edge(pc=128, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,505 - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=56 nstack_initial=1), State(pc_initial=72 nstack_initial=1), State(pc_initial=106 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
2024-06-06 03:46:38,505 - DEBUG - stack: []
2024-06-06 03:46:38,505 - DEBUG - state.pc_initial: State(pc_initial=130 nstack_initial=0)
2024-06-06 03:46:38,505 - DEBUG - dispatch pc=130, inst=LOAD_FAST(arg=2, lineno=2059)
2024-06-06 03:46:38,505 - DEBUG - stack []
2024-06-06 03:46:38,505 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=2059)
2024-06-06 03:46:38,505 - DEBUG - stack ['$num_neg_value130.0']
2024-06-06 03:46:38,506 - DEBUG - dispatch pc=134, inst=COMPARE_OP(arg=40, lineno=2059)
2024-06-06 03:46:38,506 - DEBUG - stack ['$num_neg_value130.0', '$const132.1']
2024-06-06 03:46:38,506 - DEBUG - dispatch pc=138, inst=POP_JUMP_IF_FALSE(arg=45, lineno=2059)
2024-06-06 03:46:38,506 - DEBUG - stack ['$134compare_op.2']
2024-06-06 03:46:38,506 - DEBUG - end state. edges=[Edge(pc=140, stack=(), blockstack=(), npush=0), Edge(pc=230, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,506 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=1), State(pc_initial=72 nstack_initial=1), State(pc_initial=106 nstack_initial=0), State(pc_initial=128 nstack_initial=0), State(pc_initial=140 nstack_initial=0), State(pc_initial=230 nstack_initial=0)])
2024-06-06 03:46:38,506 - DEBUG - stack: ['$phi56.0']
2024-06-06 03:46:38,506 - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=1)
2024-06-06 03:46:38,506 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=2050)
2024-06-06 03:46:38,506 - DEBUG - stack ['$phi56.0']
2024-06-06 03:46:38,506 - DEBUG - dispatch pc=58, inst=LOAD_CONST(arg=2, lineno=2050)
2024-06-06 03:46:38,506 - DEBUG - stack ['$phi56.0', '$num_neg_value56.1']
2024-06-06 03:46:38,506 - DEBUG - dispatch pc=60, inst=BINARY_OP(arg=13, lineno=2050)
2024-06-06 03:46:38,507 - DEBUG - stack ['$phi56.0', '$num_neg_value56.1', '$const58.2']
2024-06-06 03:46:38,507 - DEBUG - dispatch pc=64, inst=STORE_FAST(arg=2, lineno=2050)
2024-06-06 03:46:38,507 - DEBUG - stack ['$phi56.0', '$binop_iadd60.3']
2024-06-06 03:46:38,507 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=2051)
2024-06-06 03:46:38,507 - DEBUG - stack ['$phi56.0']
2024-06-06 03:46:38,507 - DEBUG - dispatch pc=68, inst=STORE_FAST(arg=6, lineno=2051)
2024-06-06 03:46:38,507 - DEBUG - stack ['$phi56.0', '$ax66.4']
2024-06-06 03:46:38,507 - DEBUG - dispatch pc=70, inst=JUMP_BACKWARD(arg=19, lineno=2051)
2024-06-06 03:46:38,507 - DEBUG - stack ['$phi56.0']
2024-06-06 03:46:38,507 - DEBUG - end state. edges=[Edge(pc=34, stack=('$phi56.0',), blockstack=(), npush=0)]
2024-06-06 03:46:38,507 - DEBUG - pending: deque([State(pc_initial=72 nstack_initial=1), State(pc_initial=106 nstack_initial=0), State(pc_initial=128 nstack_initial=0), State(pc_initial=140 nstack_initial=0), State(pc_initial=230 nstack_initial=0), State(pc_initial=34 nstack_initial=1)])
2024-06-06 03:46:38,507 - DEBUG - stack: ['$phi72.0']
2024-06-06 03:46:38,507 - DEBUG - state.pc_initial: State(pc_initial=72 nstack_initial=1)
2024-06-06 03:46:38,507 - DEBUG - dispatch pc=72, inst=LOAD_FAST(arg=3, lineno=2053)
2024-06-06 03:46:38,508 - DEBUG - stack ['$phi72.0']
2024-06-06 03:46:38,508 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=5, lineno=2053)
2024-06-06 03:46:38,508 - DEBUG - stack ['$phi72.0', '$known_size72.1']
2024-06-06 03:46:38,508 - DEBUG - dispatch pc=76, inst=BINARY_OP(arg=18, lineno=2053)
2024-06-06 03:46:38,508 - DEBUG - stack ['$phi72.0', '$known_size72.1', '$s74.2']
2024-06-06 03:46:38,508 - DEBUG - dispatch pc=80, inst=STORE_FAST(arg=3, lineno=2053)
2024-06-06 03:46:38,508 - DEBUG - stack ['$phi72.0', '$binop_imul76.3']
2024-06-06 03:46:38,508 - DEBUG - dispatch pc=82, inst=JUMP_BACKWARD(arg=25, lineno=2053)
2024-06-06 03:46:38,508 - DEBUG - stack ['$phi72.0']
2024-06-06 03:46:38,508 - DEBUG - end state. edges=[Edge(pc=34, stack=('$phi72.0',), blockstack=(), npush=0)]
2024-06-06 03:46:38,508 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=128 nstack_initial=0), State(pc_initial=140 nstack_initial=0), State(pc_initial=230 nstack_initial=0), State(pc_initial=34 nstack_initial=1), State(pc_initial=34 nstack_initial=1)])
2024-06-06 03:46:38,508 - DEBUG - stack: []
2024-06-06 03:46:38,509 - DEBUG - state.pc_initial: State(pc_initial=106 nstack_initial=0)
2024-06-06 03:46:38,509 - DEBUG - dispatch pc=106, inst=LOAD_GLOBAL(arg=3, lineno=2057)
2024-06-06 03:46:38,509 - DEBUG - stack []
2024-06-06 03:46:38,509 - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=3, lineno=2057)
2024-06-06 03:46:38,509 - DEBUG - stack ['$null$106.1', '$106load_global.0']
2024-06-06 03:46:38,509 - DEBUG - dispatch pc=118, inst=CALL(arg=1, lineno=2057)
2024-06-06 03:46:38,509 - DEBUG - stack ['$null$106.1', '$106load_global.0', '$const116.2']
2024-06-06 03:46:38,509 - DEBUG - dispatch pc=126, inst=RAISE_VARARGS(arg=1, lineno=2057)
2024-06-06 03:46:38,509 - DEBUG - stack ['$118call.3']
2024-06-06 03:46:38,509 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,509 - DEBUG - pending: deque([State(pc_initial=128 nstack_initial=0), State(pc_initial=140 nstack_initial=0), State(pc_initial=230 nstack_initial=0), State(pc_initial=34 nstack_initial=1), State(pc_initial=34 nstack_initial=1)])
2024-06-06 03:46:38,509 - DEBUG - stack: []
2024-06-06 03:46:38,510 - DEBUG - state.pc_initial: State(pc_initial=128 nstack_initial=0)
2024-06-06 03:46:38,510 - DEBUG - dispatch pc=128, inst=RETURN_CONST(arg=0, lineno=2056)
2024-06-06 03:46:38,510 - DEBUG - stack []
2024-06-06 03:46:38,510 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,510 - DEBUG - pending: deque([State(pc_initial=140 nstack_initial=0), State(pc_initial=230 nstack_initial=0), State(pc_initial=34 nstack_initial=1), State(pc_initial=34 nstack_initial=1)])
2024-06-06 03:46:38,510 - DEBUG - stack: []
2024-06-06 03:46:38,510 - DEBUG - state.pc_initial: State(pc_initial=140 nstack_initial=0)
2024-06-06 03:46:38,510 - DEBUG - dispatch pc=140, inst=LOAD_FAST(arg=3, lineno=2061)
2024-06-06 03:46:38,510 - DEBUG - stack []
2024-06-06 03:46:38,510 - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=1, lineno=2061)
2024-06-06 03:46:38,510 - DEBUG - stack ['$known_size140.0']
2024-06-06 03:46:38,511 - DEBUG - dispatch pc=144, inst=COMPARE_OP(arg=40, lineno=2061)
2024-06-06 03:46:38,511 - DEBUG - stack ['$known_size140.0', '$const142.1']
2024-06-06 03:46:38,511 - DEBUG - dispatch pc=148, inst=POP_JUMP_IF_FALSE(arg=8, lineno=2061)
2024-06-06 03:46:38,511 - DEBUG - stack ['$144compare_op.2']
2024-06-06 03:46:38,511 - DEBUG - end state. edges=[Edge(pc=150, stack=(), blockstack=(), npush=0), Edge(pc=166, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,511 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=0), State(pc_initial=34 nstack_initial=1), State(pc_initial=34 nstack_initial=1), State(pc_initial=150 nstack_initial=0), State(pc_initial=166 nstack_initial=0)])
2024-06-06 03:46:38,511 - DEBUG - stack: []
2024-06-06 03:46:38,511 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=0)
2024-06-06 03:46:38,511 - DEBUG - dispatch pc=230, inst=LOAD_GLOBAL(arg=3, lineno=2072)
2024-06-06 03:46:38,511 - DEBUG - stack []
2024-06-06 03:46:38,511 - DEBUG - dispatch pc=240, inst=LOAD_CONST(arg=4, lineno=2072)
2024-06-06 03:46:38,511 - DEBUG - stack ['$null$230.1', '$230load_global.0']
2024-06-06 03:46:38,511 - DEBUG - dispatch pc=242, inst=CALL(arg=1, lineno=2072)
2024-06-06 03:46:38,512 - DEBUG - stack ['$null$230.1', '$230load_global.0', '$const240.2']
2024-06-06 03:46:38,512 - DEBUG - dispatch pc=250, inst=RAISE_VARARGS(arg=1, lineno=2072)
2024-06-06 03:46:38,512 - DEBUG - stack ['$242call.3']
2024-06-06 03:46:38,512 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,512 - DEBUG - pending: deque([State(pc_initial=34 nstack_initial=1), State(pc_initial=34 nstack_initial=1), State(pc_initial=150 nstack_initial=0), State(pc_initial=166 nstack_initial=0)])
2024-06-06 03:46:38,512 - DEBUG - pending: deque([State(pc_initial=34 nstack_initial=1), State(pc_initial=150 nstack_initial=0), State(pc_initial=166 nstack_initial=0)])
2024-06-06 03:46:38,512 - DEBUG - pending: deque([State(pc_initial=150 nstack_initial=0), State(pc_initial=166 nstack_initial=0)])
2024-06-06 03:46:38,512 - DEBUG - stack: []
2024-06-06 03:46:38,512 - DEBUG - state.pc_initial: State(pc_initial=150 nstack_initial=0)
2024-06-06 03:46:38,512 - DEBUG - dispatch pc=150, inst=LOAD_CONST(arg=1, lineno=2062)
2024-06-06 03:46:38,512 - DEBUG - stack []
2024-06-06 03:46:38,512 - DEBUG - dispatch pc=152, inst=STORE_FAST(arg=7, lineno=2062)
2024-06-06 03:46:38,512 - DEBUG - stack ['$const150.0']
2024-06-06 03:46:38,513 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=2063)
2024-06-06 03:46:38,513 - DEBUG - stack []
2024-06-06 03:46:38,513 - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=2063)
2024-06-06 03:46:38,513 - DEBUG - stack ['$origsize154.1']
2024-06-06 03:46:38,513 - DEBUG - dispatch pc=158, inst=COMPARE_OP(arg=40, lineno=2063)
2024-06-06 03:46:38,513 - DEBUG - stack ['$origsize154.1', '$const156.2']
2024-06-06 03:46:38,513 - DEBUG - dispatch pc=162, inst=STORE_FAST(arg=8, lineno=2063)
2024-06-06 03:46:38,513 - DEBUG - stack ['$158compare_op.3']
2024-06-06 03:46:38,513 - DEBUG - dispatch pc=164, inst=JUMP_FORWARD(arg=13, lineno=2063)
2024-06-06 03:46:38,513 - DEBUG - stack []
2024-06-06 03:46:38,513 - DEBUG - end state. edges=[Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,513 - DEBUG - pending: deque([State(pc_initial=166 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-06-06 03:46:38,513 - DEBUG - stack: []
2024-06-06 03:46:38,513 - DEBUG - state.pc_initial: State(pc_initial=166 nstack_initial=0)
2024-06-06 03:46:38,514 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=0, lineno=2065)
2024-06-06 03:46:38,514 - DEBUG - stack []
2024-06-06 03:46:38,514 - DEBUG - dispatch pc=168, inst=LOAD_FAST(arg=3, lineno=2065)
2024-06-06 03:46:38,514 - DEBUG - stack ['$origsize166.0']
2024-06-06 03:46:38,514 - DEBUG - dispatch pc=170, inst=BINARY_OP(arg=2, lineno=2065)
2024-06-06 03:46:38,514 - DEBUG - stack ['$origsize166.0', '$known_size168.1']
2024-06-06 03:46:38,514 - DEBUG - dispatch pc=174, inst=STORE_FAST(arg=7, lineno=2065)
2024-06-06 03:46:38,514 - DEBUG - stack ['$binop_floordiv170.2']
2024-06-06 03:46:38,514 - DEBUG - dispatch pc=176, inst=LOAD_FAST(arg=0, lineno=2066)
2024-06-06 03:46:38,514 - DEBUG - stack []
2024-06-06 03:46:38,514 - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=3, lineno=2066)
2024-06-06 03:46:38,514 - DEBUG - stack ['$origsize176.3']
2024-06-06 03:46:38,514 - DEBUG - dispatch pc=180, inst=BINARY_OP(arg=6, lineno=2066)
2024-06-06 03:46:38,515 - DEBUG - stack ['$origsize176.3', '$known_size178.4']
2024-06-06 03:46:38,515 - DEBUG - dispatch pc=184, inst=LOAD_CONST(arg=1, lineno=2066)
2024-06-06 03:46:38,515 - DEBUG - stack ['$binop_mod180.5']
2024-06-06 03:46:38,515 - DEBUG - dispatch pc=186, inst=COMPARE_OP(arg=40, lineno=2066)
2024-06-06 03:46:38,515 - DEBUG - stack ['$binop_mod180.5', '$const184.6']
2024-06-06 03:46:38,515 - DEBUG - dispatch pc=190, inst=STORE_FAST(arg=8, lineno=2066)
2024-06-06 03:46:38,515 - DEBUG - stack ['$186compare_op.7']
2024-06-06 03:46:38,515 - DEBUG - end state. edges=[Edge(pc=192, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,515 - DEBUG - pending: deque([State(pc_initial=192 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
2024-06-06 03:46:38,515 - DEBUG - stack: []
2024-06-06 03:46:38,515 - DEBUG - state.pc_initial: State(pc_initial=192 nstack_initial=0)
2024-06-06 03:46:38,515 - DEBUG - dispatch pc=192, inst=LOAD_FAST(arg=8, lineno=2067)
2024-06-06 03:46:38,516 - DEBUG - stack []
2024-06-06 03:46:38,516 - DEBUG - dispatch pc=194, inst=POP_JUMP_IF_TRUE(arg=11, lineno=2067)
2024-06-06 03:46:38,516 - DEBUG - stack ['$ok192.0']
2024-06-06 03:46:38,516 - DEBUG - end state. edges=[Edge(pc=196, stack=(), blockstack=(), npush=0), Edge(pc=218, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:38,516 - DEBUG - pending: deque([State(pc_initial=192 nstack_initial=0), State(pc_initial=196 nstack_initial=0), State(pc_initial=218 nstack_initial=0)])
2024-06-06 03:46:38,516 - DEBUG - pending: deque([State(pc_initial=196 nstack_initial=0), State(pc_initial=218 nstack_initial=0)])
2024-06-06 03:46:38,516 - DEBUG - stack: []
2024-06-06 03:46:38,516 - DEBUG - state.pc_initial: State(pc_initial=196 nstack_initial=0)
2024-06-06 03:46:38,516 - DEBUG - dispatch pc=196, inst=LOAD_GLOBAL(arg=3, lineno=2068)
2024-06-06 03:46:38,516 - DEBUG - stack []
2024-06-06 03:46:38,516 - DEBUG - dispatch pc=206, inst=LOAD_CONST(arg=3, lineno=2068)
2024-06-06 03:46:38,516 - DEBUG - stack ['$null$196.1', '$196load_global.0']
2024-06-06 03:46:38,516 - DEBUG - dispatch pc=208, inst=CALL(arg=1, lineno=2068)
2024-06-06 03:46:38,517 - DEBUG - stack ['$null$196.1', '$196load_global.0', '$const206.2']
2024-06-06 03:46:38,517 - DEBUG - dispatch pc=216, inst=RAISE_VARARGS(arg=1, lineno=2068)
2024-06-06 03:46:38,517 - DEBUG - stack ['$208call.3']
2024-06-06 03:46:38,517 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,517 - DEBUG - pending: deque([State(pc_initial=218 nstack_initial=0)])
2024-06-06 03:46:38,517 - DEBUG - stack: []
2024-06-06 03:46:38,517 - DEBUG - state.pc_initial: State(pc_initial=218 nstack_initial=0)
2024-06-06 03:46:38,517 - DEBUG - dispatch pc=218, inst=LOAD_FAST(arg=7, lineno=2069)
2024-06-06 03:46:38,517 - DEBUG - stack []
2024-06-06 03:46:38,517 - DEBUG - dispatch pc=220, inst=LOAD_FAST(arg=1, lineno=2069)
2024-06-06 03:46:38,517 - DEBUG - stack ['$inferred218.0']
2024-06-06 03:46:38,517 - DEBUG - dispatch pc=222, inst=LOAD_FAST_CHECK(arg=6, lineno=2069)
2024-06-06 03:46:38,517 - DEBUG - stack ['$inferred218.0', '$shape220.1']
2024-06-06 03:46:38,517 - DEBUG - dispatch pc=224, inst=STORE_SUBSCR(arg=None, lineno=2069)
2024-06-06 03:46:38,518 - DEBUG - stack ['$inferred218.0', '$shape220.1', '$neg_ax222.2']
2024-06-06 03:46:38,518 - DEBUG - dispatch pc=228, inst=RETURN_CONST(arg=0, lineno=2069)
2024-06-06 03:46:38,518 - DEBUG - stack []
2024-06-06 03:46:38,518 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,518 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:38,518 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=34 nstack_initial=1): {'$phi34.0'},
             State(pc_initial=38 nstack_initial=2): {'$phi38.1'},
             State(pc_initial=56 nstack_initial=1): set(),
             State(pc_initial=72 nstack_initial=1): set(),
             State(pc_initial=84 nstack_initial=2): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=128 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=140 nstack_initial=0): set(),
             State(pc_initial=150 nstack_initial=0): set(),
             State(pc_initial=166 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=0): set(),
             State(pc_initial=218 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=0): set()})
2024-06-06 03:46:38,520 - DEBUG - defmap: {'$phi34.0': State(pc_initial=0 nstack_initial=0),
 '$phi38.1': State(pc_initial=34 nstack_initial=1),
 '$phi84.1': State(pc_initial=34 nstack_initial=1)}
2024-06-06 03:46:38,520 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi34.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi56.0', State(pc_initial=56 nstack_initial=1)),
                          ('$phi72.0', State(pc_initial=72 nstack_initial=1))},
             '$phi38.0': {('$phi34.0', State(pc_initial=34 nstack_initial=1))},
             '$phi38.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))},
             '$phi56.0': {('$phi38.0', State(pc_initial=38 nstack_initial=2))},
             '$phi72.0': {('$phi38.0', State(pc_initial=38 nstack_initial=2))},
             '$phi84.0': {('$phi34.0', State(pc_initial=34 nstack_initial=1))},
             '$phi84.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))}})
2024-06-06 03:46:38,521 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi34.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2))},
             '$phi38.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2))},
             '$phi38.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))},
             '$phi56.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2))},
             '$phi84.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))}})
2024-06-06 03:46:38,522 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi34.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))},
             '$phi56.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))}})
2024-06-06 03:46:38,523 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi34.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))},
             '$phi56.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$32get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))}})
2024-06-06 03:46:38,523 - DEBUG - keep phismap: {'$phi34.0': {('$32get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi38.1': {('$34for_iter.2', State(pc_initial=34 nstack_initial=1))}}
2024-06-06 03:46:38,524 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi34.0': '$32get_iter.6'},
             State(pc_initial=34 nstack_initial=1): {'$phi38.1': '$34for_iter.2'}})
2024-06-06 03:46:38,524 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:38,524 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0'}), (6, {'value': '$const4.0'}), (8, {'res': '$const8.1'}), (10, {'value': '$const8.1'}), (12, {'idx': 0, 'res': '$12load_global.2'}), (22, {'res': '$shape22.4'}), (24, {'func': '$12load_global.2', 'args': ['$shape22.4'], 'kw_names': None, 'res': '$24call.5'}), (32, {'value': '$24call.5', 'res': '$32get_iter.6'})), outgoing_phis={'$phi34.0': '$32get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: ('$32get_iter.6',)})
2024-06-06 03:46:38,524 - DEBUG - block_infos State(pc_initial=34 nstack_initial=1):
AdaptBlockInfo(insts=((34, {'iterator': '$phi34.0', 'pair': '$34for_iter.1', 'indval': '$34for_iter.2', 'pred': '$34for_iter.3'}),), outgoing_phis={'$phi38.1': '$34for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: ('$phi34.0', '$34for_iter.2'), 38: ('$phi34.0', '$34for_iter.2')})
2024-06-06 03:46:38,524 - DEBUG - block_infos State(pc_initial=38 nstack_initial=2):
AdaptBlockInfo(insts=((38, {'iterable': '$phi38.1', 'stores': ['$38unpack_sequence.2', '$38unpack_sequence.3'], 'tupleobj': '$38unpack_sequence.4'}), (42, {'value': '$38unpack_sequence.2'}), (44, {'value': '$38unpack_sequence.3'}), (46, {'res': '$s46.5'}), (48, {'res': '$const48.6'}), (50, {'lhs': '$s46.5', 'rhs': '$const48.6', 'res': '$50compare_op.7'}), (54, {'pred': '$50compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: ('$phi38.0',), 72: ('$phi38.0',)})
2024-06-06 03:46:38,525 - DEBUG - block_infos State(pc_initial=56 nstack_initial=1):
AdaptBlockInfo(insts=((56, {'res': '$num_neg_value56.1'}), (58, {'res': '$const58.2'}), (60, {'op': '+=', 'lhs': '$num_neg_value56.1', 'rhs': '$const58.2', 'res': '$binop_iadd60.3'}), (64, {'value': '$binop_iadd60.3'}), (66, {'res': '$ax66.4'}), (68, {'value': '$ax66.4'}), (70, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: ('$phi56.0',)})
2024-06-06 03:46:38,525 - DEBUG - block_infos State(pc_initial=72 nstack_initial=1):
AdaptBlockInfo(insts=((72, {'res': '$known_size72.1'}), (74, {'res': '$s74.2'}), (76, {'op': '*=', 'lhs': '$known_size72.1', 'rhs': '$s74.2', 'res': '$binop_imul76.3'}), (80, {'value': '$binop_imul76.3'}), (82, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: ('$phi72.0',)})
2024-06-06 03:46:38,525 - DEBUG - block_infos State(pc_initial=84 nstack_initial=2):
AdaptBlockInfo(insts=((86, {'res': '$num_neg_value86.2'}), (88, {'res': '$const88.3'}), (90, {'lhs': '$num_neg_value86.2', 'rhs': '$const88.3', 'res': '$90compare_op.4'}), (94, {'pred': '$90compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: (), 130: ()})
2024-06-06 03:46:38,525 - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$origsize96.0'}), (98, {'res': '$known_size98.1'}), (100, {'lhs': '$origsize96.0', 'rhs': '$known_size98.1', 'res': '$100compare_op.2'}), (104, {'pred': '$100compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: (), 128: ()})
2024-06-06 03:46:38,525 - DEBUG - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'idx': 1, 'res': '$106load_global.0'}), (116, {'res': '$const116.2'}), (118, {'func': '$106load_global.0', 'args': ['$const116.2'], 'kw_names': None, 'res': '$118call.3'}), (126, {'exc': '$118call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,525 - DEBUG - block_infos State(pc_initial=128 nstack_initial=0):
AdaptBlockInfo(insts=((128, {'retval': '$const128.0', 'castval': '$128return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,525 - DEBUG - block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$num_neg_value130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$num_neg_value130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (138, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={140: (), 230: ()})
2024-06-06 03:46:38,525 - DEBUG - block_infos State(pc_initial=140 nstack_initial=0):
AdaptBlockInfo(insts=((140, {'res': '$known_size140.0'}), (142, {'res': '$const142.1'}), (144, {'lhs': '$known_size140.0', 'rhs': '$const142.1', 'res': '$144compare_op.2'}), (148, {'pred': '$144compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={150: (), 166: ()})
2024-06-06 03:46:38,525 - DEBUG - block_infos State(pc_initial=150 nstack_initial=0):
AdaptBlockInfo(insts=((150, {'res': '$const150.0'}), (152, {'value': '$const150.0'}), (154, {'res': '$origsize154.1'}), (156, {'res': '$const156.2'}), (158, {'lhs': '$origsize154.1', 'rhs': '$const156.2', 'res': '$158compare_op.3'}), (162, {'value': '$158compare_op.3'}), (164, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={192: ()})
2024-06-06 03:46:38,525 - DEBUG - block_infos State(pc_initial=166 nstack_initial=0):
AdaptBlockInfo(insts=((166, {'res': '$origsize166.0'}), (168, {'res': '$known_size168.1'}), (170, {'op': '//', 'lhs': '$origsize166.0', 'rhs': '$known_size168.1', 'res': '$binop_floordiv170.2'}), (174, {'value': '$binop_floordiv170.2'}), (176, {'res': '$origsize176.3'}), (178, {'res': '$known_size178.4'}), (180, {'op': '%', 'lhs': '$origsize176.3', 'rhs': '$known_size178.4', 'res': '$binop_mod180.5'}), (184, {'res': '$const184.6'}), (186, {'lhs': '$binop_mod180.5', 'rhs': '$const184.6', 'res': '$186compare_op.7'}), (190, {'value': '$186compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={192: ()})
2024-06-06 03:46:38,525 - DEBUG - block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$ok192.0'}), (194, {'pred': '$ok192.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: (), 218: ()})
2024-06-06 03:46:38,526 - DEBUG - block_infos State(pc_initial=196 nstack_initial=0):
AdaptBlockInfo(insts=((196, {'idx': 1, 'res': '$196load_global.0'}), (206, {'res': '$const206.2'}), (208, {'func': '$196load_global.0', 'args': ['$const206.2'], 'kw_names': None, 'res': '$208call.3'}), (216, {'exc': '$208call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,526 - DEBUG - block_infos State(pc_initial=218 nstack_initial=0):
AdaptBlockInfo(insts=((218, {'res': '$inferred218.0'}), (220, {'res': '$shape220.1'}), (222, {'res': '$neg_ax222.2'}), (224, {'target': '$shape220.1', 'index': '$neg_ax222.2', 'value': '$inferred218.0'}), (228, {'retval': '$const228.3', 'castval': '$228return_const.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,526 - DEBUG - block_infos State(pc_initial=230 nstack_initial=0):
AdaptBlockInfo(insts=((230, {'idx': 1, 'res': '$230load_global.0'}), (240, {'res': '$const240.2'}), (242, {'func': '$230load_global.0', 'args': ['$const240.2'], 'kw_names': None, 'res': '$242call.3'}), (250, {'exc': '$242call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,528 - DEBUG - label 0:
    origsize = arg(0, name=origsize)         ['origsize']
    shape = arg(1, name=shape)               ['shape']
    num_neg_value = const(int, 0)            ['num_neg_value']
    known_size = const(int, 1)               ['known_size']
    $12load_global.2 = global(enumerate: <class 'enumerate'>) ['$12load_global.2']
    $24call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2045)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.2', '$24call.5', 'shape']
    $32get_iter.6 = getiter(value=$24call.5) ['$24call.5', '$32get_iter.6']
    $phi34.0 = $32get_iter.6                 ['$32get_iter.6', '$phi34.0']
    jump 34                                  []
label 34:
    $34for_iter.1 = iternext(value=$phi34.0) ['$34for_iter.1', '$phi34.0']
    $34for_iter.2 = pair_first(value=$34for_iter.1) ['$34for_iter.1', '$34for_iter.2']
    $34for_iter.3 = pair_second(value=$34for_iter.1) ['$34for_iter.1', '$34for_iter.3']
    $phi38.1 = $34for_iter.2                 ['$34for_iter.2', '$phi38.1']
    branch $34for_iter.3, 38, 84             ['$34for_iter.3']
label 38:
    $38unpack_sequence.4 = exhaust_iter(value=$phi38.1, count=2) ['$38unpack_sequence.4', '$phi38.1']
    $38unpack_sequence.2 = static_getitem(value=$38unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$38unpack_sequence.2', '$38unpack_sequence.4']
    $38unpack_sequence.3 = static_getitem(value=$38unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$38unpack_sequence.3', '$38unpack_sequence.4']
    ax = $38unpack_sequence.2                ['$38unpack_sequence.2', 'ax']
    s = $38unpack_sequence.3                 ['$38unpack_sequence.3', 's']
    $const48.6 = const(int, 0)               ['$const48.6']
    $50compare_op.7 = s < $const48.6         ['$50compare_op.7', '$const48.6', 's']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($50compare_op.7, func=bool54, args=(Var($50compare_op.7, arrayobj.py:2049),), kws=(), vararg=None, varkwarg=None, target=None) ['$50compare_op.7', '$54pred', 'bool54']
    branch $54pred, 56, 72                   ['$54pred']
label 56:
    $const58.2 = const(int, 1)               ['$const58.2']
    $binop_iadd60.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const58.2, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd60.3', '$const58.2', 'num_neg_value']
    num_neg_value = $binop_iadd60.3          ['$binop_iadd60.3', 'num_neg_value']
    neg_ax = ax                              ['ax', 'neg_ax']
    jump 34                                  []
label 72:
    $binop_imul76.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul76.3', 'known_size', 's']
    known_size = $binop_imul76.3             ['$binop_imul76.3', 'known_size']
    jump 34                                  []
label 84:
    $const88.3 = const(int, 0)               ['$const88.3']
    $90compare_op.4 = num_neg_value == $const88.3 ['$90compare_op.4', '$const88.3', 'num_neg_value']
    bool94 = global(bool: <class 'bool'>)    ['bool94']
    $94pred = call bool94($90compare_op.4, func=bool94, args=(Var($90compare_op.4, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None) ['$90compare_op.4', '$94pred', 'bool94']
    branch $94pred, 96, 130                  ['$94pred']
label 96:
    $100compare_op.2 = origsize != known_size ['$100compare_op.2', 'known_size', 'origsize']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($100compare_op.2, func=bool104, args=(Var($100compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None) ['$100compare_op.2', '$104pred', 'bool104']
    branch $104pred, 106, 128                ['$104pred']
label 106:
    $106load_global.0 = global(ValueError: <class 'ValueError'>) ['$106load_global.0']
    $const116.2 = const(str, total size of new array must be unchanged) ['$const116.2']
    $118call.3 = call $106load_global.0($const116.2, func=$106load_global.0, args=[Var($const116.2, arrayobj.py:2057)], kws=(), vararg=None, varkwarg=None, target=None) ['$106load_global.0', '$118call.3', '$const116.2']
    raise $118call.3                         ['$118call.3']
label 128:
    $const128.0 = const(NoneType, None)      ['$const128.0']
    $128return_const.1 = cast(value=$const128.0) ['$128return_const.1', '$const128.0']
    return $128return_const.1                ['$128return_const.1']
label 130:
    $const132.1 = const(int, 1)              ['$const132.1']
    $134compare_op.2 = num_neg_value == $const132.1 ['$134compare_op.2', '$const132.1', 'num_neg_value']
    bool138 = global(bool: <class 'bool'>)   ['bool138']
    $138pred = call bool138($134compare_op.2, func=bool138, args=(Var($134compare_op.2, arrayobj.py:2059),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$138pred', 'bool138']
    branch $138pred, 140, 230                ['$138pred']
label 140:
    $const142.1 = const(int, 0)              ['$const142.1']
    $144compare_op.2 = known_size == $const142.1 ['$144compare_op.2', '$const142.1', 'known_size']
    bool148 = global(bool: <class 'bool'>)   ['bool148']
    $148pred = call bool148($144compare_op.2, func=bool148, args=(Var($144compare_op.2, arrayobj.py:2061),), kws=(), vararg=None, varkwarg=None, target=None) ['$144compare_op.2', '$148pred', 'bool148']
    branch $148pred, 150, 166                ['$148pred']
label 150:
    inferred = const(int, 0)                 ['inferred']
    $const156.2 = const(int, 0)              ['$const156.2']
    ok = origsize == $const156.2             ['$const156.2', 'ok', 'origsize']
    jump 192                                 []
label 166:
    inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
    $binop_mod180.5 = origsize % known_size  ['$binop_mod180.5', 'known_size', 'origsize']
    $const184.6 = const(int, 0)              ['$const184.6']
    ok = $binop_mod180.5 == $const184.6      ['$binop_mod180.5', '$const184.6', 'ok']
    jump 192                                 []
label 192:
    bool194 = global(bool: <class 'bool'>)   ['bool194']
    $194pred = call bool194(ok, func=bool194, args=(Var(ok, arrayobj.py:2063),), kws=(), vararg=None, varkwarg=None, target=None) ['$194pred', 'bool194', 'ok']
    branch $194pred, 218, 196                ['$194pred']
label 196:
    $196load_global.0 = global(ValueError: <class 'ValueError'>) ['$196load_global.0']
    $const206.2 = const(str, total size of new array must be unchanged) ['$const206.2']
    $208call.3 = call $196load_global.0($const206.2, func=$196load_global.0, args=[Var($const206.2, arrayobj.py:2068)], kws=(), vararg=None, varkwarg=None, target=None) ['$196load_global.0', '$208call.3', '$const206.2']
    raise $208call.3                         ['$208call.3']
label 218:
    shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
    $const228.3 = const(NoneType, None)      ['$const228.3']
    $228return_const.4 = cast(value=$const228.3) ['$228return_const.4', '$const228.3']
    return $228return_const.4                ['$228return_const.4']
label 230:
    $230load_global.0 = global(ValueError: <class 'ValueError'>) ['$230load_global.0']
    $const240.2 = const(str, multiple negative shape values) ['$const240.2']
    $242call.3 = call $230load_global.0($const240.2, func=$230load_global.0, args=[Var($const240.2, arrayobj.py:2072)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.0', '$242call.3', '$const240.2']
    raise $242call.3                         ['$242call.3']

2024-06-06 03:46:38,542 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:38,542 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,542 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-06 03:46:38,543 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-06 03:46:38,543 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-06 03:46:38,543 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-06 03:46:38,543 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-06 03:46:38,543 - DEBUG - on stmt: $24call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2045)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,543 - DEBUG - on stmt: $32get_iter.6 = getiter(value=$24call.5)
2024-06-06 03:46:38,543 - DEBUG - on stmt: $phi34.0 = $32get_iter.6
2024-06-06 03:46:38,543 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,543 - DEBUG - ==== SSA block analysis pass on 34
2024-06-06 03:46:38,543 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,544 - DEBUG - on stmt: $34for_iter.1 = iternext(value=$phi34.0)
2024-06-06 03:46:38,544 - DEBUG - on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
2024-06-06 03:46:38,544 - DEBUG - on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
2024-06-06 03:46:38,544 - DEBUG - on stmt: $phi38.1 = $34for_iter.2
2024-06-06 03:46:38,544 - DEBUG - on stmt: branch $34for_iter.3, 38, 84
2024-06-06 03:46:38,544 - DEBUG - ==== SSA block analysis pass on 38
2024-06-06 03:46:38,544 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,544 - DEBUG - on stmt: $38unpack_sequence.4 = exhaust_iter(value=$phi38.1, count=2)
2024-06-06 03:46:38,544 - DEBUG - on stmt: $38unpack_sequence.2 = static_getitem(value=$38unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,544 - DEBUG - on stmt: $38unpack_sequence.3 = static_getitem(value=$38unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,544 - DEBUG - on stmt: ax = $38unpack_sequence.2
2024-06-06 03:46:38,544 - DEBUG - on stmt: s = $38unpack_sequence.3
2024-06-06 03:46:38,545 - DEBUG - on stmt: $const48.6 = const(int, 0)
2024-06-06 03:46:38,545 - DEBUG - on stmt: $50compare_op.7 = s < $const48.6
2024-06-06 03:46:38,545 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,545 - DEBUG - on stmt: $54pred = call bool54($50compare_op.7, func=bool54, args=(Var($50compare_op.7, arrayobj.py:2049),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,545 - DEBUG - on stmt: branch $54pred, 56, 72
2024-06-06 03:46:38,545 - DEBUG - ==== SSA block analysis pass on 56
2024-06-06 03:46:38,545 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,545 - DEBUG - on stmt: $const58.2 = const(int, 1)
2024-06-06 03:46:38,545 - DEBUG - on stmt: $binop_iadd60.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const58.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,545 - DEBUG - on stmt: num_neg_value = $binop_iadd60.3
2024-06-06 03:46:38,545 - DEBUG - on stmt: neg_ax = ax
2024-06-06 03:46:38,545 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,546 - DEBUG - ==== SSA block analysis pass on 72
2024-06-06 03:46:38,546 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,546 - DEBUG - on stmt: $binop_imul76.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,546 - DEBUG - on stmt: known_size = $binop_imul76.3
2024-06-06 03:46:38,546 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,546 - DEBUG - ==== SSA block analysis pass on 84
2024-06-06 03:46:38,546 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,546 - DEBUG - on stmt: $const88.3 = const(int, 0)
2024-06-06 03:46:38,546 - DEBUG - on stmt: $90compare_op.4 = num_neg_value == $const88.3
2024-06-06 03:46:38,547 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,547 - DEBUG - on stmt: $94pred = call bool94($90compare_op.4, func=bool94, args=(Var($90compare_op.4, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,547 - DEBUG - on stmt: branch $94pred, 96, 130
2024-06-06 03:46:38,547 - DEBUG - ==== SSA block analysis pass on 96
2024-06-06 03:46:38,547 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,547 - DEBUG - on stmt: $100compare_op.2 = origsize != known_size
2024-06-06 03:46:38,547 - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,547 - DEBUG - on stmt: $104pred = call bool104($100compare_op.2, func=bool104, args=(Var($100compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,547 - DEBUG - on stmt: branch $104pred, 106, 128
2024-06-06 03:46:38,547 - DEBUG - ==== SSA block analysis pass on 106
2024-06-06 03:46:38,548 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,548 - DEBUG - on stmt: $106load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,548 - DEBUG - on stmt: $const116.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,548 - DEBUG - on stmt: $118call.3 = call $106load_global.0($const116.2, func=$106load_global.0, args=[Var($const116.2, arrayobj.py:2057)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,548 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,548 - DEBUG - ==== SSA block analysis pass on 128
2024-06-06 03:46:38,548 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,548 - DEBUG - on stmt: $const128.0 = const(NoneType, None)
2024-06-06 03:46:38,548 - DEBUG - on stmt: $128return_const.1 = cast(value=$const128.0)
2024-06-06 03:46:38,548 - DEBUG - on stmt: return $128return_const.1
2024-06-06 03:46:38,548 - DEBUG - ==== SSA block analysis pass on 130
2024-06-06 03:46:38,548 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,548 - DEBUG - on stmt: $const132.1 = const(int, 1)
2024-06-06 03:46:38,549 - DEBUG - on stmt: $134compare_op.2 = num_neg_value == $const132.1
2024-06-06 03:46:38,549 - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,549 - DEBUG - on stmt: $138pred = call bool138($134compare_op.2, func=bool138, args=(Var($134compare_op.2, arrayobj.py:2059),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,549 - DEBUG - on stmt: branch $138pred, 140, 230
2024-06-06 03:46:38,549 - DEBUG - ==== SSA block analysis pass on 140
2024-06-06 03:46:38,549 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,549 - DEBUG - on stmt: $const142.1 = const(int, 0)
2024-06-06 03:46:38,549 - DEBUG - on stmt: $144compare_op.2 = known_size == $const142.1
2024-06-06 03:46:38,549 - DEBUG - on stmt: bool148 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,549 - DEBUG - on stmt: $148pred = call bool148($144compare_op.2, func=bool148, args=(Var($144compare_op.2, arrayobj.py:2061),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,549 - DEBUG - on stmt: branch $148pred, 150, 166
2024-06-06 03:46:38,549 - DEBUG - ==== SSA block analysis pass on 150
2024-06-06 03:46:38,549 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,550 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-06 03:46:38,550 - DEBUG - on stmt: $const156.2 = const(int, 0)
2024-06-06 03:46:38,550 - DEBUG - on stmt: ok = origsize == $const156.2
2024-06-06 03:46:38,550 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,550 - DEBUG - ==== SSA block analysis pass on 166
2024-06-06 03:46:38,550 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,550 - DEBUG - on stmt: inferred = origsize // known_size
2024-06-06 03:46:38,550 - DEBUG - on stmt: $binop_mod180.5 = origsize % known_size
2024-06-06 03:46:38,550 - DEBUG - on stmt: $const184.6 = const(int, 0)
2024-06-06 03:46:38,550 - DEBUG - on stmt: ok = $binop_mod180.5 == $const184.6
2024-06-06 03:46:38,550 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,550 - DEBUG - ==== SSA block analysis pass on 192
2024-06-06 03:46:38,550 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,551 - DEBUG - on stmt: bool194 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,551 - DEBUG - on stmt: $194pred = call bool194(ok, func=bool194, args=(Var(ok, arrayobj.py:2063),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,551 - DEBUG - on stmt: branch $194pred, 218, 196
2024-06-06 03:46:38,551 - DEBUG - ==== SSA block analysis pass on 196
2024-06-06 03:46:38,551 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,551 - DEBUG - on stmt: $196load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,551 - DEBUG - on stmt: $const206.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,551 - DEBUG - on stmt: $208call.3 = call $196load_global.0($const206.2, func=$196load_global.0, args=[Var($const206.2, arrayobj.py:2068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,551 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,551 - DEBUG - ==== SSA block analysis pass on 218
2024-06-06 03:46:38,551 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,551 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-06-06 03:46:38,551 - DEBUG - on stmt: $const228.3 = const(NoneType, None)
2024-06-06 03:46:38,552 - DEBUG - on stmt: $228return_const.4 = cast(value=$const228.3)
2024-06-06 03:46:38,552 - DEBUG - on stmt: return $228return_const.4
2024-06-06 03:46:38,552 - DEBUG - ==== SSA block analysis pass on 230
2024-06-06 03:46:38,552 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,552 - DEBUG - on stmt: $230load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,552 - DEBUG - on stmt: $const240.2 = const(str, multiple negative shape values)
2024-06-06 03:46:38,552 - DEBUG - on stmt: $242call.3 = call $230load_global.0($const240.2, func=$230load_global.0, args=[Var($const240.2, arrayobj.py:2072)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,552 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-06 03:46:38,552 - DEBUG - ==== SSA block analysis pass on 231
2024-06-06 03:46:38,552 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1f70050>
2024-06-06 03:46:38,552 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,557 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100compare_op.2': [(<numba.core.ir.Assign object at 0x7fe9d220b920>,
                                   96)],
             '$104pred': [(<numba.core.ir.Assign object at 0x7fe9d220b500>,
                           96)],
             '$106load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d220b350>,
                                    106)],
             '$118call.3': [(<numba.core.ir.Assign object at 0x7fe9d220ade0>,
                             106)],
             '$128return_const.1': [(<numba.core.ir.Assign object at 0x7fe9d220ae70>,
                                     128)],
             '$12load_global.2': [(<numba.core.ir.Assign object at 0x7fe9d1f72cf0>,
                                   0)],
             '$134compare_op.2': [(<numba.core.ir.Assign object at 0x7fe9d1fdb9e0>,
                                   130)],
             '$138pred': [(<numba.core.ir.Assign object at 0x7fe9d1fdb4a0>,
                           130)],
             '$144compare_op.2': [(<numba.core.ir.Assign object at 0x7fe9d1fdad80>,
                                   140)],
             '$148pred': [(<numba.core.ir.Assign object at 0x7fe9d1fdac00>,
                           140)],
             '$194pred': [(<numba.core.ir.Assign object at 0x7fe9d1fd9280>,
                           192)],
             '$196load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d1fd9d30>,
                                    196)],
             '$208call.3': [(<numba.core.ir.Assign object at 0x7fe9d1fd95e0>,
                             196)],
             '$228return_const.4': [(<numba.core.ir.Assign object at 0x7fe9d1fd8800>,
                                     218)],
             '$230load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d1fd86e0>,
                                    230)],
             '$242call.3': [(<numba.core.ir.Assign object at 0x7fe9d1fda780>,
                             230)],
             '$24call.5': [(<numba.core.ir.Assign object at 0x7fe9d1f71b20>,
                            0)],
             '$32get_iter.6': [(<numba.core.ir.Assign object at 0x7fe9d1f71fd0>,
                                0)],
             '$34for_iter.1': [(<numba.core.ir.Assign object at 0x7fe9d1f71a60>,
                                34)],
             '$34for_iter.2': [(<numba.core.ir.Assign object at 0x7fe9d1f71760>,
                                34)],
             '$34for_iter.3': [(<numba.core.ir.Assign object at 0x7fe9d1f71880>,
                                34)],
             '$38unpack_sequence.2': [(<numba.core.ir.Assign object at 0x7fe9d1f71520>,
                                       38)],
             '$38unpack_sequence.3': [(<numba.core.ir.Assign object at 0x7fe9d1f702f0>,
                                       38)],
             '$38unpack_sequence.4': [(<numba.core.ir.Assign object at 0x7fe9d1f716a0>,
                                       38)],
             '$50compare_op.7': [(<numba.core.ir.Assign object at 0x7fe9d1f70800>,
                                  38)],
             '$54pred': [(<numba.core.ir.Assign object at 0x7fe9d1f70b60>, 38)],
             '$90compare_op.4': [(<numba.core.ir.Assign object at 0x7fe9d220bef0>,
                                  84)],
             '$94pred': [(<numba.core.ir.Assign object at 0x7fe9d220bb30>, 84)],
             '$binop_iadd60.3': [(<numba.core.ir.Assign object at 0x7fe9d1f70f80>,
                                  56)],
             '$binop_imul76.3': [(<numba.core.ir.Assign object at 0x7fe9d1f70170>,
                                  72)],
             '$binop_mod180.5': [(<numba.core.ir.Assign object at 0x7fe9d1fd9be0>,
                                  166)],
             '$const116.2': [(<numba.core.ir.Assign object at 0x7fe9d220b1d0>,
                              106)],
             '$const128.0': [(<numba.core.ir.Assign object at 0x7fe9d220b110>,
                              128)],
             '$const132.1': [(<numba.core.ir.Assign object at 0x7fe9d220be00>,
                              130)],
             '$const142.1': [(<numba.core.ir.Assign object at 0x7fe9d1fdb440>,
                              140)],
             '$const156.2': [(<numba.core.ir.Assign object at 0x7fe9d1fda4b0>,
                              150)],
             '$const184.6': [(<numba.core.ir.Assign object at 0x7fe9d1fd9700>,
                              166)],
             '$const206.2': [(<numba.core.ir.Assign object at 0x7fe9d1fd8f80>,
                              196)],
             '$const228.3': [(<numba.core.ir.Assign object at 0x7fe9d1fd8aa0>,
                              218)],
             '$const240.2': [(<numba.core.ir.Assign object at 0x7fe9d1fda5a0>,
                              230)],
             '$const48.6': [(<numba.core.ir.Assign object at 0x7fe9d1f70740>,
                             38)],
             '$const58.2': [(<numba.core.ir.Assign object at 0x7fe9d1f70e60>,
                             56)],
             '$const88.3': [(<numba.core.ir.Assign object at 0x7fe9d220b200>,
                             84)],
             '$phi34.0': [(<numba.core.ir.Assign object at 0x7fe9d1f72540>, 0)],
             '$phi38.1': [(<numba.core.ir.Assign object at 0x7fe9d1f71a90>,
                           34)],
             'ax': [(<numba.core.ir.Assign object at 0x7fe9d1f70c50>, 38)],
             'bool104': [(<numba.core.ir.Assign object at 0x7fe9d220bbf0>, 96)],
             'bool138': [(<numba.core.ir.Assign object at 0x7fe9d1fdb650>,
                          130)],
             'bool148': [(<numba.core.ir.Assign object at 0x7fe9d1fdae10>,
                          140)],
             'bool194': [(<numba.core.ir.Assign object at 0x7fe9d1fd90d0>,
                          192)],
             'bool54': [(<numba.core.ir.Assign object at 0x7fe9d1f70980>, 38)],
             'bool94': [(<numba.core.ir.Assign object at 0x7fe9d220bcb0>, 84)],
             'inferred': [(<numba.core.ir.Assign object at 0x7fe9d1fdaba0>,
                           150),
                          (<numba.core.ir.Assign object at 0x7fe9d1fd9e80>,
                           166)],
             'known_size': [(<numba.core.ir.Assign object at 0x7fe9d1f723c0>,
                             0),
                            (<numba.core.ir.Assign object at 0x7fe9d1f70110>,
                             72)],
             'neg_ax': [(<numba.core.ir.Assign object at 0x7fe9d1f71070>, 56)],
             'num_neg_value': [(<numba.core.ir.Assign object at 0x7fe9d1f72870>,
                                0),
                               (<numba.core.ir.Assign object at 0x7fe9d1f71040>,
                                56)],
             'ok': [(<numba.core.ir.Assign object at 0x7fe9d1fda450>, 150),
                    (<numba.core.ir.Assign object at 0x7fe9d1fd9820>, 166)],
             'origsize': [(<numba.core.ir.Assign object at 0x7fe9d1f720c0>, 0)],
             's': [(<numba.core.ir.Assign object at 0x7fe9d1f704a0>, 38)],
             'shape': [(<numba.core.ir.Assign object at 0x7fe9d1f72960>, 0)]})
2024-06-06 03:46:38,557 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d22380b0>
2024-06-06 03:46:38,557 - DEBUG - Fix SSA violator on var num_neg_value
2024-06-06 03:46:38,557 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:38,557 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,557 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-06 03:46:38,557 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-06 03:46:38,557 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-06 03:46:38,557 - DEBUG - first assign: num_neg_value
2024-06-06 03:46:38,558 - DEBUG - replaced with: num_neg_value = const(int, 0)
2024-06-06 03:46:38,558 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-06 03:46:38,558 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-06 03:46:38,558 - DEBUG - on stmt: $24call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2045)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,558 - DEBUG - on stmt: $32get_iter.6 = getiter(value=$24call.5)
2024-06-06 03:46:38,558 - DEBUG - on stmt: $phi34.0 = $32get_iter.6
2024-06-06 03:46:38,558 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,558 - DEBUG - ==== SSA block rewrite pass on 34
2024-06-06 03:46:38,558 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,558 - DEBUG - on stmt: $34for_iter.1 = iternext(value=$phi34.0)
2024-06-06 03:46:38,558 - DEBUG - on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
2024-06-06 03:46:38,558 - DEBUG - on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
2024-06-06 03:46:38,558 - DEBUG - on stmt: $phi38.1 = $34for_iter.2
2024-06-06 03:46:38,558 - DEBUG - on stmt: branch $34for_iter.3, 38, 84
2024-06-06 03:46:38,559 - DEBUG - ==== SSA block rewrite pass on 38
2024-06-06 03:46:38,559 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,559 - DEBUG - on stmt: $38unpack_sequence.4 = exhaust_iter(value=$phi38.1, count=2)
2024-06-06 03:46:38,559 - DEBUG - on stmt: $38unpack_sequence.2 = static_getitem(value=$38unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,559 - DEBUG - on stmt: $38unpack_sequence.3 = static_getitem(value=$38unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,559 - DEBUG - on stmt: ax = $38unpack_sequence.2
2024-06-06 03:46:38,559 - DEBUG - on stmt: s = $38unpack_sequence.3
2024-06-06 03:46:38,559 - DEBUG - on stmt: $const48.6 = const(int, 0)
2024-06-06 03:46:38,559 - DEBUG - on stmt: $50compare_op.7 = s < $const48.6
2024-06-06 03:46:38,559 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,559 - DEBUG - on stmt: $54pred = call bool54($50compare_op.7, func=bool54, args=(Var($50compare_op.7, arrayobj.py:2049),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,559 - DEBUG - on stmt: branch $54pred, 56, 72
2024-06-06 03:46:38,559 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:38,559 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,560 - DEBUG - on stmt: $const58.2 = const(int, 1)
2024-06-06 03:46:38,560 - DEBUG - on stmt: $binop_iadd60.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const58.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,560 - DEBUG - on stmt: num_neg_value = $binop_iadd60.3
2024-06-06 03:46:38,560 - DEBUG - replaced with: num_neg_value.1 = $binop_iadd60.3
2024-06-06 03:46:38,560 - DEBUG - on stmt: neg_ax = ax
2024-06-06 03:46:38,560 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,560 - DEBUG - ==== SSA block rewrite pass on 72
2024-06-06 03:46:38,560 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,560 - DEBUG - on stmt: $binop_imul76.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,560 - DEBUG - on stmt: known_size = $binop_imul76.3
2024-06-06 03:46:38,560 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,560 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-06 03:46:38,560 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,560 - DEBUG - on stmt: $const88.3 = const(int, 0)
2024-06-06 03:46:38,561 - DEBUG - on stmt: $90compare_op.4 = num_neg_value == $const88.3
2024-06-06 03:46:38,561 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,561 - DEBUG - on stmt: $94pred = call bool94($90compare_op.4, func=bool94, args=(Var($90compare_op.4, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,561 - DEBUG - on stmt: branch $94pred, 96, 130
2024-06-06 03:46:38,561 - DEBUG - ==== SSA block rewrite pass on 96
2024-06-06 03:46:38,561 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,561 - DEBUG - on stmt: $100compare_op.2 = origsize != known_size
2024-06-06 03:46:38,561 - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,561 - DEBUG - on stmt: $104pred = call bool104($100compare_op.2, func=bool104, args=(Var($100compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,561 - DEBUG - on stmt: branch $104pred, 106, 128
2024-06-06 03:46:38,562 - DEBUG - ==== SSA block rewrite pass on 106
2024-06-06 03:46:38,562 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,562 - DEBUG - on stmt: $106load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,562 - DEBUG - on stmt: $const116.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,562 - DEBUG - on stmt: $118call.3 = call $106load_global.0($const116.2, func=$106load_global.0, args=[Var($const116.2, arrayobj.py:2057)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,562 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,562 - DEBUG - ==== SSA block rewrite pass on 128
2024-06-06 03:46:38,562 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,562 - DEBUG - on stmt: $const128.0 = const(NoneType, None)
2024-06-06 03:46:38,562 - DEBUG - on stmt: $128return_const.1 = cast(value=$const128.0)
2024-06-06 03:46:38,562 - DEBUG - on stmt: return $128return_const.1
2024-06-06 03:46:38,563 - DEBUG - ==== SSA block rewrite pass on 130
2024-06-06 03:46:38,563 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,563 - DEBUG - on stmt: $const132.1 = const(int, 1)
2024-06-06 03:46:38,563 - DEBUG - on stmt: $134compare_op.2 = num_neg_value == $const132.1
2024-06-06 03:46:38,563 - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,563 - DEBUG - on stmt: $138pred = call bool138($134compare_op.2, func=bool138, args=(Var($134compare_op.2, arrayobj.py:2059),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,563 - DEBUG - on stmt: branch $138pred, 140, 230
2024-06-06 03:46:38,563 - DEBUG - ==== SSA block rewrite pass on 140
2024-06-06 03:46:38,563 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,563 - DEBUG - on stmt: $const142.1 = const(int, 0)
2024-06-06 03:46:38,563 - DEBUG - on stmt: $144compare_op.2 = known_size == $const142.1
2024-06-06 03:46:38,563 - DEBUG - on stmt: bool148 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,563 - DEBUG - on stmt: $148pred = call bool148($144compare_op.2, func=bool148, args=(Var($144compare_op.2, arrayobj.py:2061),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,564 - DEBUG - on stmt: branch $148pred, 150, 166
2024-06-06 03:46:38,564 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-06 03:46:38,564 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,564 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-06 03:46:38,564 - DEBUG - on stmt: $const156.2 = const(int, 0)
2024-06-06 03:46:38,564 - DEBUG - on stmt: ok = origsize == $const156.2
2024-06-06 03:46:38,564 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,564 - DEBUG - ==== SSA block rewrite pass on 166
2024-06-06 03:46:38,564 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,564 - DEBUG - on stmt: inferred = origsize // known_size
2024-06-06 03:46:38,564 - DEBUG - on stmt: $binop_mod180.5 = origsize % known_size
2024-06-06 03:46:38,564 - DEBUG - on stmt: $const184.6 = const(int, 0)
2024-06-06 03:46:38,564 - DEBUG - on stmt: ok = $binop_mod180.5 == $const184.6
2024-06-06 03:46:38,564 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,565 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-06 03:46:38,565 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,565 - DEBUG - on stmt: bool194 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,565 - DEBUG - on stmt: $194pred = call bool194(ok, func=bool194, args=(Var(ok, arrayobj.py:2063),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,565 - DEBUG - on stmt: branch $194pred, 218, 196
2024-06-06 03:46:38,565 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-06 03:46:38,565 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,565 - DEBUG - on stmt: $196load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,565 - DEBUG - on stmt: $const206.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,565 - DEBUG - on stmt: $208call.3 = call $196load_global.0($const206.2, func=$196load_global.0, args=[Var($const206.2, arrayobj.py:2068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,565 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,565 - DEBUG - ==== SSA block rewrite pass on 218
2024-06-06 03:46:38,565 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,565 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-06-06 03:46:38,566 - DEBUG - on stmt: $const228.3 = const(NoneType, None)
2024-06-06 03:46:38,566 - DEBUG - on stmt: $228return_const.4 = cast(value=$const228.3)
2024-06-06 03:46:38,566 - DEBUG - on stmt: return $228return_const.4
2024-06-06 03:46:38,566 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:38,566 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,566 - DEBUG - on stmt: $230load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,566 - DEBUG - on stmt: $const240.2 = const(str, multiple negative shape values)
2024-06-06 03:46:38,566 - DEBUG - on stmt: $242call.3 = call $230load_global.0($const240.2, func=$230load_global.0, args=[Var($const240.2, arrayobj.py:2072)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,566 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-06 03:46:38,566 - DEBUG - ==== SSA block rewrite pass on 231
2024-06-06 03:46:38,566 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d22397f0>
2024-06-06 03:46:38,566 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,566 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fe9d2239340>],
             56: [<numba.core.ir.Assign object at 0x7fe9d1fd83e0>]})
2024-06-06 03:46:38,567 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:38,567 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,567 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-06 03:46:38,567 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-06 03:46:38,567 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-06 03:46:38,567 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-06 03:46:38,567 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-06 03:46:38,567 - DEBUG - on stmt: $24call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2045)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,567 - DEBUG - on stmt: $32get_iter.6 = getiter(value=$24call.5)
2024-06-06 03:46:38,567 - DEBUG - on stmt: $phi34.0 = $32get_iter.6
2024-06-06 03:46:38,567 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,567 - DEBUG - ==== SSA block rewrite pass on 34
2024-06-06 03:46:38,567 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,567 - DEBUG - on stmt: $34for_iter.1 = iternext(value=$phi34.0)
2024-06-06 03:46:38,568 - DEBUG - on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
2024-06-06 03:46:38,568 - DEBUG - on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
2024-06-06 03:46:38,568 - DEBUG - on stmt: $phi38.1 = $34for_iter.2
2024-06-06 03:46:38,568 - DEBUG - on stmt: branch $34for_iter.3, 38, 84
2024-06-06 03:46:38,568 - DEBUG - ==== SSA block rewrite pass on 38
2024-06-06 03:46:38,568 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,568 - DEBUG - on stmt: $38unpack_sequence.4 = exhaust_iter(value=$phi38.1, count=2)
2024-06-06 03:46:38,568 - DEBUG - on stmt: $38unpack_sequence.2 = static_getitem(value=$38unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,568 - DEBUG - on stmt: $38unpack_sequence.3 = static_getitem(value=$38unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,568 - DEBUG - on stmt: ax = $38unpack_sequence.2
2024-06-06 03:46:38,568 - DEBUG - on stmt: s = $38unpack_sequence.3
2024-06-06 03:46:38,568 - DEBUG - on stmt: $const48.6 = const(int, 0)
2024-06-06 03:46:38,568 - DEBUG - on stmt: $50compare_op.7 = s < $const48.6
2024-06-06 03:46:38,569 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,569 - DEBUG - on stmt: $54pred = call bool54($50compare_op.7, func=bool54, args=(Var($50compare_op.7, arrayobj.py:2049),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,569 - DEBUG - on stmt: branch $54pred, 56, 72
2024-06-06 03:46:38,569 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:38,569 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,569 - DEBUG - on stmt: $const58.2 = const(int, 1)
2024-06-06 03:46:38,569 - DEBUG - on stmt: $binop_iadd60.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const58.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,569 - DEBUG - find_def var='num_neg_value' stmt=$binop_iadd60.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const58.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,569 - DEBUG - find_def_from_top label 56
2024-06-06 03:46:38,569 - DEBUG - idom 38 from label 56
2024-06-06 03:46:38,569 - DEBUG - find_def_from_bottom label 38
2024-06-06 03:46:38,569 - DEBUG - find_def_from_top label 38
2024-06-06 03:46:38,569 - DEBUG - idom 34 from label 38
2024-06-06 03:46:38,570 - DEBUG - find_def_from_bottom label 34
2024-06-06 03:46:38,570 - DEBUG - find_def_from_top label 34
2024-06-06 03:46:38,570 - DEBUG - insert phi node num_neg_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 34
2024-06-06 03:46:38,570 - DEBUG - find_def_from_bottom label 0
2024-06-06 03:46:38,570 - DEBUG - incoming_def num_neg_value = const(int, 0)
2024-06-06 03:46:38,570 - DEBUG - find_def_from_bottom label 231
2024-06-06 03:46:38,571 - DEBUG - find_def_from_top label 231
2024-06-06 03:46:38,571 - DEBUG - insert phi node num_neg_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 231
2024-06-06 03:46:38,571 - DEBUG - find_def_from_bottom label 56
2024-06-06 03:46:38,571 - DEBUG - incoming_def num_neg_value.1 = $binop_iadd60.3
2024-06-06 03:46:38,571 - DEBUG - find_def_from_bottom label 72
2024-06-06 03:46:38,571 - DEBUG - find_def_from_top label 72
2024-06-06 03:46:38,571 - DEBUG - idom 38 from label 72
2024-06-06 03:46:38,571 - DEBUG - find_def_from_bottom label 38
2024-06-06 03:46:38,572 - DEBUG - find_def_from_top label 38
2024-06-06 03:46:38,572 - DEBUG - idom 34 from label 38
2024-06-06 03:46:38,572 - DEBUG - find_def_from_bottom label 34
2024-06-06 03:46:38,572 - DEBUG - incoming_def num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2046)], incoming_blocks=[0])
2024-06-06 03:46:38,572 - DEBUG - incoming_def num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2050), Var(num_neg_value.2, arrayobj.py:2050)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,572 - DEBUG - replaced with: $binop_iadd60.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const58.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,572 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd60.3
2024-06-06 03:46:38,572 - DEBUG - on stmt: neg_ax = ax
2024-06-06 03:46:38,572 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,572 - DEBUG - ==== SSA block rewrite pass on 72
2024-06-06 03:46:38,573 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,573 - DEBUG - on stmt: $binop_imul76.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,573 - DEBUG - on stmt: known_size = $binop_imul76.3
2024-06-06 03:46:38,573 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,573 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-06 03:46:38,573 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,573 - DEBUG - on stmt: $const88.3 = const(int, 0)
2024-06-06 03:46:38,573 - DEBUG - on stmt: $90compare_op.4 = num_neg_value == $const88.3
2024-06-06 03:46:38,573 - DEBUG - find_def var='num_neg_value' stmt=$90compare_op.4 = num_neg_value == $const88.3
2024-06-06 03:46:38,573 - DEBUG - find_def_from_top label 84
2024-06-06 03:46:38,573 - DEBUG - idom 34 from label 84
2024-06-06 03:46:38,573 - DEBUG - find_def_from_bottom label 34
2024-06-06 03:46:38,573 - DEBUG - replaced with: $90compare_op.4 = num_neg_value.2 == $const88.3
2024-06-06 03:46:38,573 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,574 - DEBUG - on stmt: $94pred = call bool94($90compare_op.4, func=bool94, args=(Var($90compare_op.4, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,574 - DEBUG - on stmt: branch $94pred, 96, 130
2024-06-06 03:46:38,574 - DEBUG - ==== SSA block rewrite pass on 96
2024-06-06 03:46:38,574 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,574 - DEBUG - on stmt: $100compare_op.2 = origsize != known_size
2024-06-06 03:46:38,574 - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,574 - DEBUG - on stmt: $104pred = call bool104($100compare_op.2, func=bool104, args=(Var($100compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,574 - DEBUG - on stmt: branch $104pred, 106, 128
2024-06-06 03:46:38,574 - DEBUG - ==== SSA block rewrite pass on 106
2024-06-06 03:46:38,574 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,574 - DEBUG - on stmt: $106load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,574 - DEBUG - on stmt: $const116.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,574 - DEBUG - on stmt: $118call.3 = call $106load_global.0($const116.2, func=$106load_global.0, args=[Var($const116.2, arrayobj.py:2057)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,575 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,575 - DEBUG - ==== SSA block rewrite pass on 128
2024-06-06 03:46:38,575 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,575 - DEBUG - on stmt: $const128.0 = const(NoneType, None)
2024-06-06 03:46:38,575 - DEBUG - on stmt: $128return_const.1 = cast(value=$const128.0)
2024-06-06 03:46:38,575 - DEBUG - on stmt: return $128return_const.1
2024-06-06 03:46:38,575 - DEBUG - ==== SSA block rewrite pass on 130
2024-06-06 03:46:38,575 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,575 - DEBUG - on stmt: $const132.1 = const(int, 1)
2024-06-06 03:46:38,575 - DEBUG - on stmt: $134compare_op.2 = num_neg_value == $const132.1
2024-06-06 03:46:38,575 - DEBUG - find_def var='num_neg_value' stmt=$134compare_op.2 = num_neg_value == $const132.1
2024-06-06 03:46:38,575 - DEBUG - find_def_from_top label 130
2024-06-06 03:46:38,575 - DEBUG - idom 84 from label 130
2024-06-06 03:46:38,576 - DEBUG - find_def_from_bottom label 84
2024-06-06 03:46:38,576 - DEBUG - find_def_from_top label 84
2024-06-06 03:46:38,576 - DEBUG - idom 34 from label 84
2024-06-06 03:46:38,576 - DEBUG - find_def_from_bottom label 34
2024-06-06 03:46:38,576 - DEBUG - replaced with: $134compare_op.2 = num_neg_value.2 == $const132.1
2024-06-06 03:46:38,576 - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,576 - DEBUG - on stmt: $138pred = call bool138($134compare_op.2, func=bool138, args=(Var($134compare_op.2, arrayobj.py:2059),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,576 - DEBUG - on stmt: branch $138pred, 140, 230
2024-06-06 03:46:38,577 - DEBUG - ==== SSA block rewrite pass on 140
2024-06-06 03:46:38,577 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,577 - DEBUG - on stmt: $const142.1 = const(int, 0)
2024-06-06 03:46:38,577 - DEBUG - on stmt: $144compare_op.2 = known_size == $const142.1
2024-06-06 03:46:38,577 - DEBUG - on stmt: bool148 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,577 - DEBUG - on stmt: $148pred = call bool148($144compare_op.2, func=bool148, args=(Var($144compare_op.2, arrayobj.py:2061),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,577 - DEBUG - on stmt: branch $148pred, 150, 166
2024-06-06 03:46:38,577 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-06 03:46:38,577 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,577 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-06 03:46:38,577 - DEBUG - on stmt: $const156.2 = const(int, 0)
2024-06-06 03:46:38,577 - DEBUG - on stmt: ok = origsize == $const156.2
2024-06-06 03:46:38,578 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,578 - DEBUG - ==== SSA block rewrite pass on 166
2024-06-06 03:46:38,578 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,578 - DEBUG - on stmt: inferred = origsize // known_size
2024-06-06 03:46:38,578 - DEBUG - on stmt: $binop_mod180.5 = origsize % known_size
2024-06-06 03:46:38,578 - DEBUG - on stmt: $const184.6 = const(int, 0)
2024-06-06 03:46:38,578 - DEBUG - on stmt: ok = $binop_mod180.5 == $const184.6
2024-06-06 03:46:38,578 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,578 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-06 03:46:38,578 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,578 - DEBUG - on stmt: bool194 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,578 - DEBUG - on stmt: $194pred = call bool194(ok, func=bool194, args=(Var(ok, arrayobj.py:2063),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,579 - DEBUG - on stmt: branch $194pred, 218, 196
2024-06-06 03:46:38,579 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-06 03:46:38,579 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,579 - DEBUG - on stmt: $196load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,579 - DEBUG - on stmt: $const206.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,579 - DEBUG - on stmt: $208call.3 = call $196load_global.0($const206.2, func=$196load_global.0, args=[Var($const206.2, arrayobj.py:2068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,579 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,579 - DEBUG - ==== SSA block rewrite pass on 218
2024-06-06 03:46:38,579 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,579 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-06-06 03:46:38,579 - DEBUG - on stmt: $const228.3 = const(NoneType, None)
2024-06-06 03:46:38,579 - DEBUG - on stmt: $228return_const.4 = cast(value=$const228.3)
2024-06-06 03:46:38,579 - DEBUG - on stmt: return $228return_const.4
2024-06-06 03:46:38,579 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:38,580 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,580 - DEBUG - on stmt: $230load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,580 - DEBUG - on stmt: $const240.2 = const(str, multiple negative shape values)
2024-06-06 03:46:38,580 - DEBUG - on stmt: $242call.3 = call $230load_global.0($const240.2, func=$230load_global.0, args=[Var($const240.2, arrayobj.py:2072)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,580 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-06 03:46:38,580 - DEBUG - ==== SSA block rewrite pass on 231
2024-06-06 03:46:38,580 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,580 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,580 - DEBUG - Fix SSA violator on var known_size
2024-06-06 03:46:38,580 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:38,580 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,580 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-06 03:46:38,580 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-06 03:46:38,581 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-06 03:46:38,581 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-06 03:46:38,581 - DEBUG - first assign: known_size
2024-06-06 03:46:38,581 - DEBUG - replaced with: known_size = const(int, 1)
2024-06-06 03:46:38,581 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-06 03:46:38,581 - DEBUG - on stmt: $24call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2045)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,581 - DEBUG - on stmt: $32get_iter.6 = getiter(value=$24call.5)
2024-06-06 03:46:38,581 - DEBUG - on stmt: $phi34.0 = $32get_iter.6
2024-06-06 03:46:38,581 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,581 - DEBUG - ==== SSA block rewrite pass on 34
2024-06-06 03:46:38,581 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,581 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2046), Var(num_neg_value.3, arrayobj.py:2050)], incoming_blocks=[0, 231])
2024-06-06 03:46:38,581 - DEBUG - on stmt: $34for_iter.1 = iternext(value=$phi34.0)
2024-06-06 03:46:38,581 - DEBUG - on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
2024-06-06 03:46:38,582 - DEBUG - on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
2024-06-06 03:46:38,582 - DEBUG - on stmt: $phi38.1 = $34for_iter.2
2024-06-06 03:46:38,582 - DEBUG - on stmt: branch $34for_iter.3, 38, 84
2024-06-06 03:46:38,582 - DEBUG - ==== SSA block rewrite pass on 38
2024-06-06 03:46:38,582 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,582 - DEBUG - on stmt: $38unpack_sequence.4 = exhaust_iter(value=$phi38.1, count=2)
2024-06-06 03:46:38,582 - DEBUG - on stmt: $38unpack_sequence.2 = static_getitem(value=$38unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,582 - DEBUG - on stmt: $38unpack_sequence.3 = static_getitem(value=$38unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,582 - DEBUG - on stmt: ax = $38unpack_sequence.2
2024-06-06 03:46:38,582 - DEBUG - on stmt: s = $38unpack_sequence.3
2024-06-06 03:46:38,582 - DEBUG - on stmt: $const48.6 = const(int, 0)
2024-06-06 03:46:38,582 - DEBUG - on stmt: $50compare_op.7 = s < $const48.6
2024-06-06 03:46:38,582 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,582 - DEBUG - on stmt: $54pred = call bool54($50compare_op.7, func=bool54, args=(Var($50compare_op.7, arrayobj.py:2049),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,583 - DEBUG - on stmt: branch $54pred, 56, 72
2024-06-06 03:46:38,583 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:38,583 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,583 - DEBUG - on stmt: $const58.2 = const(int, 1)
2024-06-06 03:46:38,583 - DEBUG - on stmt: $binop_iadd60.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const58.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,583 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd60.3
2024-06-06 03:46:38,583 - DEBUG - on stmt: neg_ax = ax
2024-06-06 03:46:38,583 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,583 - DEBUG - ==== SSA block rewrite pass on 72
2024-06-06 03:46:38,583 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,583 - DEBUG - on stmt: $binop_imul76.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,583 - DEBUG - on stmt: known_size = $binop_imul76.3
2024-06-06 03:46:38,583 - DEBUG - replaced with: known_size.1 = $binop_imul76.3
2024-06-06 03:46:38,583 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,584 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-06 03:46:38,584 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,584 - DEBUG - on stmt: $const88.3 = const(int, 0)
2024-06-06 03:46:38,584 - DEBUG - on stmt: $90compare_op.4 = num_neg_value.2 == $const88.3
2024-06-06 03:46:38,584 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,584 - DEBUG - on stmt: $94pred = call bool94($90compare_op.4, func=bool94, args=(Var($90compare_op.4, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,584 - DEBUG - on stmt: branch $94pred, 96, 130
2024-06-06 03:46:38,584 - DEBUG - ==== SSA block rewrite pass on 96
2024-06-06 03:46:38,584 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,584 - DEBUG - on stmt: $100compare_op.2 = origsize != known_size
2024-06-06 03:46:38,584 - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,584 - DEBUG - on stmt: $104pred = call bool104($100compare_op.2, func=bool104, args=(Var($100compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,584 - DEBUG - on stmt: branch $104pred, 106, 128
2024-06-06 03:46:38,585 - DEBUG - ==== SSA block rewrite pass on 106
2024-06-06 03:46:38,585 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,585 - DEBUG - on stmt: $106load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,585 - DEBUG - on stmt: $const116.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,585 - DEBUG - on stmt: $118call.3 = call $106load_global.0($const116.2, func=$106load_global.0, args=[Var($const116.2, arrayobj.py:2057)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,585 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,585 - DEBUG - ==== SSA block rewrite pass on 128
2024-06-06 03:46:38,585 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,585 - DEBUG - on stmt: $const128.0 = const(NoneType, None)
2024-06-06 03:46:38,585 - DEBUG - on stmt: $128return_const.1 = cast(value=$const128.0)
2024-06-06 03:46:38,585 - DEBUG - on stmt: return $128return_const.1
2024-06-06 03:46:38,585 - DEBUG - ==== SSA block rewrite pass on 130
2024-06-06 03:46:38,585 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,585 - DEBUG - on stmt: $const132.1 = const(int, 1)
2024-06-06 03:46:38,586 - DEBUG - on stmt: $134compare_op.2 = num_neg_value.2 == $const132.1
2024-06-06 03:46:38,586 - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,586 - DEBUG - on stmt: $138pred = call bool138($134compare_op.2, func=bool138, args=(Var($134compare_op.2, arrayobj.py:2059),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,586 - DEBUG - on stmt: branch $138pred, 140, 230
2024-06-06 03:46:38,586 - DEBUG - ==== SSA block rewrite pass on 140
2024-06-06 03:46:38,586 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,586 - DEBUG - on stmt: $const142.1 = const(int, 0)
2024-06-06 03:46:38,586 - DEBUG - on stmt: $144compare_op.2 = known_size == $const142.1
2024-06-06 03:46:38,586 - DEBUG - on stmt: bool148 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,586 - DEBUG - on stmt: $148pred = call bool148($144compare_op.2, func=bool148, args=(Var($144compare_op.2, arrayobj.py:2061),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,586 - DEBUG - on stmt: branch $148pred, 150, 166
2024-06-06 03:46:38,586 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-06 03:46:38,586 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,586 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-06 03:46:38,587 - DEBUG - on stmt: $const156.2 = const(int, 0)
2024-06-06 03:46:38,587 - DEBUG - on stmt: ok = origsize == $const156.2
2024-06-06 03:46:38,587 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,587 - DEBUG - ==== SSA block rewrite pass on 166
2024-06-06 03:46:38,587 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,587 - DEBUG - on stmt: inferred = origsize // known_size
2024-06-06 03:46:38,587 - DEBUG - on stmt: $binop_mod180.5 = origsize % known_size
2024-06-06 03:46:38,587 - DEBUG - on stmt: $const184.6 = const(int, 0)
2024-06-06 03:46:38,587 - DEBUG - on stmt: ok = $binop_mod180.5 == $const184.6
2024-06-06 03:46:38,587 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,587 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-06 03:46:38,587 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,587 - DEBUG - on stmt: bool194 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,587 - DEBUG - on stmt: $194pred = call bool194(ok, func=bool194, args=(Var(ok, arrayobj.py:2063),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,588 - DEBUG - on stmt: branch $194pred, 218, 196
2024-06-06 03:46:38,588 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-06 03:46:38,588 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,588 - DEBUG - on stmt: $196load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,588 - DEBUG - on stmt: $const206.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,588 - DEBUG - on stmt: $208call.3 = call $196load_global.0($const206.2, func=$196load_global.0, args=[Var($const206.2, arrayobj.py:2068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,588 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,588 - DEBUG - ==== SSA block rewrite pass on 218
2024-06-06 03:46:38,588 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,588 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-06-06 03:46:38,588 - DEBUG - on stmt: $const228.3 = const(NoneType, None)
2024-06-06 03:46:38,588 - DEBUG - on stmt: $228return_const.4 = cast(value=$const228.3)
2024-06-06 03:46:38,588 - DEBUG - on stmt: return $228return_const.4
2024-06-06 03:46:38,588 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:38,588 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,589 - DEBUG - on stmt: $230load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,589 - DEBUG - on stmt: $const240.2 = const(str, multiple negative shape values)
2024-06-06 03:46:38,589 - DEBUG - on stmt: $242call.3 = call $230load_global.0($const240.2, func=$230load_global.0, args=[Var($const240.2, arrayobj.py:2072)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,589 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-06 03:46:38,589 - DEBUG - ==== SSA block rewrite pass on 231
2024-06-06 03:46:38,589 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd8c80>
2024-06-06 03:46:38,589 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2050), Var(num_neg_value.2, arrayobj.py:2050)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,589 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,589 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fe9d1fd9040>],
             72: [<numba.core.ir.Assign object at 0x7fe9d1fdac30>]})
2024-06-06 03:46:38,589 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:38,589 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,589 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-06 03:46:38,589 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-06 03:46:38,590 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-06 03:46:38,590 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-06 03:46:38,590 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-06 03:46:38,590 - DEBUG - on stmt: $24call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2045)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,590 - DEBUG - on stmt: $32get_iter.6 = getiter(value=$24call.5)
2024-06-06 03:46:38,590 - DEBUG - on stmt: $phi34.0 = $32get_iter.6
2024-06-06 03:46:38,590 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,590 - DEBUG - ==== SSA block rewrite pass on 34
2024-06-06 03:46:38,590 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,590 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2046), Var(num_neg_value.3, arrayobj.py:2050)], incoming_blocks=[0, 231])
2024-06-06 03:46:38,590 - DEBUG - on stmt: $34for_iter.1 = iternext(value=$phi34.0)
2024-06-06 03:46:38,590 - DEBUG - on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
2024-06-06 03:46:38,590 - DEBUG - on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
2024-06-06 03:46:38,591 - DEBUG - on stmt: $phi38.1 = $34for_iter.2
2024-06-06 03:46:38,591 - DEBUG - on stmt: branch $34for_iter.3, 38, 84
2024-06-06 03:46:38,591 - DEBUG - ==== SSA block rewrite pass on 38
2024-06-06 03:46:38,591 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,591 - DEBUG - on stmt: $38unpack_sequence.4 = exhaust_iter(value=$phi38.1, count=2)
2024-06-06 03:46:38,591 - DEBUG - on stmt: $38unpack_sequence.2 = static_getitem(value=$38unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,591 - DEBUG - on stmt: $38unpack_sequence.3 = static_getitem(value=$38unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,591 - DEBUG - on stmt: ax = $38unpack_sequence.2
2024-06-06 03:46:38,591 - DEBUG - on stmt: s = $38unpack_sequence.3
2024-06-06 03:46:38,591 - DEBUG - on stmt: $const48.6 = const(int, 0)
2024-06-06 03:46:38,591 - DEBUG - on stmt: $50compare_op.7 = s < $const48.6
2024-06-06 03:46:38,591 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,591 - DEBUG - on stmt: $54pred = call bool54($50compare_op.7, func=bool54, args=(Var($50compare_op.7, arrayobj.py:2049),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,592 - DEBUG - on stmt: branch $54pred, 56, 72
2024-06-06 03:46:38,592 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:38,592 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,592 - DEBUG - on stmt: $const58.2 = const(int, 1)
2024-06-06 03:46:38,592 - DEBUG - on stmt: $binop_iadd60.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const58.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,592 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd60.3
2024-06-06 03:46:38,592 - DEBUG - on stmt: neg_ax = ax
2024-06-06 03:46:38,592 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,592 - DEBUG - ==== SSA block rewrite pass on 72
2024-06-06 03:46:38,592 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,592 - DEBUG - on stmt: $binop_imul76.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,592 - DEBUG - find_def var='known_size' stmt=$binop_imul76.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,592 - DEBUG - find_def_from_top label 72
2024-06-06 03:46:38,592 - DEBUG - idom 38 from label 72
2024-06-06 03:46:38,593 - DEBUG - find_def_from_bottom label 38
2024-06-06 03:46:38,593 - DEBUG - find_def_from_top label 38
2024-06-06 03:46:38,593 - DEBUG - idom 34 from label 38
2024-06-06 03:46:38,593 - DEBUG - find_def_from_bottom label 34
2024-06-06 03:46:38,593 - DEBUG - find_def_from_top label 34
2024-06-06 03:46:38,593 - DEBUG - insert phi node known_size.2 = phi(incoming_values=[], incoming_blocks=[]) at 34
2024-06-06 03:46:38,593 - DEBUG - find_def_from_bottom label 0
2024-06-06 03:46:38,593 - DEBUG - incoming_def known_size = const(int, 1)
2024-06-06 03:46:38,594 - DEBUG - find_def_from_bottom label 231
2024-06-06 03:46:38,594 - DEBUG - find_def_from_top label 231
2024-06-06 03:46:38,594 - DEBUG - insert phi node known_size.3 = phi(incoming_values=[], incoming_blocks=[]) at 231
2024-06-06 03:46:38,594 - DEBUG - find_def_from_bottom label 56
2024-06-06 03:46:38,594 - DEBUG - find_def_from_top label 56
2024-06-06 03:46:38,594 - DEBUG - idom 38 from label 56
2024-06-06 03:46:38,594 - DEBUG - find_def_from_bottom label 38
2024-06-06 03:46:38,594 - DEBUG - find_def_from_top label 38
2024-06-06 03:46:38,595 - DEBUG - idom 34 from label 38
2024-06-06 03:46:38,595 - DEBUG - find_def_from_bottom label 34
2024-06-06 03:46:38,595 - DEBUG - incoming_def known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2047)], incoming_blocks=[0])
2024-06-06 03:46:38,595 - DEBUG - find_def_from_bottom label 72
2024-06-06 03:46:38,595 - DEBUG - incoming_def known_size.1 = $binop_imul76.3
2024-06-06 03:46:38,595 - DEBUG - incoming_def known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2053), Var(known_size.1, arrayobj.py:2053)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,595 - DEBUG - replaced with: $binop_imul76.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,595 - DEBUG - on stmt: known_size.1 = $binop_imul76.3
2024-06-06 03:46:38,595 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,595 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-06 03:46:38,596 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,596 - DEBUG - on stmt: $const88.3 = const(int, 0)
2024-06-06 03:46:38,596 - DEBUG - on stmt: $90compare_op.4 = num_neg_value.2 == $const88.3
2024-06-06 03:46:38,596 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,596 - DEBUG - on stmt: $94pred = call bool94($90compare_op.4, func=bool94, args=(Var($90compare_op.4, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,596 - DEBUG - on stmt: branch $94pred, 96, 130
2024-06-06 03:46:38,596 - DEBUG - ==== SSA block rewrite pass on 96
2024-06-06 03:46:38,596 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,596 - DEBUG - on stmt: $100compare_op.2 = origsize != known_size
2024-06-06 03:46:38,596 - DEBUG - find_def var='known_size' stmt=$100compare_op.2 = origsize != known_size
2024-06-06 03:46:38,596 - DEBUG - find_def_from_top label 96
2024-06-06 03:46:38,596 - DEBUG - idom 84 from label 96
2024-06-06 03:46:38,596 - DEBUG - find_def_from_bottom label 84
2024-06-06 03:46:38,597 - DEBUG - find_def_from_top label 84
2024-06-06 03:46:38,597 - DEBUG - idom 34 from label 84
2024-06-06 03:46:38,597 - DEBUG - find_def_from_bottom label 34
2024-06-06 03:46:38,597 - DEBUG - replaced with: $100compare_op.2 = origsize != known_size.2
2024-06-06 03:46:38,597 - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,597 - DEBUG - on stmt: $104pred = call bool104($100compare_op.2, func=bool104, args=(Var($100compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,597 - DEBUG - on stmt: branch $104pred, 106, 128
2024-06-06 03:46:38,597 - DEBUG - ==== SSA block rewrite pass on 106
2024-06-06 03:46:38,597 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,597 - DEBUG - on stmt: $106load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,597 - DEBUG - on stmt: $const116.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,597 - DEBUG - on stmt: $118call.3 = call $106load_global.0($const116.2, func=$106load_global.0, args=[Var($const116.2, arrayobj.py:2057)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,598 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,598 - DEBUG - ==== SSA block rewrite pass on 128
2024-06-06 03:46:38,598 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,598 - DEBUG - on stmt: $const128.0 = const(NoneType, None)
2024-06-06 03:46:38,598 - DEBUG - on stmt: $128return_const.1 = cast(value=$const128.0)
2024-06-06 03:46:38,598 - DEBUG - on stmt: return $128return_const.1
2024-06-06 03:46:38,598 - DEBUG - ==== SSA block rewrite pass on 130
2024-06-06 03:46:38,598 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,598 - DEBUG - on stmt: $const132.1 = const(int, 1)
2024-06-06 03:46:38,598 - DEBUG - on stmt: $134compare_op.2 = num_neg_value.2 == $const132.1
2024-06-06 03:46:38,598 - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,598 - DEBUG - on stmt: $138pred = call bool138($134compare_op.2, func=bool138, args=(Var($134compare_op.2, arrayobj.py:2059),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,598 - DEBUG - on stmt: branch $138pred, 140, 230
2024-06-06 03:46:38,598 - DEBUG - ==== SSA block rewrite pass on 140
2024-06-06 03:46:38,599 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,599 - DEBUG - on stmt: $const142.1 = const(int, 0)
2024-06-06 03:46:38,599 - DEBUG - on stmt: $144compare_op.2 = known_size == $const142.1
2024-06-06 03:46:38,599 - DEBUG - find_def var='known_size' stmt=$144compare_op.2 = known_size == $const142.1
2024-06-06 03:46:38,599 - DEBUG - find_def_from_top label 140
2024-06-06 03:46:38,599 - DEBUG - idom 130 from label 140
2024-06-06 03:46:38,599 - DEBUG - find_def_from_bottom label 130
2024-06-06 03:46:38,599 - DEBUG - find_def_from_top label 130
2024-06-06 03:46:38,599 - DEBUG - idom 84 from label 130
2024-06-06 03:46:38,599 - DEBUG - find_def_from_bottom label 84
2024-06-06 03:46:38,599 - DEBUG - find_def_from_top label 84
2024-06-06 03:46:38,600 - DEBUG - idom 34 from label 84
2024-06-06 03:46:38,600 - DEBUG - find_def_from_bottom label 34
2024-06-06 03:46:38,600 - DEBUG - replaced with: $144compare_op.2 = known_size.2 == $const142.1
2024-06-06 03:46:38,600 - DEBUG - on stmt: bool148 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,600 - DEBUG - on stmt: $148pred = call bool148($144compare_op.2, func=bool148, args=(Var($144compare_op.2, arrayobj.py:2061),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,600 - DEBUG - on stmt: branch $148pred, 150, 166
2024-06-06 03:46:38,600 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-06 03:46:38,600 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,600 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-06 03:46:38,600 - DEBUG - on stmt: $const156.2 = const(int, 0)
2024-06-06 03:46:38,600 - DEBUG - on stmt: ok = origsize == $const156.2
2024-06-06 03:46:38,601 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,601 - DEBUG - ==== SSA block rewrite pass on 166
2024-06-06 03:46:38,601 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,601 - DEBUG - on stmt: inferred = origsize // known_size
2024-06-06 03:46:38,601 - DEBUG - find_def var='known_size' stmt=inferred = origsize // known_size
2024-06-06 03:46:38,601 - DEBUG - find_def_from_top label 166
2024-06-06 03:46:38,601 - DEBUG - idom 140 from label 166
2024-06-06 03:46:38,601 - DEBUG - find_def_from_bottom label 140
2024-06-06 03:46:38,601 - DEBUG - find_def_from_top label 140
2024-06-06 03:46:38,601 - DEBUG - idom 130 from label 140
2024-06-06 03:46:38,601 - DEBUG - find_def_from_bottom label 130
2024-06-06 03:46:38,601 - DEBUG - find_def_from_top label 130
2024-06-06 03:46:38,602 - DEBUG - idom 84 from label 130
2024-06-06 03:46:38,602 - DEBUG - find_def_from_bottom label 84
2024-06-06 03:46:38,602 - DEBUG - find_def_from_top label 84
2024-06-06 03:46:38,602 - DEBUG - idom 34 from label 84
2024-06-06 03:46:38,602 - DEBUG - find_def_from_bottom label 34
2024-06-06 03:46:38,602 - DEBUG - replaced with: inferred = origsize // known_size.2
2024-06-06 03:46:38,602 - DEBUG - on stmt: $binop_mod180.5 = origsize % known_size
2024-06-06 03:46:38,603 - DEBUG - find_def var='known_size' stmt=$binop_mod180.5 = origsize % known_size
2024-06-06 03:46:38,603 - DEBUG - find_def_from_top label 166
2024-06-06 03:46:38,603 - DEBUG - idom 140 from label 166
2024-06-06 03:46:38,603 - DEBUG - find_def_from_bottom label 140
2024-06-06 03:46:38,603 - DEBUG - find_def_from_top label 140
2024-06-06 03:46:38,603 - DEBUG - idom 130 from label 140
2024-06-06 03:46:38,603 - DEBUG - find_def_from_bottom label 130
2024-06-06 03:46:38,603 - DEBUG - find_def_from_top label 130
2024-06-06 03:46:38,603 - DEBUG - idom 84 from label 130
2024-06-06 03:46:38,603 - DEBUG - find_def_from_bottom label 84
2024-06-06 03:46:38,604 - DEBUG - find_def_from_top label 84
2024-06-06 03:46:38,604 - DEBUG - idom 34 from label 84
2024-06-06 03:46:38,604 - DEBUG - find_def_from_bottom label 34
2024-06-06 03:46:38,604 - DEBUG - replaced with: $binop_mod180.5 = origsize % known_size.2
2024-06-06 03:46:38,604 - DEBUG - on stmt: $const184.6 = const(int, 0)
2024-06-06 03:46:38,604 - DEBUG - on stmt: ok = $binop_mod180.5 == $const184.6
2024-06-06 03:46:38,604 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,604 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-06 03:46:38,604 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,604 - DEBUG - on stmt: bool194 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,605 - DEBUG - on stmt: $194pred = call bool194(ok, func=bool194, args=(Var(ok, arrayobj.py:2063),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,605 - DEBUG - on stmt: branch $194pred, 218, 196
2024-06-06 03:46:38,605 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-06 03:46:38,605 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,605 - DEBUG - on stmt: $196load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,605 - DEBUG - on stmt: $const206.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,605 - DEBUG - on stmt: $208call.3 = call $196load_global.0($const206.2, func=$196load_global.0, args=[Var($const206.2, arrayobj.py:2068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,605 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,605 - DEBUG - ==== SSA block rewrite pass on 218
2024-06-06 03:46:38,605 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,605 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-06-06 03:46:38,605 - DEBUG - on stmt: $const228.3 = const(NoneType, None)
2024-06-06 03:46:38,605 - DEBUG - on stmt: $228return_const.4 = cast(value=$const228.3)
2024-06-06 03:46:38,605 - DEBUG - on stmt: return $228return_const.4
2024-06-06 03:46:38,606 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:38,606 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,606 - DEBUG - on stmt: $230load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,606 - DEBUG - on stmt: $const240.2 = const(str, multiple negative shape values)
2024-06-06 03:46:38,606 - DEBUG - on stmt: $242call.3 = call $230load_global.0($const240.2, func=$230load_global.0, args=[Var($const240.2, arrayobj.py:2072)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,606 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-06 03:46:38,606 - DEBUG - ==== SSA block rewrite pass on 231
2024-06-06 03:46:38,606 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,606 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2050), Var(num_neg_value.2, arrayobj.py:2050)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,606 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,606 - DEBUG - Fix SSA violator on var inferred
2024-06-06 03:46:38,606 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:38,606 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,607 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-06 03:46:38,607 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-06 03:46:38,607 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-06 03:46:38,607 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-06 03:46:38,607 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-06 03:46:38,607 - DEBUG - on stmt: $24call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2045)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,607 - DEBUG - on stmt: $32get_iter.6 = getiter(value=$24call.5)
2024-06-06 03:46:38,607 - DEBUG - on stmt: $phi34.0 = $32get_iter.6
2024-06-06 03:46:38,607 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,607 - DEBUG - ==== SSA block rewrite pass on 34
2024-06-06 03:46:38,607 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,607 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2047), Var(known_size.3, arrayobj.py:2053)], incoming_blocks=[0, 231])
2024-06-06 03:46:38,607 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2046), Var(num_neg_value.3, arrayobj.py:2050)], incoming_blocks=[0, 231])
2024-06-06 03:46:38,608 - DEBUG - on stmt: $34for_iter.1 = iternext(value=$phi34.0)
2024-06-06 03:46:38,608 - DEBUG - on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
2024-06-06 03:46:38,608 - DEBUG - on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
2024-06-06 03:46:38,608 - DEBUG - on stmt: $phi38.1 = $34for_iter.2
2024-06-06 03:46:38,608 - DEBUG - on stmt: branch $34for_iter.3, 38, 84
2024-06-06 03:46:38,608 - DEBUG - ==== SSA block rewrite pass on 38
2024-06-06 03:46:38,608 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,608 - DEBUG - on stmt: $38unpack_sequence.4 = exhaust_iter(value=$phi38.1, count=2)
2024-06-06 03:46:38,608 - DEBUG - on stmt: $38unpack_sequence.2 = static_getitem(value=$38unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,608 - DEBUG - on stmt: $38unpack_sequence.3 = static_getitem(value=$38unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,608 - DEBUG - on stmt: ax = $38unpack_sequence.2
2024-06-06 03:46:38,608 - DEBUG - on stmt: s = $38unpack_sequence.3
2024-06-06 03:46:38,608 - DEBUG - on stmt: $const48.6 = const(int, 0)
2024-06-06 03:46:38,608 - DEBUG - on stmt: $50compare_op.7 = s < $const48.6
2024-06-06 03:46:38,609 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,609 - DEBUG - on stmt: $54pred = call bool54($50compare_op.7, func=bool54, args=(Var($50compare_op.7, arrayobj.py:2049),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,609 - DEBUG - on stmt: branch $54pred, 56, 72
2024-06-06 03:46:38,609 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:38,609 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,609 - DEBUG - on stmt: $const58.2 = const(int, 1)
2024-06-06 03:46:38,609 - DEBUG - on stmt: $binop_iadd60.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const58.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,609 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd60.3
2024-06-06 03:46:38,609 - DEBUG - on stmt: neg_ax = ax
2024-06-06 03:46:38,609 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,609 - DEBUG - ==== SSA block rewrite pass on 72
2024-06-06 03:46:38,609 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,609 - DEBUG - on stmt: $binop_imul76.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,609 - DEBUG - on stmt: known_size.1 = $binop_imul76.3
2024-06-06 03:46:38,610 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,610 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-06 03:46:38,610 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,610 - DEBUG - on stmt: $const88.3 = const(int, 0)
2024-06-06 03:46:38,610 - DEBUG - on stmt: $90compare_op.4 = num_neg_value.2 == $const88.3
2024-06-06 03:46:38,610 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,610 - DEBUG - on stmt: $94pred = call bool94($90compare_op.4, func=bool94, args=(Var($90compare_op.4, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,610 - DEBUG - on stmt: branch $94pred, 96, 130
2024-06-06 03:46:38,610 - DEBUG - ==== SSA block rewrite pass on 96
2024-06-06 03:46:38,610 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,610 - DEBUG - on stmt: $100compare_op.2 = origsize != known_size.2
2024-06-06 03:46:38,610 - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,610 - DEBUG - on stmt: $104pred = call bool104($100compare_op.2, func=bool104, args=(Var($100compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,610 - DEBUG - on stmt: branch $104pred, 106, 128
2024-06-06 03:46:38,611 - DEBUG - ==== SSA block rewrite pass on 106
2024-06-06 03:46:38,611 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,611 - DEBUG - on stmt: $106load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,611 - DEBUG - on stmt: $const116.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,611 - DEBUG - on stmt: $118call.3 = call $106load_global.0($const116.2, func=$106load_global.0, args=[Var($const116.2, arrayobj.py:2057)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,611 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,611 - DEBUG - ==== SSA block rewrite pass on 128
2024-06-06 03:46:38,611 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,611 - DEBUG - on stmt: $const128.0 = const(NoneType, None)
2024-06-06 03:46:38,611 - DEBUG - on stmt: $128return_const.1 = cast(value=$const128.0)
2024-06-06 03:46:38,611 - DEBUG - on stmt: return $128return_const.1
2024-06-06 03:46:38,611 - DEBUG - ==== SSA block rewrite pass on 130
2024-06-06 03:46:38,611 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,611 - DEBUG - on stmt: $const132.1 = const(int, 1)
2024-06-06 03:46:38,612 - DEBUG - on stmt: $134compare_op.2 = num_neg_value.2 == $const132.1
2024-06-06 03:46:38,612 - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,612 - DEBUG - on stmt: $138pred = call bool138($134compare_op.2, func=bool138, args=(Var($134compare_op.2, arrayobj.py:2059),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,612 - DEBUG - on stmt: branch $138pred, 140, 230
2024-06-06 03:46:38,612 - DEBUG - ==== SSA block rewrite pass on 140
2024-06-06 03:46:38,612 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,612 - DEBUG - on stmt: $const142.1 = const(int, 0)
2024-06-06 03:46:38,612 - DEBUG - on stmt: $144compare_op.2 = known_size.2 == $const142.1
2024-06-06 03:46:38,612 - DEBUG - on stmt: bool148 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,612 - DEBUG - on stmt: $148pred = call bool148($144compare_op.2, func=bool148, args=(Var($144compare_op.2, arrayobj.py:2061),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,612 - DEBUG - on stmt: branch $148pred, 150, 166
2024-06-06 03:46:38,612 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-06 03:46:38,612 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,612 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-06 03:46:38,613 - DEBUG - first assign: inferred
2024-06-06 03:46:38,613 - DEBUG - replaced with: inferred = const(int, 0)
2024-06-06 03:46:38,613 - DEBUG - on stmt: $const156.2 = const(int, 0)
2024-06-06 03:46:38,613 - DEBUG - on stmt: ok = origsize == $const156.2
2024-06-06 03:46:38,613 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,613 - DEBUG - ==== SSA block rewrite pass on 166
2024-06-06 03:46:38,613 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,613 - DEBUG - on stmt: inferred = origsize // known_size.2
2024-06-06 03:46:38,613 - DEBUG - replaced with: inferred.1 = origsize // known_size.2
2024-06-06 03:46:38,613 - DEBUG - on stmt: $binop_mod180.5 = origsize % known_size.2
2024-06-06 03:46:38,613 - DEBUG - on stmt: $const184.6 = const(int, 0)
2024-06-06 03:46:38,613 - DEBUG - on stmt: ok = $binop_mod180.5 == $const184.6
2024-06-06 03:46:38,613 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,613 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-06 03:46:38,614 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,614 - DEBUG - on stmt: bool194 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,614 - DEBUG - on stmt: $194pred = call bool194(ok, func=bool194, args=(Var(ok, arrayobj.py:2063),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,614 - DEBUG - on stmt: branch $194pred, 218, 196
2024-06-06 03:46:38,614 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-06 03:46:38,614 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,614 - DEBUG - on stmt: $196load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,614 - DEBUG - on stmt: $const206.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,614 - DEBUG - on stmt: $208call.3 = call $196load_global.0($const206.2, func=$196load_global.0, args=[Var($const206.2, arrayobj.py:2068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,614 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,614 - DEBUG - ==== SSA block rewrite pass on 218
2024-06-06 03:46:38,614 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,614 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-06-06 03:46:38,614 - DEBUG - on stmt: $const228.3 = const(NoneType, None)
2024-06-06 03:46:38,615 - DEBUG - on stmt: $228return_const.4 = cast(value=$const228.3)
2024-06-06 03:46:38,615 - DEBUG - on stmt: return $228return_const.4
2024-06-06 03:46:38,615 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:38,615 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,615 - DEBUG - on stmt: $230load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,615 - DEBUG - on stmt: $const240.2 = const(str, multiple negative shape values)
2024-06-06 03:46:38,615 - DEBUG - on stmt: $242call.3 = call $230load_global.0($const240.2, func=$230load_global.0, args=[Var($const240.2, arrayobj.py:2072)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,615 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-06 03:46:38,615 - DEBUG - ==== SSA block rewrite pass on 231
2024-06-06 03:46:38,615 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1f58920>
2024-06-06 03:46:38,615 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2053), Var(known_size.1, arrayobj.py:2053)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,615 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2050), Var(num_neg_value.2, arrayobj.py:2050)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,615 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,616 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {150: [<numba.core.ir.Assign object at 0x7fe9d1fd81a0>],
             166: [<numba.core.ir.Assign object at 0x7fe9d1fdb830>]})
2024-06-06 03:46:38,616 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:38,616 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,616 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-06 03:46:38,616 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-06 03:46:38,616 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-06 03:46:38,616 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-06 03:46:38,616 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-06 03:46:38,616 - DEBUG - on stmt: $24call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2045)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,616 - DEBUG - on stmt: $32get_iter.6 = getiter(value=$24call.5)
2024-06-06 03:46:38,616 - DEBUG - on stmt: $phi34.0 = $32get_iter.6
2024-06-06 03:46:38,616 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,616 - DEBUG - ==== SSA block rewrite pass on 34
2024-06-06 03:46:38,616 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,617 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2047), Var(known_size.3, arrayobj.py:2053)], incoming_blocks=[0, 231])
2024-06-06 03:46:38,617 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2046), Var(num_neg_value.3, arrayobj.py:2050)], incoming_blocks=[0, 231])
2024-06-06 03:46:38,617 - DEBUG - on stmt: $34for_iter.1 = iternext(value=$phi34.0)
2024-06-06 03:46:38,617 - DEBUG - on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
2024-06-06 03:46:38,617 - DEBUG - on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
2024-06-06 03:46:38,617 - DEBUG - on stmt: $phi38.1 = $34for_iter.2
2024-06-06 03:46:38,617 - DEBUG - on stmt: branch $34for_iter.3, 38, 84
2024-06-06 03:46:38,617 - DEBUG - ==== SSA block rewrite pass on 38
2024-06-06 03:46:38,617 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,617 - DEBUG - on stmt: $38unpack_sequence.4 = exhaust_iter(value=$phi38.1, count=2)
2024-06-06 03:46:38,617 - DEBUG - on stmt: $38unpack_sequence.2 = static_getitem(value=$38unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,617 - DEBUG - on stmt: $38unpack_sequence.3 = static_getitem(value=$38unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,617 - DEBUG - on stmt: ax = $38unpack_sequence.2
2024-06-06 03:46:38,618 - DEBUG - on stmt: s = $38unpack_sequence.3
2024-06-06 03:46:38,618 - DEBUG - on stmt: $const48.6 = const(int, 0)
2024-06-06 03:46:38,618 - DEBUG - on stmt: $50compare_op.7 = s < $const48.6
2024-06-06 03:46:38,618 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,618 - DEBUG - on stmt: $54pred = call bool54($50compare_op.7, func=bool54, args=(Var($50compare_op.7, arrayobj.py:2049),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,618 - DEBUG - on stmt: branch $54pred, 56, 72
2024-06-06 03:46:38,618 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:38,618 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,618 - DEBUG - on stmt: $const58.2 = const(int, 1)
2024-06-06 03:46:38,618 - DEBUG - on stmt: $binop_iadd60.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const58.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,618 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd60.3
2024-06-06 03:46:38,618 - DEBUG - on stmt: neg_ax = ax
2024-06-06 03:46:38,618 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,618 - DEBUG - ==== SSA block rewrite pass on 72
2024-06-06 03:46:38,619 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,619 - DEBUG - on stmt: $binop_imul76.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,619 - DEBUG - on stmt: known_size.1 = $binop_imul76.3
2024-06-06 03:46:38,619 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,619 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-06 03:46:38,619 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,619 - DEBUG - on stmt: $const88.3 = const(int, 0)
2024-06-06 03:46:38,619 - DEBUG - on stmt: $90compare_op.4 = num_neg_value.2 == $const88.3
2024-06-06 03:46:38,619 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,619 - DEBUG - on stmt: $94pred = call bool94($90compare_op.4, func=bool94, args=(Var($90compare_op.4, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,619 - DEBUG - on stmt: branch $94pred, 96, 130
2024-06-06 03:46:38,619 - DEBUG - ==== SSA block rewrite pass on 96
2024-06-06 03:46:38,619 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,619 - DEBUG - on stmt: $100compare_op.2 = origsize != known_size.2
2024-06-06 03:46:38,620 - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,620 - DEBUG - on stmt: $104pred = call bool104($100compare_op.2, func=bool104, args=(Var($100compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,620 - DEBUG - on stmt: branch $104pred, 106, 128
2024-06-06 03:46:38,620 - DEBUG - ==== SSA block rewrite pass on 106
2024-06-06 03:46:38,620 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,620 - DEBUG - on stmt: $106load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,620 - DEBUG - on stmt: $const116.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,620 - DEBUG - on stmt: $118call.3 = call $106load_global.0($const116.2, func=$106load_global.0, args=[Var($const116.2, arrayobj.py:2057)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,620 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,620 - DEBUG - ==== SSA block rewrite pass on 128
2024-06-06 03:46:38,620 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,620 - DEBUG - on stmt: $const128.0 = const(NoneType, None)
2024-06-06 03:46:38,620 - DEBUG - on stmt: $128return_const.1 = cast(value=$const128.0)
2024-06-06 03:46:38,620 - DEBUG - on stmt: return $128return_const.1
2024-06-06 03:46:38,621 - DEBUG - ==== SSA block rewrite pass on 130
2024-06-06 03:46:38,621 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,621 - DEBUG - on stmt: $const132.1 = const(int, 1)
2024-06-06 03:46:38,621 - DEBUG - on stmt: $134compare_op.2 = num_neg_value.2 == $const132.1
2024-06-06 03:46:38,621 - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,621 - DEBUG - on stmt: $138pred = call bool138($134compare_op.2, func=bool138, args=(Var($134compare_op.2, arrayobj.py:2059),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,621 - DEBUG - on stmt: branch $138pred, 140, 230
2024-06-06 03:46:38,621 - DEBUG - ==== SSA block rewrite pass on 140
2024-06-06 03:46:38,621 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,621 - DEBUG - on stmt: $const142.1 = const(int, 0)
2024-06-06 03:46:38,621 - DEBUG - on stmt: $144compare_op.2 = known_size.2 == $const142.1
2024-06-06 03:46:38,621 - DEBUG - on stmt: bool148 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,621 - DEBUG - on stmt: $148pred = call bool148($144compare_op.2, func=bool148, args=(Var($144compare_op.2, arrayobj.py:2061),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,622 - DEBUG - on stmt: branch $148pred, 150, 166
2024-06-06 03:46:38,622 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-06 03:46:38,622 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,622 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-06 03:46:38,622 - DEBUG - on stmt: $const156.2 = const(int, 0)
2024-06-06 03:46:38,622 - DEBUG - on stmt: ok = origsize == $const156.2
2024-06-06 03:46:38,622 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,622 - DEBUG - ==== SSA block rewrite pass on 166
2024-06-06 03:46:38,622 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,622 - DEBUG - on stmt: inferred.1 = origsize // known_size.2
2024-06-06 03:46:38,622 - DEBUG - on stmt: $binop_mod180.5 = origsize % known_size.2
2024-06-06 03:46:38,622 - DEBUG - on stmt: $const184.6 = const(int, 0)
2024-06-06 03:46:38,622 - DEBUG - on stmt: ok = $binop_mod180.5 == $const184.6
2024-06-06 03:46:38,622 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,623 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-06 03:46:38,623 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,623 - DEBUG - on stmt: bool194 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,623 - DEBUG - on stmt: $194pred = call bool194(ok, func=bool194, args=(Var(ok, arrayobj.py:2063),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,623 - DEBUG - on stmt: branch $194pred, 218, 196
2024-06-06 03:46:38,623 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-06 03:46:38,623 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,623 - DEBUG - on stmt: $196load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,623 - DEBUG - on stmt: $const206.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,623 - DEBUG - on stmt: $208call.3 = call $196load_global.0($const206.2, func=$196load_global.0, args=[Var($const206.2, arrayobj.py:2068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,623 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,623 - DEBUG - ==== SSA block rewrite pass on 218
2024-06-06 03:46:38,623 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,624 - DEBUG - on stmt: shape[neg_ax] = inferred
2024-06-06 03:46:38,624 - DEBUG - find_def var='inferred' stmt=shape[neg_ax] = inferred
2024-06-06 03:46:38,624 - DEBUG - find_def_from_top label 218
2024-06-06 03:46:38,624 - DEBUG - idom 192 from label 218
2024-06-06 03:46:38,624 - DEBUG - find_def_from_bottom label 192
2024-06-06 03:46:38,624 - DEBUG - find_def_from_top label 192
2024-06-06 03:46:38,624 - DEBUG - insert phi node inferred.2 = phi(incoming_values=[], incoming_blocks=[]) at 192
2024-06-06 03:46:38,624 - DEBUG - find_def_from_bottom label 166
2024-06-06 03:46:38,624 - DEBUG - incoming_def inferred.1 = origsize // known_size.2
2024-06-06 03:46:38,625 - DEBUG - find_def_from_bottom label 150
2024-06-06 03:46:38,625 - DEBUG - incoming_def inferred = const(int, 0)
2024-06-06 03:46:38,625 - DEBUG - replaced with: shape[neg_ax] = inferred.2
2024-06-06 03:46:38,625 - DEBUG - on stmt: $const228.3 = const(NoneType, None)
2024-06-06 03:46:38,625 - DEBUG - on stmt: $228return_const.4 = cast(value=$const228.3)
2024-06-06 03:46:38,625 - DEBUG - on stmt: return $228return_const.4
2024-06-06 03:46:38,625 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:38,625 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,625 - DEBUG - on stmt: $230load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,625 - DEBUG - on stmt: $const240.2 = const(str, multiple negative shape values)
2024-06-06 03:46:38,625 - DEBUG - on stmt: $242call.3 = call $230load_global.0($const240.2, func=$230load_global.0, args=[Var($const240.2, arrayobj.py:2072)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,625 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-06 03:46:38,626 - DEBUG - ==== SSA block rewrite pass on 231
2024-06-06 03:46:38,626 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d22397f0>
2024-06-06 03:46:38,626 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2053), Var(known_size.1, arrayobj.py:2053)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,626 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2050), Var(num_neg_value.2, arrayobj.py:2050)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,626 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,626 - DEBUG - Fix SSA violator on var ok
2024-06-06 03:46:38,626 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:38,626 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,626 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-06 03:46:38,626 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-06 03:46:38,626 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-06 03:46:38,626 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-06 03:46:38,626 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-06 03:46:38,627 - DEBUG - on stmt: $24call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2045)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,627 - DEBUG - on stmt: $32get_iter.6 = getiter(value=$24call.5)
2024-06-06 03:46:38,627 - DEBUG - on stmt: $phi34.0 = $32get_iter.6
2024-06-06 03:46:38,627 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,627 - DEBUG - ==== SSA block rewrite pass on 34
2024-06-06 03:46:38,627 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,627 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2047), Var(known_size.3, arrayobj.py:2053)], incoming_blocks=[0, 231])
2024-06-06 03:46:38,627 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2046), Var(num_neg_value.3, arrayobj.py:2050)], incoming_blocks=[0, 231])
2024-06-06 03:46:38,627 - DEBUG - on stmt: $34for_iter.1 = iternext(value=$phi34.0)
2024-06-06 03:46:38,627 - DEBUG - on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
2024-06-06 03:46:38,627 - DEBUG - on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
2024-06-06 03:46:38,627 - DEBUG - on stmt: $phi38.1 = $34for_iter.2
2024-06-06 03:46:38,627 - DEBUG - on stmt: branch $34for_iter.3, 38, 84
2024-06-06 03:46:38,627 - DEBUG - ==== SSA block rewrite pass on 38
2024-06-06 03:46:38,628 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,628 - DEBUG - on stmt: $38unpack_sequence.4 = exhaust_iter(value=$phi38.1, count=2)
2024-06-06 03:46:38,628 - DEBUG - on stmt: $38unpack_sequence.2 = static_getitem(value=$38unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,628 - DEBUG - on stmt: $38unpack_sequence.3 = static_getitem(value=$38unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,628 - DEBUG - on stmt: ax = $38unpack_sequence.2
2024-06-06 03:46:38,628 - DEBUG - on stmt: s = $38unpack_sequence.3
2024-06-06 03:46:38,628 - DEBUG - on stmt: $const48.6 = const(int, 0)
2024-06-06 03:46:38,628 - DEBUG - on stmt: $50compare_op.7 = s < $const48.6
2024-06-06 03:46:38,628 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,628 - DEBUG - on stmt: $54pred = call bool54($50compare_op.7, func=bool54, args=(Var($50compare_op.7, arrayobj.py:2049),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,628 - DEBUG - on stmt: branch $54pred, 56, 72
2024-06-06 03:46:38,628 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:38,628 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,628 - DEBUG - on stmt: $const58.2 = const(int, 1)
2024-06-06 03:46:38,629 - DEBUG - on stmt: $binop_iadd60.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const58.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,629 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd60.3
2024-06-06 03:46:38,629 - DEBUG - on stmt: neg_ax = ax
2024-06-06 03:46:38,629 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,629 - DEBUG - ==== SSA block rewrite pass on 72
2024-06-06 03:46:38,629 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,629 - DEBUG - on stmt: $binop_imul76.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,629 - DEBUG - on stmt: known_size.1 = $binop_imul76.3
2024-06-06 03:46:38,629 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,629 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-06 03:46:38,629 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,629 - DEBUG - on stmt: $const88.3 = const(int, 0)
2024-06-06 03:46:38,629 - DEBUG - on stmt: $90compare_op.4 = num_neg_value.2 == $const88.3
2024-06-06 03:46:38,629 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,630 - DEBUG - on stmt: $94pred = call bool94($90compare_op.4, func=bool94, args=(Var($90compare_op.4, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,630 - DEBUG - on stmt: branch $94pred, 96, 130
2024-06-06 03:46:38,630 - DEBUG - ==== SSA block rewrite pass on 96
2024-06-06 03:46:38,630 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,630 - DEBUG - on stmt: $100compare_op.2 = origsize != known_size.2
2024-06-06 03:46:38,630 - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,630 - DEBUG - on stmt: $104pred = call bool104($100compare_op.2, func=bool104, args=(Var($100compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,630 - DEBUG - on stmt: branch $104pred, 106, 128
2024-06-06 03:46:38,630 - DEBUG - ==== SSA block rewrite pass on 106
2024-06-06 03:46:38,630 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,630 - DEBUG - on stmt: $106load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,630 - DEBUG - on stmt: $const116.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,630 - DEBUG - on stmt: $118call.3 = call $106load_global.0($const116.2, func=$106load_global.0, args=[Var($const116.2, arrayobj.py:2057)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,630 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,631 - DEBUG - ==== SSA block rewrite pass on 128
2024-06-06 03:46:38,631 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,631 - DEBUG - on stmt: $const128.0 = const(NoneType, None)
2024-06-06 03:46:38,631 - DEBUG - on stmt: $128return_const.1 = cast(value=$const128.0)
2024-06-06 03:46:38,631 - DEBUG - on stmt: return $128return_const.1
2024-06-06 03:46:38,631 - DEBUG - ==== SSA block rewrite pass on 130
2024-06-06 03:46:38,631 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,631 - DEBUG - on stmt: $const132.1 = const(int, 1)
2024-06-06 03:46:38,631 - DEBUG - on stmt: $134compare_op.2 = num_neg_value.2 == $const132.1
2024-06-06 03:46:38,631 - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,631 - DEBUG - on stmt: $138pred = call bool138($134compare_op.2, func=bool138, args=(Var($134compare_op.2, arrayobj.py:2059),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,631 - DEBUG - on stmt: branch $138pred, 140, 230
2024-06-06 03:46:38,631 - DEBUG - ==== SSA block rewrite pass on 140
2024-06-06 03:46:38,631 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,632 - DEBUG - on stmt: $const142.1 = const(int, 0)
2024-06-06 03:46:38,632 - DEBUG - on stmt: $144compare_op.2 = known_size.2 == $const142.1
2024-06-06 03:46:38,632 - DEBUG - on stmt: bool148 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,632 - DEBUG - on stmt: $148pred = call bool148($144compare_op.2, func=bool148, args=(Var($144compare_op.2, arrayobj.py:2061),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,632 - DEBUG - on stmt: branch $148pred, 150, 166
2024-06-06 03:46:38,632 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-06 03:46:38,632 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,632 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-06 03:46:38,632 - DEBUG - on stmt: $const156.2 = const(int, 0)
2024-06-06 03:46:38,632 - DEBUG - on stmt: ok = origsize == $const156.2
2024-06-06 03:46:38,632 - DEBUG - first assign: ok
2024-06-06 03:46:38,632 - DEBUG - replaced with: ok = origsize == $const156.2
2024-06-06 03:46:38,632 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,632 - DEBUG - ==== SSA block rewrite pass on 166
2024-06-06 03:46:38,633 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,633 - DEBUG - on stmt: inferred.1 = origsize // known_size.2
2024-06-06 03:46:38,633 - DEBUG - on stmt: $binop_mod180.5 = origsize % known_size.2
2024-06-06 03:46:38,633 - DEBUG - on stmt: $const184.6 = const(int, 0)
2024-06-06 03:46:38,633 - DEBUG - on stmt: ok = $binop_mod180.5 == $const184.6
2024-06-06 03:46:38,633 - DEBUG - replaced with: ok.1 = $binop_mod180.5 == $const184.6
2024-06-06 03:46:38,633 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,633 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-06 03:46:38,633 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,633 - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2065), Var(inferred, arrayobj.py:2062)], incoming_blocks=[166, 150])
2024-06-06 03:46:38,633 - DEBUG - on stmt: bool194 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,633 - DEBUG - on stmt: $194pred = call bool194(ok, func=bool194, args=(Var(ok, arrayobj.py:2063),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,633 - DEBUG - on stmt: branch $194pred, 218, 196
2024-06-06 03:46:38,634 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-06 03:46:38,634 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,634 - DEBUG - on stmt: $196load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,634 - DEBUG - on stmt: $const206.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,634 - DEBUG - on stmt: $208call.3 = call $196load_global.0($const206.2, func=$196load_global.0, args=[Var($const206.2, arrayobj.py:2068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,634 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,634 - DEBUG - ==== SSA block rewrite pass on 218
2024-06-06 03:46:38,634 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,634 - DEBUG - on stmt: shape[neg_ax] = inferred.2
2024-06-06 03:46:38,634 - DEBUG - on stmt: $const228.3 = const(NoneType, None)
2024-06-06 03:46:38,634 - DEBUG - on stmt: $228return_const.4 = cast(value=$const228.3)
2024-06-06 03:46:38,634 - DEBUG - on stmt: return $228return_const.4
2024-06-06 03:46:38,634 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:38,634 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,634 - DEBUG - on stmt: $230load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,635 - DEBUG - on stmt: $const240.2 = const(str, multiple negative shape values)
2024-06-06 03:46:38,635 - DEBUG - on stmt: $242call.3 = call $230load_global.0($const240.2, func=$230load_global.0, args=[Var($const240.2, arrayobj.py:2072)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,635 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-06 03:46:38,635 - DEBUG - ==== SSA block rewrite pass on 231
2024-06-06 03:46:38,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1fd83b0>
2024-06-06 03:46:38,635 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2053), Var(known_size.1, arrayobj.py:2053)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,635 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2050), Var(num_neg_value.2, arrayobj.py:2050)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,635 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,635 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {150: [<numba.core.ir.Assign object at 0x7fe9d223bc80>],
             166: [<numba.core.ir.Assign object at 0x7fe9b9721e50>]})
2024-06-06 03:46:38,635 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:38,635 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,635 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-06 03:46:38,635 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-06 03:46:38,636 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-06 03:46:38,636 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-06 03:46:38,636 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-06 03:46:38,636 - DEBUG - on stmt: $24call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2045)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,636 - DEBUG - on stmt: $32get_iter.6 = getiter(value=$24call.5)
2024-06-06 03:46:38,636 - DEBUG - on stmt: $phi34.0 = $32get_iter.6
2024-06-06 03:46:38,636 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,636 - DEBUG - ==== SSA block rewrite pass on 34
2024-06-06 03:46:38,636 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,636 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2047), Var(known_size.3, arrayobj.py:2053)], incoming_blocks=[0, 231])
2024-06-06 03:46:38,636 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2046), Var(num_neg_value.3, arrayobj.py:2050)], incoming_blocks=[0, 231])
2024-06-06 03:46:38,636 - DEBUG - on stmt: $34for_iter.1 = iternext(value=$phi34.0)
2024-06-06 03:46:38,636 - DEBUG - on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
2024-06-06 03:46:38,637 - DEBUG - on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
2024-06-06 03:46:38,637 - DEBUG - on stmt: $phi38.1 = $34for_iter.2
2024-06-06 03:46:38,637 - DEBUG - on stmt: branch $34for_iter.3, 38, 84
2024-06-06 03:46:38,637 - DEBUG - ==== SSA block rewrite pass on 38
2024-06-06 03:46:38,637 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,637 - DEBUG - on stmt: $38unpack_sequence.4 = exhaust_iter(value=$phi38.1, count=2)
2024-06-06 03:46:38,637 - DEBUG - on stmt: $38unpack_sequence.2 = static_getitem(value=$38unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,637 - DEBUG - on stmt: $38unpack_sequence.3 = static_getitem(value=$38unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,637 - DEBUG - on stmt: ax = $38unpack_sequence.2
2024-06-06 03:46:38,637 - DEBUG - on stmt: s = $38unpack_sequence.3
2024-06-06 03:46:38,637 - DEBUG - on stmt: $const48.6 = const(int, 0)
2024-06-06 03:46:38,637 - DEBUG - on stmt: $50compare_op.7 = s < $const48.6
2024-06-06 03:46:38,637 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,637 - DEBUG - on stmt: $54pred = call bool54($50compare_op.7, func=bool54, args=(Var($50compare_op.7, arrayobj.py:2049),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,638 - DEBUG - on stmt: branch $54pred, 56, 72
2024-06-06 03:46:38,638 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:38,638 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,638 - DEBUG - on stmt: $const58.2 = const(int, 1)
2024-06-06 03:46:38,638 - DEBUG - on stmt: $binop_iadd60.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const58.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,638 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd60.3
2024-06-06 03:46:38,638 - DEBUG - on stmt: neg_ax = ax
2024-06-06 03:46:38,638 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,638 - DEBUG - ==== SSA block rewrite pass on 72
2024-06-06 03:46:38,638 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,638 - DEBUG - on stmt: $binop_imul76.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,638 - DEBUG - on stmt: known_size.1 = $binop_imul76.3
2024-06-06 03:46:38,638 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,638 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-06 03:46:38,639 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,639 - DEBUG - on stmt: $const88.3 = const(int, 0)
2024-06-06 03:46:38,639 - DEBUG - on stmt: $90compare_op.4 = num_neg_value.2 == $const88.3
2024-06-06 03:46:38,639 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,639 - DEBUG - on stmt: $94pred = call bool94($90compare_op.4, func=bool94, args=(Var($90compare_op.4, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,639 - DEBUG - on stmt: branch $94pred, 96, 130
2024-06-06 03:46:38,639 - DEBUG - ==== SSA block rewrite pass on 96
2024-06-06 03:46:38,639 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,639 - DEBUG - on stmt: $100compare_op.2 = origsize != known_size.2
2024-06-06 03:46:38,639 - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,639 - DEBUG - on stmt: $104pred = call bool104($100compare_op.2, func=bool104, args=(Var($100compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,639 - DEBUG - on stmt: branch $104pred, 106, 128
2024-06-06 03:46:38,639 - DEBUG - ==== SSA block rewrite pass on 106
2024-06-06 03:46:38,640 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,640 - DEBUG - on stmt: $106load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,640 - DEBUG - on stmt: $const116.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,640 - DEBUG - on stmt: $118call.3 = call $106load_global.0($const116.2, func=$106load_global.0, args=[Var($const116.2, arrayobj.py:2057)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,640 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,640 - DEBUG - ==== SSA block rewrite pass on 128
2024-06-06 03:46:38,640 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,640 - DEBUG - on stmt: $const128.0 = const(NoneType, None)
2024-06-06 03:46:38,640 - DEBUG - on stmt: $128return_const.1 = cast(value=$const128.0)
2024-06-06 03:46:38,640 - DEBUG - on stmt: return $128return_const.1
2024-06-06 03:46:38,640 - DEBUG - ==== SSA block rewrite pass on 130
2024-06-06 03:46:38,640 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,640 - DEBUG - on stmt: $const132.1 = const(int, 1)
2024-06-06 03:46:38,640 - DEBUG - on stmt: $134compare_op.2 = num_neg_value.2 == $const132.1
2024-06-06 03:46:38,641 - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,641 - DEBUG - on stmt: $138pred = call bool138($134compare_op.2, func=bool138, args=(Var($134compare_op.2, arrayobj.py:2059),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,641 - DEBUG - on stmt: branch $138pred, 140, 230
2024-06-06 03:46:38,641 - DEBUG - ==== SSA block rewrite pass on 140
2024-06-06 03:46:38,641 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,641 - DEBUG - on stmt: $const142.1 = const(int, 0)
2024-06-06 03:46:38,641 - DEBUG - on stmt: $144compare_op.2 = known_size.2 == $const142.1
2024-06-06 03:46:38,641 - DEBUG - on stmt: bool148 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,641 - DEBUG - on stmt: $148pred = call bool148($144compare_op.2, func=bool148, args=(Var($144compare_op.2, arrayobj.py:2061),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,641 - DEBUG - on stmt: branch $148pred, 150, 166
2024-06-06 03:46:38,641 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-06 03:46:38,641 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,641 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-06 03:46:38,641 - DEBUG - on stmt: $const156.2 = const(int, 0)
2024-06-06 03:46:38,642 - DEBUG - on stmt: ok = origsize == $const156.2
2024-06-06 03:46:38,642 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,642 - DEBUG - ==== SSA block rewrite pass on 166
2024-06-06 03:46:38,642 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,642 - DEBUG - on stmt: inferred.1 = origsize // known_size.2
2024-06-06 03:46:38,642 - DEBUG - on stmt: $binop_mod180.5 = origsize % known_size.2
2024-06-06 03:46:38,642 - DEBUG - on stmt: $const184.6 = const(int, 0)
2024-06-06 03:46:38,642 - DEBUG - on stmt: ok.1 = $binop_mod180.5 == $const184.6
2024-06-06 03:46:38,642 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,642 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-06 03:46:38,642 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,642 - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2065), Var(inferred, arrayobj.py:2062)], incoming_blocks=[166, 150])
2024-06-06 03:46:38,642 - DEBUG - on stmt: bool194 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,642 - DEBUG - on stmt: $194pred = call bool194(ok, func=bool194, args=(Var(ok, arrayobj.py:2063),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,643 - DEBUG - find_def var='ok' stmt=$194pred = call bool194(ok, func=bool194, args=(Var(ok, arrayobj.py:2063),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,643 - DEBUG - find_def_from_top label 192
2024-06-06 03:46:38,643 - DEBUG - insert phi node ok.2 = phi(incoming_values=[], incoming_blocks=[]) at 192
2024-06-06 03:46:38,643 - DEBUG - find_def_from_bottom label 166
2024-06-06 03:46:38,643 - DEBUG - incoming_def ok.1 = $binop_mod180.5 == $const184.6
2024-06-06 03:46:38,643 - DEBUG - find_def_from_bottom label 150
2024-06-06 03:46:38,643 - DEBUG - incoming_def ok = origsize == $const156.2
2024-06-06 03:46:38,643 - DEBUG - replaced with: $194pred = call bool194(ok.2, func=bool194, args=(Var(ok.2, arrayobj.py:2067),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,643 - DEBUG - on stmt: branch $194pred, 218, 196
2024-06-06 03:46:38,643 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-06 03:46:38,643 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,643 - DEBUG - on stmt: $196load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,644 - DEBUG - on stmt: $const206.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,644 - DEBUG - on stmt: $208call.3 = call $196load_global.0($const206.2, func=$196load_global.0, args=[Var($const206.2, arrayobj.py:2068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,644 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,644 - DEBUG - ==== SSA block rewrite pass on 218
2024-06-06 03:46:38,644 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,644 - DEBUG - on stmt: shape[neg_ax] = inferred.2
2024-06-06 03:46:38,644 - DEBUG - on stmt: $const228.3 = const(NoneType, None)
2024-06-06 03:46:38,644 - DEBUG - on stmt: $228return_const.4 = cast(value=$const228.3)
2024-06-06 03:46:38,644 - DEBUG - on stmt: return $228return_const.4
2024-06-06 03:46:38,644 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:38,644 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,644 - DEBUG - on stmt: $230load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,644 - DEBUG - on stmt: $const240.2 = const(str, multiple negative shape values)
2024-06-06 03:46:38,644 - DEBUG - on stmt: $242call.3 = call $230load_global.0($const240.2, func=$230load_global.0, args=[Var($const240.2, arrayobj.py:2072)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,645 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-06 03:46:38,645 - DEBUG - ==== SSA block rewrite pass on 231
2024-06-06 03:46:38,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1f5bf50>
2024-06-06 03:46:38,645 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2053), Var(known_size.1, arrayobj.py:2053)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,645 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2050), Var(num_neg_value.2, arrayobj.py:2050)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,645 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,645 - DEBUG - Fix SSA violator on var neg_ax
2024-06-06 03:46:38,645 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:38,645 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,645 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-06 03:46:38,645 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-06 03:46:38,645 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-06 03:46:38,645 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-06 03:46:38,646 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-06 03:46:38,646 - DEBUG - on stmt: $24call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2045)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,646 - DEBUG - on stmt: $32get_iter.6 = getiter(value=$24call.5)
2024-06-06 03:46:38,646 - DEBUG - on stmt: $phi34.0 = $32get_iter.6
2024-06-06 03:46:38,646 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,646 - DEBUG - ==== SSA block rewrite pass on 34
2024-06-06 03:46:38,646 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,646 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2047), Var(known_size.3, arrayobj.py:2053)], incoming_blocks=[0, 231])
2024-06-06 03:46:38,646 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2046), Var(num_neg_value.3, arrayobj.py:2050)], incoming_blocks=[0, 231])
2024-06-06 03:46:38,646 - DEBUG - on stmt: $34for_iter.1 = iternext(value=$phi34.0)
2024-06-06 03:46:38,646 - DEBUG - on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
2024-06-06 03:46:38,646 - DEBUG - on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
2024-06-06 03:46:38,646 - DEBUG - on stmt: $phi38.1 = $34for_iter.2
2024-06-06 03:46:38,646 - DEBUG - on stmt: branch $34for_iter.3, 38, 84
2024-06-06 03:46:38,647 - DEBUG - ==== SSA block rewrite pass on 38
2024-06-06 03:46:38,647 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,647 - DEBUG - on stmt: $38unpack_sequence.4 = exhaust_iter(value=$phi38.1, count=2)
2024-06-06 03:46:38,647 - DEBUG - on stmt: $38unpack_sequence.2 = static_getitem(value=$38unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,647 - DEBUG - on stmt: $38unpack_sequence.3 = static_getitem(value=$38unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,647 - DEBUG - on stmt: ax = $38unpack_sequence.2
2024-06-06 03:46:38,647 - DEBUG - on stmt: s = $38unpack_sequence.3
2024-06-06 03:46:38,647 - DEBUG - on stmt: $const48.6 = const(int, 0)
2024-06-06 03:46:38,647 - DEBUG - on stmt: $50compare_op.7 = s < $const48.6
2024-06-06 03:46:38,647 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,647 - DEBUG - on stmt: $54pred = call bool54($50compare_op.7, func=bool54, args=(Var($50compare_op.7, arrayobj.py:2049),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,647 - DEBUG - on stmt: branch $54pred, 56, 72
2024-06-06 03:46:38,647 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:38,647 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,648 - DEBUG - on stmt: $const58.2 = const(int, 1)
2024-06-06 03:46:38,648 - DEBUG - on stmt: $binop_iadd60.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const58.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,648 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd60.3
2024-06-06 03:46:38,648 - DEBUG - on stmt: neg_ax = ax
2024-06-06 03:46:38,648 - DEBUG - first assign: neg_ax
2024-06-06 03:46:38,648 - DEBUG - replaced with: neg_ax = ax
2024-06-06 03:46:38,648 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,648 - DEBUG - ==== SSA block rewrite pass on 72
2024-06-06 03:46:38,648 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,648 - DEBUG - on stmt: $binop_imul76.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,648 - DEBUG - on stmt: known_size.1 = $binop_imul76.3
2024-06-06 03:46:38,648 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,648 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-06 03:46:38,648 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,649 - DEBUG - on stmt: $const88.3 = const(int, 0)
2024-06-06 03:46:38,649 - DEBUG - on stmt: $90compare_op.4 = num_neg_value.2 == $const88.3
2024-06-06 03:46:38,649 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,649 - DEBUG - on stmt: $94pred = call bool94($90compare_op.4, func=bool94, args=(Var($90compare_op.4, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,649 - DEBUG - on stmt: branch $94pred, 96, 130
2024-06-06 03:46:38,649 - DEBUG - ==== SSA block rewrite pass on 96
2024-06-06 03:46:38,649 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,649 - DEBUG - on stmt: $100compare_op.2 = origsize != known_size.2
2024-06-06 03:46:38,649 - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,649 - DEBUG - on stmt: $104pred = call bool104($100compare_op.2, func=bool104, args=(Var($100compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,649 - DEBUG - on stmt: branch $104pred, 106, 128
2024-06-06 03:46:38,649 - DEBUG - ==== SSA block rewrite pass on 106
2024-06-06 03:46:38,649 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,649 - DEBUG - on stmt: $106load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,650 - DEBUG - on stmt: $const116.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,650 - DEBUG - on stmt: $118call.3 = call $106load_global.0($const116.2, func=$106load_global.0, args=[Var($const116.2, arrayobj.py:2057)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,650 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,650 - DEBUG - ==== SSA block rewrite pass on 128
2024-06-06 03:46:38,650 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,650 - DEBUG - on stmt: $const128.0 = const(NoneType, None)
2024-06-06 03:46:38,650 - DEBUG - on stmt: $128return_const.1 = cast(value=$const128.0)
2024-06-06 03:46:38,650 - DEBUG - on stmt: return $128return_const.1
2024-06-06 03:46:38,650 - DEBUG - ==== SSA block rewrite pass on 130
2024-06-06 03:46:38,650 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,650 - DEBUG - on stmt: $const132.1 = const(int, 1)
2024-06-06 03:46:38,650 - DEBUG - on stmt: $134compare_op.2 = num_neg_value.2 == $const132.1
2024-06-06 03:46:38,650 - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,650 - DEBUG - on stmt: $138pred = call bool138($134compare_op.2, func=bool138, args=(Var($134compare_op.2, arrayobj.py:2059),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,651 - DEBUG - on stmt: branch $138pred, 140, 230
2024-06-06 03:46:38,651 - DEBUG - ==== SSA block rewrite pass on 140
2024-06-06 03:46:38,651 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,651 - DEBUG - on stmt: $const142.1 = const(int, 0)
2024-06-06 03:46:38,651 - DEBUG - on stmt: $144compare_op.2 = known_size.2 == $const142.1
2024-06-06 03:46:38,651 - DEBUG - on stmt: bool148 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,651 - DEBUG - on stmt: $148pred = call bool148($144compare_op.2, func=bool148, args=(Var($144compare_op.2, arrayobj.py:2061),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,651 - DEBUG - on stmt: branch $148pred, 150, 166
2024-06-06 03:46:38,651 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-06 03:46:38,651 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,651 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-06 03:46:38,651 - DEBUG - on stmt: $const156.2 = const(int, 0)
2024-06-06 03:46:38,651 - DEBUG - on stmt: ok = origsize == $const156.2
2024-06-06 03:46:38,651 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,652 - DEBUG - ==== SSA block rewrite pass on 166
2024-06-06 03:46:38,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,652 - DEBUG - on stmt: inferred.1 = origsize // known_size.2
2024-06-06 03:46:38,652 - DEBUG - on stmt: $binop_mod180.5 = origsize % known_size.2
2024-06-06 03:46:38,652 - DEBUG - on stmt: $const184.6 = const(int, 0)
2024-06-06 03:46:38,652 - DEBUG - on stmt: ok.1 = $binop_mod180.5 == $const184.6
2024-06-06 03:46:38,652 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,652 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-06 03:46:38,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,652 - DEBUG - on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2066), Var(ok, arrayobj.py:2063)], incoming_blocks=[166, 150])
2024-06-06 03:46:38,652 - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2065), Var(inferred, arrayobj.py:2062)], incoming_blocks=[166, 150])
2024-06-06 03:46:38,652 - DEBUG - on stmt: bool194 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,652 - DEBUG - on stmt: $194pred = call bool194(ok.2, func=bool194, args=(Var(ok.2, arrayobj.py:2067),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,652 - DEBUG - on stmt: branch $194pred, 218, 196
2024-06-06 03:46:38,653 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-06 03:46:38,653 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,653 - DEBUG - on stmt: $196load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,653 - DEBUG - on stmt: $const206.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,653 - DEBUG - on stmt: $208call.3 = call $196load_global.0($const206.2, func=$196load_global.0, args=[Var($const206.2, arrayobj.py:2068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,653 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,653 - DEBUG - ==== SSA block rewrite pass on 218
2024-06-06 03:46:38,653 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,653 - DEBUG - on stmt: shape[neg_ax] = inferred.2
2024-06-06 03:46:38,653 - DEBUG - on stmt: $const228.3 = const(NoneType, None)
2024-06-06 03:46:38,653 - DEBUG - on stmt: $228return_const.4 = cast(value=$const228.3)
2024-06-06 03:46:38,653 - DEBUG - on stmt: return $228return_const.4
2024-06-06 03:46:38,653 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:38,653 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,654 - DEBUG - on stmt: $230load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,654 - DEBUG - on stmt: $const240.2 = const(str, multiple negative shape values)
2024-06-06 03:46:38,654 - DEBUG - on stmt: $242call.3 = call $230load_global.0($const240.2, func=$230load_global.0, args=[Var($const240.2, arrayobj.py:2072)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,654 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-06 03:46:38,654 - DEBUG - ==== SSA block rewrite pass on 231
2024-06-06 03:46:38,654 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2239d30>
2024-06-06 03:46:38,654 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2053), Var(known_size.1, arrayobj.py:2053)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,654 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2050), Var(num_neg_value.2, arrayobj.py:2050)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,654 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,654 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {56: [<numba.core.ir.Assign object at 0x7fe9d1f70050>]})
2024-06-06 03:46:38,654 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:38,654 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,654 - DEBUG - on stmt: origsize = arg(0, name=origsize)
2024-06-06 03:46:38,655 - DEBUG - on stmt: shape = arg(1, name=shape)
2024-06-06 03:46:38,655 - DEBUG - on stmt: num_neg_value = const(int, 0)
2024-06-06 03:46:38,655 - DEBUG - on stmt: known_size = const(int, 1)
2024-06-06 03:46:38,655 - DEBUG - on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
2024-06-06 03:46:38,655 - DEBUG - on stmt: $24call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2045)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,655 - DEBUG - on stmt: $32get_iter.6 = getiter(value=$24call.5)
2024-06-06 03:46:38,655 - DEBUG - on stmt: $phi34.0 = $32get_iter.6
2024-06-06 03:46:38,655 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,655 - DEBUG - ==== SSA block rewrite pass on 34
2024-06-06 03:46:38,655 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,655 - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2047), Var(known_size.3, arrayobj.py:2053)], incoming_blocks=[0, 231])
2024-06-06 03:46:38,655 - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2046), Var(num_neg_value.3, arrayobj.py:2050)], incoming_blocks=[0, 231])
2024-06-06 03:46:38,655 - DEBUG - on stmt: $34for_iter.1 = iternext(value=$phi34.0)
2024-06-06 03:46:38,656 - DEBUG - on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
2024-06-06 03:46:38,656 - DEBUG - on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
2024-06-06 03:46:38,656 - DEBUG - on stmt: $phi38.1 = $34for_iter.2
2024-06-06 03:46:38,656 - DEBUG - on stmt: branch $34for_iter.3, 38, 84
2024-06-06 03:46:38,656 - DEBUG - ==== SSA block rewrite pass on 38
2024-06-06 03:46:38,656 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,656 - DEBUG - on stmt: $38unpack_sequence.4 = exhaust_iter(value=$phi38.1, count=2)
2024-06-06 03:46:38,656 - DEBUG - on stmt: $38unpack_sequence.2 = static_getitem(value=$38unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,656 - DEBUG - on stmt: $38unpack_sequence.3 = static_getitem(value=$38unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
2024-06-06 03:46:38,656 - DEBUG - on stmt: ax = $38unpack_sequence.2
2024-06-06 03:46:38,656 - DEBUG - on stmt: s = $38unpack_sequence.3
2024-06-06 03:46:38,656 - DEBUG - on stmt: $const48.6 = const(int, 0)
2024-06-06 03:46:38,656 - DEBUG - on stmt: $50compare_op.7 = s < $const48.6
2024-06-06 03:46:38,656 - DEBUG - on stmt: bool54 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,657 - DEBUG - on stmt: $54pred = call bool54($50compare_op.7, func=bool54, args=(Var($50compare_op.7, arrayobj.py:2049),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,657 - DEBUG - on stmt: branch $54pred, 56, 72
2024-06-06 03:46:38,657 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:38,657 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,657 - DEBUG - on stmt: $const58.2 = const(int, 1)
2024-06-06 03:46:38,657 - DEBUG - on stmt: $binop_iadd60.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const58.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,657 - DEBUG - on stmt: num_neg_value.1 = $binop_iadd60.3
2024-06-06 03:46:38,657 - DEBUG - on stmt: neg_ax = ax
2024-06-06 03:46:38,657 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,657 - DEBUG - ==== SSA block rewrite pass on 72
2024-06-06 03:46:38,657 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,657 - DEBUG - on stmt: $binop_imul76.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:38,657 - DEBUG - on stmt: known_size.1 = $binop_imul76.3
2024-06-06 03:46:38,657 - DEBUG - on stmt: jump 231
2024-06-06 03:46:38,658 - DEBUG - ==== SSA block rewrite pass on 84
2024-06-06 03:46:38,658 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,658 - DEBUG - on stmt: $const88.3 = const(int, 0)
2024-06-06 03:46:38,658 - DEBUG - on stmt: $90compare_op.4 = num_neg_value.2 == $const88.3
2024-06-06 03:46:38,658 - DEBUG - on stmt: bool94 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,658 - DEBUG - on stmt: $94pred = call bool94($90compare_op.4, func=bool94, args=(Var($90compare_op.4, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,658 - DEBUG - on stmt: branch $94pred, 96, 130
2024-06-06 03:46:38,658 - DEBUG - ==== SSA block rewrite pass on 96
2024-06-06 03:46:38,658 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,658 - DEBUG - on stmt: $100compare_op.2 = origsize != known_size.2
2024-06-06 03:46:38,658 - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,658 - DEBUG - on stmt: $104pred = call bool104($100compare_op.2, func=bool104, args=(Var($100compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,658 - DEBUG - on stmt: branch $104pred, 106, 128
2024-06-06 03:46:38,658 - DEBUG - ==== SSA block rewrite pass on 106
2024-06-06 03:46:38,659 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,659 - DEBUG - on stmt: $106load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,659 - DEBUG - on stmt: $const116.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,659 - DEBUG - on stmt: $118call.3 = call $106load_global.0($const116.2, func=$106load_global.0, args=[Var($const116.2, arrayobj.py:2057)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,659 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,659 - DEBUG - ==== SSA block rewrite pass on 128
2024-06-06 03:46:38,659 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,659 - DEBUG - on stmt: $const128.0 = const(NoneType, None)
2024-06-06 03:46:38,659 - DEBUG - on stmt: $128return_const.1 = cast(value=$const128.0)
2024-06-06 03:46:38,659 - DEBUG - on stmt: return $128return_const.1
2024-06-06 03:46:38,659 - DEBUG - ==== SSA block rewrite pass on 130
2024-06-06 03:46:38,659 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,659 - DEBUG - on stmt: $const132.1 = const(int, 1)
2024-06-06 03:46:38,659 - DEBUG - on stmt: $134compare_op.2 = num_neg_value.2 == $const132.1
2024-06-06 03:46:38,660 - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,660 - DEBUG - on stmt: $138pred = call bool138($134compare_op.2, func=bool138, args=(Var($134compare_op.2, arrayobj.py:2059),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,660 - DEBUG - on stmt: branch $138pred, 140, 230
2024-06-06 03:46:38,660 - DEBUG - ==== SSA block rewrite pass on 140
2024-06-06 03:46:38,660 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,660 - DEBUG - on stmt: $const142.1 = const(int, 0)
2024-06-06 03:46:38,660 - DEBUG - on stmt: $144compare_op.2 = known_size.2 == $const142.1
2024-06-06 03:46:38,660 - DEBUG - on stmt: bool148 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,660 - DEBUG - on stmt: $148pred = call bool148($144compare_op.2, func=bool148, args=(Var($144compare_op.2, arrayobj.py:2061),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,660 - DEBUG - on stmt: branch $148pred, 150, 166
2024-06-06 03:46:38,660 - DEBUG - ==== SSA block rewrite pass on 150
2024-06-06 03:46:38,660 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,660 - DEBUG - on stmt: inferred = const(int, 0)
2024-06-06 03:46:38,660 - DEBUG - on stmt: $const156.2 = const(int, 0)
2024-06-06 03:46:38,661 - DEBUG - on stmt: ok = origsize == $const156.2
2024-06-06 03:46:38,661 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,661 - DEBUG - ==== SSA block rewrite pass on 166
2024-06-06 03:46:38,661 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,661 - DEBUG - on stmt: inferred.1 = origsize // known_size.2
2024-06-06 03:46:38,661 - DEBUG - on stmt: $binop_mod180.5 = origsize % known_size.2
2024-06-06 03:46:38,661 - DEBUG - on stmt: $const184.6 = const(int, 0)
2024-06-06 03:46:38,661 - DEBUG - on stmt: ok.1 = $binop_mod180.5 == $const184.6
2024-06-06 03:46:38,661 - DEBUG - on stmt: jump 192
2024-06-06 03:46:38,661 - DEBUG - ==== SSA block rewrite pass on 192
2024-06-06 03:46:38,661 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,661 - DEBUG - on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2066), Var(ok, arrayobj.py:2063)], incoming_blocks=[166, 150])
2024-06-06 03:46:38,661 - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2065), Var(inferred, arrayobj.py:2062)], incoming_blocks=[166, 150])
2024-06-06 03:46:38,662 - DEBUG - on stmt: bool194 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,662 - DEBUG - on stmt: $194pred = call bool194(ok.2, func=bool194, args=(Var(ok.2, arrayobj.py:2067),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,662 - DEBUG - on stmt: branch $194pred, 218, 196
2024-06-06 03:46:38,662 - DEBUG - ==== SSA block rewrite pass on 196
2024-06-06 03:46:38,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,662 - DEBUG - on stmt: $196load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,662 - DEBUG - on stmt: $const206.2 = const(str, total size of new array must be unchanged)
2024-06-06 03:46:38,662 - DEBUG - on stmt: $208call.3 = call $196load_global.0($const206.2, func=$196load_global.0, args=[Var($const206.2, arrayobj.py:2068)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,662 - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2024-06-06 03:46:38,662 - DEBUG - ==== SSA block rewrite pass on 218
2024-06-06 03:46:38,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,662 - DEBUG - on stmt: shape[neg_ax] = inferred.2
2024-06-06 03:46:38,662 - DEBUG - find_def var='neg_ax' stmt=shape[neg_ax] = inferred.2
2024-06-06 03:46:38,662 - DEBUG - find_def_from_top label 218
2024-06-06 03:46:38,663 - DEBUG - idom 192 from label 218
2024-06-06 03:46:38,663 - DEBUG - find_def_from_bottom label 192
2024-06-06 03:46:38,663 - DEBUG - find_def_from_top label 192
2024-06-06 03:46:38,663 - DEBUG - idom 140 from label 192
2024-06-06 03:46:38,663 - DEBUG - find_def_from_bottom label 140
2024-06-06 03:46:38,663 - DEBUG - find_def_from_top label 140
2024-06-06 03:46:38,663 - DEBUG - idom 130 from label 140
2024-06-06 03:46:38,663 - DEBUG - find_def_from_bottom label 130
2024-06-06 03:46:38,664 - DEBUG - find_def_from_top label 130
2024-06-06 03:46:38,664 - DEBUG - idom 84 from label 130
2024-06-06 03:46:38,664 - DEBUG - find_def_from_bottom label 84
2024-06-06 03:46:38,664 - DEBUG - find_def_from_top label 84
2024-06-06 03:46:38,664 - DEBUG - idom 34 from label 84
2024-06-06 03:46:38,664 - DEBUG - find_def_from_bottom label 34
2024-06-06 03:46:38,664 - DEBUG - find_def_from_top label 34
2024-06-06 03:46:38,664 - DEBUG - insert phi node neg_ax.1 = phi(incoming_values=[], incoming_blocks=[]) at 34
2024-06-06 03:46:38,664 - DEBUG - find_def_from_bottom label 0
2024-06-06 03:46:38,664 - DEBUG - find_def_from_top label 0
2024-06-06 03:46:38,664 - DEBUG - incoming_def <class 'numba.core.ssa.UndefinedVariable'>
2024-06-06 03:46:38,665 - DEBUG - find_def_from_bottom label 231
2024-06-06 03:46:38,665 - DEBUG - find_def_from_top label 231
2024-06-06 03:46:38,665 - DEBUG - insert phi node neg_ax.2 = phi(incoming_values=[], incoming_blocks=[]) at 231
2024-06-06 03:46:38,665 - DEBUG - find_def_from_bottom label 56
2024-06-06 03:46:38,665 - DEBUG - incoming_def neg_ax = ax
2024-06-06 03:46:38,665 - DEBUG - find_def_from_bottom label 72
2024-06-06 03:46:38,665 - DEBUG - find_def_from_top label 72
2024-06-06 03:46:38,665 - DEBUG - idom 38 from label 72
2024-06-06 03:46:38,665 - DEBUG - find_def_from_bottom label 38
2024-06-06 03:46:38,665 - DEBUG - find_def_from_top label 38
2024-06-06 03:46:38,665 - DEBUG - idom 34 from label 38
2024-06-06 03:46:38,665 - DEBUG - find_def_from_bottom label 34
2024-06-06 03:46:38,665 - DEBUG - incoming_def neg_ax.1 = phi(incoming_values=[Undefined], incoming_blocks=[0])
2024-06-06 03:46:38,666 - DEBUG - incoming_def neg_ax.2 = phi(incoming_values=[Var(neg_ax, arrayobj.py:2051), Var(neg_ax.1, arrayobj.py:2069)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,666 - DEBUG - replaced with: shape[neg_ax.1] = inferred.2
2024-06-06 03:46:38,666 - DEBUG - on stmt: $const228.3 = const(NoneType, None)
2024-06-06 03:46:38,666 - DEBUG - on stmt: $228return_const.4 = cast(value=$const228.3)
2024-06-06 03:46:38,666 - DEBUG - on stmt: return $228return_const.4
2024-06-06 03:46:38,666 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:38,666 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,666 - DEBUG - on stmt: $230load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,666 - DEBUG - on stmt: $const240.2 = const(str, multiple negative shape values)
2024-06-06 03:46:38,666 - DEBUG - on stmt: $242call.3 = call $230load_global.0($const240.2, func=$230load_global.0, args=[Var($const240.2, arrayobj.py:2072)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,666 - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2024-06-06 03:46:38,666 - DEBUG - ==== SSA block rewrite pass on 231
2024-06-06 03:46:38,666 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1fd8e60>
2024-06-06 03:46:38,666 - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2053), Var(known_size.1, arrayobj.py:2053)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,667 - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2050), Var(num_neg_value.2, arrayobj.py:2050)], incoming_blocks=[56, 72])
2024-06-06 03:46:38,667 - DEBUG - on stmt: jump 34
2024-06-06 03:46:38,872 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=68, lineno=483)
          12	RETURN_VALUE(arg=None, lineno=483)
2024-06-06 03:46:38,872 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:38,873 - DEBUG - stack: []
2024-06-06 03:46:38,873 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:38,873 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-06-06 03:46:38,873 - DEBUG - stack []
2024-06-06 03:46:38,873 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-06-06 03:46:38,873 - DEBUG - stack []
2024-06-06 03:46:38,873 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-06-06 03:46:38,873 - DEBUG - stack []
2024-06-06 03:46:38,873 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-06-06 03:46:38,873 - DEBUG - stack ['$a4.0']
2024-06-06 03:46:38,874 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=68, lineno=483)
2024-06-06 03:46:38,874 - DEBUG - stack ['$a4.0', '$min_val6.1']
2024-06-06 03:46:38,874 - DEBUG - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=483)
2024-06-06 03:46:38,874 - DEBUG - stack ['$8compare_op.2']
2024-06-06 03:46:38,874 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,874 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:38,874 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:38,874 - DEBUG - defmap: {}
2024-06-06 03:46:38,875 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:38,875 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:38,875 - DEBUG - keep phismap: {}
2024-06-06 03:46:38,875 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:38,875 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:38,875 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (12, {'retval': '$8compare_op.2', 'castval': '$12return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,875 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $12return_value.3 = cast(value=$8compare_op.2) ['$12return_value.3', '$8compare_op.2']
    return $12return_value.3                 ['$12return_value.3']

2024-06-06 03:46:38,880 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:38,880 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9acf0e0>
2024-06-06 03:46:38,880 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:38,881 - DEBUG - on stmt: min_val = arg(1, name=min_val)
2024-06-06 03:46:38,881 - DEBUG - on stmt: $8compare_op.2 = a > min_val
2024-06-06 03:46:38,881 - DEBUG - on stmt: $12return_value.3 = cast(value=$8compare_op.2)
2024-06-06 03:46:38,881 - DEBUG - on stmt: return $12return_value.3
2024-06-06 03:46:38,881 - DEBUG - defs defaultdict(<class 'list'>,
            {'$12return_value.3': [(<numba.core.ir.Assign object at 0x7fe9b9acdf70>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x7fe9b9acd430>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b9acc830>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7fe9b9acc650>, 0)]})
2024-06-06 03:46:38,881 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9acf0e0>
2024-06-06 03:46:38,923 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=3524)
           2	RESUME(arg=0, lineno=3524)
           4	LOAD_GLOBAL(arg=1, lineno=3525)
          14	LOAD_FAST(arg=0, lineno=3525)
          16	CALL(arg=1, lineno=3525)
          24	STORE_FAST(arg=2, lineno=3525)
          26	LOAD_GLOBAL(arg=3, lineno=3526)
          36	LOAD_FAST(arg=2, lineno=3526)
          38	CALL(arg=1, lineno=3526)
          46	GET_ITER(arg=None, lineno=3526)
>         48	FOR_ITER(arg=39, lineno=3526)
          52	STORE_FAST(arg=3, lineno=3526)
          54	LOAD_FAST(arg=0, lineno=3527)
          56	LOAD_FAST(arg=3, lineno=3527)
          58	BINARY_SUBSCR(arg=None, lineno=3527)
          62	LOAD_FAST(arg=1, lineno=3527)
          64	LOAD_GLOBAL(arg=1, lineno=3527)
          74	LOAD_FAST(arg=1, lineno=3527)
          76	CALL(arg=1, lineno=3527)
          84	LOAD_FAST(arg=2, lineno=3527)
          86	BINARY_OP(arg=10, lineno=3527)
          90	LOAD_FAST(arg=3, lineno=3527)
          92	BINARY_OP(arg=0, lineno=3527)
          96	BINARY_SUBSCR(arg=None, lineno=3527)
         100	COMPARE_OP(arg=55, lineno=3527)
         104	POP_JUMP_IF_TRUE(arg=1, lineno=3527)
         106	JUMP_BACKWARD(arg=30, lineno=3527)
>        108	LOAD_GLOBAL(arg=5, lineno=3528)
         118	LOAD_CONST(arg=1, lineno=3528)
         120	CALL(arg=1, lineno=3528)
         128	RAISE_VARARGS(arg=1, lineno=3528)
>        130	END_FOR(arg=None, lineno=3526)
         132	RETURN_CONST(arg=0, lineno=3526)
2024-06-06 03:46:38,923 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:38,924 - DEBUG - stack: []
2024-06-06 03:46:38,924 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:38,924 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=3524)
2024-06-06 03:46:38,924 - DEBUG - stack []
2024-06-06 03:46:38,924 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=3524)
2024-06-06 03:46:38,924 - DEBUG - stack []
2024-06-06 03:46:38,924 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=3525)
2024-06-06 03:46:38,924 - DEBUG - stack []
2024-06-06 03:46:38,924 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=3525)
2024-06-06 03:46:38,925 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:38,925 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=3525)
2024-06-06 03:46:38,925 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$shape14.2']
2024-06-06 03:46:38,925 - DEBUG - dispatch pc=24, inst=STORE_FAST(arg=2, lineno=3525)
2024-06-06 03:46:38,925 - DEBUG - stack ['$16call.3']
2024-06-06 03:46:38,925 - DEBUG - dispatch pc=26, inst=LOAD_GLOBAL(arg=3, lineno=3526)
2024-06-06 03:46:38,925 - DEBUG - stack []
2024-06-06 03:46:38,925 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=3526)
2024-06-06 03:46:38,925 - DEBUG - stack ['$null$26.5', '$26load_global.4']
2024-06-06 03:46:38,925 - DEBUG - dispatch pc=38, inst=CALL(arg=1, lineno=3526)
2024-06-06 03:46:38,926 - DEBUG - stack ['$null$26.5', '$26load_global.4', '$n36.6']
2024-06-06 03:46:38,926 - DEBUG - dispatch pc=46, inst=GET_ITER(arg=None, lineno=3526)
2024-06-06 03:46:38,926 - DEBUG - stack ['$38call.7']
2024-06-06 03:46:38,926 - DEBUG - end state. edges=[Edge(pc=48, stack=('$46get_iter.8',), blockstack=(), npush=0)]
2024-06-06 03:46:38,926 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=1)])
2024-06-06 03:46:38,926 - DEBUG - stack: ['$phi48.0']
2024-06-06 03:46:38,926 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=1)
2024-06-06 03:46:38,926 - DEBUG - dispatch pc=48, inst=FOR_ITER(arg=39, lineno=3526)
2024-06-06 03:46:38,927 - DEBUG - stack ['$phi48.0']
2024-06-06 03:46:38,927 - DEBUG - end state. edges=[Edge(pc=130, stack=('$phi48.0', '$48for_iter.2'), blockstack=(), npush=0), Edge(pc=52, stack=('$phi48.0', '$48for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:38,927 - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=2), State(pc_initial=52 nstack_initial=2)])
2024-06-06 03:46:38,927 - DEBUG - stack: ['$phi130.0', '$phi130.1']
2024-06-06 03:46:38,927 - DEBUG - state.pc_initial: State(pc_initial=130 nstack_initial=2)
2024-06-06 03:46:38,927 - DEBUG - dispatch pc=130, inst=END_FOR(arg=None, lineno=3526)
2024-06-06 03:46:38,927 - DEBUG - stack ['$phi130.0', '$phi130.1']
2024-06-06 03:46:38,927 - DEBUG - dispatch pc=132, inst=RETURN_CONST(arg=0, lineno=3526)
2024-06-06 03:46:38,927 - DEBUG - stack []
2024-06-06 03:46:38,927 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,927 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=2)])
2024-06-06 03:46:38,927 - DEBUG - stack: ['$phi52.0', '$phi52.1']
2024-06-06 03:46:38,928 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=2)
2024-06-06 03:46:38,928 - DEBUG - dispatch pc=52, inst=STORE_FAST(arg=3, lineno=3526)
2024-06-06 03:46:38,928 - DEBUG - stack ['$phi52.0', '$phi52.1']
2024-06-06 03:46:38,928 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=3527)
2024-06-06 03:46:38,928 - DEBUG - stack ['$phi52.0']
2024-06-06 03:46:38,928 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=3, lineno=3527)
2024-06-06 03:46:38,928 - DEBUG - stack ['$phi52.0', '$shape54.2']
2024-06-06 03:46:38,928 - DEBUG - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=3527)
2024-06-06 03:46:38,928 - DEBUG - stack ['$phi52.0', '$shape54.2', '$i56.3']
2024-06-06 03:46:38,928 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=3527)
2024-06-06 03:46:38,928 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4']
2024-06-06 03:46:38,928 - DEBUG - dispatch pc=64, inst=LOAD_GLOBAL(arg=1, lineno=3527)
2024-06-06 03:46:38,928 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5']
2024-06-06 03:46:38,929 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=3527)
2024-06-06 03:46:38,929 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$null$64.7', '$64load_global.6']
2024-06-06 03:46:38,929 - DEBUG - dispatch pc=76, inst=CALL(arg=1, lineno=3527)
2024-06-06 03:46:38,929 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$null$64.7', '$64load_global.6', '$main_shape74.8']
2024-06-06 03:46:38,929 - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=2, lineno=3527)
2024-06-06 03:46:38,929 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$76call.9']
2024-06-06 03:46:38,929 - DEBUG - dispatch pc=86, inst=BINARY_OP(arg=10, lineno=3527)
2024-06-06 03:46:38,929 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$76call.9', '$n84.10']
2024-06-06 03:46:38,929 - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=3, lineno=3527)
2024-06-06 03:46:38,929 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$binop_sub86.11']
2024-06-06 03:46:38,929 - DEBUG - dispatch pc=92, inst=BINARY_OP(arg=0, lineno=3527)
2024-06-06 03:46:38,929 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$binop_sub86.11', '$i90.12']
2024-06-06 03:46:38,929 - DEBUG - dispatch pc=96, inst=BINARY_SUBSCR(arg=None, lineno=3527)
2024-06-06 03:46:38,930 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$binop_add92.13']
2024-06-06 03:46:38,930 - DEBUG - dispatch pc=100, inst=COMPARE_OP(arg=55, lineno=3527)
2024-06-06 03:46:38,930 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$96binary_subscr.14']
2024-06-06 03:46:38,930 - DEBUG - dispatch pc=104, inst=POP_JUMP_IF_TRUE(arg=1, lineno=3527)
2024-06-06 03:46:38,930 - DEBUG - stack ['$phi52.0', '$100compare_op.15']
2024-06-06 03:46:38,930 - DEBUG - end state. edges=[Edge(pc=106, stack=('$phi52.0',), blockstack=(), npush=0), Edge(pc=108, stack=('$phi52.0',), blockstack=(), npush=0)]
2024-06-06 03:46:38,930 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=1), State(pc_initial=108 nstack_initial=1)])
2024-06-06 03:46:38,930 - DEBUG - stack: ['$phi106.0']
2024-06-06 03:46:38,930 - DEBUG - state.pc_initial: State(pc_initial=106 nstack_initial=1)
2024-06-06 03:46:38,930 - DEBUG - dispatch pc=106, inst=JUMP_BACKWARD(arg=30, lineno=3527)
2024-06-06 03:46:38,930 - DEBUG - stack ['$phi106.0']
2024-06-06 03:46:38,930 - DEBUG - end state. edges=[Edge(pc=48, stack=('$phi106.0',), blockstack=(), npush=0)]
2024-06-06 03:46:38,931 - DEBUG - pending: deque([State(pc_initial=108 nstack_initial=1), State(pc_initial=48 nstack_initial=1)])
2024-06-06 03:46:38,931 - DEBUG - stack: ['$phi108.0']
2024-06-06 03:46:38,931 - DEBUG - state.pc_initial: State(pc_initial=108 nstack_initial=1)
2024-06-06 03:46:38,931 - DEBUG - dispatch pc=108, inst=LOAD_GLOBAL(arg=5, lineno=3528)
2024-06-06 03:46:38,931 - DEBUG - stack ['$phi108.0']
2024-06-06 03:46:38,931 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=1, lineno=3528)
2024-06-06 03:46:38,931 - DEBUG - stack ['$phi108.0', '$null$108.2', '$108load_global.1']
2024-06-06 03:46:38,931 - DEBUG - dispatch pc=120, inst=CALL(arg=1, lineno=3528)
2024-06-06 03:46:38,931 - DEBUG - stack ['$phi108.0', '$null$108.2', '$108load_global.1', '$const118.3']
2024-06-06 03:46:38,931 - DEBUG - dispatch pc=128, inst=RAISE_VARARGS(arg=1, lineno=3528)
2024-06-06 03:46:38,931 - DEBUG - stack ['$phi108.0', '$120call.4']
2024-06-06 03:46:38,931 - DEBUG - end state. edges=[]
2024-06-06 03:46:38,931 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=1)])
2024-06-06 03:46:38,932 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:38,932 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=1): {'$phi48.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=106 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=1): set(),
             State(pc_initial=130 nstack_initial=2): set()})
2024-06-06 03:46:38,932 - DEBUG - defmap: {'$phi130.1': State(pc_initial=48 nstack_initial=1),
 '$phi48.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=48 nstack_initial=1)}
2024-06-06 03:46:38,932 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi106.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi108.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi130.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi130.1': {('$48for_iter.2',
                            State(pc_initial=48 nstack_initial=1))},
             '$phi48.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi106.0',
                           State(pc_initial=106 nstack_initial=1))},
             '$phi52.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi52.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
2024-06-06 03:46:38,932 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi106.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi108.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi130.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi106.0',
                            State(pc_initial=106 nstack_initial=1))},
             '$phi130.1': {('$48for_iter.2',
                            State(pc_initial=48 nstack_initial=1))},
             '$phi48.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi52.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
2024-06-06 03:46:38,933 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi106.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi108.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi130.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi130.1': {('$48for_iter.2',
                            State(pc_initial=48 nstack_initial=1))},
             '$phi48.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
2024-06-06 03:46:38,933 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi106.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi108.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi130.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi130.1': {('$48for_iter.2',
                            State(pc_initial=48 nstack_initial=1))},
             '$phi48.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
2024-06-06 03:46:38,934 - DEBUG - keep phismap: {'$phi48.0': {('$46get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$48for_iter.2', State(pc_initial=48 nstack_initial=1))}}
2024-06-06 03:46:38,934 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi48.0': '$46get_iter.8'},
             State(pc_initial=48 nstack_initial=1): {'$phi52.1': '$48for_iter.2'}})
2024-06-06 03:46:38,934 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:38,934 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$shape14.2'}), (16, {'func': '$4load_global.0', 'args': ['$shape14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'value': '$16call.3'}), (26, {'idx': 1, 'res': '$26load_global.4'}), (36, {'res': '$n36.6'}), (38, {'func': '$26load_global.4', 'args': ['$n36.6'], 'kw_names': None, 'res': '$38call.7'}), (46, {'value': '$38call.7', 'res': '$46get_iter.8'})), outgoing_phis={'$phi48.0': '$46get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$46get_iter.8',)})
2024-06-06 03:46:38,934 - DEBUG - block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'iterator': '$phi48.0', 'pair': '$48for_iter.1', 'indval': '$48for_iter.2', 'pred': '$48for_iter.3'}),), outgoing_phis={'$phi52.1': '$48for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ('$phi48.0', '$48for_iter.2'), 52: ('$phi48.0', '$48for_iter.2')})
2024-06-06 03:46:38,934 - DEBUG - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$shape54.2'}), (56, {'res': '$i56.3'}), (58, {'index': '$i56.3', 'target': '$shape54.2', 'res': '$58binary_subscr.4'}), (62, {'res': '$main_shape62.5'}), (64, {'idx': 0, 'res': '$64load_global.6'}), (74, {'res': '$main_shape74.8'}), (76, {'func': '$64load_global.6', 'args': ['$main_shape74.8'], 'kw_names': None, 'res': '$76call.9'}), (84, {'res': '$n84.10'}), (86, {'op': '-', 'lhs': '$76call.9', 'rhs': '$n84.10', 'res': '$binop_sub86.11'}), (90, {'res': '$i90.12'}), (92, {'op': '+', 'lhs': '$binop_sub86.11', 'rhs': '$i90.12', 'res': '$binop_add92.13'}), (96, {'index': '$binop_add92.13', 'target': '$main_shape62.5', 'res': '$96binary_subscr.14'}), (100, {'lhs': '$58binary_subscr.4', 'rhs': '$96binary_subscr.14', 'res': '$100compare_op.15'}), (104, {'pred': '$100compare_op.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ('$phi52.0',), 108: ('$phi52.0',)})
2024-06-06 03:46:38,934 - DEBUG - block_infos State(pc_initial=106 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$phi106.0',)})
2024-06-06 03:46:38,934 - DEBUG - block_infos State(pc_initial=108 nstack_initial=1):
AdaptBlockInfo(insts=((108, {'idx': 2, 'res': '$108load_global.1'}), (118, {'res': '$const118.3'}), (120, {'func': '$108load_global.1', 'args': ['$const118.3'], 'kw_names': None, 'res': '$120call.4'}), (128, {'exc': '$120call.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,935 - DEBUG - block_infos State(pc_initial=130 nstack_initial=2):
AdaptBlockInfo(insts=((132, {'retval': '$const132.2', 'castval': '$132return_const.3'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:38,936 - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $4load_global.0 = global(len: <built-in function len>) ['$4load_global.0']
    n = call $4load_global.0(shape, func=$4load_global.0, args=[Var(shape, arrayobj.py:3524)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', 'n', 'shape']
    $26load_global.4 = global(range: <class 'range'>) ['$26load_global.4']
    $38call.7 = call $26load_global.4(n, func=$26load_global.4, args=[Var(n, arrayobj.py:3525)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_global.4', '$38call.7', 'n']
    $46get_iter.8 = getiter(value=$38call.7) ['$38call.7', '$46get_iter.8']
    $phi48.0 = $46get_iter.8                 ['$46get_iter.8', '$phi48.0']
    jump 48                                  []
label 48:
    $48for_iter.1 = iternext(value=$phi48.0) ['$48for_iter.1', '$phi48.0']
    $48for_iter.2 = pair_first(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.2']
    $48for_iter.3 = pair_second(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.3']
    $phi52.1 = $48for_iter.2                 ['$48for_iter.2', '$phi52.1']
    branch $48for_iter.3, 52, 130            ['$48for_iter.3']
label 52:
    i = $phi52.1                             ['$phi52.1', 'i']
    $58binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$58binary_subscr.4', 'i', 'shape']
    $64load_global.6 = global(len: <built-in function len>) ['$64load_global.6']
    $76call.9 = call $64load_global.6(main_shape, func=$64load_global.6, args=[Var(main_shape, arrayobj.py:3524)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_global.6', '$76call.9', 'main_shape']
    $binop_sub86.11 = $76call.9 - n          ['$76call.9', '$binop_sub86.11', 'n']
    $binop_add92.13 = $binop_sub86.11 + i    ['$binop_add92.13', '$binop_sub86.11', 'i']
    $96binary_subscr.14 = getitem(value=main_shape, index=$binop_add92.13, fn=<built-in function getitem>) ['$96binary_subscr.14', '$binop_add92.13', 'main_shape']
    $100compare_op.15 = $58binary_subscr.4 != $96binary_subscr.14 ['$100compare_op.15', '$58binary_subscr.4', '$96binary_subscr.14']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($100compare_op.15, func=bool104, args=(Var($100compare_op.15, arrayobj.py:3527),), kws=(), vararg=None, varkwarg=None, target=None) ['$100compare_op.15', '$104pred', 'bool104']
    branch $104pred, 108, 106                ['$104pred']
label 106:
    jump 48                                  []
label 108:
    $108load_global.1 = global(ValueError: <class 'ValueError'>) ['$108load_global.1']
    $const118.3 = const(str, nditer(): operands could not be broadcast together) ['$const118.3']
    $120call.4 = call $108load_global.1($const118.3, func=$108load_global.1, args=[Var($const118.3, arrayobj.py:3528)], kws=(), vararg=None, varkwarg=None, target=None) ['$108load_global.1', '$120call.4', '$const118.3']
    raise $120call.4                         ['$120call.4']
label 130:
    $const132.2 = const(NoneType, None)      ['$const132.2']
    $132return_const.3 = cast(value=$const132.2) ['$132return_const.3', '$const132.2']
    return $132return_const.3                ['$132return_const.3']

2024-06-06 03:46:38,943 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:38,943 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9d8a720>
2024-06-06 03:46:38,943 - DEBUG - on stmt: shape = arg(0, name=shape)
2024-06-06 03:46:38,943 - DEBUG - on stmt: main_shape = arg(1, name=main_shape)
2024-06-06 03:46:38,944 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2024-06-06 03:46:38,944 - DEBUG - on stmt: n = const(int, 1)
2024-06-06 03:46:38,944 - DEBUG - on stmt: $26load_global.4 = global(range: <class 'range'>)
2024-06-06 03:46:38,944 - DEBUG - on stmt: $38call.7 = call $26load_global.4(n, func=$26load_global.4, args=[Var(n, arrayobj.py:3525)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,944 - DEBUG - on stmt: $46get_iter.8 = getiter(value=$38call.7)
2024-06-06 03:46:38,944 - DEBUG - on stmt: $phi48.0 = $46get_iter.8
2024-06-06 03:46:38,944 - DEBUG - on stmt: jump 48
2024-06-06 03:46:38,944 - DEBUG - ==== SSA block analysis pass on 48
2024-06-06 03:46:38,944 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9d8a720>
2024-06-06 03:46:38,944 - DEBUG - on stmt: $48for_iter.1 = iternext(value=$phi48.0)
2024-06-06 03:46:38,945 - DEBUG - on stmt: $48for_iter.2 = pair_first(value=$48for_iter.1)
2024-06-06 03:46:38,945 - DEBUG - on stmt: $48for_iter.3 = pair_second(value=$48for_iter.1)
2024-06-06 03:46:38,945 - DEBUG - on stmt: $phi52.1 = $48for_iter.2
2024-06-06 03:46:38,945 - DEBUG - on stmt: branch $48for_iter.3, 52, 130
2024-06-06 03:46:38,945 - DEBUG - ==== SSA block analysis pass on 52
2024-06-06 03:46:38,945 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9d8a720>
2024-06-06 03:46:38,945 - DEBUG - on stmt: i = $phi52.1
2024-06-06 03:46:38,945 - DEBUG - on stmt: $58binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
2024-06-06 03:46:38,945 - DEBUG - on stmt: $64load_global.6 = global(len: <built-in function len>)
2024-06-06 03:46:38,945 - DEBUG - on stmt: $76call.9 = const(int, 1)
2024-06-06 03:46:38,945 - DEBUG - on stmt: $binop_sub86.11 = $76call.9 - n
2024-06-06 03:46:38,946 - DEBUG - on stmt: $binop_add92.13 = $binop_sub86.11 + i
2024-06-06 03:46:38,946 - DEBUG - on stmt: $96binary_subscr.14 = getitem(value=main_shape, index=$binop_add92.13, fn=<built-in function getitem>)
2024-06-06 03:46:38,946 - DEBUG - on stmt: $100compare_op.15 = $58binary_subscr.4 != $96binary_subscr.14
2024-06-06 03:46:38,946 - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
2024-06-06 03:46:38,946 - DEBUG - on stmt: $104pred = call bool104($100compare_op.15, func=bool104, args=(Var($100compare_op.15, arrayobj.py:3527),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,946 - DEBUG - on stmt: branch $104pred, 108, 106
2024-06-06 03:46:38,946 - DEBUG - ==== SSA block analysis pass on 106
2024-06-06 03:46:38,946 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9d8a720>
2024-06-06 03:46:38,946 - DEBUG - on stmt: jump 48
2024-06-06 03:46:38,946 - DEBUG - ==== SSA block analysis pass on 108
2024-06-06 03:46:38,946 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9d8a720>
2024-06-06 03:46:38,946 - DEBUG - on stmt: $108load_global.1 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:38,946 - DEBUG - on stmt: $const118.3 = const(str, nditer(): operands could not be broadcast together)
2024-06-06 03:46:38,947 - DEBUG - on stmt: $120call.4 = call $108load_global.1($const118.3, func=$108load_global.1, args=[Var($const118.3, arrayobj.py:3528)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:38,947 - DEBUG - on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
2024-06-06 03:46:38,947 - DEBUG - ==== SSA block analysis pass on 130
2024-06-06 03:46:38,947 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9d8a720>
2024-06-06 03:46:38,947 - DEBUG - on stmt: $const132.2 = const(NoneType, None)
2024-06-06 03:46:38,947 - DEBUG - on stmt: $132return_const.3 = cast(value=$const132.2)
2024-06-06 03:46:38,947 - DEBUG - on stmt: return $132return_const.3
2024-06-06 03:46:38,948 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100compare_op.15': [(<numba.core.ir.Assign object at 0x7fe9b9d89100>,
                                    52)],
             '$104pred': [(<numba.core.ir.Assign object at 0x7fe9b9d89280>,
                           52)],
             '$108load_global.1': [(<numba.core.ir.Assign object at 0x7fe9b9d89550>,
                                    108)],
             '$120call.4': [(<numba.core.ir.Assign object at 0x7fe9b9d89c10>,
                             108)],
             '$132return_const.3': [(<numba.core.ir.Assign object at 0x7fe9b9d89700>,
                                     130)],
             '$26load_global.4': [(<numba.core.ir.Assign object at 0x7fe9b9d89640>,
                                   0)],
             '$38call.7': [(<numba.core.ir.Assign object at 0x7fe9b9d8b5f0>,
                            0)],
             '$46get_iter.8': [(<numba.core.ir.Assign object at 0x7fe9b9d8b6b0>,
                                0)],
             '$48for_iter.1': [(<numba.core.ir.Assign object at 0x7fe9b9d8b8c0>,
                                48)],
             '$48for_iter.2': [(<numba.core.ir.Assign object at 0x7fe9b9d8b9b0>,
                                48)],
             '$48for_iter.3': [(<numba.core.ir.Assign object at 0x7fe9b9d89a60>,
                                48)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9d89bb0>,
                                  0)],
             '$58binary_subscr.4': [(<numba.core.ir.Assign object at 0x7fe9b9d8a420>,
                                     52)],
             '$64load_global.6': [(<numba.core.ir.Assign object at 0x7fe9b9d8a630>,
                                   52)],
             '$76call.9': [(<numba.core.ir.Assign object at 0x7fe9b9d8a900>,
                            52)],
             '$96binary_subscr.14': [(<numba.core.ir.Assign object at 0x7fe9b9d89e20>,
                                      52)],
             '$binop_add92.13': [(<numba.core.ir.Assign object at 0x7fe9b9d8b2f0>,
                                  52)],
             '$binop_sub86.11': [(<numba.core.ir.Assign object at 0x7fe9b9d8ac30>,
                                  52)],
             '$const118.3': [(<numba.core.ir.Assign object at 0x7fe9b9d89910>,
                              108)],
             '$const132.2': [(<numba.core.ir.Assign object at 0x7fe9b9d88e30>,
                              130)],
             '$phi48.0': [(<numba.core.ir.Assign object at 0x7fe9b9d8bd40>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x7fe9b9d8baa0>,
                           48)],
             'bool104': [(<numba.core.ir.Assign object at 0x7fe9b9d891f0>, 52)],
             'i': [(<numba.core.ir.Assign object at 0x7fe9b9d89be0>, 52)],
             'main_shape': [(<numba.core.ir.Assign object at 0x7fe9b9d8a510>,
                             0)],
             'n': [(<numba.core.ir.Assign object at 0x7fe9b9d8bd10>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7fe9b9d89040>, 0)]})
2024-06-06 03:46:38,948 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d244de20>
2024-06-06 03:46:39,072 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          20	LOAD_ATTR(arg=2, lineno=441)
          40	LOAD_FAST(arg=0, lineno=441)
          42	CALL(arg=1, lineno=441)
          50	GET_ITER(arg=None, lineno=441)
>         52	FOR_ITER(arg=21, lineno=441)
          56	STORE_FAST(arg=2, lineno=441)
          58	LOAD_FAST(arg=1, lineno=442)
          60	LOAD_FAST(arg=2, lineno=442)
          62	LOAD_ATTR(arg=5, lineno=442)
          82	CALL(arg=0, lineno=442)
          90	BINARY_OP(arg=13, lineno=442)
          94	STORE_FAST(arg=1, lineno=442)
          96	JUMP_BACKWARD(arg=23, lineno=442)
>         98	END_FOR(arg=None, lineno=441)
         100	LOAD_FAST(arg=1, lineno=443)
         102	LOAD_FAST(arg=0, lineno=443)
         104	LOAD_ATTR(arg=6, lineno=443)
         124	BINARY_OP(arg=11, lineno=443)
         128	RETURN_VALUE(arg=None, lineno=443)
2024-06-06 03:46:39,072 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:39,072 - DEBUG - stack: []
2024-06-06 03:46:39,073 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:39,073 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-06-06 03:46:39,073 - DEBUG - stack []
2024-06-06 03:46:39,073 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-06-06 03:46:39,073 - DEBUG - stack []
2024-06-06 03:46:39,073 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-06-06 03:46:39,074 - DEBUG - stack []
2024-06-06 03:46:39,074 - DEBUG - dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-06-06 03:46:39,074 - DEBUG - stack []
2024-06-06 03:46:39,074 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-06-06 03:46:39,074 - DEBUG - stack ['$6load_deref.0']
2024-06-06 03:46:39,074 - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-06-06 03:46:39,075 - DEBUG - stack []
2024-06-06 03:46:39,075 - DEBUG - dispatch pc=20, inst=LOAD_ATTR(arg=2, lineno=441)
2024-06-06 03:46:39,075 - DEBUG - stack ['$null$10.2', '$10load_global.1']
2024-06-06 03:46:39,075 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=441)
2024-06-06 03:46:39,075 - DEBUG - stack ['$null$10.2', '$20load_attr.3']
2024-06-06 03:46:39,075 - DEBUG - dispatch pc=42, inst=CALL(arg=1, lineno=441)
2024-06-06 03:46:39,075 - DEBUG - stack ['$null$10.2', '$20load_attr.3', '$a40.4']
2024-06-06 03:46:39,075 - DEBUG - dispatch pc=50, inst=GET_ITER(arg=None, lineno=441)
2024-06-06 03:46:39,076 - DEBUG - stack ['$42call.5']
2024-06-06 03:46:39,076 - DEBUG - end state. edges=[Edge(pc=52, stack=('$50get_iter.6',), blockstack=(), npush=0)]
2024-06-06 03:46:39,076 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=1)])
2024-06-06 03:46:39,076 - DEBUG - stack: ['$phi52.0']
2024-06-06 03:46:39,076 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=1)
2024-06-06 03:46:39,076 - DEBUG - dispatch pc=52, inst=FOR_ITER(arg=21, lineno=441)
2024-06-06 03:46:39,076 - DEBUG - stack ['$phi52.0']
2024-06-06 03:46:39,076 - DEBUG - end state. edges=[Edge(pc=98, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0), Edge(pc=56, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:39,077 - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=2), State(pc_initial=56 nstack_initial=2)])
2024-06-06 03:46:39,077 - DEBUG - stack: ['$phi98.0', '$phi98.1']
2024-06-06 03:46:39,077 - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=2)
2024-06-06 03:46:39,077 - DEBUG - dispatch pc=98, inst=END_FOR(arg=None, lineno=441)
2024-06-06 03:46:39,077 - DEBUG - stack ['$phi98.0', '$phi98.1']
2024-06-06 03:46:39,077 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=1, lineno=443)
2024-06-06 03:46:39,077 - DEBUG - stack []
2024-06-06 03:46:39,077 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=443)
2024-06-06 03:46:39,077 - DEBUG - stack ['$c100.2']
2024-06-06 03:46:39,078 - DEBUG - dispatch pc=104, inst=LOAD_ATTR(arg=6, lineno=443)
2024-06-06 03:46:39,078 - DEBUG - stack ['$c100.2', '$a102.3']
2024-06-06 03:46:39,078 - DEBUG - dispatch pc=124, inst=BINARY_OP(arg=11, lineno=443)
2024-06-06 03:46:39,078 - DEBUG - stack ['$c100.2', '$104load_attr.4']
2024-06-06 03:46:39,078 - DEBUG - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=443)
2024-06-06 03:46:39,078 - DEBUG - stack ['$binop_truediv124.5']
2024-06-06 03:46:39,078 - DEBUG - end state. edges=[]
2024-06-06 03:46:39,078 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=2)])
2024-06-06 03:46:39,079 - DEBUG - stack: ['$phi56.0', '$phi56.1']
2024-06-06 03:46:39,079 - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=2)
2024-06-06 03:46:39,079 - DEBUG - dispatch pc=56, inst=STORE_FAST(arg=2, lineno=441)
2024-06-06 03:46:39,079 - DEBUG - stack ['$phi56.0', '$phi56.1']
2024-06-06 03:46:39,079 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=442)
2024-06-06 03:46:39,079 - DEBUG - stack ['$phi56.0']
2024-06-06 03:46:39,079 - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=2, lineno=442)
2024-06-06 03:46:39,079 - DEBUG - stack ['$phi56.0', '$c58.2']
2024-06-06 03:46:39,079 - DEBUG - dispatch pc=62, inst=LOAD_ATTR(arg=5, lineno=442)
2024-06-06 03:46:39,080 - DEBUG - stack ['$phi56.0', '$c58.2', '$v60.3']
2024-06-06 03:46:39,080 - DEBUG - dispatch pc=82, inst=CALL(arg=0, lineno=442)
2024-06-06 03:46:39,080 - DEBUG - stack ['$phi56.0', '$c58.2', '$null$62.4', '$62load_attr.5']
2024-06-06 03:46:39,080 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=13, lineno=442)
2024-06-06 03:46:39,080 - DEBUG - stack ['$phi56.0', '$c58.2', '$82call.6']
2024-06-06 03:46:39,080 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=1, lineno=442)
2024-06-06 03:46:39,080 - DEBUG - stack ['$phi56.0', '$binop_iadd90.7']
2024-06-06 03:46:39,080 - DEBUG - dispatch pc=96, inst=JUMP_BACKWARD(arg=23, lineno=442)
2024-06-06 03:46:39,080 - DEBUG - stack ['$phi56.0']
2024-06-06 03:46:39,081 - DEBUG - end state. edges=[Edge(pc=52, stack=('$phi56.0',), blockstack=(), npush=0)]
2024-06-06 03:46:39,081 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=1)])
2024-06-06 03:46:39,081 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:39,081 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=1): {'$phi52.0'},
             State(pc_initial=56 nstack_initial=2): {'$phi56.1'},
             State(pc_initial=98 nstack_initial=2): set()})
2024-06-06 03:46:39,081 - DEBUG - defmap: {'$phi52.0': State(pc_initial=0 nstack_initial=0),
 '$phi56.1': State(pc_initial=52 nstack_initial=1),
 '$phi98.1': State(pc_initial=52 nstack_initial=1)}
2024-06-06 03:46:39,082 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi56.0', State(pc_initial=56 nstack_initial=2))},
             '$phi56.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:39,082 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:39,083 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:39,084 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:39,085 - DEBUG - keep phismap: {'$phi52.0': {('$50get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi56.1': {('$52for_iter.2', State(pc_initial=52 nstack_initial=1))}}
2024-06-06 03:46:39,085 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi52.0': '$50get_iter.6'},
             State(pc_initial=52 nstack_initial=1): {'$phi56.1': '$52for_iter.2'}})
2024-06-06 03:46:39,085 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:39,085 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (20, {'item': '$10load_global.1', 'res': '$20load_attr.3'}), (40, {'res': '$a40.4'}), (42, {'func': '$20load_attr.3', 'args': ['$a40.4'], 'kw_names': None, 'res': '$42call.5'}), (50, {'value': '$42call.5', 'res': '$50get_iter.6'})), outgoing_phis={'$phi52.0': '$50get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$50get_iter.6',)})
2024-06-06 03:46:39,085 - DEBUG - block_infos State(pc_initial=52 nstack_initial=1):
AdaptBlockInfo(insts=((52, {'iterator': '$phi52.0', 'pair': '$52for_iter.1', 'indval': '$52for_iter.2', 'pred': '$52for_iter.3'}),), outgoing_phis={'$phi56.1': '$52for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi52.0', '$52for_iter.2'), 56: ('$phi52.0', '$52for_iter.2')})
2024-06-06 03:46:39,086 - DEBUG - block_infos State(pc_initial=56 nstack_initial=2):
AdaptBlockInfo(insts=((56, {'value': '$phi56.1'}), (58, {'res': '$c58.2'}), (60, {'res': '$v60.3'}), (62, {'item': '$v60.3', 'res': '$62load_attr.5'}), (82, {'func': '$62load_attr.5', 'args': [], 'kw_names': None, 'res': '$82call.6'}), (90, {'op': '+=', 'lhs': '$c58.2', 'rhs': '$82call.6', 'res': '$binop_iadd90.7'}), (94, {'value': '$binop_iadd90.7'}), (96, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$phi56.0',)})
2024-06-06 03:46:39,086 - DEBUG - block_infos State(pc_initial=98 nstack_initial=2):
AdaptBlockInfo(insts=((100, {'res': '$c100.2'}), (102, {'res': '$a102.3'}), (104, {'item': '$a102.3', 'res': '$104load_attr.4'}), (124, {'op': '/', 'lhs': '$c100.2', 'rhs': '$104load_attr.4', 'res': '$binop_truediv124.5'}), (128, {'retval': '$binop_truediv124.5', 'castval': '$128return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:39,087 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$10load_global.1']
    $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$20load_attr.3']
    $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_attr.3', '$42call.5', 'a']
    $50get_iter.6 = getiter(value=$42call.5) ['$42call.5', '$50get_iter.6']
    $phi52.0 = $50get_iter.6                 ['$50get_iter.6', '$phi52.0']
    jump 52                                  []
label 52:
    $52for_iter.1 = iternext(value=$phi52.0) ['$52for_iter.1', '$phi52.0']
    $52for_iter.2 = pair_first(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.2']
    $52for_iter.3 = pair_second(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.3']
    $phi56.1 = $52for_iter.2                 ['$52for_iter.2', '$phi56.1']
    branch $52for_iter.3, 56, 98             ['$52for_iter.3']
label 56:
    v = $phi56.1                             ['$phi56.1', 'v']
    $62load_attr.5 = getattr(value=v, attr=item) ['$62load_attr.5', 'v']
    $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$62load_attr.5', '$82call.6']
    $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined) ['$82call.6', '$binop_iadd90.7', 'c']
    c = $binop_iadd90.7                      ['$binop_iadd90.7', 'c']
    jump 52                                  []
label 98:
    $104load_attr.4 = getattr(value=a, attr=size) ['$104load_attr.4', 'a']
    $binop_truediv124.5 = c / $104load_attr.4 ['$104load_attr.4', '$binop_truediv124.5', 'c']
    $128return_value.6 = cast(value=$binop_truediv124.5) ['$128return_value.6', '$binop_truediv124.5']
    return $128return_value.6                ['$128return_value.6']

2024-06-06 03:46:39,093 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:39,094 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2141610>
2024-06-06 03:46:39,094 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:39,094 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-06 03:46:39,094 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,094 - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-06 03:46:39,094 - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,094 - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2024-06-06 03:46:39,094 - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2024-06-06 03:46:39,094 - DEBUG - on stmt: jump 52
2024-06-06 03:46:39,094 - DEBUG - ==== SSA block analysis pass on 52
2024-06-06 03:46:39,094 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2141610>
2024-06-06 03:46:39,094 - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2024-06-06 03:46:39,095 - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2024-06-06 03:46:39,095 - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2024-06-06 03:46:39,095 - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2024-06-06 03:46:39,095 - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2024-06-06 03:46:39,095 - DEBUG - ==== SSA block analysis pass on 56
2024-06-06 03:46:39,095 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2141610>
2024-06-06 03:46:39,095 - DEBUG - on stmt: v = $phi56.1
2024-06-06 03:46:39,095 - DEBUG - on stmt: $62load_attr.5 = getattr(value=v, attr=item)
2024-06-06 03:46:39,095 - DEBUG - on stmt: $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,095 - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,095 - DEBUG - on stmt: c = $binop_iadd90.7
2024-06-06 03:46:39,095 - DEBUG - on stmt: jump 52
2024-06-06 03:46:39,095 - DEBUG - ==== SSA block analysis pass on 98
2024-06-06 03:46:39,096 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2141610>
2024-06-06 03:46:39,096 - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2024-06-06 03:46:39,096 - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:39,096 - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2024-06-06 03:46:39,096 - DEBUG - on stmt: return $128return_value.6
2024-06-06 03:46:39,097 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104load_attr.4': [(<numba.core.ir.Assign object at 0x7fe9b9a6b3b0>,
                                  98)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x7fe9b95be360>,
                                   0)],
             '$128return_value.6': [(<numba.core.ir.Assign object at 0x7fe9b9a6b230>,
                                     98)],
             '$20load_attr.3': [(<numba.core.ir.Assign object at 0x7fe9b95bfe60>,
                                 0)],
             '$42call.5': [(<numba.core.ir.Assign object at 0x7fe9b95bcec0>,
                            0)],
             '$50get_iter.6': [(<numba.core.ir.Assign object at 0x7fe9b95bc5c0>,
                                0)],
             '$52for_iter.1': [(<numba.core.ir.Assign object at 0x7fe9b95bce00>,
                                52)],
             '$52for_iter.2': [(<numba.core.ir.Assign object at 0x7fe9b95bd070>,
                                52)],
             '$52for_iter.3': [(<numba.core.ir.Assign object at 0x7fe9d1fd96a0>,
                                52)],
             '$62load_attr.5': [(<numba.core.ir.Assign object at 0x7fe9b9a6bbf0>,
                                 56)],
             '$82call.6': [(<numba.core.ir.Assign object at 0x7fe9b9a6a960>,
                            56)],
             '$binop_iadd90.7': [(<numba.core.ir.Assign object at 0x7fe9b9a6b290>,
                                  56)],
             '$binop_truediv124.5': [(<numba.core.ir.Assign object at 0x7fe9b9a6b6e0>,
                                      98)],
             '$phi52.0': [(<numba.core.ir.Assign object at 0x7fe9b95bec30>, 0)],
             '$phi56.1': [(<numba.core.ir.Assign object at 0x7fe9d1fd8e60>,
                           52)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9d2142ea0>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7fe9b95bfd70>, 0),
                   (<numba.core.ir.Assign object at 0x7fe9b9a6a840>, 56)],
             'v': [(<numba.core.ir.Assign object at 0x7fe9d1fd8650>, 56)]})
2024-06-06 03:46:39,097 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d2141610>
2024-06-06 03:46:39,097 - DEBUG - Fix SSA violator on var c
2024-06-06 03:46:39,097 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:39,097 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d21fae70>
2024-06-06 03:46:39,098 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:39,098 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-06 03:46:39,098 - DEBUG - first assign: c
2024-06-06 03:46:39,098 - DEBUG - replaced with: c = freevar(acc_init: 0.0)
2024-06-06 03:46:39,098 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,098 - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-06 03:46:39,098 - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,098 - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2024-06-06 03:46:39,098 - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2024-06-06 03:46:39,098 - DEBUG - on stmt: jump 52
2024-06-06 03:46:39,098 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-06 03:46:39,098 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d21fae70>
2024-06-06 03:46:39,098 - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2024-06-06 03:46:39,098 - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2024-06-06 03:46:39,099 - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2024-06-06 03:46:39,099 - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2024-06-06 03:46:39,099 - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2024-06-06 03:46:39,099 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:39,099 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d21fae70>
2024-06-06 03:46:39,099 - DEBUG - on stmt: v = $phi56.1
2024-06-06 03:46:39,099 - DEBUG - on stmt: $62load_attr.5 = getattr(value=v, attr=item)
2024-06-06 03:46:39,099 - DEBUG - on stmt: $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,099 - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,099 - DEBUG - on stmt: c = $binop_iadd90.7
2024-06-06 03:46:39,100 - DEBUG - replaced with: c.1 = $binop_iadd90.7
2024-06-06 03:46:39,100 - DEBUG - on stmt: jump 52
2024-06-06 03:46:39,100 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-06 03:46:39,100 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d21fae70>
2024-06-06 03:46:39,100 - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2024-06-06 03:46:39,100 - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:39,100 - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2024-06-06 03:46:39,100 - DEBUG - on stmt: return $128return_value.6
2024-06-06 03:46:39,100 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fe9d21fa030>],
             56: [<numba.core.ir.Assign object at 0x7fe9d21f9a00>]})
2024-06-06 03:46:39,100 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:39,100 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d21fae70>
2024-06-06 03:46:39,100 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:39,101 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-06 03:46:39,101 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,101 - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-06 03:46:39,101 - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,101 - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2024-06-06 03:46:39,101 - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2024-06-06 03:46:39,101 - DEBUG - on stmt: jump 52
2024-06-06 03:46:39,101 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-06 03:46:39,101 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d21fae70>
2024-06-06 03:46:39,101 - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2024-06-06 03:46:39,101 - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2024-06-06 03:46:39,102 - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2024-06-06 03:46:39,102 - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2024-06-06 03:46:39,102 - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2024-06-06 03:46:39,102 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:39,102 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d21fae70>
2024-06-06 03:46:39,102 - DEBUG - on stmt: v = $phi56.1
2024-06-06 03:46:39,102 - DEBUG - on stmt: $62load_attr.5 = getattr(value=v, attr=item)
2024-06-06 03:46:39,102 - DEBUG - on stmt: $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,102 - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,102 - DEBUG - find_def var='c' stmt=$binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,102 - DEBUG - find_def_from_top label 56
2024-06-06 03:46:39,102 - DEBUG - idom 52 from label 56
2024-06-06 03:46:39,102 - DEBUG - find_def_from_bottom label 52
2024-06-06 03:46:39,103 - DEBUG - find_def_from_top label 52
2024-06-06 03:46:39,103 - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 52
2024-06-06 03:46:39,103 - DEBUG - find_def_from_bottom label 0
2024-06-06 03:46:39,103 - DEBUG - incoming_def c = freevar(acc_init: 0.0)
2024-06-06 03:46:39,103 - DEBUG - find_def_from_bottom label 56
2024-06-06 03:46:39,103 - DEBUG - incoming_def c.1 = $binop_iadd90.7
2024-06-06 03:46:39,103 - DEBUG - replaced with: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,103 - DEBUG - on stmt: c.1 = $binop_iadd90.7
2024-06-06 03:46:39,103 - DEBUG - on stmt: jump 52
2024-06-06 03:46:39,103 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-06 03:46:39,103 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d21fae70>
2024-06-06 03:46:39,103 - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2024-06-06 03:46:39,104 - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:39,104 - DEBUG - find_def var='c' stmt=$binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:39,104 - DEBUG - find_def_from_top label 98
2024-06-06 03:46:39,104 - DEBUG - idom 52 from label 98
2024-06-06 03:46:39,104 - DEBUG - find_def_from_bottom label 52
2024-06-06 03:46:39,104 - DEBUG - replaced with: $binop_truediv124.5 = c.2 / $104load_attr.4
2024-06-06 03:46:39,104 - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2024-06-06 03:46:39,104 - DEBUG - on stmt: return $128return_value.6
2024-06-06 03:46:39,410 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          12	LOAD_GLOBAL(arg=1, lineno=1221)
          22	LOAD_ATTR(arg=2, lineno=1221)
          42	LOAD_FAST(arg=0, lineno=1221)
          44	LOAD_CONST(arg=2, lineno=1221)
          46	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=6, lineno=1221)
          80	LOAD_CONST(arg=1, lineno=1221)
          82	BINARY_SUBSCR(arg=None, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          94	BINARY_SLICE(arg=None, lineno=1221)
          96	CALL(arg=1, lineno=1221)
         104	COMPARE_OP(arg=92, lineno=1221)
         108	LOAD_FAST(arg=7, lineno=1221)
         110	LOAD_CONST(arg=1, lineno=1221)
         112	STORE_SUBSCR(arg=None, lineno=1221)
         116	LOAD_FAST(arg=7, lineno=1222)
         118	LOAD_CONST(arg=1, lineno=1222)
         120	COPY(arg=2, lineno=1222)
         122	COPY(arg=2, lineno=1222)
         124	BINARY_SUBSCR(arg=None, lineno=1222)
         128	LOAD_FAST(arg=0, lineno=1222)
         130	LOAD_CONST(arg=1, lineno=1222)
         132	BINARY_SUBSCR(arg=None, lineno=1222)
         136	LOAD_GLOBAL(arg=1, lineno=1222)
         146	LOAD_ATTR(arg=8, lineno=1222)
         166	LOAD_FAST(arg=0, lineno=1222)
         168	LOAD_CONST(arg=2, lineno=1222)
         170	LOAD_GLOBAL(arg=5, lineno=1222)
         180	LOAD_FAST(arg=4, lineno=1222)
         182	LOAD_FAST(arg=0, lineno=1222)
         184	LOAD_ATTR(arg=6, lineno=1222)
         204	LOAD_CONST(arg=1, lineno=1222)
         206	BINARY_SUBSCR(arg=None, lineno=1222)
         210	CALL(arg=2, lineno=1222)
         218	BINARY_SLICE(arg=None, lineno=1222)
         220	CALL(arg=1, lineno=1222)
         228	LOAD_FAST(arg=5, lineno=1222)
         230	BINARY_OP(arg=0, lineno=1222)
         234	COMPARE_OP(arg=92, lineno=1222)
         238	BINARY_OP(arg=14, lineno=1222)
         242	SWAP(arg=3, lineno=1222)
         244	SWAP(arg=2, lineno=1222)
         246	STORE_SUBSCR(arg=None, lineno=1222)
         250	LOAD_FAST(arg=7, lineno=1224)
         252	LOAD_CONST(arg=1, lineno=1224)
         254	BINARY_SUBSCR(arg=None, lineno=1224)
         258	POP_JUMP_IF_FALSE(arg=6, lineno=1224)
         260	LOAD_FAST(arg=6, lineno=1225)
         262	LOAD_CONST(arg=3, lineno=1225)
         264	BINARY_OP(arg=0, lineno=1225)
         268	STORE_FAST(arg=8, lineno=1225)
         270	JUMP_FORWARD(arg=2, lineno=1225)
>        272	LOAD_CONST(arg=3, lineno=1227)
         274	STORE_FAST(arg=8, lineno=1227)
>        276	LOAD_FAST(arg=8, lineno=1229)
         278	LOAD_FAST(arg=0, lineno=1229)
         280	LOAD_ATTR(arg=6, lineno=1229)
         300	LOAD_CONST(arg=1, lineno=1229)
         302	BINARY_SUBSCR(arg=None, lineno=1229)
         306	COMPARE_OP(arg=2, lineno=1229)
         310	POP_JUMP_IF_FALSE(arg=209, lineno=1229)
>        312	LOAD_GLOBAL(arg=1, lineno=1230)
         322	LOAD_ATTR(arg=2, lineno=1230)
         342	LOAD_FAST(arg=0, lineno=1230)
         344	LOAD_GLOBAL(arg=3, lineno=1230)
         354	LOAD_CONST(arg=1, lineno=1230)
         356	LOAD_FAST(arg=8, lineno=1230)
         358	LOAD_FAST(arg=1, lineno=1230)
         360	BINARY_OP(arg=10, lineno=1230)
         364	CALL(arg=2, lineno=1230)
         372	LOAD_GLOBAL(arg=5, lineno=1230)
         382	LOAD_FAST(arg=8, lineno=1230)
         384	LOAD_FAST(arg=2, lineno=1230)
         386	BINARY_OP(arg=0, lineno=1230)
         390	LOAD_FAST(arg=0, lineno=1230)
         392	LOAD_ATTR(arg=6, lineno=1230)
         412	LOAD_CONST(arg=1, lineno=1230)
         414	BINARY_SUBSCR(arg=None, lineno=1230)
         418	CALL(arg=2, lineno=1230)
         426	BINARY_SLICE(arg=None, lineno=1230)
         428	CALL(arg=1, lineno=1230)
         436	STORE_FAST(arg=9, lineno=1230)
         438	LOAD_FAST(arg=0, lineno=1233)
         440	LOAD_FAST(arg=8, lineno=1233)
         442	BINARY_SUBSCR(arg=None, lineno=1233)
         446	LOAD_FAST(arg=9, lineno=1233)
         448	COMPARE_OP(arg=40, lineno=1233)
         452	LOAD_FAST(arg=7, lineno=1233)
         454	LOAD_FAST(arg=8, lineno=1233)
         456	STORE_SUBSCR(arg=None, lineno=1233)
         460	LOAD_FAST(arg=7, lineno=1235)
         462	LOAD_FAST(arg=8, lineno=1235)
         464	BINARY_SUBSCR(arg=None, lineno=1235)
         468	POP_JUMP_IF_TRUE(arg=6, lineno=1235)
         470	LOAD_FAST(arg=8, lineno=1236)
         472	LOAD_CONST(arg=3, lineno=1236)
         474	BINARY_OP(arg=13, lineno=1236)
         478	STORE_FAST(arg=8, lineno=1236)
         480	JUMP_BACKWARD(arg=103, lineno=1237)
>        482	LOAD_GLOBAL(arg=1, lineno=1239)
         492	LOAD_ATTR(arg=8, lineno=1239)
         512	LOAD_FAST(arg=0, lineno=1239)
         514	LOAD_GLOBAL(arg=3, lineno=1239)
         524	LOAD_CONST(arg=1, lineno=1239)
         526	LOAD_FAST(arg=8, lineno=1239)
         528	LOAD_FAST(arg=3, lineno=1239)
         530	BINARY_OP(arg=10, lineno=1239)
         534	CALL(arg=2, lineno=1239)
         542	LOAD_GLOBAL(arg=5, lineno=1239)
         552	LOAD_FAST(arg=8, lineno=1239)
         554	LOAD_FAST(arg=4, lineno=1239)
         556	BINARY_OP(arg=0, lineno=1239)
         560	LOAD_FAST(arg=0, lineno=1239)
         562	LOAD_ATTR(arg=6, lineno=1239)
         582	LOAD_CONST(arg=1, lineno=1239)
         584	BINARY_SUBSCR(arg=None, lineno=1239)
         588	CALL(arg=2, lineno=1239)
         596	BINARY_SLICE(arg=None, lineno=1239)
         598	CALL(arg=1, lineno=1239)
         606	STORE_FAST(arg=10, lineno=1239)
         608	LOAD_FAST(arg=7, lineno=1240)
         610	LOAD_FAST(arg=8, lineno=1240)
         612	COPY(arg=2, lineno=1240)
         614	COPY(arg=2, lineno=1240)
         616	BINARY_SUBSCR(arg=None, lineno=1240)
         620	LOAD_FAST(arg=0, lineno=1240)
         622	LOAD_FAST(arg=8, lineno=1240)
         624	BINARY_SUBSCR(arg=None, lineno=1240)
         628	LOAD_FAST(arg=10, lineno=1240)
         630	LOAD_FAST(arg=5, lineno=1240)
         632	BINARY_OP(arg=0, lineno=1240)
         636	COMPARE_OP(arg=92, lineno=1240)
         640	BINARY_OP(arg=14, lineno=1240)
         644	SWAP(arg=3, lineno=1240)
         646	SWAP(arg=2, lineno=1240)
         648	STORE_SUBSCR(arg=None, lineno=1240)
         652	LOAD_FAST(arg=7, lineno=1242)
         654	LOAD_FAST(arg=8, lineno=1242)
         656	BINARY_SUBSCR(arg=None, lineno=1242)
         660	POP_JUMP_IF_TRUE(arg=6, lineno=1242)
         662	LOAD_FAST(arg=8, lineno=1243)
         664	LOAD_CONST(arg=3, lineno=1243)
         666	BINARY_OP(arg=13, lineno=1243)
         670	STORE_FAST(arg=8, lineno=1243)
         672	JUMP_BACKWARD(arg=199, lineno=1244)
>        674	LOAD_FAST(arg=8, lineno=1247)
         676	LOAD_FAST(arg=6, lineno=1247)
         678	LOAD_CONST(arg=3, lineno=1247)
         680	BINARY_OP(arg=0, lineno=1247)
         684	BINARY_OP(arg=13, lineno=1247)
         688	STORE_FAST(arg=8, lineno=1247)
         690	LOAD_FAST(arg=8, lineno=1229)
         692	LOAD_FAST(arg=0, lineno=1229)
         694	LOAD_ATTR(arg=6, lineno=1229)
         714	LOAD_CONST(arg=1, lineno=1229)
         716	BINARY_SUBSCR(arg=None, lineno=1229)
         720	COMPARE_OP(arg=2, lineno=1229)
         724	POP_JUMP_IF_FALSE(arg=1, lineno=1229)
         726	JUMP_BACKWARD(arg=208, lineno=1229)
>        728	RETURN_CONST(arg=2, lineno=1229)
>        730	RETURN_CONST(arg=2, lineno=1229)
2024-06-06 03:46:39,410 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:39,410 - DEBUG - stack: []
2024-06-06 03:46:39,411 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:39,411 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-06-06 03:46:39,411 - DEBUG - stack []
2024-06-06 03:46:39,411 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-06-06 03:46:39,411 - DEBUG - stack []
2024-06-06 03:46:39,411 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-06 03:46:39,411 - DEBUG - stack []
2024-06-06 03:46:39,411 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-06 03:46:39,411 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:39,411 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-06 03:46:39,412 - DEBUG - stack ['$x4.0', '$const6.1']
2024-06-06 03:46:39,412 - DEBUG - dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-06-06 03:46:39,412 - DEBUG - stack ['$8binary_subscr.2']
2024-06-06 03:46:39,412 - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=2, lineno=1221)
2024-06-06 03:46:39,412 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$12load_global.3']
2024-06-06 03:46:39,412 - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-06 03:46:39,412 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5']
2024-06-06 03:46:39,412 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=1221)
2024-06-06 03:46:39,412 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6']
2024-06-06 03:46:39,413 - DEBUG - dispatch pc=46, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-06-06 03:46:39,413 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7']
2024-06-06 03:46:39,413 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-06-06 03:46:39,413 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8']
2024-06-06 03:46:39,413 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-06 03:46:39,413 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10']
2024-06-06 03:46:39,413 - DEBUG - dispatch pc=60, inst=LOAD_ATTR(arg=6, lineno=1221)
2024-06-06 03:46:39,413 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$x58.11']
2024-06-06 03:46:39,413 - DEBUG - dispatch pc=80, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-06 03:46:39,413 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$60load_attr.12']
2024-06-06 03:46:39,413 - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-06 03:46:39,413 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$60load_attr.12', '$const80.13']
2024-06-06 03:46:39,414 - DEBUG - dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-06-06 03:46:39,414 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$82binary_subscr.14']
2024-06-06 03:46:39,414 - DEBUG - dispatch pc=94, inst=BINARY_SLICE(arg=None, lineno=1221)
2024-06-06 03:46:39,414 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$86call.15']
2024-06-06 03:46:39,414 - DEBUG - dispatch pc=96, inst=CALL(arg=1, lineno=1221)
2024-06-06 03:46:39,414 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$94binary_slice.17']
2024-06-06 03:46:39,414 - DEBUG - dispatch pc=104, inst=COMPARE_OP(arg=92, lineno=1221)
2024-06-06 03:46:39,414 - DEBUG - stack ['$8binary_subscr.2', '$96call.19']
2024-06-06 03:46:39,414 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=7, lineno=1221)
2024-06-06 03:46:39,414 - DEBUG - stack ['$104compare_op.20']
2024-06-06 03:46:39,414 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-06 03:46:39,414 - DEBUG - stack ['$104compare_op.20', '$peaks108.21']
2024-06-06 03:46:39,415 - DEBUG - dispatch pc=112, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-06-06 03:46:39,415 - DEBUG - stack ['$104compare_op.20', '$peaks108.21', '$const110.22']
2024-06-06 03:46:39,415 - DEBUG - dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=1222)
2024-06-06 03:46:39,415 - DEBUG - stack []
2024-06-06 03:46:39,415 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-06 03:46:39,415 - DEBUG - stack ['$peaks116.23']
2024-06-06 03:46:39,415 - DEBUG - dispatch pc=120, inst=COPY(arg=2, lineno=1222)
2024-06-06 03:46:39,415 - DEBUG - stack ['$peaks116.23', '$const118.24']
2024-06-06 03:46:39,415 - DEBUG - dispatch pc=122, inst=COPY(arg=2, lineno=1222)
2024-06-06 03:46:39,415 - DEBUG - stack ['$peaks116.23', '$const118.24', '$peaks116.23']
2024-06-06 03:46:39,415 - DEBUG - dispatch pc=124, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:39,415 - DEBUG - stack ['$peaks116.23', '$const118.24', '$peaks116.23', '$const118.24']
2024-06-06 03:46:39,416 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-06 03:46:39,416 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25']
2024-06-06 03:46:39,416 - DEBUG - dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-06 03:46:39,416 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$x128.26']
2024-06-06 03:46:39,416 - DEBUG - dispatch pc=132, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:39,416 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$x128.26', '$const130.27']
2024-06-06 03:46:39,416 - DEBUG - dispatch pc=136, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-06-06 03:46:39,416 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28']
2024-06-06 03:46:39,416 - DEBUG - dispatch pc=146, inst=LOAD_ATTR(arg=8, lineno=1222)
2024-06-06 03:46:39,416 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$136load_global.29']
2024-06-06 03:46:39,416 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-06 03:46:39,416 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31']
2024-06-06 03:46:39,417 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=1222)
2024-06-06 03:46:39,417 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32']
2024-06-06 03:46:39,417 - DEBUG - dispatch pc=170, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-06-06 03:46:39,417 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33']
2024-06-06 03:46:39,417 - DEBUG - dispatch pc=180, inst=LOAD_FAST(arg=4, lineno=1222)
2024-06-06 03:46:39,417 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34']
2024-06-06 03:46:39,417 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-06 03:46:39,417 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36']
2024-06-06 03:46:39,417 - DEBUG - dispatch pc=184, inst=LOAD_ATTR(arg=6, lineno=1222)
2024-06-06 03:46:39,418 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$x182.37']
2024-06-06 03:46:39,418 - DEBUG - dispatch pc=204, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-06 03:46:39,418 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$184load_attr.38']
2024-06-06 03:46:39,418 - DEBUG - dispatch pc=206, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:39,418 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$184load_attr.38', '$const204.39']
2024-06-06 03:46:39,418 - DEBUG - dispatch pc=210, inst=CALL(arg=2, lineno=1222)
2024-06-06 03:46:39,418 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$206binary_subscr.40']
2024-06-06 03:46:39,418 - DEBUG - dispatch pc=218, inst=BINARY_SLICE(arg=None, lineno=1222)
2024-06-06 03:46:39,419 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$210call.41']
2024-06-06 03:46:39,419 - DEBUG - dispatch pc=220, inst=CALL(arg=1, lineno=1222)
2024-06-06 03:46:39,419 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$218binary_slice.43']
2024-06-06 03:46:39,419 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=1222)
2024-06-06 03:46:39,419 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$220call.45']
2024-06-06 03:46:39,419 - DEBUG - dispatch pc=230, inst=BINARY_OP(arg=0, lineno=1222)
2024-06-06 03:46:39,419 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$220call.45', '$delta228.46']
2024-06-06 03:46:39,419 - DEBUG - dispatch pc=234, inst=COMPARE_OP(arg=92, lineno=1222)
2024-06-06 03:46:39,419 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$binop_add230.47']
2024-06-06 03:46:39,419 - DEBUG - dispatch pc=238, inst=BINARY_OP(arg=14, lineno=1222)
2024-06-06 03:46:39,420 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$234compare_op.48']
2024-06-06 03:46:39,420 - DEBUG - dispatch pc=242, inst=SWAP(arg=3, lineno=1222)
2024-06-06 03:46:39,420 - DEBUG - stack ['$peaks116.23', '$const118.24', '$binop_iand238.49']
2024-06-06 03:46:39,420 - DEBUG - dispatch pc=244, inst=SWAP(arg=2, lineno=1222)
2024-06-06 03:46:39,420 - DEBUG - stack ['$binop_iand238.49', '$const118.24', '$peaks116.23']
2024-06-06 03:46:39,420 - DEBUG - dispatch pc=246, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:39,420 - DEBUG - stack ['$binop_iand238.49', '$peaks116.23', '$const118.24']
2024-06-06 03:46:39,421 - DEBUG - dispatch pc=250, inst=LOAD_FAST(arg=7, lineno=1224)
2024-06-06 03:46:39,421 - DEBUG - stack []
2024-06-06 03:46:39,421 - DEBUG - dispatch pc=252, inst=LOAD_CONST(arg=1, lineno=1224)
2024-06-06 03:46:39,421 - DEBUG - stack ['$peaks250.50']
2024-06-06 03:46:39,421 - DEBUG - dispatch pc=254, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-06-06 03:46:39,421 - DEBUG - stack ['$peaks250.50', '$const252.51']
2024-06-06 03:46:39,421 - DEBUG - dispatch pc=258, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1224)
2024-06-06 03:46:39,421 - DEBUG - stack ['$254binary_subscr.52']
2024-06-06 03:46:39,421 - DEBUG - end state. edges=[Edge(pc=260, stack=(), blockstack=(), npush=0), Edge(pc=272, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:39,422 - DEBUG - pending: deque([State(pc_initial=260 nstack_initial=0), State(pc_initial=272 nstack_initial=0)])
2024-06-06 03:46:39,422 - DEBUG - stack: []
2024-06-06 03:46:39,422 - DEBUG - state.pc_initial: State(pc_initial=260 nstack_initial=0)
2024-06-06 03:46:39,422 - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=6, lineno=1225)
2024-06-06 03:46:39,422 - DEBUG - stack []
2024-06-06 03:46:39,422 - DEBUG - dispatch pc=262, inst=LOAD_CONST(arg=3, lineno=1225)
2024-06-06 03:46:39,422 - DEBUG - stack ['$wait260.0']
2024-06-06 03:46:39,422 - DEBUG - dispatch pc=264, inst=BINARY_OP(arg=0, lineno=1225)
2024-06-06 03:46:39,422 - DEBUG - stack ['$wait260.0', '$const262.1']
2024-06-06 03:46:39,423 - DEBUG - dispatch pc=268, inst=STORE_FAST(arg=8, lineno=1225)
2024-06-06 03:46:39,423 - DEBUG - stack ['$binop_add264.2']
2024-06-06 03:46:39,423 - DEBUG - dispatch pc=270, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-06-06 03:46:39,423 - DEBUG - stack []
2024-06-06 03:46:39,423 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:39,423 - DEBUG - pending: deque([State(pc_initial=272 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:39,423 - DEBUG - stack: []
2024-06-06 03:46:39,423 - DEBUG - state.pc_initial: State(pc_initial=272 nstack_initial=0)
2024-06-06 03:46:39,423 - DEBUG - dispatch pc=272, inst=LOAD_CONST(arg=3, lineno=1227)
2024-06-06 03:46:39,423 - DEBUG - stack []
2024-06-06 03:46:39,424 - DEBUG - dispatch pc=274, inst=STORE_FAST(arg=8, lineno=1227)
2024-06-06 03:46:39,424 - DEBUG - stack ['$const272.0']
2024-06-06 03:46:39,424 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:39,424 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:39,424 - DEBUG - stack: []
2024-06-06 03:46:39,424 - DEBUG - state.pc_initial: State(pc_initial=276 nstack_initial=0)
2024-06-06 03:46:39,424 - DEBUG - dispatch pc=276, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-06 03:46:39,424 - DEBUG - stack []
2024-06-06 03:46:39,424 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-06 03:46:39,424 - DEBUG - stack ['$n276.0']
2024-06-06 03:46:39,425 - DEBUG - dispatch pc=280, inst=LOAD_ATTR(arg=6, lineno=1229)
2024-06-06 03:46:39,425 - DEBUG - stack ['$n276.0', '$x278.1']
2024-06-06 03:46:39,425 - DEBUG - dispatch pc=300, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-06 03:46:39,425 - DEBUG - stack ['$n276.0', '$280load_attr.2']
2024-06-06 03:46:39,425 - DEBUG - dispatch pc=302, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-06 03:46:39,425 - DEBUG - stack ['$n276.0', '$280load_attr.2', '$const300.3']
2024-06-06 03:46:39,425 - DEBUG - dispatch pc=306, inst=COMPARE_OP(arg=2, lineno=1229)
2024-06-06 03:46:39,425 - DEBUG - stack ['$n276.0', '$302binary_subscr.4']
2024-06-06 03:46:39,425 - DEBUG - dispatch pc=310, inst=POP_JUMP_IF_FALSE(arg=209, lineno=1229)
2024-06-06 03:46:39,426 - DEBUG - stack ['$306compare_op.5']
2024-06-06 03:46:39,426 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=730, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:39,426 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=312 nstack_initial=0), State(pc_initial=730 nstack_initial=0)])
2024-06-06 03:46:39,426 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=730 nstack_initial=0)])
2024-06-06 03:46:39,426 - DEBUG - stack: []
2024-06-06 03:46:39,426 - DEBUG - state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-06-06 03:46:39,426 - DEBUG - dispatch pc=312, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-06-06 03:46:39,426 - DEBUG - stack []
2024-06-06 03:46:39,426 - DEBUG - dispatch pc=322, inst=LOAD_ATTR(arg=2, lineno=1230)
2024-06-06 03:46:39,427 - DEBUG - stack ['$null$312.1', '$312load_global.0']
2024-06-06 03:46:39,427 - DEBUG - dispatch pc=342, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-06 03:46:39,427 - DEBUG - stack ['$null$312.1', '$322load_attr.2']
2024-06-06 03:46:39,427 - DEBUG - dispatch pc=344, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-06-06 03:46:39,427 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3']
2024-06-06 03:46:39,427 - DEBUG - dispatch pc=354, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-06 03:46:39,427 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4']
2024-06-06 03:46:39,427 - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-06 03:46:39,427 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6']
2024-06-06 03:46:39,428 - DEBUG - dispatch pc=358, inst=LOAD_FAST(arg=1, lineno=1230)
2024-06-06 03:46:39,428 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6', '$n356.7']
2024-06-06 03:46:39,428 - DEBUG - dispatch pc=360, inst=BINARY_OP(arg=10, lineno=1230)
2024-06-06 03:46:39,428 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6', '$n356.7', '$pre_max358.8']
2024-06-06 03:46:39,428 - DEBUG - dispatch pc=364, inst=CALL(arg=2, lineno=1230)
2024-06-06 03:46:39,428 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6', '$binop_sub360.9']
2024-06-06 03:46:39,428 - DEBUG - dispatch pc=372, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-06-06 03:46:39,428 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10']
2024-06-06 03:46:39,428 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-06 03:46:39,428 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11']
2024-06-06 03:46:39,429 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=2, lineno=1230)
2024-06-06 03:46:39,429 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$n382.13']
2024-06-06 03:46:39,429 - DEBUG - dispatch pc=386, inst=BINARY_OP(arg=0, lineno=1230)
2024-06-06 03:46:39,429 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$n382.13', '$post_max384.14']
2024-06-06 03:46:39,429 - DEBUG - dispatch pc=390, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-06 03:46:39,429 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15']
2024-06-06 03:46:39,429 - DEBUG - dispatch pc=392, inst=LOAD_ATTR(arg=6, lineno=1230)
2024-06-06 03:46:39,429 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$x390.16']
2024-06-06 03:46:39,429 - DEBUG - dispatch pc=412, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-06 03:46:39,429 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$392load_attr.17']
2024-06-06 03:46:39,430 - DEBUG - dispatch pc=414, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-06-06 03:46:39,430 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$392load_attr.17', '$const412.18']
2024-06-06 03:46:39,430 - DEBUG - dispatch pc=418, inst=CALL(arg=2, lineno=1230)
2024-06-06 03:46:39,430 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$414binary_subscr.19']
2024-06-06 03:46:39,430 - DEBUG - dispatch pc=426, inst=BINARY_SLICE(arg=None, lineno=1230)
2024-06-06 03:46:39,430 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$418call.20']
2024-06-06 03:46:39,430 - DEBUG - dispatch pc=428, inst=CALL(arg=1, lineno=1230)
2024-06-06 03:46:39,430 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$426binary_slice.22']
2024-06-06 03:46:39,431 - DEBUG - dispatch pc=436, inst=STORE_FAST(arg=9, lineno=1230)
2024-06-06 03:46:39,431 - DEBUG - stack ['$428call.24']
2024-06-06 03:46:39,431 - DEBUG - dispatch pc=438, inst=LOAD_FAST(arg=0, lineno=1233)
2024-06-06 03:46:39,431 - DEBUG - stack []
2024-06-06 03:46:39,431 - DEBUG - dispatch pc=440, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-06 03:46:39,431 - DEBUG - stack ['$x438.25']
2024-06-06 03:46:39,431 - DEBUG - dispatch pc=442, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-06-06 03:46:39,431 - DEBUG - stack ['$x438.25', '$n440.26']
2024-06-06 03:46:39,431 - DEBUG - dispatch pc=446, inst=LOAD_FAST(arg=9, lineno=1233)
2024-06-06 03:46:39,431 - DEBUG - stack ['$442binary_subscr.27']
2024-06-06 03:46:39,431 - DEBUG - dispatch pc=448, inst=COMPARE_OP(arg=40, lineno=1233)
2024-06-06 03:46:39,431 - DEBUG - stack ['$442binary_subscr.27', '$maxn446.28']
2024-06-06 03:46:39,431 - DEBUG - dispatch pc=452, inst=LOAD_FAST(arg=7, lineno=1233)
2024-06-06 03:46:39,432 - DEBUG - stack ['$448compare_op.29']
2024-06-06 03:46:39,432 - DEBUG - dispatch pc=454, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-06 03:46:39,432 - DEBUG - stack ['$448compare_op.29', '$peaks452.30']
2024-06-06 03:46:39,432 - DEBUG - dispatch pc=456, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-06-06 03:46:39,432 - DEBUG - stack ['$448compare_op.29', '$peaks452.30', '$n454.31']
2024-06-06 03:46:39,432 - DEBUG - dispatch pc=460, inst=LOAD_FAST(arg=7, lineno=1235)
2024-06-06 03:46:39,432 - DEBUG - stack []
2024-06-06 03:46:39,432 - DEBUG - dispatch pc=462, inst=LOAD_FAST(arg=8, lineno=1235)
2024-06-06 03:46:39,432 - DEBUG - stack ['$peaks460.32']
2024-06-06 03:46:39,432 - DEBUG - dispatch pc=464, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-06-06 03:46:39,433 - DEBUG - stack ['$peaks460.32', '$n462.33']
2024-06-06 03:46:39,433 - DEBUG - dispatch pc=468, inst=POP_JUMP_IF_TRUE(arg=6, lineno=1235)
2024-06-06 03:46:39,433 - DEBUG - stack ['$464binary_subscr.34']
2024-06-06 03:46:39,433 - DEBUG - end state. edges=[Edge(pc=470, stack=(), blockstack=(), npush=0), Edge(pc=482, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:39,433 - DEBUG - pending: deque([State(pc_initial=730 nstack_initial=0), State(pc_initial=470 nstack_initial=0), State(pc_initial=482 nstack_initial=0)])
2024-06-06 03:46:39,433 - DEBUG - stack: []
2024-06-06 03:46:39,433 - DEBUG - state.pc_initial: State(pc_initial=730 nstack_initial=0)
2024-06-06 03:46:39,433 - DEBUG - dispatch pc=730, inst=RETURN_CONST(arg=2, lineno=1229)
2024-06-06 03:46:39,433 - DEBUG - stack []
2024-06-06 03:46:39,433 - DEBUG - end state. edges=[]
2024-06-06 03:46:39,433 - DEBUG - pending: deque([State(pc_initial=470 nstack_initial=0), State(pc_initial=482 nstack_initial=0)])
2024-06-06 03:46:39,433 - DEBUG - stack: []
2024-06-06 03:46:39,434 - DEBUG - state.pc_initial: State(pc_initial=470 nstack_initial=0)
2024-06-06 03:46:39,434 - DEBUG - dispatch pc=470, inst=LOAD_FAST(arg=8, lineno=1236)
2024-06-06 03:46:39,434 - DEBUG - stack []
2024-06-06 03:46:39,434 - DEBUG - dispatch pc=472, inst=LOAD_CONST(arg=3, lineno=1236)
2024-06-06 03:46:39,434 - DEBUG - stack ['$n470.0']
2024-06-06 03:46:39,434 - DEBUG - dispatch pc=474, inst=BINARY_OP(arg=13, lineno=1236)
2024-06-06 03:46:39,434 - DEBUG - stack ['$n470.0', '$const472.1']
2024-06-06 03:46:39,434 - DEBUG - dispatch pc=478, inst=STORE_FAST(arg=8, lineno=1236)
2024-06-06 03:46:39,434 - DEBUG - stack ['$binop_iadd474.2']
2024-06-06 03:46:39,434 - DEBUG - dispatch pc=480, inst=JUMP_BACKWARD(arg=103, lineno=1237)
2024-06-06 03:46:39,434 - DEBUG - stack []
2024-06-06 03:46:39,434 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:39,434 - DEBUG - pending: deque([State(pc_initial=482 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:39,435 - DEBUG - stack: []
2024-06-06 03:46:39,435 - DEBUG - state.pc_initial: State(pc_initial=482 nstack_initial=0)
2024-06-06 03:46:39,435 - DEBUG - dispatch pc=482, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-06-06 03:46:39,435 - DEBUG - stack []
2024-06-06 03:46:39,435 - DEBUG - dispatch pc=492, inst=LOAD_ATTR(arg=8, lineno=1239)
2024-06-06 03:46:39,435 - DEBUG - stack ['$null$482.1', '$482load_global.0']
2024-06-06 03:46:39,435 - DEBUG - dispatch pc=512, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-06 03:46:39,435 - DEBUG - stack ['$null$482.1', '$492load_attr.2']
2024-06-06 03:46:39,435 - DEBUG - dispatch pc=514, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-06-06 03:46:39,435 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3']
2024-06-06 03:46:39,435 - DEBUG - dispatch pc=524, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-06 03:46:39,436 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4']
2024-06-06 03:46:39,436 - DEBUG - dispatch pc=526, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-06 03:46:39,436 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6']
2024-06-06 03:46:39,436 - DEBUG - dispatch pc=528, inst=LOAD_FAST(arg=3, lineno=1239)
2024-06-06 03:46:39,436 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6', '$n526.7']
2024-06-06 03:46:39,436 - DEBUG - dispatch pc=530, inst=BINARY_OP(arg=10, lineno=1239)
2024-06-06 03:46:39,436 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6', '$n526.7', '$pre_avg528.8']
2024-06-06 03:46:39,436 - DEBUG - dispatch pc=534, inst=CALL(arg=2, lineno=1239)
2024-06-06 03:46:39,436 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6', '$binop_sub530.9']
2024-06-06 03:46:39,436 - DEBUG - dispatch pc=542, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-06-06 03:46:39,436 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10']
2024-06-06 03:46:39,436 - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-06 03:46:39,436 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11']
2024-06-06 03:46:39,437 - DEBUG - dispatch pc=554, inst=LOAD_FAST(arg=4, lineno=1239)
2024-06-06 03:46:39,437 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$n552.13']
2024-06-06 03:46:39,437 - DEBUG - dispatch pc=556, inst=BINARY_OP(arg=0, lineno=1239)
2024-06-06 03:46:39,437 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$n552.13', '$post_avg554.14']
2024-06-06 03:46:39,437 - DEBUG - dispatch pc=560, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-06 03:46:39,437 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15']
2024-06-06 03:46:39,437 - DEBUG - dispatch pc=562, inst=LOAD_ATTR(arg=6, lineno=1239)
2024-06-06 03:46:39,437 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$x560.16']
2024-06-06 03:46:39,437 - DEBUG - dispatch pc=582, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-06 03:46:39,437 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$562load_attr.17']
2024-06-06 03:46:39,437 - DEBUG - dispatch pc=584, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-06-06 03:46:39,438 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$562load_attr.17', '$const582.18']
2024-06-06 03:46:39,438 - DEBUG - dispatch pc=588, inst=CALL(arg=2, lineno=1239)
2024-06-06 03:46:39,438 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$584binary_subscr.19']
2024-06-06 03:46:39,438 - DEBUG - dispatch pc=596, inst=BINARY_SLICE(arg=None, lineno=1239)
2024-06-06 03:46:39,438 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$588call.20']
2024-06-06 03:46:39,438 - DEBUG - dispatch pc=598, inst=CALL(arg=1, lineno=1239)
2024-06-06 03:46:39,438 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$596binary_slice.22']
2024-06-06 03:46:39,438 - DEBUG - dispatch pc=606, inst=STORE_FAST(arg=10, lineno=1239)
2024-06-06 03:46:39,438 - DEBUG - stack ['$598call.24']
2024-06-06 03:46:39,438 - DEBUG - dispatch pc=608, inst=LOAD_FAST(arg=7, lineno=1240)
2024-06-06 03:46:39,438 - DEBUG - stack []
2024-06-06 03:46:39,438 - DEBUG - dispatch pc=610, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-06 03:46:39,438 - DEBUG - stack ['$peaks608.25']
2024-06-06 03:46:39,439 - DEBUG - dispatch pc=612, inst=COPY(arg=2, lineno=1240)
2024-06-06 03:46:39,439 - DEBUG - stack ['$peaks608.25', '$n610.26']
2024-06-06 03:46:39,439 - DEBUG - dispatch pc=614, inst=COPY(arg=2, lineno=1240)
2024-06-06 03:46:39,439 - DEBUG - stack ['$peaks608.25', '$n610.26', '$peaks608.25']
2024-06-06 03:46:39,439 - DEBUG - dispatch pc=616, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-06 03:46:39,439 - DEBUG - stack ['$peaks608.25', '$n610.26', '$peaks608.25', '$n610.26']
2024-06-06 03:46:39,439 - DEBUG - dispatch pc=620, inst=LOAD_FAST(arg=0, lineno=1240)
2024-06-06 03:46:39,439 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27']
2024-06-06 03:46:39,439 - DEBUG - dispatch pc=622, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-06 03:46:39,439 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$x620.28']
2024-06-06 03:46:39,439 - DEBUG - dispatch pc=624, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-06 03:46:39,439 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$x620.28', '$n622.29']
2024-06-06 03:46:39,440 - DEBUG - dispatch pc=628, inst=LOAD_FAST(arg=10, lineno=1240)
2024-06-06 03:46:39,440 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30']
2024-06-06 03:46:39,440 - DEBUG - dispatch pc=630, inst=LOAD_FAST(arg=5, lineno=1240)
2024-06-06 03:46:39,440 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30', '$avgn628.31']
2024-06-06 03:46:39,440 - DEBUG - dispatch pc=632, inst=BINARY_OP(arg=0, lineno=1240)
2024-06-06 03:46:39,440 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30', '$avgn628.31', '$delta630.32']
2024-06-06 03:46:39,440 - DEBUG - dispatch pc=636, inst=COMPARE_OP(arg=92, lineno=1240)
2024-06-06 03:46:39,440 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30', '$binop_add632.33']
2024-06-06 03:46:39,440 - DEBUG - dispatch pc=640, inst=BINARY_OP(arg=14, lineno=1240)
2024-06-06 03:46:39,440 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$636compare_op.34']
2024-06-06 03:46:39,440 - DEBUG - dispatch pc=644, inst=SWAP(arg=3, lineno=1240)
2024-06-06 03:46:39,441 - DEBUG - stack ['$peaks608.25', '$n610.26', '$binop_iand640.35']
2024-06-06 03:46:39,441 - DEBUG - dispatch pc=646, inst=SWAP(arg=2, lineno=1240)
2024-06-06 03:46:39,441 - DEBUG - stack ['$binop_iand640.35', '$n610.26', '$peaks608.25']
2024-06-06 03:46:39,441 - DEBUG - dispatch pc=648, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-06-06 03:46:39,441 - DEBUG - stack ['$binop_iand640.35', '$peaks608.25', '$n610.26']
2024-06-06 03:46:39,441 - DEBUG - dispatch pc=652, inst=LOAD_FAST(arg=7, lineno=1242)
2024-06-06 03:46:39,441 - DEBUG - stack []
2024-06-06 03:46:39,441 - DEBUG - dispatch pc=654, inst=LOAD_FAST(arg=8, lineno=1242)
2024-06-06 03:46:39,441 - DEBUG - stack ['$peaks652.36']
2024-06-06 03:46:39,441 - DEBUG - dispatch pc=656, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-06-06 03:46:39,441 - DEBUG - stack ['$peaks652.36', '$n654.37']
2024-06-06 03:46:39,442 - DEBUG - dispatch pc=660, inst=POP_JUMP_IF_TRUE(arg=6, lineno=1242)
2024-06-06 03:46:39,442 - DEBUG - stack ['$656binary_subscr.38']
2024-06-06 03:46:39,442 - DEBUG - end state. edges=[Edge(pc=662, stack=(), blockstack=(), npush=0), Edge(pc=674, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:39,442 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=662 nstack_initial=0), State(pc_initial=674 nstack_initial=0)])
2024-06-06 03:46:39,442 - DEBUG - pending: deque([State(pc_initial=662 nstack_initial=0), State(pc_initial=674 nstack_initial=0)])
2024-06-06 03:46:39,442 - DEBUG - stack: []
2024-06-06 03:46:39,442 - DEBUG - state.pc_initial: State(pc_initial=662 nstack_initial=0)
2024-06-06 03:46:39,442 - DEBUG - dispatch pc=662, inst=LOAD_FAST(arg=8, lineno=1243)
2024-06-06 03:46:39,442 - DEBUG - stack []
2024-06-06 03:46:39,442 - DEBUG - dispatch pc=664, inst=LOAD_CONST(arg=3, lineno=1243)
2024-06-06 03:46:39,442 - DEBUG - stack ['$n662.0']
2024-06-06 03:46:39,442 - DEBUG - dispatch pc=666, inst=BINARY_OP(arg=13, lineno=1243)
2024-06-06 03:46:39,442 - DEBUG - stack ['$n662.0', '$const664.1']
2024-06-06 03:46:39,443 - DEBUG - dispatch pc=670, inst=STORE_FAST(arg=8, lineno=1243)
2024-06-06 03:46:39,443 - DEBUG - stack ['$binop_iadd666.2']
2024-06-06 03:46:39,443 - DEBUG - dispatch pc=672, inst=JUMP_BACKWARD(arg=199, lineno=1244)
2024-06-06 03:46:39,443 - DEBUG - stack []
2024-06-06 03:46:39,443 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:39,443 - DEBUG - pending: deque([State(pc_initial=674 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:39,443 - DEBUG - stack: []
2024-06-06 03:46:39,443 - DEBUG - state.pc_initial: State(pc_initial=674 nstack_initial=0)
2024-06-06 03:46:39,443 - DEBUG - dispatch pc=674, inst=LOAD_FAST(arg=8, lineno=1247)
2024-06-06 03:46:39,443 - DEBUG - stack []
2024-06-06 03:46:39,443 - DEBUG - dispatch pc=676, inst=LOAD_FAST(arg=6, lineno=1247)
2024-06-06 03:46:39,444 - DEBUG - stack ['$n674.0']
2024-06-06 03:46:39,444 - DEBUG - dispatch pc=678, inst=LOAD_CONST(arg=3, lineno=1247)
2024-06-06 03:46:39,444 - DEBUG - stack ['$n674.0', '$wait676.1']
2024-06-06 03:46:39,444 - DEBUG - dispatch pc=680, inst=BINARY_OP(arg=0, lineno=1247)
2024-06-06 03:46:39,444 - DEBUG - stack ['$n674.0', '$wait676.1', '$const678.2']
2024-06-06 03:46:39,444 - DEBUG - dispatch pc=684, inst=BINARY_OP(arg=13, lineno=1247)
2024-06-06 03:46:39,444 - DEBUG - stack ['$n674.0', '$binop_add680.3']
2024-06-06 03:46:39,444 - DEBUG - dispatch pc=688, inst=STORE_FAST(arg=8, lineno=1247)
2024-06-06 03:46:39,444 - DEBUG - stack ['$binop_iadd684.4']
2024-06-06 03:46:39,444 - DEBUG - dispatch pc=690, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-06 03:46:39,444 - DEBUG - stack []
2024-06-06 03:46:39,444 - DEBUG - dispatch pc=692, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-06 03:46:39,444 - DEBUG - stack ['$n690.5']
2024-06-06 03:46:39,445 - DEBUG - dispatch pc=694, inst=LOAD_ATTR(arg=6, lineno=1229)
2024-06-06 03:46:39,445 - DEBUG - stack ['$n690.5', '$x692.6']
2024-06-06 03:46:39,445 - DEBUG - dispatch pc=714, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-06 03:46:39,445 - DEBUG - stack ['$n690.5', '$694load_attr.7']
2024-06-06 03:46:39,445 - DEBUG - dispatch pc=716, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-06 03:46:39,445 - DEBUG - stack ['$n690.5', '$694load_attr.7', '$const714.8']
2024-06-06 03:46:39,445 - DEBUG - dispatch pc=720, inst=COMPARE_OP(arg=2, lineno=1229)
2024-06-06 03:46:39,445 - DEBUG - stack ['$n690.5', '$716binary_subscr.9']
2024-06-06 03:46:39,445 - DEBUG - dispatch pc=724, inst=POP_JUMP_IF_FALSE(arg=1, lineno=1229)
2024-06-06 03:46:39,445 - DEBUG - stack ['$720compare_op.10']
2024-06-06 03:46:39,445 - DEBUG - end state. edges=[Edge(pc=726, stack=(), blockstack=(), npush=0), Edge(pc=728, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:39,446 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=726 nstack_initial=0), State(pc_initial=728 nstack_initial=0)])
2024-06-06 03:46:39,446 - DEBUG - pending: deque([State(pc_initial=726 nstack_initial=0), State(pc_initial=728 nstack_initial=0)])
2024-06-06 03:46:39,446 - DEBUG - stack: []
2024-06-06 03:46:39,446 - DEBUG - state.pc_initial: State(pc_initial=726 nstack_initial=0)
2024-06-06 03:46:39,446 - DEBUG - dispatch pc=726, inst=JUMP_BACKWARD(arg=208, lineno=1229)
2024-06-06 03:46:39,446 - DEBUG - stack []
2024-06-06 03:46:39,446 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:39,446 - DEBUG - pending: deque([State(pc_initial=728 nstack_initial=0), State(pc_initial=312 nstack_initial=0)])
2024-06-06 03:46:39,446 - DEBUG - stack: []
2024-06-06 03:46:39,446 - DEBUG - state.pc_initial: State(pc_initial=728 nstack_initial=0)
2024-06-06 03:46:39,446 - DEBUG - dispatch pc=728, inst=RETURN_CONST(arg=2, lineno=1229)
2024-06-06 03:46:39,446 - DEBUG - stack []
2024-06-06 03:46:39,446 - DEBUG - end state. edges=[]
2024-06-06 03:46:39,447 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0)])
2024-06-06 03:46:39,447 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:39,447 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=260 nstack_initial=0): set(),
             State(pc_initial=272 nstack_initial=0): set(),
             State(pc_initial=276 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=470 nstack_initial=0): set(),
             State(pc_initial=482 nstack_initial=0): set(),
             State(pc_initial=662 nstack_initial=0): set(),
             State(pc_initial=674 nstack_initial=0): set(),
             State(pc_initial=726 nstack_initial=0): set(),
             State(pc_initial=728 nstack_initial=0): set(),
             State(pc_initial=730 nstack_initial=0): set()})
2024-06-06 03:46:39,447 - DEBUG - defmap: {}
2024-06-06 03:46:39,447 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:39,447 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:39,448 - DEBUG - keep phismap: {}
2024-06-06 03:46:39,448 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:39,448 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:39,448 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'idx': 0, 'res': '$12load_global.3'}), (22, {'item': '$12load_global.3', 'res': '$22load_attr.5'}), (42, {'res': '$x42.6'}), (44, {'res': '$const44.7'}), (46, {'idx': 2, 'res': '$46load_global.8'}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (80, {'res': '$const80.13'}), (82, {'index': '$const80.13', 'target': '$60load_attr.12', 'res': '$82binary_subscr.14'}), (86, {'func': '$46load_global.8', 'args': ['$post_max56.10', '$82binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (94, {'start': '$const44.7', 'end': '$86call.15', 'container': '$x42.6', 'res': '$94binary_slice.17', 'slicevar': '$94binary_slice.18', 'temp_res': '$94binary_slice.16'}), (96, {'func': '$22load_attr.5', 'args': ['$94binary_slice.17'], 'kw_names': None, 'res': '$96call.19'}), (104, {'lhs': '$8binary_subscr.2', 'rhs': '$96call.19', 'res': '$104compare_op.20'}), (108, {'res': '$peaks108.21'}), (110, {'res': '$const110.22'}), (112, {'target': '$peaks108.21', 'index': '$const110.22', 'value': '$104compare_op.20'}), (116, {'res': '$peaks116.23'}), (118, {'res': '$const118.24'}), (124, {'index': '$const118.24', 'target': '$peaks116.23', 'res': '$124binary_subscr.25'}), (128, {'res': '$x128.26'}), (130, {'res': '$const130.27'}), (132, {'index': '$const130.27', 'target': '$x128.26', 'res': '$132binary_subscr.28'}), (136, {'idx': 0, 'res': '$136load_global.29'}), (146, {'item': '$136load_global.29', 'res': '$146load_attr.31'}), (166, {'res': '$x166.32'}), (168, {'res': '$const168.33'}), (170, {'idx': 2, 'res': '$170load_global.34'}), (180, {'res': '$post_avg180.36'}), (182, {'res': '$x182.37'}), (184, {'item': '$x182.37', 'res': '$184load_attr.38'}), (204, {'res': '$const204.39'}), (206, {'index': '$const204.39', 'target': '$184load_attr.38', 'res': '$206binary_subscr.40'}), (210, {'func': '$170load_global.34', 'args': ['$post_avg180.36', '$206binary_subscr.40'], 'kw_names': None, 'res': '$210call.41'}), (218, {'start': '$const168.33', 'end': '$210call.41', 'container': '$x166.32', 'res': '$218binary_slice.43', 'slicevar': '$218binary_slice.44', 'temp_res': '$218binary_slice.42'}), (220, {'func': '$146load_attr.31', 'args': ['$218binary_slice.43'], 'kw_names': None, 'res': '$220call.45'}), (228, {'res': '$delta228.46'}), (230, {'op': '+', 'lhs': '$220call.45', 'rhs': '$delta228.46', 'res': '$binop_add230.47'}), (234, {'lhs': '$132binary_subscr.28', 'rhs': '$binop_add230.47', 'res': '$234compare_op.48'}), (238, {'op': '&=', 'lhs': '$124binary_subscr.25', 'rhs': '$234compare_op.48', 'res': '$binop_iand238.49'}), (246, {'target': '$peaks116.23', 'index': '$const118.24', 'value': '$binop_iand238.49'}), (250, {'res': '$peaks250.50'}), (252, {'res': '$const252.51'}), (254, {'index': '$const252.51', 'target': '$peaks250.50', 'res': '$254binary_subscr.52'}), (258, {'pred': '$254binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={260: (), 272: ()})
2024-06-06 03:46:39,448 - DEBUG - block_infos State(pc_initial=260 nstack_initial=0):
AdaptBlockInfo(insts=((260, {'res': '$wait260.0'}), (262, {'res': '$const262.1'}), (264, {'op': '+', 'lhs': '$wait260.0', 'rhs': '$const262.1', 'res': '$binop_add264.2'}), (268, {'value': '$binop_add264.2'}), (270, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:39,448 - DEBUG - block_infos State(pc_initial=272 nstack_initial=0):
AdaptBlockInfo(insts=((272, {'res': '$const272.0'}), (274, {'value': '$const272.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:39,448 - DEBUG - block_infos State(pc_initial=276 nstack_initial=0):
AdaptBlockInfo(insts=((276, {'res': '$n276.0'}), (278, {'res': '$x278.1'}), (280, {'item': '$x278.1', 'res': '$280load_attr.2'}), (300, {'res': '$const300.3'}), (302, {'index': '$const300.3', 'target': '$280load_attr.2', 'res': '$302binary_subscr.4'}), (306, {'lhs': '$n276.0', 'rhs': '$302binary_subscr.4', 'res': '$306compare_op.5'}), (310, {'pred': '$306compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 730: ()})
2024-06-06 03:46:39,448 - DEBUG - block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'idx': 0, 'res': '$312load_global.0'}), (322, {'item': '$312load_global.0', 'res': '$322load_attr.2'}), (342, {'res': '$x342.3'}), (344, {'idx': 1, 'res': '$344load_global.4'}), (354, {'res': '$const354.6'}), (356, {'res': '$n356.7'}), (358, {'res': '$pre_max358.8'}), (360, {'op': '-', 'lhs': '$n356.7', 'rhs': '$pre_max358.8', 'res': '$binop_sub360.9'}), (364, {'func': '$344load_global.4', 'args': ['$const354.6', '$binop_sub360.9'], 'kw_names': None, 'res': '$364call.10'}), (372, {'idx': 2, 'res': '$372load_global.11'}), (382, {'res': '$n382.13'}), (384, {'res': '$post_max384.14'}), (386, {'op': '+', 'lhs': '$n382.13', 'rhs': '$post_max384.14', 'res': '$binop_add386.15'}), (390, {'res': '$x390.16'}), (392, {'item': '$x390.16', 'res': '$392load_attr.17'}), (412, {'res': '$const412.18'}), (414, {'index': '$const412.18', 'target': '$392load_attr.17', 'res': '$414binary_subscr.19'}), (418, {'func': '$372load_global.11', 'args': ['$binop_add386.15', '$414binary_subscr.19'], 'kw_names': None, 'res': '$418call.20'}), (426, {'start': '$364call.10', 'end': '$418call.20', 'container': '$x342.3', 'res': '$426binary_slice.22', 'slicevar': '$426binary_slice.23', 'temp_res': '$426binary_slice.21'}), (428, {'func': '$322load_attr.2', 'args': ['$426binary_slice.22'], 'kw_names': None, 'res': '$428call.24'}), (436, {'value': '$428call.24'}), (438, {'res': '$x438.25'}), (440, {'res': '$n440.26'}), (442, {'index': '$n440.26', 'target': '$x438.25', 'res': '$442binary_subscr.27'}), (446, {'res': '$maxn446.28'}), (448, {'lhs': '$442binary_subscr.27', 'rhs': '$maxn446.28', 'res': '$448compare_op.29'}), (452, {'res': '$peaks452.30'}), (454, {'res': '$n454.31'}), (456, {'target': '$peaks452.30', 'index': '$n454.31', 'value': '$448compare_op.29'}), (460, {'res': '$peaks460.32'}), (462, {'res': '$n462.33'}), (464, {'index': '$n462.33', 'target': '$peaks460.32', 'res': '$464binary_subscr.34'}), (468, {'pred': '$464binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={470: (), 482: ()})
2024-06-06 03:46:39,449 - DEBUG - block_infos State(pc_initial=470 nstack_initial=0):
AdaptBlockInfo(insts=((470, {'res': '$n470.0'}), (472, {'res': '$const472.1'}), (474, {'op': '+=', 'lhs': '$n470.0', 'rhs': '$const472.1', 'res': '$binop_iadd474.2'}), (478, {'value': '$binop_iadd474.2'}), (480, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:39,449 - DEBUG - block_infos State(pc_initial=482 nstack_initial=0):
AdaptBlockInfo(insts=((482, {'idx': 0, 'res': '$482load_global.0'}), (492, {'item': '$482load_global.0', 'res': '$492load_attr.2'}), (512, {'res': '$x512.3'}), (514, {'idx': 1, 'res': '$514load_global.4'}), (524, {'res': '$const524.6'}), (526, {'res': '$n526.7'}), (528, {'res': '$pre_avg528.8'}), (530, {'op': '-', 'lhs': '$n526.7', 'rhs': '$pre_avg528.8', 'res': '$binop_sub530.9'}), (534, {'func': '$514load_global.4', 'args': ['$const524.6', '$binop_sub530.9'], 'kw_names': None, 'res': '$534call.10'}), (542, {'idx': 2, 'res': '$542load_global.11'}), (552, {'res': '$n552.13'}), (554, {'res': '$post_avg554.14'}), (556, {'op': '+', 'lhs': '$n552.13', 'rhs': '$post_avg554.14', 'res': '$binop_add556.15'}), (560, {'res': '$x560.16'}), (562, {'item': '$x560.16', 'res': '$562load_attr.17'}), (582, {'res': '$const582.18'}), (584, {'index': '$const582.18', 'target': '$562load_attr.17', 'res': '$584binary_subscr.19'}), (588, {'func': '$542load_global.11', 'args': ['$binop_add556.15', '$584binary_subscr.19'], 'kw_names': None, 'res': '$588call.20'}), (596, {'start': '$534call.10', 'end': '$588call.20', 'container': '$x512.3', 'res': '$596binary_slice.22', 'slicevar': '$596binary_slice.23', 'temp_res': '$596binary_slice.21'}), (598, {'func': '$492load_attr.2', 'args': ['$596binary_slice.22'], 'kw_names': None, 'res': '$598call.24'}), (606, {'value': '$598call.24'}), (608, {'res': '$peaks608.25'}), (610, {'res': '$n610.26'}), (616, {'index': '$n610.26', 'target': '$peaks608.25', 'res': '$616binary_subscr.27'}), (620, {'res': '$x620.28'}), (622, {'res': '$n622.29'}), (624, {'index': '$n622.29', 'target': '$x620.28', 'res': '$624binary_subscr.30'}), (628, {'res': '$avgn628.31'}), (630, {'res': '$delta630.32'}), (632, {'op': '+', 'lhs': '$avgn628.31', 'rhs': '$delta630.32', 'res': '$binop_add632.33'}), (636, {'lhs': '$624binary_subscr.30', 'rhs': '$binop_add632.33', 'res': '$636compare_op.34'}), (640, {'op': '&=', 'lhs': '$616binary_subscr.27', 'rhs': '$636compare_op.34', 'res': '$binop_iand640.35'}), (648, {'target': '$peaks608.25', 'index': '$n610.26', 'value': '$binop_iand640.35'}), (652, {'res': '$peaks652.36'}), (654, {'res': '$n654.37'}), (656, {'index': '$n654.37', 'target': '$peaks652.36', 'res': '$656binary_subscr.38'}), (660, {'pred': '$656binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={662: (), 674: ()})
2024-06-06 03:46:39,449 - DEBUG - block_infos State(pc_initial=662 nstack_initial=0):
AdaptBlockInfo(insts=((662, {'res': '$n662.0'}), (664, {'res': '$const664.1'}), (666, {'op': '+=', 'lhs': '$n662.0', 'rhs': '$const664.1', 'res': '$binop_iadd666.2'}), (670, {'value': '$binop_iadd666.2'}), (672, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:39,449 - DEBUG - block_infos State(pc_initial=674 nstack_initial=0):
AdaptBlockInfo(insts=((674, {'res': '$n674.0'}), (676, {'res': '$wait676.1'}), (678, {'res': '$const678.2'}), (680, {'op': '+', 'lhs': '$wait676.1', 'rhs': '$const678.2', 'res': '$binop_add680.3'}), (684, {'op': '+=', 'lhs': '$n674.0', 'rhs': '$binop_add680.3', 'res': '$binop_iadd684.4'}), (688, {'value': '$binop_iadd684.4'}), (690, {'res': '$n690.5'}), (692, {'res': '$x692.6'}), (694, {'item': '$x692.6', 'res': '$694load_attr.7'}), (714, {'res': '$const714.8'}), (716, {'index': '$const714.8', 'target': '$694load_attr.7', 'res': '$716binary_subscr.9'}), (720, {'lhs': '$n690.5', 'rhs': '$716binary_subscr.9', 'res': '$720compare_op.10'}), (724, {'pred': '$720compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={726: (), 728: ()})
2024-06-06 03:46:39,449 - DEBUG - block_infos State(pc_initial=726 nstack_initial=0):
AdaptBlockInfo(insts=((726, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: ()})
2024-06-06 03:46:39,449 - DEBUG - block_infos State(pc_initial=728 nstack_initial=0):
AdaptBlockInfo(insts=((728, {'retval': '$const728.0', 'castval': '$728return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:39,449 - DEBUG - block_infos State(pc_initial=730 nstack_initial=0):
AdaptBlockInfo(insts=((730, {'retval': '$const730.0', 'castval': '$730return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:39,453 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$12load_global.3']
    $22load_attr.5 = getattr(value=$12load_global.3, attr=max) ['$12load_global.3', '$22load_attr.5']
    $const44.7 = const(NoneType, None)       ['$const44.7']
    $46load_global.8 = global(min: <built-in function min>) ['$46load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const80.13 = const(int, 0)              ['$const80.13']
    $82binary_subscr.14 = getitem(value=$60load_attr.12, index=$const80.13, fn=<built-in function getitem>) ['$60load_attr.12', '$82binary_subscr.14', '$const80.13']
    $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.8', '$82binary_subscr.14', '$86call.15', 'post_max']
    $94binary_slice.18 = global(slice: <class 'slice'>) ['$94binary_slice.18']
    $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$94binary_slice.16', '$94binary_slice.18', '$const44.7']
    $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>) ['$94binary_slice.16', '$94binary_slice.17', 'x']
    $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.5', '$94binary_slice.17', '$96call.19']
    $104compare_op.20 = $8binary_subscr.2 >= $96call.19 ['$104compare_op.20', '$8binary_subscr.2', '$96call.19']
    $const110.22 = const(int, 0)             ['$const110.22']
    peaks[$const110.22] = $104compare_op.20  ['$104compare_op.20', '$const110.22', 'peaks']
    $const118.24 = const(int, 0)             ['$const118.24']
    $124binary_subscr.25 = getitem(value=peaks, index=$const118.24, fn=<built-in function getitem>) ['$124binary_subscr.25', '$const118.24', 'peaks']
    $const130.27 = const(int, 0)             ['$const130.27']
    $132binary_subscr.28 = getitem(value=x, index=$const130.27, fn=<built-in function getitem>) ['$132binary_subscr.28', '$const130.27', 'x']
    $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$136load_global.29']
    $146load_attr.31 = getattr(value=$136load_global.29, attr=mean) ['$136load_global.29', '$146load_attr.31']
    $const168.33 = const(NoneType, None)     ['$const168.33']
    $170load_global.34 = global(min: <built-in function min>) ['$170load_global.34']
    $184load_attr.38 = getattr(value=x, attr=shape) ['$184load_attr.38', 'x']
    $const204.39 = const(int, 0)             ['$const204.39']
    $206binary_subscr.40 = getitem(value=$184load_attr.38, index=$const204.39, fn=<built-in function getitem>) ['$184load_attr.38', '$206binary_subscr.40', '$const204.39']
    $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$170load_global.34', '$206binary_subscr.40', '$210call.41', 'post_avg']
    $218binary_slice.44 = global(slice: <class 'slice'>) ['$218binary_slice.44']
    $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$210call.41', '$218binary_slice.42', '$218binary_slice.44', '$const168.33']
    $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>) ['$218binary_slice.42', '$218binary_slice.43', 'x']
    $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_attr.31', '$218binary_slice.43', '$220call.45']
    $binop_add230.47 = $220call.45 + delta   ['$220call.45', '$binop_add230.47', 'delta']
    $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47 ['$132binary_subscr.28', '$234compare_op.48', '$binop_add230.47']
    $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$124binary_subscr.25', '$234compare_op.48', '$binop_iand238.49']
    peaks[$const118.24] = $binop_iand238.49  ['$binop_iand238.49', '$const118.24', 'peaks']
    $const252.51 = const(int, 0)             ['$const252.51']
    $254binary_subscr.52 = getitem(value=peaks, index=$const252.51, fn=<built-in function getitem>) ['$254binary_subscr.52', '$const252.51', 'peaks']
    bool258 = global(bool: <class 'bool'>)   ['bool258']
    $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$254binary_subscr.52', '$258pred', 'bool258']
    branch $258pred, 260, 272                ['$258pred']
label 260:
    $const262.1 = const(int, 1)              ['$const262.1']
    n = wait + $const262.1                   ['$const262.1', 'n', 'wait']
    jump 276                                 []
label 272:
    n = const(int, 1)                        ['n']
    jump 276                                 []
label 276:
    $280load_attr.2 = getattr(value=x, attr=shape) ['$280load_attr.2', 'x']
    $const300.3 = const(int, 0)              ['$const300.3']
    $302binary_subscr.4 = getitem(value=$280load_attr.2, index=$const300.3, fn=<built-in function getitem>) ['$280load_attr.2', '$302binary_subscr.4', '$const300.3']
    $306compare_op.5 = n < $302binary_subscr.4 ['$302binary_subscr.4', '$306compare_op.5', 'n']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$306compare_op.5', '$310pred', 'bool310']
    branch $310pred, 312, 730                ['$310pred']
label 312:
    $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$312load_global.0']
    $322load_attr.2 = getattr(value=$312load_global.0, attr=max) ['$312load_global.0', '$322load_attr.2']
    $344load_global.4 = global(max: <built-in function max>) ['$344load_global.4']
    $const354.6 = const(int, 0)              ['$const354.6']
    $binop_sub360.9 = n - pre_max            ['$binop_sub360.9', 'n', 'pre_max']
    $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.4', '$364call.10', '$binop_sub360.9', '$const354.6']
    $372load_global.11 = global(min: <built-in function min>) ['$372load_global.11']
    $binop_add386.15 = n + post_max          ['$binop_add386.15', 'n', 'post_max']
    $392load_attr.17 = getattr(value=x, attr=shape) ['$392load_attr.17', 'x']
    $const412.18 = const(int, 0)             ['$const412.18']
    $414binary_subscr.19 = getitem(value=$392load_attr.17, index=$const412.18, fn=<built-in function getitem>) ['$392load_attr.17', '$414binary_subscr.19', '$const412.18']
    $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$372load_global.11', '$414binary_subscr.19', '$418call.20', '$binop_add386.15']
    $426binary_slice.23 = global(slice: <class 'slice'>) ['$426binary_slice.23']
    $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$364call.10', '$418call.20', '$426binary_slice.21', '$426binary_slice.23']
    $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>) ['$426binary_slice.21', '$426binary_slice.22', 'x']
    maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$322load_attr.2', '$426binary_slice.22', 'maxn']
    $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$442binary_subscr.27', 'n', 'x']
    $448compare_op.29 = $442binary_subscr.27 == maxn ['$442binary_subscr.27', '$448compare_op.29', 'maxn']
    peaks[n] = $448compare_op.29             ['$448compare_op.29', 'n', 'peaks']
    $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$464binary_subscr.34', 'n', 'peaks']
    bool468 = global(bool: <class 'bool'>)   ['bool468']
    $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$464binary_subscr.34', '$468pred', 'bool468']
    branch $468pred, 482, 470                ['$468pred']
label 470:
    $const472.1 = const(int, 1)              ['$const472.1']
    $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd474.2', '$const472.1', 'n']
    n = $binop_iadd474.2                     ['$binop_iadd474.2', 'n']
    jump 276                                 []
label 482:
    $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$482load_global.0']
    $492load_attr.2 = getattr(value=$482load_global.0, attr=mean) ['$482load_global.0', '$492load_attr.2']
    $514load_global.4 = global(max: <built-in function max>) ['$514load_global.4']
    $const524.6 = const(int, 0)              ['$const524.6']
    $binop_sub530.9 = n - pre_avg            ['$binop_sub530.9', 'n', 'pre_avg']
    $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$514load_global.4', '$534call.10', '$binop_sub530.9', '$const524.6']
    $542load_global.11 = global(min: <built-in function min>) ['$542load_global.11']
    $binop_add556.15 = n + post_avg          ['$binop_add556.15', 'n', 'post_avg']
    $562load_attr.17 = getattr(value=x, attr=shape) ['$562load_attr.17', 'x']
    $const582.18 = const(int, 0)             ['$const582.18']
    $584binary_subscr.19 = getitem(value=$562load_attr.17, index=$const582.18, fn=<built-in function getitem>) ['$562load_attr.17', '$584binary_subscr.19', '$const582.18']
    $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$542load_global.11', '$584binary_subscr.19', '$588call.20', '$binop_add556.15']
    $596binary_slice.23 = global(slice: <class 'slice'>) ['$596binary_slice.23']
    $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$534call.10', '$588call.20', '$596binary_slice.21', '$596binary_slice.23']
    $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>) ['$596binary_slice.21', '$596binary_slice.22', 'x']
    avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$492load_attr.2', '$596binary_slice.22', 'avgn']
    $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$616binary_subscr.27', 'n', 'peaks']
    $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$624binary_subscr.30', 'n', 'x']
    $binop_add632.33 = avgn + delta          ['$binop_add632.33', 'avgn', 'delta']
    $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33 ['$624binary_subscr.30', '$636compare_op.34', '$binop_add632.33']
    $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$616binary_subscr.27', '$636compare_op.34', '$binop_iand640.35']
    peaks[n] = $binop_iand640.35             ['$binop_iand640.35', 'n', 'peaks']
    $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$656binary_subscr.38', 'n', 'peaks']
    bool660 = global(bool: <class 'bool'>)   ['bool660']
    $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$656binary_subscr.38', '$660pred', 'bool660']
    branch $660pred, 674, 662                ['$660pred']
label 662:
    $const664.1 = const(int, 1)              ['$const664.1']
    $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd666.2', '$const664.1', 'n']
    n = $binop_iadd666.2                     ['$binop_iadd666.2', 'n']
    jump 276                                 []
label 674:
    $const678.2 = const(int, 1)              ['$const678.2']
    $binop_add680.3 = wait + $const678.2     ['$binop_add680.3', '$const678.2', 'wait']
    $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add680.3', '$binop_iadd684.4', 'n']
    n = $binop_iadd684.4                     ['$binop_iadd684.4', 'n']
    $694load_attr.7 = getattr(value=x, attr=shape) ['$694load_attr.7', 'x']
    $const714.8 = const(int, 0)              ['$const714.8']
    $716binary_subscr.9 = getitem(value=$694load_attr.7, index=$const714.8, fn=<built-in function getitem>) ['$694load_attr.7', '$716binary_subscr.9', '$const714.8']
    $720compare_op.10 = n < $716binary_subscr.9 ['$716binary_subscr.9', '$720compare_op.10', 'n']
    bool724 = global(bool: <class 'bool'>)   ['bool724']
    $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$720compare_op.10', '$724pred', 'bool724']
    branch $724pred, 726, 728                ['$724pred']
label 726:
    jump 312                                 []
label 728:
    $const728.0 = const(NoneType, None)      ['$const728.0']
    $728return_const.1 = cast(value=$const728.0) ['$728return_const.1', '$const728.0']
    return $728return_const.1                ['$728return_const.1']
label 730:
    $const730.0 = const(NoneType, None)      ['$const730.0']
    $730return_const.1 = cast(value=$const730.0) ['$730return_const.1', '$const730.0']
    return $730return_const.1                ['$730return_const.1']

2024-06-06 03:46:39,472 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:39,472 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9574c50>
2024-06-06 03:46:39,472 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:39,472 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-06 03:46:39,472 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-06 03:46:39,472 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-06 03:46:39,472 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-06 03:46:39,472 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-06 03:46:39,473 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-06 03:46:39,473 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-06 03:46:39,473 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:39,473 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-06 03:46:39,473 - DEBUG - on stmt: $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,473 - DEBUG - on stmt: $22load_attr.5 = getattr(value=$12load_global.3, attr=max)
2024-06-06 03:46:39,473 - DEBUG - on stmt: $const44.7 = const(NoneType, None)
2024-06-06 03:46:39,473 - DEBUG - on stmt: $46load_global.8 = global(min: <built-in function min>)
2024-06-06 03:46:39,473 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,473 - DEBUG - on stmt: $const80.13 = const(int, 0)
2024-06-06 03:46:39,473 - DEBUG - on stmt: $82binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const80.13, fn=<built-in function getitem>)
2024-06-06 03:46:39,473 - DEBUG - on stmt: $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,474 - DEBUG - on stmt: $94binary_slice.18 = global(slice: <class 'slice'>)
2024-06-06 03:46:39,474 - DEBUG - on stmt: $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,474 - DEBUG - on stmt: $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>)
2024-06-06 03:46:39,474 - DEBUG - on stmt: $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,474 - DEBUG - on stmt: $104compare_op.20 = $8binary_subscr.2 >= $96call.19
2024-06-06 03:46:39,474 - DEBUG - on stmt: $const110.22 = const(int, 0)
2024-06-06 03:46:39,474 - DEBUG - on stmt: peaks[0] = $104compare_op.20
2024-06-06 03:46:39,474 - DEBUG - on stmt: $const118.24 = const(int, 0)
2024-06-06 03:46:39,474 - DEBUG - on stmt: $124binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const118.24, fn=<built-in function getitem>)
2024-06-06 03:46:39,474 - DEBUG - on stmt: $const130.27 = const(int, 0)
2024-06-06 03:46:39,475 - DEBUG - on stmt: $132binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const130.27, fn=<built-in function getitem>)
2024-06-06 03:46:39,475 - DEBUG - on stmt: $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,475 - DEBUG - on stmt: $146load_attr.31 = getattr(value=$136load_global.29, attr=mean)
2024-06-06 03:46:39,475 - DEBUG - on stmt: $const168.33 = const(NoneType, None)
2024-06-06 03:46:39,475 - DEBUG - on stmt: $170load_global.34 = global(min: <built-in function min>)
2024-06-06 03:46:39,475 - DEBUG - on stmt: $184load_attr.38 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,475 - DEBUG - on stmt: $const204.39 = const(int, 0)
2024-06-06 03:46:39,475 - DEBUG - on stmt: $206binary_subscr.40 = static_getitem(value=$184load_attr.38, index=0, index_var=$const204.39, fn=<built-in function getitem>)
2024-06-06 03:46:39,475 - DEBUG - on stmt: $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,475 - DEBUG - on stmt: $218binary_slice.44 = global(slice: <class 'slice'>)
2024-06-06 03:46:39,475 - DEBUG - on stmt: $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,475 - DEBUG - on stmt: $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>)
2024-06-06 03:46:39,476 - DEBUG - on stmt: $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,476 - DEBUG - on stmt: $binop_add230.47 = $220call.45 + delta
2024-06-06 03:46:39,476 - DEBUG - on stmt: $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47
2024-06-06 03:46:39,476 - DEBUG - on stmt: $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,476 - DEBUG - on stmt: peaks[0] = $binop_iand238.49
2024-06-06 03:46:39,476 - DEBUG - on stmt: $const252.51 = const(int, 0)
2024-06-06 03:46:39,476 - DEBUG - on stmt: $254binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const252.51, fn=<built-in function getitem>)
2024-06-06 03:46:39,476 - DEBUG - on stmt: bool258 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,476 - DEBUG - on stmt: $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,476 - DEBUG - on stmt: branch $258pred, 260, 272
2024-06-06 03:46:39,477 - DEBUG - ==== SSA block analysis pass on 260
2024-06-06 03:46:39,477 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9574c50>
2024-06-06 03:46:39,477 - DEBUG - on stmt: $const262.1 = const(int, 1)
2024-06-06 03:46:39,477 - DEBUG - on stmt: n = wait + $const262.1
2024-06-06 03:46:39,477 - DEBUG - on stmt: jump 276
2024-06-06 03:46:39,477 - DEBUG - ==== SSA block analysis pass on 272
2024-06-06 03:46:39,477 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9574c50>
2024-06-06 03:46:39,477 - DEBUG - on stmt: n = const(int, 1)
2024-06-06 03:46:39,477 - DEBUG - on stmt: jump 276
2024-06-06 03:46:39,477 - DEBUG - ==== SSA block analysis pass on 276
2024-06-06 03:46:39,477 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9574c50>
2024-06-06 03:46:39,477 - DEBUG - on stmt: $280load_attr.2 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,477 - DEBUG - on stmt: $const300.3 = const(int, 0)
2024-06-06 03:46:39,478 - DEBUG - on stmt: $302binary_subscr.4 = static_getitem(value=$280load_attr.2, index=0, index_var=$const300.3, fn=<built-in function getitem>)
2024-06-06 03:46:39,478 - DEBUG - on stmt: $306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:39,478 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,478 - DEBUG - on stmt: $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,478 - DEBUG - on stmt: branch $310pred, 312, 730
2024-06-06 03:46:39,478 - DEBUG - ==== SSA block analysis pass on 312
2024-06-06 03:46:39,478 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9574c50>
2024-06-06 03:46:39,478 - DEBUG - on stmt: $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,478 - DEBUG - on stmt: $322load_attr.2 = getattr(value=$312load_global.0, attr=max)
2024-06-06 03:46:39,478 - DEBUG - on stmt: $344load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:39,478 - DEBUG - on stmt: $const354.6 = const(int, 0)
2024-06-06 03:46:39,478 - DEBUG - on stmt: $binop_sub360.9 = n - pre_max
2024-06-06 03:46:39,479 - DEBUG - on stmt: $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,479 - DEBUG - on stmt: $372load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:39,479 - DEBUG - on stmt: $binop_add386.15 = n + post_max
2024-06-06 03:46:39,479 - DEBUG - on stmt: $392load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,479 - DEBUG - on stmt: $const412.18 = const(int, 0)
2024-06-06 03:46:39,479 - DEBUG - on stmt: $414binary_subscr.19 = static_getitem(value=$392load_attr.17, index=0, index_var=$const412.18, fn=<built-in function getitem>)
2024-06-06 03:46:39,479 - DEBUG - on stmt: $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,479 - DEBUG - on stmt: $426binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:39,479 - DEBUG - on stmt: $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,479 - DEBUG - on stmt: $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:39,480 - DEBUG - on stmt: maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,480 - DEBUG - on stmt: $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,480 - DEBUG - on stmt: $448compare_op.29 = $442binary_subscr.27 == maxn
2024-06-06 03:46:39,480 - DEBUG - on stmt: peaks[n] = $448compare_op.29
2024-06-06 03:46:39,480 - DEBUG - on stmt: $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,480 - DEBUG - on stmt: bool468 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,480 - DEBUG - on stmt: $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,480 - DEBUG - on stmt: branch $468pred, 482, 470
2024-06-06 03:46:39,480 - DEBUG - ==== SSA block analysis pass on 470
2024-06-06 03:46:39,480 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9574c50>
2024-06-06 03:46:39,481 - DEBUG - on stmt: $const472.1 = const(int, 1)
2024-06-06 03:46:39,481 - DEBUG - on stmt: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,481 - DEBUG - on stmt: n = $binop_iadd474.2
2024-06-06 03:46:39,481 - DEBUG - on stmt: jump 731
2024-06-06 03:46:39,481 - DEBUG - ==== SSA block analysis pass on 482
2024-06-06 03:46:39,481 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9574c50>
2024-06-06 03:46:39,481 - DEBUG - on stmt: $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,481 - DEBUG - on stmt: $492load_attr.2 = getattr(value=$482load_global.0, attr=mean)
2024-06-06 03:46:39,481 - DEBUG - on stmt: $514load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:39,481 - DEBUG - on stmt: $const524.6 = const(int, 0)
2024-06-06 03:46:39,481 - DEBUG - on stmt: $binop_sub530.9 = n - pre_avg
2024-06-06 03:46:39,481 - DEBUG - on stmt: $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,482 - DEBUG - on stmt: $542load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:39,482 - DEBUG - on stmt: $binop_add556.15 = n + post_avg
2024-06-06 03:46:39,482 - DEBUG - on stmt: $562load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,482 - DEBUG - on stmt: $const582.18 = const(int, 0)
2024-06-06 03:46:39,482 - DEBUG - on stmt: $584binary_subscr.19 = static_getitem(value=$562load_attr.17, index=0, index_var=$const582.18, fn=<built-in function getitem>)
2024-06-06 03:46:39,482 - DEBUG - on stmt: $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,482 - DEBUG - on stmt: $596binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:39,482 - DEBUG - on stmt: $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,482 - DEBUG - on stmt: $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:39,483 - DEBUG - on stmt: avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,483 - DEBUG - on stmt: $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,483 - DEBUG - on stmt: $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,483 - DEBUG - on stmt: $binop_add632.33 = avgn + delta
2024-06-06 03:46:39,483 - DEBUG - on stmt: $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33
2024-06-06 03:46:39,483 - DEBUG - on stmt: $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,483 - DEBUG - on stmt: peaks[n] = $binop_iand640.35
2024-06-06 03:46:39,483 - DEBUG - on stmt: $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,483 - DEBUG - on stmt: bool660 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,483 - DEBUG - on stmt: $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,484 - DEBUG - on stmt: branch $660pred, 674, 662
2024-06-06 03:46:39,484 - DEBUG - ==== SSA block analysis pass on 662
2024-06-06 03:46:39,484 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9574c50>
2024-06-06 03:46:39,484 - DEBUG - on stmt: $const664.1 = const(int, 1)
2024-06-06 03:46:39,484 - DEBUG - on stmt: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,484 - DEBUG - on stmt: n = $binop_iadd666.2
2024-06-06 03:46:39,484 - DEBUG - on stmt: jump 731
2024-06-06 03:46:39,484 - DEBUG - ==== SSA block analysis pass on 674
2024-06-06 03:46:39,484 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9574c50>
2024-06-06 03:46:39,484 - DEBUG - on stmt: $const678.2 = const(int, 1)
2024-06-06 03:46:39,484 - DEBUG - on stmt: $binop_add680.3 = wait + $const678.2
2024-06-06 03:46:39,484 - DEBUG - on stmt: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,485 - DEBUG - on stmt: n = $binop_iadd684.4
2024-06-06 03:46:39,485 - DEBUG - on stmt: $694load_attr.7 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,485 - DEBUG - on stmt: $const714.8 = const(int, 0)
2024-06-06 03:46:39,485 - DEBUG - on stmt: $716binary_subscr.9 = static_getitem(value=$694load_attr.7, index=0, index_var=$const714.8, fn=<built-in function getitem>)
2024-06-06 03:46:39,485 - DEBUG - on stmt: $720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:39,485 - DEBUG - on stmt: bool724 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,485 - DEBUG - on stmt: $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,485 - DEBUG - on stmt: branch $724pred, 726, 728
2024-06-06 03:46:39,485 - DEBUG - ==== SSA block analysis pass on 726
2024-06-06 03:46:39,485 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9574c50>
2024-06-06 03:46:39,486 - DEBUG - on stmt: jump 312
2024-06-06 03:46:39,486 - DEBUG - ==== SSA block analysis pass on 728
2024-06-06 03:46:39,486 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9574c50>
2024-06-06 03:46:39,486 - DEBUG - on stmt: $const728.0 = const(NoneType, None)
2024-06-06 03:46:39,486 - DEBUG - on stmt: $728return_const.1 = cast(value=$const728.0)
2024-06-06 03:46:39,486 - DEBUG - on stmt: return $728return_const.1
2024-06-06 03:46:39,486 - DEBUG - ==== SSA block analysis pass on 730
2024-06-06 03:46:39,486 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9574c50>
2024-06-06 03:46:39,486 - DEBUG - on stmt: $const730.0 = const(NoneType, None)
2024-06-06 03:46:39,486 - DEBUG - on stmt: $730return_const.1 = cast(value=$const730.0)
2024-06-06 03:46:39,486 - DEBUG - on stmt: return $730return_const.1
2024-06-06 03:46:39,486 - DEBUG - ==== SSA block analysis pass on 731
2024-06-06 03:46:39,486 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9574c50>
2024-06-06 03:46:39,486 - DEBUG - on stmt: jump 276
2024-06-06 03:46:39,489 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104compare_op.20': [(<numba.core.ir.Assign object at 0x7fe9d206b860>,
                                    0)],
             '$124binary_subscr.25': [(<numba.core.ir.Assign object at 0x7fe9b987cef0>,
                                       0)],
             '$12load_global.3': [(<numba.core.ir.Assign object at 0x7fe9b98f4470>,
                                   0)],
             '$132binary_subscr.28': [(<numba.core.ir.Assign object at 0x7fe9b987d310>,
                                       0)],
             '$136load_global.29': [(<numba.core.ir.Assign object at 0x7fe9d21fae70>,
                                     0)],
             '$146load_attr.31': [(<numba.core.ir.Assign object at 0x7fe9b99114c0>,
                                   0)],
             '$170load_global.34': [(<numba.core.ir.Assign object at 0x7fe9b986b650>,
                                     0)],
             '$184load_attr.38': [(<numba.core.ir.Assign object at 0x7fe9b986b980>,
                                   0)],
             '$206binary_subscr.40': [(<numba.core.ir.Assign object at 0x7fe9b987ce60>,
                                       0)],
             '$210call.41': [(<numba.core.ir.Assign object at 0x7fe9b986bdd0>,
                              0)],
             '$218binary_slice.42': [(<numba.core.ir.Assign object at 0x7fe9b9898050>,
                                      0)],
             '$218binary_slice.43': [(<numba.core.ir.Assign object at 0x7fe9b9898170>,
                                      0)],
             '$218binary_slice.44': [(<numba.core.ir.Assign object at 0x7fe9b986bef0>,
                                      0)],
             '$220call.45': [(<numba.core.ir.Assign object at 0x7fe9b9898320>,
                              0)],
             '$22load_attr.5': [(<numba.core.ir.Assign object at 0x7fe9d213b740>,
                                 0)],
             '$234compare_op.48': [(<numba.core.ir.Assign object at 0x7fe9b98986b0>,
                                    0)],
             '$254binary_subscr.52': [(<numba.core.ir.Assign object at 0x7fe9b987d2b0>,
                                       0)],
             '$258pred': [(<numba.core.ir.Assign object at 0x7fe9b9898e90>, 0)],
             '$280load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b98994f0>,
                                  276)],
             '$302binary_subscr.4': [(<numba.core.ir.Assign object at 0x7fe9b987ce90>,
                                      276)],
             '$306compare_op.5': [(<numba.core.ir.Assign object at 0x7fe9b9899910>,
                                   276)],
             '$310pred': [(<numba.core.ir.Assign object at 0x7fe9b9899b80>,
                           276)],
             '$312load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9899d00>,
                                    312)],
             '$322load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b9899e50>,
                                  312)],
             '$344load_global.4': [(<numba.core.ir.Assign object at 0x7fe9b989a090>,
                                    312)],
             '$364call.10': [(<numba.core.ir.Assign object at 0x7fe9b989a6c0>,
                              312)],
             '$372load_global.11': [(<numba.core.ir.Assign object at 0x7fe9b989a7e0>,
                                     312)],
             '$392load_attr.17': [(<numba.core.ir.Assign object at 0x7fe9b989ad50>,
                                   312)],
             '$414binary_subscr.19': [(<numba.core.ir.Assign object at 0x7fe9b987c830>,
                                       312)],
             '$418call.20': [(<numba.core.ir.Assign object at 0x7fe9b989b1a0>,
                              312)],
             '$426binary_slice.21': [(<numba.core.ir.Assign object at 0x7fe9b989b3e0>,
                                      312)],
             '$426binary_slice.22': [(<numba.core.ir.Assign object at 0x7fe9b989b500>,
                                      312)],
             '$426binary_slice.23': [(<numba.core.ir.Assign object at 0x7fe9b989b2c0>,
                                      312)],
             '$442binary_subscr.27': [(<numba.core.ir.Assign object at 0x7fe9b989bad0>,
                                       312)],
             '$448compare_op.29': [(<numba.core.ir.Assign object at 0x7fe9b989bd10>,
                                    312)],
             '$464binary_subscr.34': [(<numba.core.ir.Assign object at 0x7fe9b98c2f30>,
                                       312)],
             '$468pred': [(<numba.core.ir.Assign object at 0x7fe9b98c2cf0>,
                           312)],
             '$46load_global.8': [(<numba.core.ir.Assign object at 0x7fe9d2139ac0>,
                                   0)],
             '$482load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b98c2c60>,
                                    482)],
             '$492load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b98c2a50>,
                                  482)],
             '$514load_global.4': [(<numba.core.ir.Assign object at 0x7fe9b98c2450>,
                                    482)],
             '$534call.10': [(<numba.core.ir.Assign object at 0x7fe9b98c3350>,
                              482)],
             '$542load_global.11': [(<numba.core.ir.Assign object at 0x7fe9b98c34d0>,
                                     482)],
             '$562load_attr.17': [(<numba.core.ir.Assign object at 0x7fe9b98c39e0>,
                                   482)],
             '$584binary_subscr.19': [(<numba.core.ir.Assign object at 0x7fe9d2138680>,
                                       482)],
             '$588call.20': [(<numba.core.ir.Assign object at 0x7fe9b98c2900>,
                              482)],
             '$596binary_slice.21': [(<numba.core.ir.Assign object at 0x7fe9b98c1580>,
                                      482)],
             '$596binary_slice.22': [(<numba.core.ir.Assign object at 0x7fe9b98c10a0>,
                                      482)],
             '$596binary_slice.23': [(<numba.core.ir.Assign object at 0x7fe9b98c2600>,
                                      482)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x7fe9b96e1100>,
                                  0)],
             '$616binary_subscr.27': [(<numba.core.ir.Assign object at 0x7fe9b98c2150>,
                                       482)],
             '$624binary_subscr.30': [(<numba.core.ir.Assign object at 0x7fe9b98c1c70>,
                                       482)],
             '$636compare_op.34': [(<numba.core.ir.Assign object at 0x7fe9b98c17f0>,
                                    482)],
             '$656binary_subscr.38': [(<numba.core.ir.Assign object at 0x7fe9b98c0530>,
                                       482)],
             '$660pred': [(<numba.core.ir.Assign object at 0x7fe9b98c0740>,
                           482)],
             '$694load_attr.7': [(<numba.core.ir.Assign object at 0x7fe9b98c1280>,
                                  674)],
             '$716binary_subscr.9': [(<numba.core.ir.Assign object at 0x7fe9b97015e0>,
                                      674)],
             '$720compare_op.10': [(<numba.core.ir.Assign object at 0x7fe9b987ed80>,
                                    674)],
             '$724pred': [(<numba.core.ir.Assign object at 0x7fe9b987e7b0>,
                           674)],
             '$728return_const.1': [(<numba.core.ir.Assign object at 0x7fe9b987e990>,
                                     728)],
             '$730return_const.1': [(<numba.core.ir.Assign object at 0x7fe9b987e2d0>,
                                     730)],
             '$82binary_subscr.14': [(<numba.core.ir.Assign object at 0x7fe9b987d070>,
                                      0)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x7fe9b9a6b680>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7fe9b987cf50>,
                                    0)],
             '$94binary_slice.16': [(<numba.core.ir.Assign object at 0x7fe9b960fe90>,
                                     0)],
             '$94binary_slice.17': [(<numba.core.ir.Assign object at 0x7fe9b9aec620>,
                                     0)],
             '$94binary_slice.18': [(<numba.core.ir.Assign object at 0x7fe9b95ca1e0>,
                                     0)],
             '$96call.19': [(<numba.core.ir.Assign object at 0x7fe9b9aec560>,
                             0)],
             '$binop_add230.47': [(<numba.core.ir.Assign object at 0x7fe9b9898560>,
                                   0)],
             '$binop_add386.15': [(<numba.core.ir.Assign object at 0x7fe9b989ab40>,
                                   312)],
             '$binop_add556.15': [(<numba.core.ir.Assign object at 0x7fe9b98c3830>,
                                   482)],
             '$binop_add632.33': [(<numba.core.ir.Assign object at 0x7fe9b98c18b0>,
                                   482)],
             '$binop_add680.3': [(<numba.core.ir.Assign object at 0x7fe9b98c0c20>,
                                  674)],
             '$binop_iadd474.2': [(<numba.core.ir.Assign object at 0x7fe9b989bec0>,
                                   470)],
             '$binop_iadd666.2': [(<numba.core.ir.Assign object at 0x7fe9b98c1be0>,
                                   662)],
             '$binop_iadd684.4': [(<numba.core.ir.Assign object at 0x7fe9b98c0d40>,
                                   674)],
             '$binop_iand238.49': [(<numba.core.ir.Assign object at 0x7fe9b9898800>,
                                    0)],
             '$binop_iand640.35': [(<numba.core.ir.Assign object at 0x7fe9b98c16d0>,
                                    482)],
             '$binop_sub360.9': [(<numba.core.ir.Assign object at 0x7fe9b989a540>,
                                  312)],
             '$binop_sub530.9': [(<numba.core.ir.Assign object at 0x7fe9b98c3200>,
                                  482)],
             '$const110.22': [(<numba.core.ir.Assign object at 0x7fe9d206a480>,
                               0)],
             '$const118.24': [(<numba.core.ir.Assign object at 0x7fe9d2086180>,
                               0)],
             '$const130.27': [(<numba.core.ir.Assign object at 0x7fe9d201e180>,
                               0)],
             '$const168.33': [(<numba.core.ir.Assign object at 0x7fe9b986b4a0>,
                               0)],
             '$const204.39': [(<numba.core.ir.Assign object at 0x7fe9b986bad0>,
                               0)],
             '$const252.51': [(<numba.core.ir.Assign object at 0x7fe9b9898aa0>,
                               0)],
             '$const262.1': [(<numba.core.ir.Assign object at 0x7fe9b986b740>,
                              260)],
             '$const300.3': [(<numba.core.ir.Assign object at 0x7fe9b9899640>,
                              276)],
             '$const354.6': [(<numba.core.ir.Assign object at 0x7fe9b989a1e0>,
                              312)],
             '$const412.18': [(<numba.core.ir.Assign object at 0x7fe9b989aea0>,
                               312)],
             '$const44.7': [(<numba.core.ir.Assign object at 0x7fe9d2138f50>,
                             0)],
             '$const472.1': [(<numba.core.ir.Assign object at 0x7fe9b989b860>,
                              470)],
             '$const524.6': [(<numba.core.ir.Assign object at 0x7fe9b98c27e0>,
                              482)],
             '$const582.18': [(<numba.core.ir.Assign object at 0x7fe9b98c3b30>,
                               482)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9d21e2db0>,
                            0)],
             '$const664.1': [(<numba.core.ir.Assign object at 0x7fe9b98c20f0>,
                              662)],
             '$const678.2': [(<numba.core.ir.Assign object at 0x7fe9b98c0a40>,
                              674)],
             '$const714.8': [(<numba.core.ir.Assign object at 0x7fe9b98c1430>,
                              674)],
             '$const728.0': [(<numba.core.ir.Assign object at 0x7fe9b987e750>,
                              728)],
             '$const730.0': [(<numba.core.ir.Assign object at 0x7fe9b987e3c0>,
                              730)],
             '$const80.13': [(<numba.core.ir.Assign object at 0x7fe9b96e3c20>,
                              0)],
             'avgn': [(<numba.core.ir.Assign object at 0x7fe9b98c21e0>, 482)],
             'bool258': [(<numba.core.ir.Assign object at 0x7fe9b9898d70>, 0)],
             'bool310': [(<numba.core.ir.Assign object at 0x7fe9b9899a60>,
                          276)],
             'bool468': [(<numba.core.ir.Assign object at 0x7fe9b98c2e70>,
                          312)],
             'bool660': [(<numba.core.ir.Assign object at 0x7fe9b98c0650>,
                          482)],
             'bool724': [(<numba.core.ir.Assign object at 0x7fe9b987eea0>,
                          674)],
             'delta': [(<numba.core.ir.Assign object at 0x7fe9d21e1fd0>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7fe9b989b6b0>, 312)],
             'n': [(<numba.core.ir.Assign object at 0x7fe9b9898410>, 260),
                   (<numba.core.ir.Assign object at 0x7fe9b9899100>, 272),
                   (<numba.core.ir.Assign object at 0x7fe9b98991f0>, 470),
                   (<numba.core.ir.Assign object at 0x7fe9b98c1a30>, 662),
                   (<numba.core.ir.Assign object at 0x7fe9b98c0da0>, 674)],
             'peaks': [(<numba.core.ir.Assign object at 0x7fe9d21e0b00>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7fe9d21e0e30>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7fe9d21e2630>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7fe9d21e0f20>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7fe9d21e0bf0>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7fe9d21e2f90>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9d21e1df0>, 0)]})
2024-06-06 03:46:39,489 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9574c50>
2024-06-06 03:46:39,489 - DEBUG - Fix SSA violator on var n
2024-06-06 03:46:39,489 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:39,490 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,490 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:39,490 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-06 03:46:39,490 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-06 03:46:39,490 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-06 03:46:39,490 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-06 03:46:39,490 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-06 03:46:39,490 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-06 03:46:39,490 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-06 03:46:39,490 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:39,490 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-06 03:46:39,490 - DEBUG - on stmt: $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,490 - DEBUG - on stmt: $22load_attr.5 = getattr(value=$12load_global.3, attr=max)
2024-06-06 03:46:39,491 - DEBUG - on stmt: $const44.7 = const(NoneType, None)
2024-06-06 03:46:39,491 - DEBUG - on stmt: $46load_global.8 = global(min: <built-in function min>)
2024-06-06 03:46:39,491 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,491 - DEBUG - on stmt: $const80.13 = const(int, 0)
2024-06-06 03:46:39,491 - DEBUG - on stmt: $82binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const80.13, fn=<built-in function getitem>)
2024-06-06 03:46:39,491 - DEBUG - on stmt: $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,491 - DEBUG - on stmt: $94binary_slice.18 = global(slice: <class 'slice'>)
2024-06-06 03:46:39,491 - DEBUG - on stmt: $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,491 - DEBUG - on stmt: $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>)
2024-06-06 03:46:39,491 - DEBUG - on stmt: $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,492 - DEBUG - on stmt: $104compare_op.20 = $8binary_subscr.2 >= $96call.19
2024-06-06 03:46:39,492 - DEBUG - on stmt: $const110.22 = const(int, 0)
2024-06-06 03:46:39,492 - DEBUG - on stmt: peaks[0] = $104compare_op.20
2024-06-06 03:46:39,492 - DEBUG - on stmt: $const118.24 = const(int, 0)
2024-06-06 03:46:39,492 - DEBUG - on stmt: $124binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const118.24, fn=<built-in function getitem>)
2024-06-06 03:46:39,492 - DEBUG - on stmt: $const130.27 = const(int, 0)
2024-06-06 03:46:39,492 - DEBUG - on stmt: $132binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const130.27, fn=<built-in function getitem>)
2024-06-06 03:46:39,492 - DEBUG - on stmt: $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,492 - DEBUG - on stmt: $146load_attr.31 = getattr(value=$136load_global.29, attr=mean)
2024-06-06 03:46:39,492 - DEBUG - on stmt: $const168.33 = const(NoneType, None)
2024-06-06 03:46:39,492 - DEBUG - on stmt: $170load_global.34 = global(min: <built-in function min>)
2024-06-06 03:46:39,492 - DEBUG - on stmt: $184load_attr.38 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,492 - DEBUG - on stmt: $const204.39 = const(int, 0)
2024-06-06 03:46:39,493 - DEBUG - on stmt: $206binary_subscr.40 = static_getitem(value=$184load_attr.38, index=0, index_var=$const204.39, fn=<built-in function getitem>)
2024-06-06 03:46:39,493 - DEBUG - on stmt: $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,493 - DEBUG - on stmt: $218binary_slice.44 = global(slice: <class 'slice'>)
2024-06-06 03:46:39,493 - DEBUG - on stmt: $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,493 - DEBUG - on stmt: $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>)
2024-06-06 03:46:39,493 - DEBUG - on stmt: $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,493 - DEBUG - on stmt: $binop_add230.47 = $220call.45 + delta
2024-06-06 03:46:39,493 - DEBUG - on stmt: $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47
2024-06-06 03:46:39,493 - DEBUG - on stmt: $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,493 - DEBUG - on stmt: peaks[0] = $binop_iand238.49
2024-06-06 03:46:39,493 - DEBUG - on stmt: $const252.51 = const(int, 0)
2024-06-06 03:46:39,493 - DEBUG - on stmt: $254binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const252.51, fn=<built-in function getitem>)
2024-06-06 03:46:39,493 - DEBUG - on stmt: bool258 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,494 - DEBUG - on stmt: $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,494 - DEBUG - on stmt: branch $258pred, 260, 272
2024-06-06 03:46:39,494 - DEBUG - ==== SSA block rewrite pass on 260
2024-06-06 03:46:39,494 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,494 - DEBUG - on stmt: $const262.1 = const(int, 1)
2024-06-06 03:46:39,494 - DEBUG - on stmt: n = wait + $const262.1
2024-06-06 03:46:39,494 - DEBUG - first assign: n
2024-06-06 03:46:39,494 - DEBUG - replaced with: n = wait + $const262.1
2024-06-06 03:46:39,494 - DEBUG - on stmt: jump 276
2024-06-06 03:46:39,494 - DEBUG - ==== SSA block rewrite pass on 272
2024-06-06 03:46:39,494 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,495 - DEBUG - on stmt: n = const(int, 1)
2024-06-06 03:46:39,495 - DEBUG - replaced with: n.1 = const(int, 1)
2024-06-06 03:46:39,495 - DEBUG - on stmt: jump 276
2024-06-06 03:46:39,495 - DEBUG - ==== SSA block rewrite pass on 276
2024-06-06 03:46:39,495 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,495 - DEBUG - on stmt: $280load_attr.2 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,495 - DEBUG - on stmt: $const300.3 = const(int, 0)
2024-06-06 03:46:39,495 - DEBUG - on stmt: $302binary_subscr.4 = static_getitem(value=$280load_attr.2, index=0, index_var=$const300.3, fn=<built-in function getitem>)
2024-06-06 03:46:39,495 - DEBUG - on stmt: $306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:39,495 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,495 - DEBUG - on stmt: $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,495 - DEBUG - on stmt: branch $310pred, 312, 730
2024-06-06 03:46:39,495 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-06 03:46:39,496 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,496 - DEBUG - on stmt: $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,496 - DEBUG - on stmt: $322load_attr.2 = getattr(value=$312load_global.0, attr=max)
2024-06-06 03:46:39,496 - DEBUG - on stmt: $344load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:39,496 - DEBUG - on stmt: $const354.6 = const(int, 0)
2024-06-06 03:46:39,496 - DEBUG - on stmt: $binop_sub360.9 = n - pre_max
2024-06-06 03:46:39,496 - DEBUG - on stmt: $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,496 - DEBUG - on stmt: $372load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:39,496 - DEBUG - on stmt: $binop_add386.15 = n + post_max
2024-06-06 03:46:39,496 - DEBUG - on stmt: $392load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,496 - DEBUG - on stmt: $const412.18 = const(int, 0)
2024-06-06 03:46:39,496 - DEBUG - on stmt: $414binary_subscr.19 = static_getitem(value=$392load_attr.17, index=0, index_var=$const412.18, fn=<built-in function getitem>)
2024-06-06 03:46:39,496 - DEBUG - on stmt: $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,497 - DEBUG - on stmt: $426binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:39,497 - DEBUG - on stmt: $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,497 - DEBUG - on stmt: $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:39,497 - DEBUG - on stmt: maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,497 - DEBUG - on stmt: $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,497 - DEBUG - on stmt: $448compare_op.29 = $442binary_subscr.27 == maxn
2024-06-06 03:46:39,497 - DEBUG - on stmt: peaks[n] = $448compare_op.29
2024-06-06 03:46:39,497 - DEBUG - on stmt: $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,498 - DEBUG - on stmt: bool468 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,498 - DEBUG - on stmt: $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,498 - DEBUG - on stmt: branch $468pred, 482, 470
2024-06-06 03:46:39,498 - DEBUG - ==== SSA block rewrite pass on 470
2024-06-06 03:46:39,498 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,498 - DEBUG - on stmt: $const472.1 = const(int, 1)
2024-06-06 03:46:39,498 - DEBUG - on stmt: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,498 - DEBUG - on stmt: n = $binop_iadd474.2
2024-06-06 03:46:39,498 - DEBUG - replaced with: n.2 = $binop_iadd474.2
2024-06-06 03:46:39,499 - DEBUG - on stmt: jump 731
2024-06-06 03:46:39,499 - DEBUG - ==== SSA block rewrite pass on 482
2024-06-06 03:46:39,499 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,499 - DEBUG - on stmt: $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,499 - DEBUG - on stmt: $492load_attr.2 = getattr(value=$482load_global.0, attr=mean)
2024-06-06 03:46:39,499 - DEBUG - on stmt: $514load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:39,499 - DEBUG - on stmt: $const524.6 = const(int, 0)
2024-06-06 03:46:39,499 - DEBUG - on stmt: $binop_sub530.9 = n - pre_avg
2024-06-06 03:46:39,499 - DEBUG - on stmt: $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,499 - DEBUG - on stmt: $542load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:39,499 - DEBUG - on stmt: $binop_add556.15 = n + post_avg
2024-06-06 03:46:39,499 - DEBUG - on stmt: $562load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,499 - DEBUG - on stmt: $const582.18 = const(int, 0)
2024-06-06 03:46:39,500 - DEBUG - on stmt: $584binary_subscr.19 = static_getitem(value=$562load_attr.17, index=0, index_var=$const582.18, fn=<built-in function getitem>)
2024-06-06 03:46:39,500 - DEBUG - on stmt: $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,500 - DEBUG - on stmt: $596binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:39,500 - DEBUG - on stmt: $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,500 - DEBUG - on stmt: $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:39,500 - DEBUG - on stmt: avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,500 - DEBUG - on stmt: $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,500 - DEBUG - on stmt: $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,500 - DEBUG - on stmt: $binop_add632.33 = avgn + delta
2024-06-06 03:46:39,500 - DEBUG - on stmt: $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33
2024-06-06 03:46:39,500 - DEBUG - on stmt: $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,501 - DEBUG - on stmt: peaks[n] = $binop_iand640.35
2024-06-06 03:46:39,501 - DEBUG - on stmt: $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,501 - DEBUG - on stmt: bool660 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,501 - DEBUG - on stmt: $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,501 - DEBUG - on stmt: branch $660pred, 674, 662
2024-06-06 03:46:39,501 - DEBUG - ==== SSA block rewrite pass on 662
2024-06-06 03:46:39,501 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,501 - DEBUG - on stmt: $const664.1 = const(int, 1)
2024-06-06 03:46:39,501 - DEBUG - on stmt: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,501 - DEBUG - on stmt: n = $binop_iadd666.2
2024-06-06 03:46:39,501 - DEBUG - replaced with: n.3 = $binop_iadd666.2
2024-06-06 03:46:39,501 - DEBUG - on stmt: jump 731
2024-06-06 03:46:39,502 - DEBUG - ==== SSA block rewrite pass on 674
2024-06-06 03:46:39,502 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,502 - DEBUG - on stmt: $const678.2 = const(int, 1)
2024-06-06 03:46:39,502 - DEBUG - on stmt: $binop_add680.3 = wait + $const678.2
2024-06-06 03:46:39,502 - DEBUG - on stmt: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,502 - DEBUG - on stmt: n = $binop_iadd684.4
2024-06-06 03:46:39,502 - DEBUG - replaced with: n.4 = $binop_iadd684.4
2024-06-06 03:46:39,502 - DEBUG - on stmt: $694load_attr.7 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,502 - DEBUG - on stmt: $const714.8 = const(int, 0)
2024-06-06 03:46:39,502 - DEBUG - on stmt: $716binary_subscr.9 = static_getitem(value=$694load_attr.7, index=0, index_var=$const714.8, fn=<built-in function getitem>)
2024-06-06 03:46:39,502 - DEBUG - on stmt: $720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:39,502 - DEBUG - on stmt: bool724 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,502 - DEBUG - on stmt: $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,503 - DEBUG - on stmt: branch $724pred, 726, 728
2024-06-06 03:46:39,503 - DEBUG - ==== SSA block rewrite pass on 726
2024-06-06 03:46:39,503 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,503 - DEBUG - on stmt: jump 312
2024-06-06 03:46:39,503 - DEBUG - ==== SSA block rewrite pass on 728
2024-06-06 03:46:39,503 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,503 - DEBUG - on stmt: $const728.0 = const(NoneType, None)
2024-06-06 03:46:39,503 - DEBUG - on stmt: $728return_const.1 = cast(value=$const728.0)
2024-06-06 03:46:39,503 - DEBUG - on stmt: return $728return_const.1
2024-06-06 03:46:39,503 - DEBUG - ==== SSA block rewrite pass on 730
2024-06-06 03:46:39,503 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,503 - DEBUG - on stmt: $const730.0 = const(NoneType, None)
2024-06-06 03:46:39,503 - DEBUG - on stmt: $730return_const.1 = cast(value=$const730.0)
2024-06-06 03:46:39,504 - DEBUG - on stmt: return $730return_const.1
2024-06-06 03:46:39,504 - DEBUG - ==== SSA block rewrite pass on 731
2024-06-06 03:46:39,504 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,504 - DEBUG - on stmt: jump 276
2024-06-06 03:46:39,504 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {260: [<numba.core.ir.Assign object at 0x7fe9b96e3fb0>],
             272: [<numba.core.ir.Assign object at 0x7fe9b987d850>],
             470: [<numba.core.ir.Assign object at 0x7fe9b987fd10>],
             662: [<numba.core.ir.Assign object at 0x7fe9b987d460>],
             674: [<numba.core.ir.Assign object at 0x7fe9b987ff80>]})
2024-06-06 03:46:39,504 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:39,504 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,504 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:39,504 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-06 03:46:39,504 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-06 03:46:39,504 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-06 03:46:39,504 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-06 03:46:39,505 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-06 03:46:39,505 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-06 03:46:39,505 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-06 03:46:39,505 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:39,505 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-06 03:46:39,505 - DEBUG - on stmt: $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,505 - DEBUG - on stmt: $22load_attr.5 = getattr(value=$12load_global.3, attr=max)
2024-06-06 03:46:39,505 - DEBUG - on stmt: $const44.7 = const(NoneType, None)
2024-06-06 03:46:39,505 - DEBUG - on stmt: $46load_global.8 = global(min: <built-in function min>)
2024-06-06 03:46:39,505 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,505 - DEBUG - on stmt: $const80.13 = const(int, 0)
2024-06-06 03:46:39,505 - DEBUG - on stmt: $82binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const80.13, fn=<built-in function getitem>)
2024-06-06 03:46:39,506 - DEBUG - on stmt: $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,506 - DEBUG - on stmt: $94binary_slice.18 = global(slice: <class 'slice'>)
2024-06-06 03:46:39,506 - DEBUG - on stmt: $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,506 - DEBUG - on stmt: $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>)
2024-06-06 03:46:39,506 - DEBUG - on stmt: $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,506 - DEBUG - on stmt: $104compare_op.20 = $8binary_subscr.2 >= $96call.19
2024-06-06 03:46:39,506 - DEBUG - on stmt: $const110.22 = const(int, 0)
2024-06-06 03:46:39,506 - DEBUG - on stmt: peaks[0] = $104compare_op.20
2024-06-06 03:46:39,506 - DEBUG - on stmt: $const118.24 = const(int, 0)
2024-06-06 03:46:39,506 - DEBUG - on stmt: $124binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const118.24, fn=<built-in function getitem>)
2024-06-06 03:46:39,506 - DEBUG - on stmt: $const130.27 = const(int, 0)
2024-06-06 03:46:39,507 - DEBUG - on stmt: $132binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const130.27, fn=<built-in function getitem>)
2024-06-06 03:46:39,507 - DEBUG - on stmt: $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,507 - DEBUG - on stmt: $146load_attr.31 = getattr(value=$136load_global.29, attr=mean)
2024-06-06 03:46:39,507 - DEBUG - on stmt: $const168.33 = const(NoneType, None)
2024-06-06 03:46:39,507 - DEBUG - on stmt: $170load_global.34 = global(min: <built-in function min>)
2024-06-06 03:46:39,507 - DEBUG - on stmt: $184load_attr.38 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,507 - DEBUG - on stmt: $const204.39 = const(int, 0)
2024-06-06 03:46:39,507 - DEBUG - on stmt: $206binary_subscr.40 = static_getitem(value=$184load_attr.38, index=0, index_var=$const204.39, fn=<built-in function getitem>)
2024-06-06 03:46:39,507 - DEBUG - on stmt: $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,507 - DEBUG - on stmt: $218binary_slice.44 = global(slice: <class 'slice'>)
2024-06-06 03:46:39,507 - DEBUG - on stmt: $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,508 - DEBUG - on stmt: $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>)
2024-06-06 03:46:39,508 - DEBUG - on stmt: $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,508 - DEBUG - on stmt: $binop_add230.47 = $220call.45 + delta
2024-06-06 03:46:39,508 - DEBUG - on stmt: $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47
2024-06-06 03:46:39,508 - DEBUG - on stmt: $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,508 - DEBUG - on stmt: peaks[0] = $binop_iand238.49
2024-06-06 03:46:39,508 - DEBUG - on stmt: $const252.51 = const(int, 0)
2024-06-06 03:46:39,508 - DEBUG - on stmt: $254binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const252.51, fn=<built-in function getitem>)
2024-06-06 03:46:39,508 - DEBUG - on stmt: bool258 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,508 - DEBUG - on stmt: $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,508 - DEBUG - on stmt: branch $258pred, 260, 272
2024-06-06 03:46:39,509 - DEBUG - ==== SSA block rewrite pass on 260
2024-06-06 03:46:39,509 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,509 - DEBUG - on stmt: $const262.1 = const(int, 1)
2024-06-06 03:46:39,509 - DEBUG - on stmt: n = wait + $const262.1
2024-06-06 03:46:39,509 - DEBUG - on stmt: jump 276
2024-06-06 03:46:39,509 - DEBUG - ==== SSA block rewrite pass on 272
2024-06-06 03:46:39,509 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,509 - DEBUG - on stmt: n.1 = const(int, 1)
2024-06-06 03:46:39,509 - DEBUG - on stmt: jump 276
2024-06-06 03:46:39,509 - DEBUG - ==== SSA block rewrite pass on 276
2024-06-06 03:46:39,509 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,509 - DEBUG - on stmt: $280load_attr.2 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,509 - DEBUG - on stmt: $const300.3 = const(int, 0)
2024-06-06 03:46:39,509 - DEBUG - on stmt: $302binary_subscr.4 = static_getitem(value=$280load_attr.2, index=0, index_var=$const300.3, fn=<built-in function getitem>)
2024-06-06 03:46:39,510 - DEBUG - on stmt: $306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:39,510 - DEBUG - find_def var='n' stmt=$306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:39,510 - DEBUG - find_def_from_top label 276
2024-06-06 03:46:39,510 - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 276
2024-06-06 03:46:39,510 - DEBUG - find_def_from_bottom label 272
2024-06-06 03:46:39,510 - DEBUG - incoming_def n.1 = const(int, 1)
2024-06-06 03:46:39,510 - DEBUG - find_def_from_bottom label 731
2024-06-06 03:46:39,510 - DEBUG - find_def_from_top label 731
2024-06-06 03:46:39,510 - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 731
2024-06-06 03:46:39,510 - DEBUG - find_def_from_bottom label 662
2024-06-06 03:46:39,510 - DEBUG - incoming_def n.3 = $binop_iadd666.2
2024-06-06 03:46:39,511 - DEBUG - find_def_from_bottom label 470
2024-06-06 03:46:39,511 - DEBUG - incoming_def n.2 = $binop_iadd474.2
2024-06-06 03:46:39,511 - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.3, utils.py:1243), Var(n.2, utils.py:1236)], incoming_blocks=[662, 470])
2024-06-06 03:46:39,511 - DEBUG - find_def_from_bottom label 260
2024-06-06 03:46:39,511 - DEBUG - incoming_def n = wait + $const262.1
2024-06-06 03:46:39,511 - DEBUG - replaced with: $306compare_op.5 = n.5 < $302binary_subscr.4
2024-06-06 03:46:39,511 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,511 - DEBUG - on stmt: $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,511 - DEBUG - on stmt: branch $310pred, 312, 730
2024-06-06 03:46:39,511 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-06 03:46:39,511 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,511 - DEBUG - on stmt: $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,512 - DEBUG - on stmt: $322load_attr.2 = getattr(value=$312load_global.0, attr=max)
2024-06-06 03:46:39,512 - DEBUG - on stmt: $344load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:39,512 - DEBUG - on stmt: $const354.6 = const(int, 0)
2024-06-06 03:46:39,512 - DEBUG - on stmt: $binop_sub360.9 = n - pre_max
2024-06-06 03:46:39,512 - DEBUG - find_def var='n' stmt=$binop_sub360.9 = n - pre_max
2024-06-06 03:46:39,512 - DEBUG - find_def_from_top label 312
2024-06-06 03:46:39,512 - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 312
2024-06-06 03:46:39,512 - DEBUG - find_def_from_bottom label 276
2024-06-06 03:46:39,512 - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n.1, utils.py:1227), Var(n.6, utils.py:1229), Var(n, utils.py:1225)], incoming_blocks=[272, 731, 260])
2024-06-06 03:46:39,512 - DEBUG - find_def_from_bottom label 726
2024-06-06 03:46:39,512 - DEBUG - find_def_from_top label 726
2024-06-06 03:46:39,512 - DEBUG - idom 674 from label 726
2024-06-06 03:46:39,512 - DEBUG - find_def_from_bottom label 674
2024-06-06 03:46:39,513 - DEBUG - incoming_def n.4 = $binop_iadd684.4
2024-06-06 03:46:39,513 - DEBUG - replaced with: $binop_sub360.9 = n.7 - pre_max
2024-06-06 03:46:39,513 - DEBUG - on stmt: $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,513 - DEBUG - on stmt: $372load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:39,513 - DEBUG - on stmt: $binop_add386.15 = n + post_max
2024-06-06 03:46:39,513 - DEBUG - find_def var='n' stmt=$binop_add386.15 = n + post_max
2024-06-06 03:46:39,513 - DEBUG - replaced with: $binop_add386.15 = n.7 + post_max
2024-06-06 03:46:39,514 - DEBUG - on stmt: $392load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,514 - DEBUG - on stmt: $const412.18 = const(int, 0)
2024-06-06 03:46:39,514 - DEBUG - on stmt: $414binary_subscr.19 = static_getitem(value=$392load_attr.17, index=0, index_var=$const412.18, fn=<built-in function getitem>)
2024-06-06 03:46:39,514 - DEBUG - on stmt: $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,514 - DEBUG - on stmt: $426binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:39,514 - DEBUG - on stmt: $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,514 - DEBUG - on stmt: $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:39,514 - DEBUG - on stmt: maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,514 - DEBUG - on stmt: $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,514 - DEBUG - find_def var='n' stmt=$442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,515 - DEBUG - replaced with: $442binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:39,515 - DEBUG - on stmt: $448compare_op.29 = $442binary_subscr.27 == maxn
2024-06-06 03:46:39,515 - DEBUG - on stmt: peaks[n] = $448compare_op.29
2024-06-06 03:46:39,515 - DEBUG - find_def var='n' stmt=peaks[n] = $448compare_op.29
2024-06-06 03:46:39,515 - DEBUG - replaced with: peaks[n.7] = $448compare_op.29
2024-06-06 03:46:39,515 - DEBUG - on stmt: $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,515 - DEBUG - find_def var='n' stmt=$464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,515 - DEBUG - replaced with: $464binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:39,515 - DEBUG - on stmt: bool468 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,516 - DEBUG - on stmt: $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,516 - DEBUG - on stmt: branch $468pred, 482, 470
2024-06-06 03:46:39,516 - DEBUG - ==== SSA block rewrite pass on 470
2024-06-06 03:46:39,516 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,516 - DEBUG - on stmt: $const472.1 = const(int, 1)
2024-06-06 03:46:39,516 - DEBUG - on stmt: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,516 - DEBUG - find_def var='n' stmt=$binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,516 - DEBUG - find_def_from_top label 470
2024-06-06 03:46:39,517 - DEBUG - idom 312 from label 470
2024-06-06 03:46:39,517 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:39,517 - DEBUG - replaced with: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,517 - DEBUG - on stmt: n.2 = $binop_iadd474.2
2024-06-06 03:46:39,517 - DEBUG - on stmt: jump 731
2024-06-06 03:46:39,517 - DEBUG - ==== SSA block rewrite pass on 482
2024-06-06 03:46:39,517 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,517 - DEBUG - on stmt: $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,517 - DEBUG - on stmt: $492load_attr.2 = getattr(value=$482load_global.0, attr=mean)
2024-06-06 03:46:39,517 - DEBUG - on stmt: $514load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:39,517 - DEBUG - on stmt: $const524.6 = const(int, 0)
2024-06-06 03:46:39,518 - DEBUG - on stmt: $binop_sub530.9 = n - pre_avg
2024-06-06 03:46:39,518 - DEBUG - find_def var='n' stmt=$binop_sub530.9 = n - pre_avg
2024-06-06 03:46:39,518 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:39,518 - DEBUG - idom 312 from label 482
2024-06-06 03:46:39,518 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:39,518 - DEBUG - replaced with: $binop_sub530.9 = n.7 - pre_avg
2024-06-06 03:46:39,518 - DEBUG - on stmt: $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,518 - DEBUG - on stmt: $542load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:39,518 - DEBUG - on stmt: $binop_add556.15 = n + post_avg
2024-06-06 03:46:39,518 - DEBUG - find_def var='n' stmt=$binop_add556.15 = n + post_avg
2024-06-06 03:46:39,518 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:39,518 - DEBUG - idom 312 from label 482
2024-06-06 03:46:39,519 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:39,519 - DEBUG - replaced with: $binop_add556.15 = n.7 + post_avg
2024-06-06 03:46:39,519 - DEBUG - on stmt: $562load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,519 - DEBUG - on stmt: $const582.18 = const(int, 0)
2024-06-06 03:46:39,519 - DEBUG - on stmt: $584binary_subscr.19 = static_getitem(value=$562load_attr.17, index=0, index_var=$const582.18, fn=<built-in function getitem>)
2024-06-06 03:46:39,519 - DEBUG - on stmt: $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,519 - DEBUG - on stmt: $596binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:39,519 - DEBUG - on stmt: $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,519 - DEBUG - on stmt: $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:39,519 - DEBUG - on stmt: avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,520 - DEBUG - on stmt: $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,520 - DEBUG - find_def var='n' stmt=$616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,520 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:39,520 - DEBUG - idom 312 from label 482
2024-06-06 03:46:39,520 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:39,520 - DEBUG - replaced with: $616binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:39,520 - DEBUG - on stmt: $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,520 - DEBUG - find_def var='n' stmt=$624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,520 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:39,520 - DEBUG - idom 312 from label 482
2024-06-06 03:46:39,520 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:39,521 - DEBUG - replaced with: $624binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:39,521 - DEBUG - on stmt: $binop_add632.33 = avgn + delta
2024-06-06 03:46:39,521 - DEBUG - on stmt: $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33
2024-06-06 03:46:39,521 - DEBUG - on stmt: $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,521 - DEBUG - on stmt: peaks[n] = $binop_iand640.35
2024-06-06 03:46:39,521 - DEBUG - find_def var='n' stmt=peaks[n] = $binop_iand640.35
2024-06-06 03:46:39,521 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:39,521 - DEBUG - idom 312 from label 482
2024-06-06 03:46:39,521 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:39,521 - DEBUG - replaced with: peaks[n.7] = $binop_iand640.35
2024-06-06 03:46:39,522 - DEBUG - on stmt: $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,522 - DEBUG - find_def var='n' stmt=$656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:39,522 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:39,522 - DEBUG - idom 312 from label 482
2024-06-06 03:46:39,522 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:39,522 - DEBUG - replaced with: $656binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:39,522 - DEBUG - on stmt: bool660 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,522 - DEBUG - on stmt: $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,522 - DEBUG - on stmt: branch $660pred, 674, 662
2024-06-06 03:46:39,522 - DEBUG - ==== SSA block rewrite pass on 662
2024-06-06 03:46:39,522 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,522 - DEBUG - on stmt: $const664.1 = const(int, 1)
2024-06-06 03:46:39,523 - DEBUG - on stmt: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,523 - DEBUG - find_def var='n' stmt=$binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,523 - DEBUG - find_def_from_top label 662
2024-06-06 03:46:39,523 - DEBUG - idom 482 from label 662
2024-06-06 03:46:39,523 - DEBUG - find_def_from_bottom label 482
2024-06-06 03:46:39,523 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:39,523 - DEBUG - idom 312 from label 482
2024-06-06 03:46:39,523 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:39,523 - DEBUG - replaced with: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,523 - DEBUG - on stmt: n.3 = $binop_iadd666.2
2024-06-06 03:46:39,523 - DEBUG - on stmt: jump 731
2024-06-06 03:46:39,523 - DEBUG - ==== SSA block rewrite pass on 674
2024-06-06 03:46:39,524 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,524 - DEBUG - on stmt: $const678.2 = const(int, 1)
2024-06-06 03:46:39,524 - DEBUG - on stmt: $binop_add680.3 = wait + $const678.2
2024-06-06 03:46:39,524 - DEBUG - on stmt: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,524 - DEBUG - find_def var='n' stmt=$binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,524 - DEBUG - find_def_from_top label 674
2024-06-06 03:46:39,524 - DEBUG - idom 482 from label 674
2024-06-06 03:46:39,524 - DEBUG - find_def_from_bottom label 482
2024-06-06 03:46:39,524 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:39,524 - DEBUG - idom 312 from label 482
2024-06-06 03:46:39,524 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:39,524 - DEBUG - replaced with: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,524 - DEBUG - on stmt: n.4 = $binop_iadd684.4
2024-06-06 03:46:39,525 - DEBUG - on stmt: $694load_attr.7 = getattr(value=x, attr=shape)
2024-06-06 03:46:39,525 - DEBUG - on stmt: $const714.8 = const(int, 0)
2024-06-06 03:46:39,525 - DEBUG - on stmt: $716binary_subscr.9 = static_getitem(value=$694load_attr.7, index=0, index_var=$const714.8, fn=<built-in function getitem>)
2024-06-06 03:46:39,525 - DEBUG - on stmt: $720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:39,525 - DEBUG - find_def var='n' stmt=$720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:39,525 - DEBUG - replaced with: $720compare_op.10 = n.4 < $716binary_subscr.9
2024-06-06 03:46:39,525 - DEBUG - on stmt: bool724 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,525 - DEBUG - on stmt: $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,525 - DEBUG - on stmt: branch $724pred, 726, 728
2024-06-06 03:46:39,525 - DEBUG - ==== SSA block rewrite pass on 726
2024-06-06 03:46:39,525 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,526 - DEBUG - on stmt: jump 312
2024-06-06 03:46:39,526 - DEBUG - ==== SSA block rewrite pass on 728
2024-06-06 03:46:39,526 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,526 - DEBUG - on stmt: $const728.0 = const(NoneType, None)
2024-06-06 03:46:39,526 - DEBUG - on stmt: $728return_const.1 = cast(value=$const728.0)
2024-06-06 03:46:39,526 - DEBUG - on stmt: return $728return_const.1
2024-06-06 03:46:39,526 - DEBUG - ==== SSA block rewrite pass on 730
2024-06-06 03:46:39,526 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,526 - DEBUG - on stmt: $const730.0 = const(NoneType, None)
2024-06-06 03:46:39,526 - DEBUG - on stmt: $730return_const.1 = cast(value=$const730.0)
2024-06-06 03:46:39,526 - DEBUG - on stmt: return $730return_const.1
2024-06-06 03:46:39,526 - DEBUG - ==== SSA block rewrite pass on 731
2024-06-06 03:46:39,527 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b989a5a0>
2024-06-06 03:46:39,527 - DEBUG - on stmt: jump 276
2024-06-06 03:46:39,535 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          28	LOAD_CONST(arg=1, lineno=571)
          30	COMPARE_OP(arg=40, lineno=571)
          34	POP_JUMP_IF_FALSE(arg=11, lineno=571)
          36	LOAD_GLOBAL(arg=3, lineno=572)
          46	LOAD_CONST(arg=2, lineno=572)
          48	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          68	LOAD_ATTR(arg=6, lineno=575)
          88	LOAD_FAST(arg=0, lineno=575)
          90	CALL(arg=1, lineno=575)
          98	STORE_FAST(arg=1, lineno=575)
         100	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	CALL(arg=1, lineno=576)
         120	LOAD_ATTR(arg=11, lineno=576)
         140	LOAD_CONST(arg=1, lineno=576)
         142	CALL(arg=1, lineno=576)
         150	STORE_FAST(arg=2, lineno=576)
         152	PUSH_NULL(arg=None, lineno=577)
         154	LOAD_DEREF(arg=6, lineno=577)
         156	LOAD_FAST(arg=2, lineno=577)
         158	CALL(arg=1, lineno=577)
         166	POP_JUMP_IF_FALSE(arg=2, lineno=577)
         168	LOAD_FAST(arg=2, lineno=578)
         170	RETURN_VALUE(arg=None, lineno=578)
>        172	LOAD_FAST(arg=1, lineno=580)
         174	GET_ITER(arg=None, lineno=580)
>        176	FOR_ITER(arg=42, lineno=580)
         180	STORE_FAST(arg=3, lineno=580)
         182	LOAD_FAST(arg=3, lineno=581)
         184	LOAD_ATTR(arg=13, lineno=581)
         204	CALL(arg=0, lineno=581)
         212	STORE_FAST(arg=4, lineno=581)
         214	PUSH_NULL(arg=None, lineno=582)
         216	LOAD_DEREF(arg=6, lineno=582)
         218	LOAD_FAST(arg=4, lineno=582)
         220	CALL(arg=1, lineno=582)
         228	POP_JUMP_IF_FALSE(arg=4, lineno=582)
         230	LOAD_FAST(arg=4, lineno=583)
         232	SWAP(arg=2, lineno=583)
         234	POP_TOP(arg=None, lineno=583)
         236	RETURN_VALUE(arg=None, lineno=583)
>        238	PUSH_NULL(arg=None, lineno=584)
         240	LOAD_DEREF(arg=5, lineno=584)
         242	LOAD_FAST(arg=4, lineno=584)
         244	LOAD_FAST(arg=2, lineno=584)
         246	CALL(arg=2, lineno=584)
         254	POP_JUMP_IF_TRUE(arg=1, lineno=584)
         256	JUMP_BACKWARD(arg=41, lineno=584)
>        258	LOAD_FAST(arg=4, lineno=585)
         260	STORE_FAST(arg=2, lineno=585)
         262	JUMP_BACKWARD(arg=44, lineno=585)
>        264	END_FOR(arg=None, lineno=580)
         266	LOAD_FAST(arg=2, lineno=586)
         268	RETURN_VALUE(arg=None, lineno=586)
2024-06-06 03:46:39,535 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:39,535 - DEBUG - stack: []
2024-06-06 03:46:39,535 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:39,536 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-06-06 03:46:39,536 - DEBUG - stack []
2024-06-06 03:46:39,536 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-06-06 03:46:39,536 - DEBUG - stack []
2024-06-06 03:46:39,536 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-06-06 03:46:39,536 - DEBUG - stack []
2024-06-06 03:46:39,536 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-06-06 03:46:39,536 - DEBUG - stack []
2024-06-06 03:46:39,536 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-06-06 03:46:39,536 - DEBUG - stack ['$a6.0']
2024-06-06 03:46:39,536 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=571)
2024-06-06 03:46:39,537 - DEBUG - stack ['$8load_attr.1']
2024-06-06 03:46:39,537 - DEBUG - dispatch pc=30, inst=COMPARE_OP(arg=40, lineno=571)
2024-06-06 03:46:39,537 - DEBUG - stack ['$8load_attr.1', '$const28.2']
2024-06-06 03:46:39,537 - DEBUG - dispatch pc=34, inst=POP_JUMP_IF_FALSE(arg=11, lineno=571)
2024-06-06 03:46:39,537 - DEBUG - stack ['$30compare_op.3']
2024-06-06 03:46:39,537 - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:39,537 - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-06-06 03:46:39,537 - DEBUG - stack: []
2024-06-06 03:46:39,537 - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2024-06-06 03:46:39,537 - DEBUG - dispatch pc=36, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-06-06 03:46:39,537 - DEBUG - stack []
2024-06-06 03:46:39,537 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=2, lineno=572)
2024-06-06 03:46:39,537 - DEBUG - stack ['$null$36.1', '$36load_global.0']
2024-06-06 03:46:39,538 - DEBUG - dispatch pc=48, inst=CALL(arg=1, lineno=572)
2024-06-06 03:46:39,538 - DEBUG - stack ['$null$36.1', '$36load_global.0', '$const46.2']
2024-06-06 03:46:39,538 - DEBUG - dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-06-06 03:46:39,538 - DEBUG - stack ['$48call.3']
2024-06-06 03:46:39,538 - DEBUG - end state. edges=[]
2024-06-06 03:46:39,538 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-06-06 03:46:39,538 - DEBUG - stack: []
2024-06-06 03:46:39,538 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-06-06 03:46:39,538 - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-06-06 03:46:39,538 - DEBUG - stack []
2024-06-06 03:46:39,538 - DEBUG - dispatch pc=68, inst=LOAD_ATTR(arg=6, lineno=575)
2024-06-06 03:46:39,538 - DEBUG - stack ['$null$58.1', '$58load_global.0']
2024-06-06 03:46:39,539 - DEBUG - dispatch pc=88, inst=LOAD_FAST(arg=0, lineno=575)
2024-06-06 03:46:39,539 - DEBUG - stack ['$null$58.1', '$68load_attr.2']
2024-06-06 03:46:39,539 - DEBUG - dispatch pc=90, inst=CALL(arg=1, lineno=575)
2024-06-06 03:46:39,539 - DEBUG - stack ['$null$58.1', '$68load_attr.2', '$a88.3']
2024-06-06 03:46:39,539 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=1, lineno=575)
2024-06-06 03:46:39,539 - DEBUG - stack ['$90call.4']
2024-06-06 03:46:39,539 - DEBUG - dispatch pc=100, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-06-06 03:46:39,539 - DEBUG - stack []
2024-06-06 03:46:39,539 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-06-06 03:46:39,539 - DEBUG - stack ['$null$100.6', '$100load_global.5']
2024-06-06 03:46:39,539 - DEBUG - dispatch pc=112, inst=CALL(arg=1, lineno=576)
2024-06-06 03:46:39,539 - DEBUG - stack ['$null$100.6', '$100load_global.5', '$it110.7']
2024-06-06 03:46:39,539 - DEBUG - dispatch pc=120, inst=LOAD_ATTR(arg=11, lineno=576)
2024-06-06 03:46:39,540 - DEBUG - stack ['$112call.8']
2024-06-06 03:46:39,540 - DEBUG - dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=576)
2024-06-06 03:46:39,540 - DEBUG - stack ['$null$120.9', '$120load_attr.10']
2024-06-06 03:46:39,540 - DEBUG - dispatch pc=142, inst=CALL(arg=1, lineno=576)
2024-06-06 03:46:39,540 - DEBUG - stack ['$null$120.9', '$120load_attr.10', '$const140.11']
2024-06-06 03:46:39,540 - DEBUG - dispatch pc=150, inst=STORE_FAST(arg=2, lineno=576)
2024-06-06 03:46:39,540 - DEBUG - stack ['$142call.12']
2024-06-06 03:46:39,540 - DEBUG - dispatch pc=152, inst=PUSH_NULL(arg=None, lineno=577)
2024-06-06 03:46:39,540 - DEBUG - stack []
2024-06-06 03:46:39,540 - DEBUG - dispatch pc=154, inst=LOAD_DEREF(arg=6, lineno=577)
2024-06-06 03:46:39,540 - DEBUG - stack ['$null$152.13']
2024-06-06 03:46:39,540 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=2, lineno=577)
2024-06-06 03:46:39,541 - DEBUG - stack ['$null$152.13', '$154load_deref.14']
2024-06-06 03:46:39,541 - DEBUG - dispatch pc=158, inst=CALL(arg=1, lineno=577)
2024-06-06 03:46:39,541 - DEBUG - stack ['$null$152.13', '$154load_deref.14', '$max_value156.15']
2024-06-06 03:46:39,541 - DEBUG - dispatch pc=166, inst=POP_JUMP_IF_FALSE(arg=2, lineno=577)
2024-06-06 03:46:39,541 - DEBUG - stack ['$158call.16']
2024-06-06 03:46:39,541 - DEBUG - end state. edges=[Edge(pc=168, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:39,541 - DEBUG - pending: deque([State(pc_initial=168 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
2024-06-06 03:46:39,541 - DEBUG - stack: []
2024-06-06 03:46:39,541 - DEBUG - state.pc_initial: State(pc_initial=168 nstack_initial=0)
2024-06-06 03:46:39,541 - DEBUG - dispatch pc=168, inst=LOAD_FAST(arg=2, lineno=578)
2024-06-06 03:46:39,541 - DEBUG - stack []
2024-06-06 03:46:39,541 - DEBUG - dispatch pc=170, inst=RETURN_VALUE(arg=None, lineno=578)
2024-06-06 03:46:39,542 - DEBUG - stack ['$max_value168.0']
2024-06-06 03:46:39,542 - DEBUG - end state. edges=[]
2024-06-06 03:46:39,542 - DEBUG - pending: deque([State(pc_initial=172 nstack_initial=0)])
2024-06-06 03:46:39,542 - DEBUG - stack: []
2024-06-06 03:46:39,542 - DEBUG - state.pc_initial: State(pc_initial=172 nstack_initial=0)
2024-06-06 03:46:39,542 - DEBUG - dispatch pc=172, inst=LOAD_FAST(arg=1, lineno=580)
2024-06-06 03:46:39,542 - DEBUG - stack []
2024-06-06 03:46:39,542 - DEBUG - dispatch pc=174, inst=GET_ITER(arg=None, lineno=580)
2024-06-06 03:46:39,542 - DEBUG - stack ['$it172.0']
2024-06-06 03:46:39,542 - DEBUG - end state. edges=[Edge(pc=176, stack=('$174get_iter.1',), blockstack=(), npush=0)]
2024-06-06 03:46:39,542 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:39,542 - DEBUG - stack: ['$phi176.0']
2024-06-06 03:46:39,542 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=1)
2024-06-06 03:46:39,543 - DEBUG - dispatch pc=176, inst=FOR_ITER(arg=42, lineno=580)
2024-06-06 03:46:39,543 - DEBUG - stack ['$phi176.0']
2024-06-06 03:46:39,543 - DEBUG - end state. edges=[Edge(pc=264, stack=('$phi176.0', '$176for_iter.2'), blockstack=(), npush=0), Edge(pc=180, stack=('$phi176.0', '$176for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:39,543 - DEBUG - pending: deque([State(pc_initial=264 nstack_initial=2), State(pc_initial=180 nstack_initial=2)])
2024-06-06 03:46:39,543 - DEBUG - stack: ['$phi264.0', '$phi264.1']
2024-06-06 03:46:39,543 - DEBUG - state.pc_initial: State(pc_initial=264 nstack_initial=2)
2024-06-06 03:46:39,543 - DEBUG - dispatch pc=264, inst=END_FOR(arg=None, lineno=580)
2024-06-06 03:46:39,543 - DEBUG - stack ['$phi264.0', '$phi264.1']
2024-06-06 03:46:39,543 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=2, lineno=586)
2024-06-06 03:46:39,543 - DEBUG - stack []
2024-06-06 03:46:39,543 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=586)
2024-06-06 03:46:39,544 - DEBUG - stack ['$max_value266.2']
2024-06-06 03:46:39,544 - DEBUG - end state. edges=[]
2024-06-06 03:46:39,544 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=2)])
2024-06-06 03:46:39,544 - DEBUG - stack: ['$phi180.0', '$phi180.1']
2024-06-06 03:46:39,544 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=2)
2024-06-06 03:46:39,544 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=3, lineno=580)
2024-06-06 03:46:39,544 - DEBUG - stack ['$phi180.0', '$phi180.1']
2024-06-06 03:46:39,544 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=3, lineno=581)
2024-06-06 03:46:39,544 - DEBUG - stack ['$phi180.0']
2024-06-06 03:46:39,544 - DEBUG - dispatch pc=184, inst=LOAD_ATTR(arg=13, lineno=581)
2024-06-06 03:46:39,544 - DEBUG - stack ['$phi180.0', '$view182.2']
2024-06-06 03:46:39,544 - DEBUG - dispatch pc=204, inst=CALL(arg=0, lineno=581)
2024-06-06 03:46:39,544 - DEBUG - stack ['$phi180.0', '$null$184.3', '$184load_attr.4']
2024-06-06 03:46:39,545 - DEBUG - dispatch pc=212, inst=STORE_FAST(arg=4, lineno=581)
2024-06-06 03:46:39,545 - DEBUG - stack ['$phi180.0', '$204call.5']
2024-06-06 03:46:39,545 - DEBUG - dispatch pc=214, inst=PUSH_NULL(arg=None, lineno=582)
2024-06-06 03:46:39,545 - DEBUG - stack ['$phi180.0']
2024-06-06 03:46:39,545 - DEBUG - dispatch pc=216, inst=LOAD_DEREF(arg=6, lineno=582)
2024-06-06 03:46:39,545 - DEBUG - stack ['$phi180.0', '$null$214.6']
2024-06-06 03:46:39,545 - DEBUG - dispatch pc=218, inst=LOAD_FAST(arg=4, lineno=582)
2024-06-06 03:46:39,545 - DEBUG - stack ['$phi180.0', '$null$214.6', '$216load_deref.7']
2024-06-06 03:46:39,546 - DEBUG - dispatch pc=220, inst=CALL(arg=1, lineno=582)
2024-06-06 03:46:39,546 - DEBUG - stack ['$phi180.0', '$null$214.6', '$216load_deref.7', '$v218.8']
2024-06-06 03:46:39,546 - DEBUG - dispatch pc=228, inst=POP_JUMP_IF_FALSE(arg=4, lineno=582)
2024-06-06 03:46:39,546 - DEBUG - stack ['$phi180.0', '$220call.9']
2024-06-06 03:46:39,546 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi180.0',), blockstack=(), npush=0), Edge(pc=238, stack=('$phi180.0',), blockstack=(), npush=0)]
2024-06-06 03:46:39,546 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1), State(pc_initial=238 nstack_initial=1)])
2024-06-06 03:46:39,546 - DEBUG - stack: ['$phi230.0']
2024-06-06 03:46:39,546 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-06 03:46:39,546 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=4, lineno=583)
2024-06-06 03:46:39,547 - DEBUG - stack ['$phi230.0']
2024-06-06 03:46:39,547 - DEBUG - dispatch pc=232, inst=SWAP(arg=2, lineno=583)
2024-06-06 03:46:39,547 - DEBUG - stack ['$phi230.0', '$v230.1']
2024-06-06 03:46:39,547 - DEBUG - dispatch pc=234, inst=POP_TOP(arg=None, lineno=583)
2024-06-06 03:46:39,547 - DEBUG - stack ['$v230.1', '$phi230.0']
2024-06-06 03:46:39,547 - DEBUG - dispatch pc=236, inst=RETURN_VALUE(arg=None, lineno=583)
2024-06-06 03:46:39,547 - DEBUG - stack ['$v230.1']
2024-06-06 03:46:39,547 - DEBUG - end state. edges=[]
2024-06-06 03:46:39,547 - DEBUG - pending: deque([State(pc_initial=238 nstack_initial=1)])
2024-06-06 03:46:39,547 - DEBUG - stack: ['$phi238.0']
2024-06-06 03:46:39,548 - DEBUG - state.pc_initial: State(pc_initial=238 nstack_initial=1)
2024-06-06 03:46:39,548 - DEBUG - dispatch pc=238, inst=PUSH_NULL(arg=None, lineno=584)
2024-06-06 03:46:39,548 - DEBUG - stack ['$phi238.0']
2024-06-06 03:46:39,548 - DEBUG - dispatch pc=240, inst=LOAD_DEREF(arg=5, lineno=584)
2024-06-06 03:46:39,548 - DEBUG - stack ['$phi238.0', '$null$238.1']
2024-06-06 03:46:39,548 - DEBUG - dispatch pc=242, inst=LOAD_FAST(arg=4, lineno=584)
2024-06-06 03:46:39,548 - DEBUG - stack ['$phi238.0', '$null$238.1', '$240load_deref.2']
2024-06-06 03:46:39,548 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=2, lineno=584)
2024-06-06 03:46:39,548 - DEBUG - stack ['$phi238.0', '$null$238.1', '$240load_deref.2', '$v242.3']
2024-06-06 03:46:39,548 - DEBUG - dispatch pc=246, inst=CALL(arg=2, lineno=584)
2024-06-06 03:46:39,549 - DEBUG - stack ['$phi238.0', '$null$238.1', '$240load_deref.2', '$v242.3', '$max_value244.4']
2024-06-06 03:46:39,549 - DEBUG - dispatch pc=254, inst=POP_JUMP_IF_TRUE(arg=1, lineno=584)
2024-06-06 03:46:39,549 - DEBUG - stack ['$phi238.0', '$246call.5']
2024-06-06 03:46:39,549 - DEBUG - end state. edges=[Edge(pc=256, stack=('$phi238.0',), blockstack=(), npush=0), Edge(pc=258, stack=('$phi238.0',), blockstack=(), npush=0)]
2024-06-06 03:46:39,549 - DEBUG - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=258 nstack_initial=1)])
2024-06-06 03:46:39,549 - DEBUG - stack: ['$phi256.0']
2024-06-06 03:46:39,549 - DEBUG - state.pc_initial: State(pc_initial=256 nstack_initial=1)
2024-06-06 03:46:39,549 - DEBUG - dispatch pc=256, inst=JUMP_BACKWARD(arg=41, lineno=584)
2024-06-06 03:46:39,549 - DEBUG - stack ['$phi256.0']
2024-06-06 03:46:39,550 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi256.0',), blockstack=(), npush=0)]
2024-06-06 03:46:39,550 - DEBUG - pending: deque([State(pc_initial=258 nstack_initial=1), State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:39,550 - DEBUG - stack: ['$phi258.0']
2024-06-06 03:46:39,550 - DEBUG - state.pc_initial: State(pc_initial=258 nstack_initial=1)
2024-06-06 03:46:39,550 - DEBUG - dispatch pc=258, inst=LOAD_FAST(arg=4, lineno=585)
2024-06-06 03:46:39,550 - DEBUG - stack ['$phi258.0']
2024-06-06 03:46:39,550 - DEBUG - dispatch pc=260, inst=STORE_FAST(arg=2, lineno=585)
2024-06-06 03:46:39,550 - DEBUG - stack ['$phi258.0', '$v258.1']
2024-06-06 03:46:39,550 - DEBUG - dispatch pc=262, inst=JUMP_BACKWARD(arg=44, lineno=585)
2024-06-06 03:46:39,550 - DEBUG - stack ['$phi258.0']
2024-06-06 03:46:39,551 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi258.0',), blockstack=(), npush=0)]
2024-06-06 03:46:39,551 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:39,551 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:39,551 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:39,551 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=168 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): {'$phi176.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=230 nstack_initial=1): set(),
             State(pc_initial=238 nstack_initial=1): set(),
             State(pc_initial=256 nstack_initial=1): set(),
             State(pc_initial=258 nstack_initial=1): set(),
             State(pc_initial=264 nstack_initial=2): set()})
2024-06-06 03:46:39,552 - DEBUG - defmap: {'$phi176.0': State(pc_initial=172 nstack_initial=0),
 '$phi180.1': State(pc_initial=176 nstack_initial=1),
 '$phi264.1': State(pc_initial=176 nstack_initial=1)}
2024-06-06 03:46:39,553 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi256.0',
                            State(pc_initial=256 nstack_initial=1)),
                           ('$phi258.0',
                            State(pc_initial=258 nstack_initial=1))},
             '$phi180.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi238.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi256.0': {('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi258.0': {('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi264.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:39,554 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi180.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi238.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi256.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi258.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:39,556 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi238.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi256.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi258.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:39,558 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi238.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi256.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi258.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:39,559 - DEBUG - keep phismap: {'$phi176.0': {('$174get_iter.1', State(pc_initial=172 nstack_initial=0))},
 '$phi180.1': {('$176for_iter.2', State(pc_initial=176 nstack_initial=1))}}
2024-06-06 03:46:39,559 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=172 nstack_initial=0): {'$phi176.0': '$174get_iter.1'},
             State(pc_initial=176 nstack_initial=1): {'$phi180.1': '$176for_iter.2'}})
2024-06-06 03:46:39,560 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:39,560 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (28, {'res': '$const28.2'}), (30, {'lhs': '$8load_attr.1', 'rhs': '$const28.2', 'res': '$30compare_op.3'}), (34, {'pred': '$30compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: (), 58: ()})
2024-06-06 03:46:39,560 - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'idx': 1, 'res': '$36load_global.0'}), (46, {'res': '$const46.2'}), (48, {'func': '$36load_global.0', 'args': ['$const46.2'], 'kw_names': None, 'res': '$48call.3'}), (56, {'exc': '$48call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:39,560 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (68, {'item': '$58load_global.0', 'res': '$68load_attr.2'}), (88, {'res': '$a88.3'}), (90, {'func': '$68load_attr.2', 'args': ['$a88.3'], 'kw_names': None, 'res': '$90call.4'}), (98, {'value': '$90call.4'}), (100, {'idx': 4, 'res': '$100load_global.5'}), (110, {'res': '$it110.7'}), (112, {'func': '$100load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$112call.8'}), (120, {'item': '$112call.8', 'res': '$120load_attr.10'}), (140, {'res': '$const140.11'}), (142, {'func': '$120load_attr.10', 'args': ['$const140.11'], 'kw_names': None, 'res': '$142call.12'}), (150, {'value': '$142call.12'}), (152, {}), (154, {'res': '$154load_deref.14'}), (156, {'res': '$max_value156.15'}), (158, {'func': '$154load_deref.14', 'args': ['$max_value156.15'], 'kw_names': None, 'res': '$158call.16'}), (166, {'pred': '$158call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={168: (), 172: ()})
2024-06-06 03:46:39,561 - DEBUG - block_infos State(pc_initial=168 nstack_initial=0):
AdaptBlockInfo(insts=((168, {'res': '$max_value168.0'}), (170, {'retval': '$max_value168.0', 'castval': '$170return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:39,561 - DEBUG - block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$it172.0'}), (174, {'value': '$it172.0', 'res': '$174get_iter.1'})), outgoing_phis={'$phi176.0': '$174get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.1',)})
2024-06-06 03:46:39,561 - DEBUG - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {'iterator': '$phi176.0', 'pair': '$176for_iter.1', 'indval': '$176for_iter.2', 'pred': '$176for_iter.3'}),), outgoing_phis={'$phi180.1': '$176for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={264: ('$phi176.0', '$176for_iter.2'), 180: ('$phi176.0', '$176for_iter.2')})
2024-06-06 03:46:39,561 - DEBUG - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$view182.2'}), (184, {'item': '$view182.2', 'res': '$184load_attr.4'}), (204, {'func': '$184load_attr.4', 'args': [], 'kw_names': None, 'res': '$204call.5'}), (212, {'value': '$204call.5'}), (214, {}), (216, {'res': '$216load_deref.7'}), (218, {'res': '$v218.8'}), (220, {'func': '$216load_deref.7', 'args': ['$v218.8'], 'kw_names': None, 'res': '$220call.9'}), (228, {'pred': '$220call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi180.0',), 238: ('$phi180.0',)})
2024-06-06 03:46:39,561 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'res': '$v230.1'}), (236, {'retval': '$v230.1', 'castval': '$236return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:39,561 - DEBUG - block_infos State(pc_initial=238 nstack_initial=1):
AdaptBlockInfo(insts=((238, {}), (240, {'res': '$240load_deref.2'}), (242, {'res': '$v242.3'}), (244, {'res': '$max_value244.4'}), (246, {'func': '$240load_deref.2', 'args': ['$v242.3', '$max_value244.4'], 'kw_names': None, 'res': '$246call.5'}), (254, {'pred': '$246call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={256: ('$phi238.0',), 258: ('$phi238.0',)})
2024-06-06 03:46:39,561 - DEBUG - block_infos State(pc_initial=256 nstack_initial=1):
AdaptBlockInfo(insts=((256, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi256.0',)})
2024-06-06 03:46:39,561 - DEBUG - block_infos State(pc_initial=258 nstack_initial=1):
AdaptBlockInfo(insts=((258, {'res': '$v258.1'}), (260, {'value': '$v258.1'}), (262, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi258.0',)})
2024-06-06 03:46:39,562 - DEBUG - block_infos State(pc_initial=264 nstack_initial=2):
AdaptBlockInfo(insts=((266, {'res': '$max_value266.2'}), (268, {'retval': '$max_value266.2', 'castval': '$268return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:39,563 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const28.2 = const(int, 0)               ['$const28.2']
    $30compare_op.3 = $8load_attr.1 == $const28.2 ['$30compare_op.3', '$8load_attr.1', '$const28.2']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$34pred', 'bool34']
    branch $34pred, 36, 58                   ['$34pred']
label 36:
    $36load_global.0 = global(ValueError: <class 'ValueError'>) ['$36load_global.0']
    $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const46.2']
    $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_global.0', '$48call.3', '$const46.2']
    raise $48call.3                          ['$48call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$58load_global.0']
    $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$68load_attr.2']
    it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_attr.2', 'a', 'it']
    $100load_global.5 = global(next: <built-in function next>) ['$100load_global.5']
    $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.5', '$112call.8', 'it']
    $120load_attr.10 = getattr(value=$112call.8, attr=take) ['$112call.8', '$120load_attr.10']
    $const140.11 = const(int, 0)             ['$const140.11']
    max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_attr.10', '$const140.11', 'max_value']
    $154load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>) ['$154load_deref.14']
    $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$154load_deref.14', '$158call.16', 'max_value']
    bool166 = global(bool: <class 'bool'>)   ['bool166']
    $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$158call.16', '$166pred', 'bool166']
    branch $166pred, 168, 172                ['$166pred']
label 168:
    $170return_value.1 = cast(value=max_value) ['$170return_value.1', 'max_value']
    return $170return_value.1                ['$170return_value.1']
label 172:
    $174get_iter.1 = getiter(value=it)       ['$174get_iter.1', 'it']
    $phi176.0 = $174get_iter.1               ['$174get_iter.1', '$phi176.0']
    jump 176                                 []
label 176:
    $176for_iter.1 = iternext(value=$phi176.0) ['$176for_iter.1', '$phi176.0']
    $176for_iter.2 = pair_first(value=$176for_iter.1) ['$176for_iter.1', '$176for_iter.2']
    $176for_iter.3 = pair_second(value=$176for_iter.1) ['$176for_iter.1', '$176for_iter.3']
    $phi180.1 = $176for_iter.2               ['$176for_iter.2', '$phi180.1']
    branch $176for_iter.3, 180, 264          ['$176for_iter.3']
label 180:
    view = $phi180.1                         ['$phi180.1', 'view']
    $184load_attr.4 = getattr(value=view, attr=item) ['$184load_attr.4', 'view']
    v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$184load_attr.4', 'v']
    $216load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>) ['$216load_deref.7']
    $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$216load_deref.7', '$220call.9', 'v']
    bool228 = global(bool: <class 'bool'>)   ['bool228']
    $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$220call.9', '$228pred', 'bool228']
    branch $228pred, 230, 238                ['$228pred']
label 230:
    $236return_value.2 = cast(value=v)       ['$236return_value.2', 'v']
    return $236return_value.2                ['$236return_value.2']
label 238:
    $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>) ['$240load_deref.2']
    $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$240load_deref.2', '$246call.5', 'max_value', 'v']
    bool254 = global(bool: <class 'bool'>)   ['bool254']
    $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$246call.5', '$254pred', 'bool254']
    branch $254pred, 258, 256                ['$254pred']
label 256:
    jump 176                                 []
label 258:
    max_value = v                            ['max_value', 'v']
    jump 176                                 []
label 264:
    $268return_value.3 = cast(value=max_value) ['$268return_value.3', 'max_value']
    return $268return_value.3                ['$268return_value.3']

2024-06-06 03:46:39,574 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:39,574 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9cb2c30>
2024-06-06 03:46:39,575 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:39,575 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-06 03:46:39,575 - DEBUG - on stmt: $const28.2 = const(int, 0)
2024-06-06 03:46:39,575 - DEBUG - on stmt: $30compare_op.3 = $8load_attr.1 == $const28.2
2024-06-06 03:46:39,575 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,575 - DEBUG - on stmt: $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,575 - DEBUG - on stmt: branch $34pred, 36, 58
2024-06-06 03:46:39,575 - DEBUG - ==== SSA block analysis pass on 36
2024-06-06 03:46:39,575 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9cb2c30>
2024-06-06 03:46:39,575 - DEBUG - on stmt: $36load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:39,575 - DEBUG - on stmt: $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-06 03:46:39,575 - DEBUG - on stmt: $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,576 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-06 03:46:39,576 - DEBUG - ==== SSA block analysis pass on 58
2024-06-06 03:46:39,576 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9cb2c30>
2024-06-06 03:46:39,576 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,576 - DEBUG - on stmt: $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-06 03:46:39,576 - DEBUG - on stmt: it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,576 - DEBUG - on stmt: $100load_global.5 = global(next: <built-in function next>)
2024-06-06 03:46:39,576 - DEBUG - on stmt: $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,576 - DEBUG - on stmt: $120load_attr.10 = getattr(value=$112call.8, attr=take)
2024-06-06 03:46:39,576 - DEBUG - on stmt: $const140.11 = const(int, 0)
2024-06-06 03:46:39,576 - DEBUG - on stmt: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,576 - DEBUG - on stmt: $154load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-06 03:46:39,577 - DEBUG - on stmt: $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,577 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,577 - DEBUG - on stmt: $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,577 - DEBUG - on stmt: branch $166pred, 168, 172
2024-06-06 03:46:39,577 - DEBUG - ==== SSA block analysis pass on 168
2024-06-06 03:46:39,577 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9cb2c30>
2024-06-06 03:46:39,577 - DEBUG - on stmt: $170return_value.1 = cast(value=max_value)
2024-06-06 03:46:39,577 - DEBUG - on stmt: return $170return_value.1
2024-06-06 03:46:39,577 - DEBUG - ==== SSA block analysis pass on 172
2024-06-06 03:46:39,577 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9cb2c30>
2024-06-06 03:46:39,577 - DEBUG - on stmt: $174get_iter.1 = getiter(value=it)
2024-06-06 03:46:39,577 - DEBUG - on stmt: $phi176.0 = $174get_iter.1
2024-06-06 03:46:39,578 - DEBUG - on stmt: jump 176
2024-06-06 03:46:39,578 - DEBUG - ==== SSA block analysis pass on 176
2024-06-06 03:46:39,578 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9cb2c30>
2024-06-06 03:46:39,578 - DEBUG - on stmt: $176for_iter.1 = iternext(value=$phi176.0)
2024-06-06 03:46:39,578 - DEBUG - on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
2024-06-06 03:46:39,578 - DEBUG - on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
2024-06-06 03:46:39,578 - DEBUG - on stmt: $phi180.1 = $176for_iter.2
2024-06-06 03:46:39,578 - DEBUG - on stmt: branch $176for_iter.3, 180, 264
2024-06-06 03:46:39,578 - DEBUG - ==== SSA block analysis pass on 180
2024-06-06 03:46:39,578 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9cb2c30>
2024-06-06 03:46:39,578 - DEBUG - on stmt: view = $phi180.1
2024-06-06 03:46:39,578 - DEBUG - on stmt: $184load_attr.4 = getattr(value=view, attr=item)
2024-06-06 03:46:39,579 - DEBUG - on stmt: v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,579 - DEBUG - on stmt: $216load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-06 03:46:39,579 - DEBUG - on stmt: $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,579 - DEBUG - on stmt: bool228 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,579 - DEBUG - on stmt: $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,579 - DEBUG - on stmt: branch $228pred, 230, 238
2024-06-06 03:46:39,579 - DEBUG - ==== SSA block analysis pass on 230
2024-06-06 03:46:39,579 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9cb2c30>
2024-06-06 03:46:39,579 - DEBUG - on stmt: $236return_value.2 = cast(value=v)
2024-06-06 03:46:39,579 - DEBUG - on stmt: return $236return_value.2
2024-06-06 03:46:39,579 - DEBUG - ==== SSA block analysis pass on 238
2024-06-06 03:46:39,579 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9cb2c30>
2024-06-06 03:46:39,580 - DEBUG - on stmt: $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>)
2024-06-06 03:46:39,580 - DEBUG - on stmt: $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,580 - DEBUG - on stmt: bool254 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,580 - DEBUG - on stmt: $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,580 - DEBUG - on stmt: branch $254pred, 258, 256
2024-06-06 03:46:39,580 - DEBUG - ==== SSA block analysis pass on 256
2024-06-06 03:46:39,580 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9cb2c30>
2024-06-06 03:46:39,580 - DEBUG - on stmt: jump 265
2024-06-06 03:46:39,580 - DEBUG - ==== SSA block analysis pass on 258
2024-06-06 03:46:39,580 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9cb2c30>
2024-06-06 03:46:39,580 - DEBUG - on stmt: max_value = v
2024-06-06 03:46:39,580 - DEBUG - on stmt: jump 265
2024-06-06 03:46:39,580 - DEBUG - ==== SSA block analysis pass on 264
2024-06-06 03:46:39,581 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9cb2c30>
2024-06-06 03:46:39,581 - DEBUG - on stmt: $268return_value.3 = cast(value=max_value)
2024-06-06 03:46:39,581 - DEBUG - on stmt: return $268return_value.3
2024-06-06 03:46:39,581 - DEBUG - ==== SSA block analysis pass on 265
2024-06-06 03:46:39,581 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9cb2c30>
2024-06-06 03:46:39,581 - DEBUG - on stmt: jump 176
2024-06-06 03:46:39,583 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100load_global.5': [(<numba.core.ir.Assign object at 0x7fe9b9c58470>,
                                    58)],
             '$112call.8': [(<numba.core.ir.Assign object at 0x7fe9b9c58710>,
                             58)],
             '$120load_attr.10': [(<numba.core.ir.Assign object at 0x7fe9b9c58830>,
                                   58)],
             '$154load_deref.14': [(<numba.core.ir.Assign object at 0x7fe9b9c58d10>,
                                    58)],
             '$158call.16': [(<numba.core.ir.Assign object at 0x7fe9b9c58fb0>,
                              58)],
             '$166pred': [(<numba.core.ir.Assign object at 0x7fe9b9c59220>,
                           58)],
             '$170return_value.1': [(<numba.core.ir.Assign object at 0x7fe9b9c59370>,
                                     168)],
             '$174get_iter.1': [(<numba.core.ir.Assign object at 0x7fe9b9c59610>,
                                 172)],
             '$176for_iter.1': [(<numba.core.ir.Assign object at 0x7fe9b9c598b0>,
                                 176)],
             '$176for_iter.2': [(<numba.core.ir.Assign object at 0x7fe9b9c599d0>,
                                 176)],
             '$176for_iter.3': [(<numba.core.ir.Assign object at 0x7fe9b9c59af0>,
                                 176)],
             '$184load_attr.4': [(<numba.core.ir.Assign object at 0x7fe9b9c59fa0>,
                                  180)],
             '$216load_deref.7': [(<numba.core.ir.Assign object at 0x7fe9b9c5a330>,
                                   180)],
             '$220call.9': [(<numba.core.ir.Assign object at 0x7fe9b9c5a5d0>,
                             180)],
             '$228pred': [(<numba.core.ir.Assign object at 0x7fe9b9c5a840>,
                           180)],
             '$236return_value.2': [(<numba.core.ir.Assign object at 0x7fe9b9c5aa50>,
                                     230)],
             '$240load_deref.2': [(<numba.core.ir.Assign object at 0x7fe9b9c5abd0>,
                                   238)],
             '$246call.5': [(<numba.core.ir.Assign object at 0x7fe9b9c5af60>,
                             238)],
             '$254pred': [(<numba.core.ir.Assign object at 0x7fe9b9c5b1d0>,
                           238)],
             '$268return_value.3': [(<numba.core.ir.Assign object at 0x7fe9b9c5b740>,
                                     264)],
             '$30compare_op.3': [(<numba.core.ir.Assign object at 0x7fe9b9cb34d0>,
                                  0)],
             '$34pred': [(<numba.core.ir.Assign object at 0x7fe9b9cb3770>, 0)],
             '$36load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9cb3950>,
                                   36)],
             '$48call.3': [(<numba.core.ir.Assign object at 0x7fe9b9cb3c20>,
                            36)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9cb3e30>,
                                   58)],
             '$68load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b9cb3f80>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x7fe9b9cb2fc0>,
                                0)],
             '$const140.11': [(<numba.core.ir.Assign object at 0x7fe9b9c58980>,
                               58)],
             '$const28.2': [(<numba.core.ir.Assign object at 0x7fe9b9cb3350>,
                             0)],
             '$const46.2': [(<numba.core.ir.Assign object at 0x7fe9b9cb3aa0>,
                             36)],
             '$phi176.0': [(<numba.core.ir.Assign object at 0x7fe9b9c58320>,
                            172)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x7fe9b9c59bb0>,
                            176)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b9cb30b0>, 0)],
             'bool166': [(<numba.core.ir.Assign object at 0x7fe9b9c59100>, 58)],
             'bool228': [(<numba.core.ir.Assign object at 0x7fe9b9c5a720>,
                          180)],
             'bool254': [(<numba.core.ir.Assign object at 0x7fe9b9c5b0b0>,
                          238)],
             'bool34': [(<numba.core.ir.Assign object at 0x7fe9b9cb3620>, 0)],
             'it': [(<numba.core.ir.Assign object at 0x7fe9b9c58260>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x7fe9b9c58b30>,
                            58),
                           (<numba.core.ir.Assign object at 0x7fe9b9c5b470>,
                            258)],
             'v': [(<numba.core.ir.Assign object at 0x7fe9b9c5a150>, 180)],
             'view': [(<numba.core.ir.Assign object at 0x7fe9b9c59d60>, 180)]})
2024-06-06 03:46:39,584 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9cb2c30>
2024-06-06 03:46:39,584 - DEBUG - Fix SSA violator on var max_value
2024-06-06 03:46:39,584 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:39,584 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,584 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:39,584 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-06 03:46:39,584 - DEBUG - on stmt: $const28.2 = const(int, 0)
2024-06-06 03:46:39,584 - DEBUG - on stmt: $30compare_op.3 = $8load_attr.1 == $const28.2
2024-06-06 03:46:39,584 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,584 - DEBUG - on stmt: $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,584 - DEBUG - on stmt: branch $34pred, 36, 58
2024-06-06 03:46:39,584 - DEBUG - ==== SSA block rewrite pass on 36
2024-06-06 03:46:39,585 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,585 - DEBUG - on stmt: $36load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:39,585 - DEBUG - on stmt: $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-06 03:46:39,585 - DEBUG - on stmt: $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,585 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-06 03:46:39,585 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-06 03:46:39,585 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,585 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,585 - DEBUG - on stmt: $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-06 03:46:39,585 - DEBUG - on stmt: it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,585 - DEBUG - on stmt: $100load_global.5 = global(next: <built-in function next>)
2024-06-06 03:46:39,585 - DEBUG - on stmt: $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,585 - DEBUG - on stmt: $120load_attr.10 = getattr(value=$112call.8, attr=take)
2024-06-06 03:46:39,586 - DEBUG - on stmt: $const140.11 = const(int, 0)
2024-06-06 03:46:39,586 - DEBUG - on stmt: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,586 - DEBUG - first assign: max_value
2024-06-06 03:46:39,586 - DEBUG - replaced with: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,586 - DEBUG - on stmt: $154load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-06 03:46:39,586 - DEBUG - on stmt: $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,586 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,586 - DEBUG - on stmt: $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,586 - DEBUG - on stmt: branch $166pred, 168, 172
2024-06-06 03:46:39,586 - DEBUG - ==== SSA block rewrite pass on 168
2024-06-06 03:46:39,586 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,586 - DEBUG - on stmt: $170return_value.1 = cast(value=max_value)
2024-06-06 03:46:39,586 - DEBUG - on stmt: return $170return_value.1
2024-06-06 03:46:39,587 - DEBUG - ==== SSA block rewrite pass on 172
2024-06-06 03:46:39,587 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,587 - DEBUG - on stmt: $174get_iter.1 = getiter(value=it)
2024-06-06 03:46:39,587 - DEBUG - on stmt: $phi176.0 = $174get_iter.1
2024-06-06 03:46:39,587 - DEBUG - on stmt: jump 176
2024-06-06 03:46:39,587 - DEBUG - ==== SSA block rewrite pass on 176
2024-06-06 03:46:39,587 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,587 - DEBUG - on stmt: $176for_iter.1 = iternext(value=$phi176.0)
2024-06-06 03:46:39,587 - DEBUG - on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
2024-06-06 03:46:39,587 - DEBUG - on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
2024-06-06 03:46:39,587 - DEBUG - on stmt: $phi180.1 = $176for_iter.2
2024-06-06 03:46:39,587 - DEBUG - on stmt: branch $176for_iter.3, 180, 264
2024-06-06 03:46:39,587 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-06 03:46:39,587 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,588 - DEBUG - on stmt: view = $phi180.1
2024-06-06 03:46:39,588 - DEBUG - on stmt: $184load_attr.4 = getattr(value=view, attr=item)
2024-06-06 03:46:39,588 - DEBUG - on stmt: v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,588 - DEBUG - on stmt: $216load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-06 03:46:39,588 - DEBUG - on stmt: $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,588 - DEBUG - on stmt: bool228 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,588 - DEBUG - on stmt: $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,588 - DEBUG - on stmt: branch $228pred, 230, 238
2024-06-06 03:46:39,588 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:39,588 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,588 - DEBUG - on stmt: $236return_value.2 = cast(value=v)
2024-06-06 03:46:39,588 - DEBUG - on stmt: return $236return_value.2
2024-06-06 03:46:39,588 - DEBUG - ==== SSA block rewrite pass on 238
2024-06-06 03:46:39,589 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,589 - DEBUG - on stmt: $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>)
2024-06-06 03:46:39,589 - DEBUG - on stmt: $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,589 - DEBUG - on stmt: bool254 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,589 - DEBUG - on stmt: $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,589 - DEBUG - on stmt: branch $254pred, 258, 256
2024-06-06 03:46:39,589 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:39,589 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,589 - DEBUG - on stmt: jump 265
2024-06-06 03:46:39,589 - DEBUG - ==== SSA block rewrite pass on 258
2024-06-06 03:46:39,589 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,589 - DEBUG - on stmt: max_value = v
2024-06-06 03:46:39,589 - DEBUG - replaced with: max_value.1 = v
2024-06-06 03:46:39,590 - DEBUG - on stmt: jump 265
2024-06-06 03:46:39,590 - DEBUG - ==== SSA block rewrite pass on 264
2024-06-06 03:46:39,590 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,590 - DEBUG - on stmt: $268return_value.3 = cast(value=max_value)
2024-06-06 03:46:39,590 - DEBUG - on stmt: return $268return_value.3
2024-06-06 03:46:39,590 - DEBUG - ==== SSA block rewrite pass on 265
2024-06-06 03:46:39,590 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,590 - DEBUG - on stmt: jump 176
2024-06-06 03:46:39,590 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x7fe9b9c5b620>],
             258: [<numba.core.ir.Assign object at 0x7fe9b9c5bb00>]})
2024-06-06 03:46:39,590 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:39,590 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,590 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:39,590 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-06 03:46:39,591 - DEBUG - on stmt: $const28.2 = const(int, 0)
2024-06-06 03:46:39,591 - DEBUG - on stmt: $30compare_op.3 = $8load_attr.1 == $const28.2
2024-06-06 03:46:39,591 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,591 - DEBUG - on stmt: $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,591 - DEBUG - on stmt: branch $34pred, 36, 58
2024-06-06 03:46:39,591 - DEBUG - ==== SSA block rewrite pass on 36
2024-06-06 03:46:39,591 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,591 - DEBUG - on stmt: $36load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:39,591 - DEBUG - on stmt: $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-06 03:46:39,591 - DEBUG - on stmt: $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,591 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-06 03:46:39,592 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-06 03:46:39,592 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,592 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,592 - DEBUG - on stmt: $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-06 03:46:39,592 - DEBUG - on stmt: it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,592 - DEBUG - on stmt: $100load_global.5 = global(next: <built-in function next>)
2024-06-06 03:46:39,592 - DEBUG - on stmt: $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,592 - DEBUG - on stmt: $120load_attr.10 = getattr(value=$112call.8, attr=take)
2024-06-06 03:46:39,592 - DEBUG - on stmt: $const140.11 = const(int, 0)
2024-06-06 03:46:39,592 - DEBUG - on stmt: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,592 - DEBUG - on stmt: $154load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-06 03:46:39,593 - DEBUG - on stmt: $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,593 - DEBUG - find_def var='max_value' stmt=$158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,593 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,593 - DEBUG - on stmt: $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,593 - DEBUG - on stmt: branch $166pred, 168, 172
2024-06-06 03:46:39,593 - DEBUG - ==== SSA block rewrite pass on 168
2024-06-06 03:46:39,593 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,593 - DEBUG - on stmt: $170return_value.1 = cast(value=max_value)
2024-06-06 03:46:39,593 - DEBUG - find_def var='max_value' stmt=$170return_value.1 = cast(value=max_value)
2024-06-06 03:46:39,593 - DEBUG - find_def_from_top label 168
2024-06-06 03:46:39,593 - DEBUG - idom 58 from label 168
2024-06-06 03:46:39,593 - DEBUG - find_def_from_bottom label 58
2024-06-06 03:46:39,594 - DEBUG - on stmt: return $170return_value.1
2024-06-06 03:46:39,594 - DEBUG - ==== SSA block rewrite pass on 172
2024-06-06 03:46:39,594 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,594 - DEBUG - on stmt: $174get_iter.1 = getiter(value=it)
2024-06-06 03:46:39,594 - DEBUG - on stmt: $phi176.0 = $174get_iter.1
2024-06-06 03:46:39,594 - DEBUG - on stmt: jump 176
2024-06-06 03:46:39,594 - DEBUG - ==== SSA block rewrite pass on 176
2024-06-06 03:46:39,594 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,594 - DEBUG - on stmt: $176for_iter.1 = iternext(value=$phi176.0)
2024-06-06 03:46:39,594 - DEBUG - on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
2024-06-06 03:46:39,594 - DEBUG - on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
2024-06-06 03:46:39,594 - DEBUG - on stmt: $phi180.1 = $176for_iter.2
2024-06-06 03:46:39,594 - DEBUG - on stmt: branch $176for_iter.3, 180, 264
2024-06-06 03:46:39,595 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-06 03:46:39,595 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,595 - DEBUG - on stmt: view = $phi180.1
2024-06-06 03:46:39,595 - DEBUG - on stmt: $184load_attr.4 = getattr(value=view, attr=item)
2024-06-06 03:46:39,595 - DEBUG - on stmt: v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,595 - DEBUG - on stmt: $216load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
2024-06-06 03:46:39,595 - DEBUG - on stmt: $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,595 - DEBUG - on stmt: bool228 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,595 - DEBUG - on stmt: $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,595 - DEBUG - on stmt: branch $228pred, 230, 238
2024-06-06 03:46:39,595 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:39,595 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,596 - DEBUG - on stmt: $236return_value.2 = cast(value=v)
2024-06-06 03:46:39,596 - DEBUG - on stmt: return $236return_value.2
2024-06-06 03:46:39,596 - DEBUG - ==== SSA block rewrite pass on 238
2024-06-06 03:46:39,596 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,596 - DEBUG - on stmt: $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>)
2024-06-06 03:46:39,596 - DEBUG - on stmt: $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,596 - DEBUG - find_def var='max_value' stmt=$246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,596 - DEBUG - find_def_from_top label 238
2024-06-06 03:46:39,596 - DEBUG - idom 180 from label 238
2024-06-06 03:46:39,596 - DEBUG - find_def_from_bottom label 180
2024-06-06 03:46:39,596 - DEBUG - find_def_from_top label 180
2024-06-06 03:46:39,596 - DEBUG - idom 176 from label 180
2024-06-06 03:46:39,596 - DEBUG - find_def_from_bottom label 176
2024-06-06 03:46:39,597 - DEBUG - find_def_from_top label 176
2024-06-06 03:46:39,597 - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 176
2024-06-06 03:46:39,597 - DEBUG - find_def_from_bottom label 265
2024-06-06 03:46:39,597 - DEBUG - find_def_from_top label 265
2024-06-06 03:46:39,597 - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 265
2024-06-06 03:46:39,597 - DEBUG - find_def_from_bottom label 256
2024-06-06 03:46:39,597 - DEBUG - find_def_from_top label 256
2024-06-06 03:46:39,598 - DEBUG - idom 238 from label 256
2024-06-06 03:46:39,598 - DEBUG - find_def_from_bottom label 238
2024-06-06 03:46:39,598 - DEBUG - find_def_from_top label 238
2024-06-06 03:46:39,598 - DEBUG - idom 180 from label 238
2024-06-06 03:46:39,598 - DEBUG - find_def_from_bottom label 180
2024-06-06 03:46:39,598 - DEBUG - find_def_from_top label 180
2024-06-06 03:46:39,598 - DEBUG - idom 176 from label 180
2024-06-06 03:46:39,598 - DEBUG - find_def_from_bottom label 176
2024-06-06 03:46:39,598 - DEBUG - incoming_def max_value.2 = phi(incoming_values=[], incoming_blocks=[])
2024-06-06 03:46:39,598 - DEBUG - find_def_from_bottom label 258
2024-06-06 03:46:39,599 - DEBUG - incoming_def max_value.1 = v
2024-06-06 03:46:39,599 - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.2, arraymath.py:584), Var(max_value.1, arraymath.py:585)], incoming_blocks=[256, 258])
2024-06-06 03:46:39,599 - DEBUG - find_def_from_bottom label 172
2024-06-06 03:46:39,599 - DEBUG - find_def_from_top label 172
2024-06-06 03:46:39,599 - DEBUG - idom 58 from label 172
2024-06-06 03:46:39,599 - DEBUG - find_def_from_bottom label 58
2024-06-06 03:46:39,599 - DEBUG - incoming_def max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,600 - DEBUG - replaced with: $246call.5 = call $240load_deref.2(v, max_value.2, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,600 - DEBUG - on stmt: bool254 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,600 - DEBUG - on stmt: $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,600 - DEBUG - on stmt: branch $254pred, 258, 256
2024-06-06 03:46:39,600 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:39,600 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,600 - DEBUG - on stmt: jump 265
2024-06-06 03:46:39,600 - DEBUG - ==== SSA block rewrite pass on 258
2024-06-06 03:46:39,600 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,600 - DEBUG - on stmt: max_value.1 = v
2024-06-06 03:46:39,600 - DEBUG - on stmt: jump 265
2024-06-06 03:46:39,601 - DEBUG - ==== SSA block rewrite pass on 264
2024-06-06 03:46:39,601 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,601 - DEBUG - on stmt: $268return_value.3 = cast(value=max_value)
2024-06-06 03:46:39,601 - DEBUG - find_def var='max_value' stmt=$268return_value.3 = cast(value=max_value)
2024-06-06 03:46:39,601 - DEBUG - find_def_from_top label 264
2024-06-06 03:46:39,601 - DEBUG - idom 176 from label 264
2024-06-06 03:46:39,601 - DEBUG - find_def_from_bottom label 176
2024-06-06 03:46:39,601 - DEBUG - replaced with: $268return_value.3 = cast(value=max_value.2)
2024-06-06 03:46:39,601 - DEBUG - on stmt: return $268return_value.3
2024-06-06 03:46:39,601 - DEBUG - ==== SSA block rewrite pass on 265
2024-06-06 03:46:39,601 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9c5ba40>
2024-06-06 03:46:39,601 - DEBUG - on stmt: jump 176
2024-06-06 03:46:39,607 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4680)
           2	RESUME(arg=0, lineno=4680)
           4	LOAD_FAST(arg=1, lineno=4681)
           6	LOAD_FAST(arg=0, lineno=4681)
           8	LOAD_ATTR(arg=0, lineno=4681)
          28	LOAD_CONST(arg=1, lineno=4681)
          30	BINARY_OP(arg=10, lineno=4681)
          34	COMPARE_OP(arg=68, lineno=4681)
          38	POP_JUMP_IF_TRUE(arg=16, lineno=4681)
          40	LOAD_FAST(arg=1, lineno=4681)
          42	LOAD_FAST(arg=0, lineno=4681)
          44	LOAD_ATTR(arg=0, lineno=4681)
          64	UNARY_NEGATIVE(arg=None, lineno=4681)
          66	COMPARE_OP(arg=2, lineno=4681)
          70	POP_JUMP_IF_FALSE(arg=11, lineno=4681)
>         72	LOAD_GLOBAL(arg=3, lineno=4682)
          82	LOAD_CONST(arg=2, lineno=4682)
          84	CALL(arg=1, lineno=4682)
          92	RAISE_VARARGS(arg=1, lineno=4682)
>         94	LOAD_FAST(arg=0, lineno=4683)
          96	LOAD_ATTR(arg=5, lineno=4683)
         116	CALL(arg=0, lineno=4683)
         124	LOAD_FAST(arg=1, lineno=4683)
         126	BINARY_SUBSCR(arg=None, lineno=4683)
         130	RETURN_VALUE(arg=None, lineno=4683)
2024-06-06 03:46:39,607 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:39,607 - DEBUG - stack: []
2024-06-06 03:46:39,607 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:39,607 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4680)
2024-06-06 03:46:39,607 - DEBUG - stack []
2024-06-06 03:46:39,608 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4680)
2024-06-06 03:46:39,608 - DEBUG - stack []
2024-06-06 03:46:39,608 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4681)
2024-06-06 03:46:39,608 - DEBUG - stack []
2024-06-06 03:46:39,608 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4681)
2024-06-06 03:46:39,608 - DEBUG - stack ['$indices4.0']
2024-06-06 03:46:39,608 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4681)
2024-06-06 03:46:39,608 - DEBUG - stack ['$indices4.0', '$a6.1']
2024-06-06 03:46:39,608 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=4681)
2024-06-06 03:46:39,608 - DEBUG - stack ['$indices4.0', '$8load_attr.2']
2024-06-06 03:46:39,609 - DEBUG - dispatch pc=30, inst=BINARY_OP(arg=10, lineno=4681)
2024-06-06 03:46:39,609 - DEBUG - stack ['$indices4.0', '$8load_attr.2', '$const28.3']
2024-06-06 03:46:39,609 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=68, lineno=4681)
2024-06-06 03:46:39,609 - DEBUG - stack ['$indices4.0', '$binop_sub30.4']
2024-06-06 03:46:39,609 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_TRUE(arg=16, lineno=4681)
2024-06-06 03:46:39,609 - DEBUG - stack ['$34compare_op.5']
2024-06-06 03:46:39,609 - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=72, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:39,609 - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=72 nstack_initial=0)])
2024-06-06 03:46:39,610 - DEBUG - stack: []
2024-06-06 03:46:39,610 - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2024-06-06 03:46:39,610 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=4681)
2024-06-06 03:46:39,610 - DEBUG - stack []
2024-06-06 03:46:39,610 - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=4681)
2024-06-06 03:46:39,610 - DEBUG - stack ['$indices40.0']
2024-06-06 03:46:39,610 - DEBUG - dispatch pc=44, inst=LOAD_ATTR(arg=0, lineno=4681)
2024-06-06 03:46:39,610 - DEBUG - stack ['$indices40.0', '$a42.1']
2024-06-06 03:46:39,611 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=4681)
2024-06-06 03:46:39,611 - DEBUG - stack ['$indices40.0', '$44load_attr.2']
2024-06-06 03:46:39,611 - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=2, lineno=4681)
2024-06-06 03:46:39,611 - DEBUG - stack ['$indices40.0', '$64unary_negative.3']
2024-06-06 03:46:39,611 - DEBUG - dispatch pc=70, inst=POP_JUMP_IF_FALSE(arg=11, lineno=4681)
2024-06-06 03:46:39,611 - DEBUG - stack ['$66compare_op.4']
2024-06-06 03:46:39,611 - DEBUG - end state. edges=[Edge(pc=72, stack=(), blockstack=(), npush=0), Edge(pc=94, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:39,611 - DEBUG - pending: deque([State(pc_initial=72 nstack_initial=0), State(pc_initial=72 nstack_initial=0), State(pc_initial=94 nstack_initial=0)])
2024-06-06 03:46:39,612 - DEBUG - stack: []
2024-06-06 03:46:39,612 - DEBUG - state.pc_initial: State(pc_initial=72 nstack_initial=0)
2024-06-06 03:46:39,612 - DEBUG - dispatch pc=72, inst=LOAD_GLOBAL(arg=3, lineno=4682)
2024-06-06 03:46:39,612 - DEBUG - stack []
2024-06-06 03:46:39,612 - DEBUG - dispatch pc=82, inst=LOAD_CONST(arg=2, lineno=4682)
2024-06-06 03:46:39,612 - DEBUG - stack ['$null$72.1', '$72load_global.0']
2024-06-06 03:46:39,612 - DEBUG - dispatch pc=84, inst=CALL(arg=1, lineno=4682)
2024-06-06 03:46:39,612 - DEBUG - stack ['$null$72.1', '$72load_global.0', '$const82.2']
2024-06-06 03:46:39,613 - DEBUG - dispatch pc=92, inst=RAISE_VARARGS(arg=1, lineno=4682)
2024-06-06 03:46:39,613 - DEBUG - stack ['$84call.3']
2024-06-06 03:46:39,613 - DEBUG - end state. edges=[]
2024-06-06 03:46:39,613 - DEBUG - pending: deque([State(pc_initial=72 nstack_initial=0), State(pc_initial=94 nstack_initial=0)])
2024-06-06 03:46:39,613 - DEBUG - pending: deque([State(pc_initial=94 nstack_initial=0)])
2024-06-06 03:46:39,613 - DEBUG - stack: []
2024-06-06 03:46:39,613 - DEBUG - state.pc_initial: State(pc_initial=94 nstack_initial=0)
2024-06-06 03:46:39,613 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=4683)
2024-06-06 03:46:39,614 - DEBUG - stack []
2024-06-06 03:46:39,614 - DEBUG - dispatch pc=96, inst=LOAD_ATTR(arg=5, lineno=4683)
2024-06-06 03:46:39,614 - DEBUG - stack ['$a94.0']
2024-06-06 03:46:39,614 - DEBUG - dispatch pc=116, inst=CALL(arg=0, lineno=4683)
2024-06-06 03:46:39,614 - DEBUG - stack ['$null$96.1', '$96load_attr.2']
2024-06-06 03:46:39,614 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4683)
2024-06-06 03:46:39,614 - DEBUG - stack ['$116call.3']
2024-06-06 03:46:39,614 - DEBUG - dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4683)
2024-06-06 03:46:39,614 - DEBUG - stack ['$116call.3', '$indices124.4']
2024-06-06 03:46:39,615 - DEBUG - dispatch pc=130, inst=RETURN_VALUE(arg=None, lineno=4683)
2024-06-06 03:46:39,615 - DEBUG - stack ['$126binary_subscr.5']
2024-06-06 03:46:39,615 - DEBUG - end state. edges=[]
2024-06-06 03:46:39,615 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:39,615 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=72 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set()})
2024-06-06 03:46:39,615 - DEBUG - defmap: {}
2024-06-06 03:46:39,616 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:39,616 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:39,616 - DEBUG - keep phismap: {}
2024-06-06 03:46:39,616 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:39,618 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:39,618 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (28, {'res': '$const28.3'}), (30, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const28.3', 'res': '$binop_sub30.4'}), (34, {'lhs': '$indices4.0', 'rhs': '$binop_sub30.4', 'res': '$34compare_op.5'}), (38, {'pred': '$34compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 72: ()})
2024-06-06 03:46:39,618 - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$indices40.0'}), (42, {'res': '$a42.1'}), (44, {'item': '$a42.1', 'res': '$44load_attr.2'}), (64, {'value': '$44load_attr.2', 'res': '$64unary_negative.3'}), (66, {'lhs': '$indices40.0', 'rhs': '$64unary_negative.3', 'res': '$66compare_op.4'}), (70, {'pred': '$66compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={72: (), 94: ()})
2024-06-06 03:46:39,618 - DEBUG - block_infos State(pc_initial=72 nstack_initial=0):
AdaptBlockInfo(insts=((72, {'idx': 1, 'res': '$72load_global.0'}), (82, {'res': '$const82.2'}), (84, {'func': '$72load_global.0', 'args': ['$const82.2'], 'kw_names': None, 'res': '$84call.3'}), (92, {'exc': '$84call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:39,618 - DEBUG - block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$a94.0'}), (96, {'item': '$a94.0', 'res': '$96load_attr.2'}), (116, {'func': '$96load_attr.2', 'args': [], 'kw_names': None, 'res': '$116call.3'}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$116call.3', 'res': '$126binary_subscr.5'}), (130, {'retval': '$126binary_subscr.5', 'castval': '$130return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:39,619 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const28.3 = const(int, 1)               ['$const28.3']
    $binop_sub30.4 = $8load_attr.2 - $const28.3 ['$8load_attr.2', '$binop_sub30.4', '$const28.3']
    $34compare_op.5 = indices > $binop_sub30.4 ['$34compare_op.5', '$binop_sub30.4', 'indices']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
    $38pred = call bool38($34compare_op.5, func=bool38, args=(Var($34compare_op.5, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.5', '$38pred', 'bool38']
    branch $38pred, 72, 40                   ['$38pred']
label 40:
    $44load_attr.2 = getattr(value=a, attr=size) ['$44load_attr.2', 'a']
    $64unary_negative.3 = unary(fn=<built-in function neg>, value=$44load_attr.2) ['$44load_attr.2', '$64unary_negative.3']
    $66compare_op.4 = indices < $64unary_negative.3 ['$64unary_negative.3', '$66compare_op.4', 'indices']
    bool70 = global(bool: <class 'bool'>)    ['bool70']
    $70pred = call bool70($66compare_op.4, func=bool70, args=(Var($66compare_op.4, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.4', '$70pred', 'bool70']
    branch $70pred, 72, 94                   ['$70pred']
label 72:
    $72load_global.0 = global(IndexError: <class 'IndexError'>) ['$72load_global.0']
    $const82.2 = const(str, Index out of bounds) ['$const82.2']
    $84call.3 = call $72load_global.0($const82.2, func=$72load_global.0, args=[Var($const82.2, arrayobj.py:4682)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_global.0', '$84call.3', '$const82.2']
    raise $84call.3                          ['$84call.3']
label 94:
    $96load_attr.2 = getattr(value=a, attr=ravel) ['$96load_attr.2', 'a']
    $116call.3 = call $96load_attr.2(func=$96load_attr.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.3', '$96load_attr.2']
    $126binary_subscr.5 = getitem(value=$116call.3, index=indices, fn=<built-in function getitem>) ['$116call.3', '$126binary_subscr.5', 'indices']
    $130return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$130return_value.6']
    return $130return_value.6                ['$130return_value.6']

2024-06-06 03:46:39,628 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:39,628 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9c94a70>
2024-06-06 03:46:39,628 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:39,628 - DEBUG - on stmt: indices = arg(1, name=indices)
2024-06-06 03:46:39,628 - DEBUG - on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-06-06 03:46:39,628 - DEBUG - on stmt: $const28.3 = const(int, 1)
2024-06-06 03:46:39,628 - DEBUG - on stmt: $binop_sub30.4 = $8load_attr.2 - $const28.3
2024-06-06 03:46:39,629 - DEBUG - on stmt: $34compare_op.5 = indices > $binop_sub30.4
2024-06-06 03:46:39,629 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,629 - DEBUG - on stmt: $38pred = call bool38($34compare_op.5, func=bool38, args=(Var($34compare_op.5, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,629 - DEBUG - on stmt: branch $38pred, 72, 40
2024-06-06 03:46:39,629 - DEBUG - ==== SSA block analysis pass on 40
2024-06-06 03:46:39,629 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9c94a70>
2024-06-06 03:46:39,629 - DEBUG - on stmt: $44load_attr.2 = getattr(value=a, attr=size)
2024-06-06 03:46:39,629 - DEBUG - on stmt: $64unary_negative.3 = unary(fn=<built-in function neg>, value=$44load_attr.2)
2024-06-06 03:46:39,629 - DEBUG - on stmt: $66compare_op.4 = indices < $64unary_negative.3
2024-06-06 03:46:39,629 - DEBUG - on stmt: bool70 = global(bool: <class 'bool'>)
2024-06-06 03:46:39,630 - DEBUG - on stmt: $70pred = call bool70($66compare_op.4, func=bool70, args=(Var($66compare_op.4, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,630 - DEBUG - on stmt: branch $70pred, 72, 94
2024-06-06 03:46:39,630 - DEBUG - ==== SSA block analysis pass on 72
2024-06-06 03:46:39,630 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9c94a70>
2024-06-06 03:46:39,630 - DEBUG - on stmt: $72load_global.0 = global(IndexError: <class 'IndexError'>)
2024-06-06 03:46:39,630 - DEBUG - on stmt: $const82.2 = const(str, Index out of bounds)
2024-06-06 03:46:39,630 - DEBUG - on stmt: $84call.3 = call $72load_global.0($const82.2, func=$72load_global.0, args=[Var($const82.2, arrayobj.py:4682)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,630 - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-06-06 03:46:39,630 - DEBUG - ==== SSA block analysis pass on 94
2024-06-06 03:46:39,630 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9c94a70>
2024-06-06 03:46:39,630 - DEBUG - on stmt: $96load_attr.2 = getattr(value=a, attr=ravel)
2024-06-06 03:46:39,631 - DEBUG - on stmt: $116call.3 = call $96load_attr.2(func=$96load_attr.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,631 - DEBUG - on stmt: $126binary_subscr.5 = getitem(value=$116call.3, index=indices, fn=<built-in function getitem>)
2024-06-06 03:46:39,631 - DEBUG - on stmt: $130return_value.6 = cast(value=$126binary_subscr.5)
2024-06-06 03:46:39,631 - DEBUG - on stmt: return $130return_value.6
2024-06-06 03:46:39,632 - DEBUG - defs defaultdict(<class 'list'>,
            {'$116call.3': [(<numba.core.ir.Assign object at 0x7fe9b9c94080>,
                             94)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x7fe9b9c942c0>,
                                      94)],
             '$130return_value.6': [(<numba.core.ir.Assign object at 0x7fe9b9c943e0>,
                                     94)],
             '$34compare_op.5': [(<numba.core.ir.Assign object at 0x7fe9b9d3aba0>,
                                  0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x7fe9b9d3ae40>, 0)],
             '$44load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b9d3b1a0>,
                                 40)],
             '$64unary_negative.3': [(<numba.core.ir.Assign object at 0x7fe9b9d3b2f0>,
                                      40)],
             '$66compare_op.4': [(<numba.core.ir.Assign object at 0x7fe9b9d3b470>,
                                  40)],
             '$70pred': [(<numba.core.ir.Assign object at 0x7fe9b9d3b710>, 40)],
             '$72load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9d3b890>,
                                   72)],
             '$84call.3': [(<numba.core.ir.Assign object at 0x7fe9b9d3bb90>,
                            72)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b9d3a780>,
                                0)],
             '$96load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b9d3be90>,
                                 94)],
             '$binop_sub30.4': [(<numba.core.ir.Assign object at 0x7fe9b9d3aa50>,
                                 0)],
             '$const28.3': [(<numba.core.ir.Assign object at 0x7fe9b9d3a8d0>,
                             0)],
             '$const82.2': [(<numba.core.ir.Assign object at 0x7fe9b9d3b9e0>,
                             72)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b9d3a2d0>, 0)],
             'bool38': [(<numba.core.ir.Assign object at 0x7fe9b9d3acf0>, 0)],
             'bool70': [(<numba.core.ir.Assign object at 0x7fe9b9d3b5c0>, 40)],
             'indices': [(<numba.core.ir.Assign object at 0x7fe9b9d3a480>, 0)]})
2024-06-06 03:46:39,632 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9c94a70>
2024-06-06 03:46:39,653 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2229)
           2	RESUME(arg=0, lineno=2229)
           4	LOAD_FAST(arg=0, lineno=2231)
           6	LOAD_ATTR(arg=1, lineno=2231)
          26	LOAD_FAST(arg=0, lineno=2231)
          28	LOAD_ATTR(arg=2, lineno=2231)
          48	CALL(arg=1, lineno=2231)
          56	RETURN_VALUE(arg=None, lineno=2231)
2024-06-06 03:46:39,654 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:39,654 - DEBUG - stack: []
2024-06-06 03:46:39,654 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:39,654 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2229)
2024-06-06 03:46:39,654 - DEBUG - stack []
2024-06-06 03:46:39,654 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2229)
2024-06-06 03:46:39,654 - DEBUG - stack []
2024-06-06 03:46:39,654 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2231)
2024-06-06 03:46:39,654 - DEBUG - stack []
2024-06-06 03:46:39,654 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=2231)
2024-06-06 03:46:39,654 - DEBUG - stack ['$ary4.0']
2024-06-06 03:46:39,654 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=2231)
2024-06-06 03:46:39,655 - DEBUG - stack ['$null$6.1', '$6load_attr.2']
2024-06-06 03:46:39,655 - DEBUG - dispatch pc=28, inst=LOAD_ATTR(arg=2, lineno=2231)
2024-06-06 03:46:39,655 - DEBUG - stack ['$null$6.1', '$6load_attr.2', '$ary26.3']
2024-06-06 03:46:39,655 - DEBUG - dispatch pc=48, inst=CALL(arg=1, lineno=2231)
2024-06-06 03:46:39,655 - DEBUG - stack ['$null$6.1', '$6load_attr.2', '$28load_attr.4']
2024-06-06 03:46:39,655 - DEBUG - dispatch pc=56, inst=RETURN_VALUE(arg=None, lineno=2231)
2024-06-06 03:46:39,655 - DEBUG - stack ['$48call.5']
2024-06-06 03:46:39,655 - DEBUG - end state. edges=[]
2024-06-06 03:46:39,655 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:39,655 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:39,655 - DEBUG - defmap: {}
2024-06-06 03:46:39,656 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:39,656 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:39,656 - DEBUG - keep phismap: {}
2024-06-06 03:46:39,656 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:39,656 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:39,656 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_attr.2'}), (26, {'res': '$ary26.3'}), (28, {'item': '$ary26.3', 'res': '$28load_attr.4'}), (48, {'func': '$6load_attr.2', 'args': ['$28load_attr.4'], 'kw_names': None, 'res': '$48call.5'}), (56, {'retval': '$48call.5', 'castval': '$56return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:39,657 - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_attr.2 = getattr(value=ary, attr=reshape) ['$6load_attr.2', 'ary']
    $28load_attr.4 = getattr(value=ary, attr=size) ['$28load_attr.4', 'ary']
    $48call.5 = call $6load_attr.2($28load_attr.4, func=$6load_attr.2, args=[Var($28load_attr.4, arrayobj.py:2231)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_attr.4', '$48call.5', '$6load_attr.2']
    $56return_value.6 = cast(value=$48call.5) ['$48call.5', '$56return_value.6']
    return $56return_value.6                 ['$56return_value.6']

2024-06-06 03:46:39,661 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:39,661 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9c86f00>
2024-06-06 03:46:39,661 - DEBUG - on stmt: ary = arg(0, name=ary)
2024-06-06 03:46:39,661 - DEBUG - on stmt: $6load_attr.2 = getattr(value=ary, attr=reshape)
2024-06-06 03:46:39,662 - DEBUG - on stmt: $28load_attr.4 = getattr(value=ary, attr=size)
2024-06-06 03:46:39,662 - DEBUG - on stmt: $48call.5 = call $6load_attr.2($28load_attr.4, func=$6load_attr.2, args=[Var($28load_attr.4, arrayobj.py:2231)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,662 - DEBUG - on stmt: $56return_value.6 = cast(value=$48call.5)
2024-06-06 03:46:39,662 - DEBUG - on stmt: return $56return_value.6
2024-06-06 03:46:39,662 - DEBUG - defs defaultdict(<class 'list'>,
            {'$28load_attr.4': [(<numba.core.ir.Assign object at 0x7fe9b9c86150>,
                                 0)],
             '$48call.5': [(<numba.core.ir.Assign object at 0x7fe9b9c86300>,
                            0)],
             '$56return_value.6': [(<numba.core.ir.Assign object at 0x7fe9b9c86420>,
                                    0)],
             '$6load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b9c852b0>,
                                0)],
             'ary': [(<numba.core.ir.Assign object at 0x7fe9b9c85430>, 0)]})
2024-06-06 03:46:39,662 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9c86f00>
2024-06-06 03:46:39,738 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=68, lineno=483)
          12	RETURN_VALUE(arg=None, lineno=483)
2024-06-06 03:46:39,738 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:39,738 - DEBUG - stack: []
2024-06-06 03:46:39,738 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:39,738 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-06-06 03:46:39,739 - DEBUG - stack []
2024-06-06 03:46:39,739 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-06-06 03:46:39,739 - DEBUG - stack []
2024-06-06 03:46:39,739 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-06-06 03:46:39,739 - DEBUG - stack []
2024-06-06 03:46:39,739 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-06-06 03:46:39,739 - DEBUG - stack ['$a4.0']
2024-06-06 03:46:39,739 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=68, lineno=483)
2024-06-06 03:46:39,739 - DEBUG - stack ['$a4.0', '$min_val6.1']
2024-06-06 03:46:39,739 - DEBUG - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=483)
2024-06-06 03:46:39,740 - DEBUG - stack ['$8compare_op.2']
2024-06-06 03:46:39,740 - DEBUG - end state. edges=[]
2024-06-06 03:46:39,740 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:39,740 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:39,740 - DEBUG - defmap: {}
2024-06-06 03:46:39,740 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:39,740 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:39,740 - DEBUG - keep phismap: {}
2024-06-06 03:46:39,741 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:39,741 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:39,741 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (12, {'retval': '$8compare_op.2', 'castval': '$12return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:39,741 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $12return_value.3 = cast(value=$8compare_op.2) ['$12return_value.3', '$8compare_op.2']
    return $12return_value.3                 ['$12return_value.3']

2024-06-06 03:46:39,746 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:39,746 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9c71be0>
2024-06-06 03:46:39,746 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:39,746 - DEBUG - on stmt: min_val = arg(1, name=min_val)
2024-06-06 03:46:39,746 - DEBUG - on stmt: $8compare_op.2 = a > min_val
2024-06-06 03:46:39,746 - DEBUG - on stmt: $12return_value.3 = cast(value=$8compare_op.2)
2024-06-06 03:46:39,746 - DEBUG - on stmt: return $12return_value.3
2024-06-06 03:46:39,746 - DEBUG - defs defaultdict(<class 'list'>,
            {'$12return_value.3': [(<numba.core.ir.Assign object at 0x7fe9b9c711c0>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x7fe9b9c71010>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b9c72060>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7fe9b9c721b0>, 0)]})
2024-06-06 03:46:39,747 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9c71be0>
2024-06-06 03:46:39,859 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          20	LOAD_ATTR(arg=2, lineno=441)
          40	LOAD_FAST(arg=0, lineno=441)
          42	CALL(arg=1, lineno=441)
          50	GET_ITER(arg=None, lineno=441)
>         52	FOR_ITER(arg=21, lineno=441)
          56	STORE_FAST(arg=2, lineno=441)
          58	LOAD_FAST(arg=1, lineno=442)
          60	LOAD_FAST(arg=2, lineno=442)
          62	LOAD_ATTR(arg=5, lineno=442)
          82	CALL(arg=0, lineno=442)
          90	BINARY_OP(arg=13, lineno=442)
          94	STORE_FAST(arg=1, lineno=442)
          96	JUMP_BACKWARD(arg=23, lineno=442)
>         98	END_FOR(arg=None, lineno=441)
         100	LOAD_FAST(arg=1, lineno=443)
         102	LOAD_FAST(arg=0, lineno=443)
         104	LOAD_ATTR(arg=6, lineno=443)
         124	BINARY_OP(arg=11, lineno=443)
         128	RETURN_VALUE(arg=None, lineno=443)
2024-06-06 03:46:39,859 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:39,859 - DEBUG - stack: []
2024-06-06 03:46:39,860 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:39,860 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-06-06 03:46:39,860 - DEBUG - stack []
2024-06-06 03:46:39,860 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-06-06 03:46:39,860 - DEBUG - stack []
2024-06-06 03:46:39,860 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-06-06 03:46:39,860 - DEBUG - stack []
2024-06-06 03:46:39,860 - DEBUG - dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-06-06 03:46:39,860 - DEBUG - stack []
2024-06-06 03:46:39,861 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-06-06 03:46:39,861 - DEBUG - stack ['$6load_deref.0']
2024-06-06 03:46:39,861 - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-06-06 03:46:39,861 - DEBUG - stack []
2024-06-06 03:46:39,861 - DEBUG - dispatch pc=20, inst=LOAD_ATTR(arg=2, lineno=441)
2024-06-06 03:46:39,861 - DEBUG - stack ['$null$10.2', '$10load_global.1']
2024-06-06 03:46:39,861 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=441)
2024-06-06 03:46:39,861 - DEBUG - stack ['$null$10.2', '$20load_attr.3']
2024-06-06 03:46:39,861 - DEBUG - dispatch pc=42, inst=CALL(arg=1, lineno=441)
2024-06-06 03:46:39,861 - DEBUG - stack ['$null$10.2', '$20load_attr.3', '$a40.4']
2024-06-06 03:46:39,862 - DEBUG - dispatch pc=50, inst=GET_ITER(arg=None, lineno=441)
2024-06-06 03:46:39,862 - DEBUG - stack ['$42call.5']
2024-06-06 03:46:39,862 - DEBUG - end state. edges=[Edge(pc=52, stack=('$50get_iter.6',), blockstack=(), npush=0)]
2024-06-06 03:46:39,862 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=1)])
2024-06-06 03:46:39,862 - DEBUG - stack: ['$phi52.0']
2024-06-06 03:46:39,862 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=1)
2024-06-06 03:46:39,862 - DEBUG - dispatch pc=52, inst=FOR_ITER(arg=21, lineno=441)
2024-06-06 03:46:39,862 - DEBUG - stack ['$phi52.0']
2024-06-06 03:46:39,862 - DEBUG - end state. edges=[Edge(pc=98, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0), Edge(pc=56, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:39,863 - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=2), State(pc_initial=56 nstack_initial=2)])
2024-06-06 03:46:39,863 - DEBUG - stack: ['$phi98.0', '$phi98.1']
2024-06-06 03:46:39,863 - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=2)
2024-06-06 03:46:39,863 - DEBUG - dispatch pc=98, inst=END_FOR(arg=None, lineno=441)
2024-06-06 03:46:39,863 - DEBUG - stack ['$phi98.0', '$phi98.1']
2024-06-06 03:46:39,863 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=1, lineno=443)
2024-06-06 03:46:39,863 - DEBUG - stack []
2024-06-06 03:46:39,863 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=443)
2024-06-06 03:46:39,863 - DEBUG - stack ['$c100.2']
2024-06-06 03:46:39,863 - DEBUG - dispatch pc=104, inst=LOAD_ATTR(arg=6, lineno=443)
2024-06-06 03:46:39,863 - DEBUG - stack ['$c100.2', '$a102.3']
2024-06-06 03:46:39,864 - DEBUG - dispatch pc=124, inst=BINARY_OP(arg=11, lineno=443)
2024-06-06 03:46:39,864 - DEBUG - stack ['$c100.2', '$104load_attr.4']
2024-06-06 03:46:39,864 - DEBUG - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=443)
2024-06-06 03:46:39,864 - DEBUG - stack ['$binop_truediv124.5']
2024-06-06 03:46:39,864 - DEBUG - end state. edges=[]
2024-06-06 03:46:39,864 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=2)])
2024-06-06 03:46:39,864 - DEBUG - stack: ['$phi56.0', '$phi56.1']
2024-06-06 03:46:39,864 - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=2)
2024-06-06 03:46:39,864 - DEBUG - dispatch pc=56, inst=STORE_FAST(arg=2, lineno=441)
2024-06-06 03:46:39,864 - DEBUG - stack ['$phi56.0', '$phi56.1']
2024-06-06 03:46:39,864 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=442)
2024-06-06 03:46:39,864 - DEBUG - stack ['$phi56.0']
2024-06-06 03:46:39,865 - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=2, lineno=442)
2024-06-06 03:46:39,865 - DEBUG - stack ['$phi56.0', '$c58.2']
2024-06-06 03:46:39,865 - DEBUG - dispatch pc=62, inst=LOAD_ATTR(arg=5, lineno=442)
2024-06-06 03:46:39,865 - DEBUG - stack ['$phi56.0', '$c58.2', '$v60.3']
2024-06-06 03:46:39,865 - DEBUG - dispatch pc=82, inst=CALL(arg=0, lineno=442)
2024-06-06 03:46:39,865 - DEBUG - stack ['$phi56.0', '$c58.2', '$null$62.4', '$62load_attr.5']
2024-06-06 03:46:39,865 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=13, lineno=442)
2024-06-06 03:46:39,865 - DEBUG - stack ['$phi56.0', '$c58.2', '$82call.6']
2024-06-06 03:46:39,865 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=1, lineno=442)
2024-06-06 03:46:39,865 - DEBUG - stack ['$phi56.0', '$binop_iadd90.7']
2024-06-06 03:46:39,865 - DEBUG - dispatch pc=96, inst=JUMP_BACKWARD(arg=23, lineno=442)
2024-06-06 03:46:39,865 - DEBUG - stack ['$phi56.0']
2024-06-06 03:46:39,865 - DEBUG - end state. edges=[Edge(pc=52, stack=('$phi56.0',), blockstack=(), npush=0)]
2024-06-06 03:46:39,866 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=1)])
2024-06-06 03:46:39,866 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:39,866 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=1): {'$phi52.0'},
             State(pc_initial=56 nstack_initial=2): {'$phi56.1'},
             State(pc_initial=98 nstack_initial=2): set()})
2024-06-06 03:46:39,866 - DEBUG - defmap: {'$phi52.0': State(pc_initial=0 nstack_initial=0),
 '$phi56.1': State(pc_initial=52 nstack_initial=1),
 '$phi98.1': State(pc_initial=52 nstack_initial=1)}
2024-06-06 03:46:39,866 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi56.0', State(pc_initial=56 nstack_initial=2))},
             '$phi56.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:39,867 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:39,868 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:39,868 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:39,869 - DEBUG - keep phismap: {'$phi52.0': {('$50get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi56.1': {('$52for_iter.2', State(pc_initial=52 nstack_initial=1))}}
2024-06-06 03:46:39,869 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi52.0': '$50get_iter.6'},
             State(pc_initial=52 nstack_initial=1): {'$phi56.1': '$52for_iter.2'}})
2024-06-06 03:46:39,869 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:39,870 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (20, {'item': '$10load_global.1', 'res': '$20load_attr.3'}), (40, {'res': '$a40.4'}), (42, {'func': '$20load_attr.3', 'args': ['$a40.4'], 'kw_names': None, 'res': '$42call.5'}), (50, {'value': '$42call.5', 'res': '$50get_iter.6'})), outgoing_phis={'$phi52.0': '$50get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$50get_iter.6',)})
2024-06-06 03:46:39,870 - DEBUG - block_infos State(pc_initial=52 nstack_initial=1):
AdaptBlockInfo(insts=((52, {'iterator': '$phi52.0', 'pair': '$52for_iter.1', 'indval': '$52for_iter.2', 'pred': '$52for_iter.3'}),), outgoing_phis={'$phi56.1': '$52for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi52.0', '$52for_iter.2'), 56: ('$phi52.0', '$52for_iter.2')})
2024-06-06 03:46:39,870 - DEBUG - block_infos State(pc_initial=56 nstack_initial=2):
AdaptBlockInfo(insts=((56, {'value': '$phi56.1'}), (58, {'res': '$c58.2'}), (60, {'res': '$v60.3'}), (62, {'item': '$v60.3', 'res': '$62load_attr.5'}), (82, {'func': '$62load_attr.5', 'args': [], 'kw_names': None, 'res': '$82call.6'}), (90, {'op': '+=', 'lhs': '$c58.2', 'rhs': '$82call.6', 'res': '$binop_iadd90.7'}), (94, {'value': '$binop_iadd90.7'}), (96, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$phi56.0',)})
2024-06-06 03:46:39,870 - DEBUG - block_infos State(pc_initial=98 nstack_initial=2):
AdaptBlockInfo(insts=((100, {'res': '$c100.2'}), (102, {'res': '$a102.3'}), (104, {'item': '$a102.3', 'res': '$104load_attr.4'}), (124, {'op': '/', 'lhs': '$c100.2', 'rhs': '$104load_attr.4', 'res': '$binop_truediv124.5'}), (128, {'retval': '$binop_truediv124.5', 'castval': '$128return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:39,871 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$10load_global.1']
    $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$20load_attr.3']
    $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_attr.3', '$42call.5', 'a']
    $50get_iter.6 = getiter(value=$42call.5) ['$42call.5', '$50get_iter.6']
    $phi52.0 = $50get_iter.6                 ['$50get_iter.6', '$phi52.0']
    jump 52                                  []
label 52:
    $52for_iter.1 = iternext(value=$phi52.0) ['$52for_iter.1', '$phi52.0']
    $52for_iter.2 = pair_first(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.2']
    $52for_iter.3 = pair_second(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.3']
    $phi56.1 = $52for_iter.2                 ['$52for_iter.2', '$phi56.1']
    branch $52for_iter.3, 56, 98             ['$52for_iter.3']
label 56:
    v = $phi56.1                             ['$phi56.1', 'v']
    $62load_attr.5 = getattr(value=v, attr=item) ['$62load_attr.5', 'v']
    $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$62load_attr.5', '$82call.6']
    $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined) ['$82call.6', '$binop_iadd90.7', 'c']
    c = $binop_iadd90.7                      ['$binop_iadd90.7', 'c']
    jump 52                                  []
label 98:
    $104load_attr.4 = getattr(value=a, attr=size) ['$104load_attr.4', 'a']
    $binop_truediv124.5 = c / $104load_attr.4 ['$104load_attr.4', '$binop_truediv124.5', 'c']
    $128return_value.6 = cast(value=$binop_truediv124.5) ['$128return_value.6', '$binop_truediv124.5']
    return $128return_value.6                ['$128return_value.6']

2024-06-06 03:46:39,877 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:39,878 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1e7c0b0>
2024-06-06 03:46:39,878 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:39,878 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-06 03:46:39,878 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,878 - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-06 03:46:39,878 - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,878 - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2024-06-06 03:46:39,878 - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2024-06-06 03:46:39,878 - DEBUG - on stmt: jump 52
2024-06-06 03:46:39,878 - DEBUG - ==== SSA block analysis pass on 52
2024-06-06 03:46:39,878 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1e7c0b0>
2024-06-06 03:46:39,878 - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2024-06-06 03:46:39,879 - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2024-06-06 03:46:39,879 - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2024-06-06 03:46:39,879 - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2024-06-06 03:46:39,879 - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2024-06-06 03:46:39,879 - DEBUG - ==== SSA block analysis pass on 56
2024-06-06 03:46:39,879 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1e7c0b0>
2024-06-06 03:46:39,879 - DEBUG - on stmt: v = $phi56.1
2024-06-06 03:46:39,879 - DEBUG - on stmt: $62load_attr.5 = getattr(value=v, attr=item)
2024-06-06 03:46:39,879 - DEBUG - on stmt: $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,879 - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,879 - DEBUG - on stmt: c = $binop_iadd90.7
2024-06-06 03:46:39,879 - DEBUG - on stmt: jump 52
2024-06-06 03:46:39,879 - DEBUG - ==== SSA block analysis pass on 98
2024-06-06 03:46:39,880 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d1e7c0b0>
2024-06-06 03:46:39,880 - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2024-06-06 03:46:39,880 - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:39,880 - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2024-06-06 03:46:39,880 - DEBUG - on stmt: return $128return_value.6
2024-06-06 03:46:39,881 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104load_attr.4': [(<numba.core.ir.Assign object at 0x7fe9b9c83860>,
                                  98)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x7fe9b9c9fb90>,
                                   0)],
             '$128return_value.6': [(<numba.core.ir.Assign object at 0x7fe9b9c82120>,
                                     98)],
             '$20load_attr.3': [(<numba.core.ir.Assign object at 0x7fe9b9c9f080>,
                                 0)],
             '$42call.5': [(<numba.core.ir.Assign object at 0x7fe9b9c9f8c0>,
                            0)],
             '$50get_iter.6': [(<numba.core.ir.Assign object at 0x7fe9b9c9f7a0>,
                                0)],
             '$52for_iter.1': [(<numba.core.ir.Assign object at 0x7fe9b9c9f650>,
                                52)],
             '$52for_iter.2': [(<numba.core.ir.Assign object at 0x7fe9b9c9f4d0>,
                                52)],
             '$52for_iter.3': [(<numba.core.ir.Assign object at 0x7fe9b9c9e720>,
                                52)],
             '$62load_attr.5': [(<numba.core.ir.Assign object at 0x7fe9b9c82f90>,
                                 56)],
             '$82call.6': [(<numba.core.ir.Assign object at 0x7fe9b9c80f20>,
                            56)],
             '$binop_iadd90.7': [(<numba.core.ir.Assign object at 0x7fe9b9c80a10>,
                                  56)],
             '$binop_truediv124.5': [(<numba.core.ir.Assign object at 0x7fe9b9c83b30>,
                                      98)],
             '$phi52.0': [(<numba.core.ir.Assign object at 0x7fe9b9c9f5f0>, 0)],
             '$phi56.1': [(<numba.core.ir.Assign object at 0x7fe9b9c9e5a0>,
                           52)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b9c9ca40>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7fe9b9c9ddf0>, 0),
                   (<numba.core.ir.Assign object at 0x7fe9b9c82b70>, 56)],
             'v': [(<numba.core.ir.Assign object at 0x7fe9b9c9cef0>, 56)]})
2024-06-06 03:46:39,881 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d1e7c0b0>
2024-06-06 03:46:39,881 - DEBUG - Fix SSA violator on var c
2024-06-06 03:46:39,881 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:39,881 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1e7c230>
2024-06-06 03:46:39,881 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:39,881 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-06 03:46:39,881 - DEBUG - first assign: c
2024-06-06 03:46:39,882 - DEBUG - replaced with: c = freevar(acc_init: 0.0)
2024-06-06 03:46:39,882 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,882 - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-06 03:46:39,882 - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,882 - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2024-06-06 03:46:39,882 - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2024-06-06 03:46:39,882 - DEBUG - on stmt: jump 52
2024-06-06 03:46:39,882 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-06 03:46:39,882 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1e7c230>
2024-06-06 03:46:39,882 - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2024-06-06 03:46:39,882 - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2024-06-06 03:46:39,882 - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2024-06-06 03:46:39,882 - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2024-06-06 03:46:39,883 - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2024-06-06 03:46:39,883 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:39,883 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1e7c230>
2024-06-06 03:46:39,883 - DEBUG - on stmt: v = $phi56.1
2024-06-06 03:46:39,883 - DEBUG - on stmt: $62load_attr.5 = getattr(value=v, attr=item)
2024-06-06 03:46:39,883 - DEBUG - on stmt: $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,883 - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,883 - DEBUG - on stmt: c = $binop_iadd90.7
2024-06-06 03:46:39,883 - DEBUG - replaced with: c.1 = $binop_iadd90.7
2024-06-06 03:46:39,883 - DEBUG - on stmt: jump 52
2024-06-06 03:46:39,883 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-06 03:46:39,883 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d1e7c230>
2024-06-06 03:46:39,883 - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2024-06-06 03:46:39,883 - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:39,884 - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2024-06-06 03:46:39,884 - DEBUG - on stmt: return $128return_value.6
2024-06-06 03:46:39,884 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fe9b9763500>],
             56: [<numba.core.ir.Assign object at 0x7fe9b9cb1c70>]})
2024-06-06 03:46:39,884 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:39,884 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1e7c230>
2024-06-06 03:46:39,884 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:39,884 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-06 03:46:39,884 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:39,884 - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-06 03:46:39,884 - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,884 - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2024-06-06 03:46:39,884 - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2024-06-06 03:46:39,885 - DEBUG - on stmt: jump 52
2024-06-06 03:46:39,885 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-06 03:46:39,885 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1e7c230>
2024-06-06 03:46:39,885 - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2024-06-06 03:46:39,885 - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2024-06-06 03:46:39,885 - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2024-06-06 03:46:39,885 - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2024-06-06 03:46:39,885 - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2024-06-06 03:46:39,885 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:39,885 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1e7c230>
2024-06-06 03:46:39,885 - DEBUG - on stmt: v = $phi56.1
2024-06-06 03:46:39,885 - DEBUG - on stmt: $62load_attr.5 = getattr(value=v, attr=item)
2024-06-06 03:46:39,885 - DEBUG - on stmt: $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:39,886 - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,886 - DEBUG - find_def var='c' stmt=$binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,886 - DEBUG - find_def_from_top label 56
2024-06-06 03:46:39,886 - DEBUG - idom 52 from label 56
2024-06-06 03:46:39,886 - DEBUG - find_def_from_bottom label 52
2024-06-06 03:46:39,886 - DEBUG - find_def_from_top label 52
2024-06-06 03:46:39,886 - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 52
2024-06-06 03:46:39,886 - DEBUG - find_def_from_bottom label 0
2024-06-06 03:46:39,886 - DEBUG - incoming_def c = freevar(acc_init: 0.0)
2024-06-06 03:46:39,886 - DEBUG - find_def_from_bottom label 56
2024-06-06 03:46:39,886 - DEBUG - incoming_def c.1 = $binop_iadd90.7
2024-06-06 03:46:39,886 - DEBUG - replaced with: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:39,887 - DEBUG - on stmt: c.1 = $binop_iadd90.7
2024-06-06 03:46:39,887 - DEBUG - on stmt: jump 52
2024-06-06 03:46:39,887 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-06 03:46:39,887 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d1e7c230>
2024-06-06 03:46:39,887 - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2024-06-06 03:46:39,887 - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:39,887 - DEBUG - find_def var='c' stmt=$binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:39,887 - DEBUG - find_def_from_top label 98
2024-06-06 03:46:39,887 - DEBUG - idom 52 from label 98
2024-06-06 03:46:39,887 - DEBUG - find_def_from_bottom label 52
2024-06-06 03:46:39,887 - DEBUG - replaced with: $binop_truediv124.5 = c.2 / $104load_attr.4
2024-06-06 03:46:39,887 - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2024-06-06 03:46:39,887 - DEBUG - on stmt: return $128return_value.6
2024-06-06 03:46:40,176 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          12	LOAD_GLOBAL(arg=1, lineno=1221)
          22	LOAD_ATTR(arg=2, lineno=1221)
          42	LOAD_FAST(arg=0, lineno=1221)
          44	LOAD_CONST(arg=2, lineno=1221)
          46	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=6, lineno=1221)
          80	LOAD_CONST(arg=1, lineno=1221)
          82	BINARY_SUBSCR(arg=None, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          94	BINARY_SLICE(arg=None, lineno=1221)
          96	CALL(arg=1, lineno=1221)
         104	COMPARE_OP(arg=92, lineno=1221)
         108	LOAD_FAST(arg=7, lineno=1221)
         110	LOAD_CONST(arg=1, lineno=1221)
         112	STORE_SUBSCR(arg=None, lineno=1221)
         116	LOAD_FAST(arg=7, lineno=1222)
         118	LOAD_CONST(arg=1, lineno=1222)
         120	COPY(arg=2, lineno=1222)
         122	COPY(arg=2, lineno=1222)
         124	BINARY_SUBSCR(arg=None, lineno=1222)
         128	LOAD_FAST(arg=0, lineno=1222)
         130	LOAD_CONST(arg=1, lineno=1222)
         132	BINARY_SUBSCR(arg=None, lineno=1222)
         136	LOAD_GLOBAL(arg=1, lineno=1222)
         146	LOAD_ATTR(arg=8, lineno=1222)
         166	LOAD_FAST(arg=0, lineno=1222)
         168	LOAD_CONST(arg=2, lineno=1222)
         170	LOAD_GLOBAL(arg=5, lineno=1222)
         180	LOAD_FAST(arg=4, lineno=1222)
         182	LOAD_FAST(arg=0, lineno=1222)
         184	LOAD_ATTR(arg=6, lineno=1222)
         204	LOAD_CONST(arg=1, lineno=1222)
         206	BINARY_SUBSCR(arg=None, lineno=1222)
         210	CALL(arg=2, lineno=1222)
         218	BINARY_SLICE(arg=None, lineno=1222)
         220	CALL(arg=1, lineno=1222)
         228	LOAD_FAST(arg=5, lineno=1222)
         230	BINARY_OP(arg=0, lineno=1222)
         234	COMPARE_OP(arg=92, lineno=1222)
         238	BINARY_OP(arg=14, lineno=1222)
         242	SWAP(arg=3, lineno=1222)
         244	SWAP(arg=2, lineno=1222)
         246	STORE_SUBSCR(arg=None, lineno=1222)
         250	LOAD_FAST(arg=7, lineno=1224)
         252	LOAD_CONST(arg=1, lineno=1224)
         254	BINARY_SUBSCR(arg=None, lineno=1224)
         258	POP_JUMP_IF_FALSE(arg=6, lineno=1224)
         260	LOAD_FAST(arg=6, lineno=1225)
         262	LOAD_CONST(arg=3, lineno=1225)
         264	BINARY_OP(arg=0, lineno=1225)
         268	STORE_FAST(arg=8, lineno=1225)
         270	JUMP_FORWARD(arg=2, lineno=1225)
>        272	LOAD_CONST(arg=3, lineno=1227)
         274	STORE_FAST(arg=8, lineno=1227)
>        276	LOAD_FAST(arg=8, lineno=1229)
         278	LOAD_FAST(arg=0, lineno=1229)
         280	LOAD_ATTR(arg=6, lineno=1229)
         300	LOAD_CONST(arg=1, lineno=1229)
         302	BINARY_SUBSCR(arg=None, lineno=1229)
         306	COMPARE_OP(arg=2, lineno=1229)
         310	POP_JUMP_IF_FALSE(arg=209, lineno=1229)
>        312	LOAD_GLOBAL(arg=1, lineno=1230)
         322	LOAD_ATTR(arg=2, lineno=1230)
         342	LOAD_FAST(arg=0, lineno=1230)
         344	LOAD_GLOBAL(arg=3, lineno=1230)
         354	LOAD_CONST(arg=1, lineno=1230)
         356	LOAD_FAST(arg=8, lineno=1230)
         358	LOAD_FAST(arg=1, lineno=1230)
         360	BINARY_OP(arg=10, lineno=1230)
         364	CALL(arg=2, lineno=1230)
         372	LOAD_GLOBAL(arg=5, lineno=1230)
         382	LOAD_FAST(arg=8, lineno=1230)
         384	LOAD_FAST(arg=2, lineno=1230)
         386	BINARY_OP(arg=0, lineno=1230)
         390	LOAD_FAST(arg=0, lineno=1230)
         392	LOAD_ATTR(arg=6, lineno=1230)
         412	LOAD_CONST(arg=1, lineno=1230)
         414	BINARY_SUBSCR(arg=None, lineno=1230)
         418	CALL(arg=2, lineno=1230)
         426	BINARY_SLICE(arg=None, lineno=1230)
         428	CALL(arg=1, lineno=1230)
         436	STORE_FAST(arg=9, lineno=1230)
         438	LOAD_FAST(arg=0, lineno=1233)
         440	LOAD_FAST(arg=8, lineno=1233)
         442	BINARY_SUBSCR(arg=None, lineno=1233)
         446	LOAD_FAST(arg=9, lineno=1233)
         448	COMPARE_OP(arg=40, lineno=1233)
         452	LOAD_FAST(arg=7, lineno=1233)
         454	LOAD_FAST(arg=8, lineno=1233)
         456	STORE_SUBSCR(arg=None, lineno=1233)
         460	LOAD_FAST(arg=7, lineno=1235)
         462	LOAD_FAST(arg=8, lineno=1235)
         464	BINARY_SUBSCR(arg=None, lineno=1235)
         468	POP_JUMP_IF_TRUE(arg=6, lineno=1235)
         470	LOAD_FAST(arg=8, lineno=1236)
         472	LOAD_CONST(arg=3, lineno=1236)
         474	BINARY_OP(arg=13, lineno=1236)
         478	STORE_FAST(arg=8, lineno=1236)
         480	JUMP_BACKWARD(arg=103, lineno=1237)
>        482	LOAD_GLOBAL(arg=1, lineno=1239)
         492	LOAD_ATTR(arg=8, lineno=1239)
         512	LOAD_FAST(arg=0, lineno=1239)
         514	LOAD_GLOBAL(arg=3, lineno=1239)
         524	LOAD_CONST(arg=1, lineno=1239)
         526	LOAD_FAST(arg=8, lineno=1239)
         528	LOAD_FAST(arg=3, lineno=1239)
         530	BINARY_OP(arg=10, lineno=1239)
         534	CALL(arg=2, lineno=1239)
         542	LOAD_GLOBAL(arg=5, lineno=1239)
         552	LOAD_FAST(arg=8, lineno=1239)
         554	LOAD_FAST(arg=4, lineno=1239)
         556	BINARY_OP(arg=0, lineno=1239)
         560	LOAD_FAST(arg=0, lineno=1239)
         562	LOAD_ATTR(arg=6, lineno=1239)
         582	LOAD_CONST(arg=1, lineno=1239)
         584	BINARY_SUBSCR(arg=None, lineno=1239)
         588	CALL(arg=2, lineno=1239)
         596	BINARY_SLICE(arg=None, lineno=1239)
         598	CALL(arg=1, lineno=1239)
         606	STORE_FAST(arg=10, lineno=1239)
         608	LOAD_FAST(arg=7, lineno=1240)
         610	LOAD_FAST(arg=8, lineno=1240)
         612	COPY(arg=2, lineno=1240)
         614	COPY(arg=2, lineno=1240)
         616	BINARY_SUBSCR(arg=None, lineno=1240)
         620	LOAD_FAST(arg=0, lineno=1240)
         622	LOAD_FAST(arg=8, lineno=1240)
         624	BINARY_SUBSCR(arg=None, lineno=1240)
         628	LOAD_FAST(arg=10, lineno=1240)
         630	LOAD_FAST(arg=5, lineno=1240)
         632	BINARY_OP(arg=0, lineno=1240)
         636	COMPARE_OP(arg=92, lineno=1240)
         640	BINARY_OP(arg=14, lineno=1240)
         644	SWAP(arg=3, lineno=1240)
         646	SWAP(arg=2, lineno=1240)
         648	STORE_SUBSCR(arg=None, lineno=1240)
         652	LOAD_FAST(arg=7, lineno=1242)
         654	LOAD_FAST(arg=8, lineno=1242)
         656	BINARY_SUBSCR(arg=None, lineno=1242)
         660	POP_JUMP_IF_TRUE(arg=6, lineno=1242)
         662	LOAD_FAST(arg=8, lineno=1243)
         664	LOAD_CONST(arg=3, lineno=1243)
         666	BINARY_OP(arg=13, lineno=1243)
         670	STORE_FAST(arg=8, lineno=1243)
         672	JUMP_BACKWARD(arg=199, lineno=1244)
>        674	LOAD_FAST(arg=8, lineno=1247)
         676	LOAD_FAST(arg=6, lineno=1247)
         678	LOAD_CONST(arg=3, lineno=1247)
         680	BINARY_OP(arg=0, lineno=1247)
         684	BINARY_OP(arg=13, lineno=1247)
         688	STORE_FAST(arg=8, lineno=1247)
         690	LOAD_FAST(arg=8, lineno=1229)
         692	LOAD_FAST(arg=0, lineno=1229)
         694	LOAD_ATTR(arg=6, lineno=1229)
         714	LOAD_CONST(arg=1, lineno=1229)
         716	BINARY_SUBSCR(arg=None, lineno=1229)
         720	COMPARE_OP(arg=2, lineno=1229)
         724	POP_JUMP_IF_FALSE(arg=1, lineno=1229)
         726	JUMP_BACKWARD(arg=208, lineno=1229)
>        728	RETURN_CONST(arg=2, lineno=1229)
>        730	RETURN_CONST(arg=2, lineno=1229)
2024-06-06 03:46:40,177 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:40,177 - DEBUG - stack: []
2024-06-06 03:46:40,177 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:40,177 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-06-06 03:46:40,177 - DEBUG - stack []
2024-06-06 03:46:40,177 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-06-06 03:46:40,177 - DEBUG - stack []
2024-06-06 03:46:40,177 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-06 03:46:40,177 - DEBUG - stack []
2024-06-06 03:46:40,177 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-06 03:46:40,177 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:40,178 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-06 03:46:40,178 - DEBUG - stack ['$x4.0', '$const6.1']
2024-06-06 03:46:40,178 - DEBUG - dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-06-06 03:46:40,178 - DEBUG - stack ['$8binary_subscr.2']
2024-06-06 03:46:40,178 - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=2, lineno=1221)
2024-06-06 03:46:40,178 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$12load_global.3']
2024-06-06 03:46:40,178 - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-06 03:46:40,178 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5']
2024-06-06 03:46:40,178 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=1221)
2024-06-06 03:46:40,179 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6']
2024-06-06 03:46:40,179 - DEBUG - dispatch pc=46, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-06-06 03:46:40,179 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7']
2024-06-06 03:46:40,179 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-06-06 03:46:40,179 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8']
2024-06-06 03:46:40,179 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-06 03:46:40,179 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10']
2024-06-06 03:46:40,179 - DEBUG - dispatch pc=60, inst=LOAD_ATTR(arg=6, lineno=1221)
2024-06-06 03:46:40,179 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$x58.11']
2024-06-06 03:46:40,179 - DEBUG - dispatch pc=80, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-06 03:46:40,179 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$60load_attr.12']
2024-06-06 03:46:40,179 - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-06 03:46:40,179 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$60load_attr.12', '$const80.13']
2024-06-06 03:46:40,180 - DEBUG - dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-06-06 03:46:40,180 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$82binary_subscr.14']
2024-06-06 03:46:40,180 - DEBUG - dispatch pc=94, inst=BINARY_SLICE(arg=None, lineno=1221)
2024-06-06 03:46:40,180 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$86call.15']
2024-06-06 03:46:40,180 - DEBUG - dispatch pc=96, inst=CALL(arg=1, lineno=1221)
2024-06-06 03:46:40,180 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$94binary_slice.17']
2024-06-06 03:46:40,180 - DEBUG - dispatch pc=104, inst=COMPARE_OP(arg=92, lineno=1221)
2024-06-06 03:46:40,180 - DEBUG - stack ['$8binary_subscr.2', '$96call.19']
2024-06-06 03:46:40,180 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=7, lineno=1221)
2024-06-06 03:46:40,180 - DEBUG - stack ['$104compare_op.20']
2024-06-06 03:46:40,180 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-06 03:46:40,181 - DEBUG - stack ['$104compare_op.20', '$peaks108.21']
2024-06-06 03:46:40,181 - DEBUG - dispatch pc=112, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-06-06 03:46:40,181 - DEBUG - stack ['$104compare_op.20', '$peaks108.21', '$const110.22']
2024-06-06 03:46:40,181 - DEBUG - dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=1222)
2024-06-06 03:46:40,181 - DEBUG - stack []
2024-06-06 03:46:40,181 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-06 03:46:40,181 - DEBUG - stack ['$peaks116.23']
2024-06-06 03:46:40,181 - DEBUG - dispatch pc=120, inst=COPY(arg=2, lineno=1222)
2024-06-06 03:46:40,181 - DEBUG - stack ['$peaks116.23', '$const118.24']
2024-06-06 03:46:40,181 - DEBUG - dispatch pc=122, inst=COPY(arg=2, lineno=1222)
2024-06-06 03:46:40,181 - DEBUG - stack ['$peaks116.23', '$const118.24', '$peaks116.23']
2024-06-06 03:46:40,181 - DEBUG - dispatch pc=124, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:40,181 - DEBUG - stack ['$peaks116.23', '$const118.24', '$peaks116.23', '$const118.24']
2024-06-06 03:46:40,182 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-06 03:46:40,182 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25']
2024-06-06 03:46:40,182 - DEBUG - dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-06 03:46:40,182 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$x128.26']
2024-06-06 03:46:40,182 - DEBUG - dispatch pc=132, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:40,182 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$x128.26', '$const130.27']
2024-06-06 03:46:40,182 - DEBUG - dispatch pc=136, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-06-06 03:46:40,182 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28']
2024-06-06 03:46:40,182 - DEBUG - dispatch pc=146, inst=LOAD_ATTR(arg=8, lineno=1222)
2024-06-06 03:46:40,182 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$136load_global.29']
2024-06-06 03:46:40,182 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-06 03:46:40,182 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31']
2024-06-06 03:46:40,182 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=1222)
2024-06-06 03:46:40,183 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32']
2024-06-06 03:46:40,183 - DEBUG - dispatch pc=170, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-06-06 03:46:40,183 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33']
2024-06-06 03:46:40,183 - DEBUG - dispatch pc=180, inst=LOAD_FAST(arg=4, lineno=1222)
2024-06-06 03:46:40,183 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34']
2024-06-06 03:46:40,183 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-06 03:46:40,183 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36']
2024-06-06 03:46:40,183 - DEBUG - dispatch pc=184, inst=LOAD_ATTR(arg=6, lineno=1222)
2024-06-06 03:46:40,183 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$x182.37']
2024-06-06 03:46:40,183 - DEBUG - dispatch pc=204, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-06 03:46:40,183 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$184load_attr.38']
2024-06-06 03:46:40,184 - DEBUG - dispatch pc=206, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:40,184 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$184load_attr.38', '$const204.39']
2024-06-06 03:46:40,184 - DEBUG - dispatch pc=210, inst=CALL(arg=2, lineno=1222)
2024-06-06 03:46:40,184 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$206binary_subscr.40']
2024-06-06 03:46:40,184 - DEBUG - dispatch pc=218, inst=BINARY_SLICE(arg=None, lineno=1222)
2024-06-06 03:46:40,184 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$210call.41']
2024-06-06 03:46:40,184 - DEBUG - dispatch pc=220, inst=CALL(arg=1, lineno=1222)
2024-06-06 03:46:40,184 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$218binary_slice.43']
2024-06-06 03:46:40,184 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=1222)
2024-06-06 03:46:40,184 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$220call.45']
2024-06-06 03:46:40,184 - DEBUG - dispatch pc=230, inst=BINARY_OP(arg=0, lineno=1222)
2024-06-06 03:46:40,184 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$220call.45', '$delta228.46']
2024-06-06 03:46:40,185 - DEBUG - dispatch pc=234, inst=COMPARE_OP(arg=92, lineno=1222)
2024-06-06 03:46:40,185 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$binop_add230.47']
2024-06-06 03:46:40,185 - DEBUG - dispatch pc=238, inst=BINARY_OP(arg=14, lineno=1222)
2024-06-06 03:46:40,185 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$234compare_op.48']
2024-06-06 03:46:40,185 - DEBUG - dispatch pc=242, inst=SWAP(arg=3, lineno=1222)
2024-06-06 03:46:40,185 - DEBUG - stack ['$peaks116.23', '$const118.24', '$binop_iand238.49']
2024-06-06 03:46:40,185 - DEBUG - dispatch pc=244, inst=SWAP(arg=2, lineno=1222)
2024-06-06 03:46:40,185 - DEBUG - stack ['$binop_iand238.49', '$const118.24', '$peaks116.23']
2024-06-06 03:46:40,185 - DEBUG - dispatch pc=246, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:40,185 - DEBUG - stack ['$binop_iand238.49', '$peaks116.23', '$const118.24']
2024-06-06 03:46:40,185 - DEBUG - dispatch pc=250, inst=LOAD_FAST(arg=7, lineno=1224)
2024-06-06 03:46:40,185 - DEBUG - stack []
2024-06-06 03:46:40,185 - DEBUG - dispatch pc=252, inst=LOAD_CONST(arg=1, lineno=1224)
2024-06-06 03:46:40,186 - DEBUG - stack ['$peaks250.50']
2024-06-06 03:46:40,186 - DEBUG - dispatch pc=254, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-06-06 03:46:40,186 - DEBUG - stack ['$peaks250.50', '$const252.51']
2024-06-06 03:46:40,186 - DEBUG - dispatch pc=258, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1224)
2024-06-06 03:46:40,186 - DEBUG - stack ['$254binary_subscr.52']
2024-06-06 03:46:40,186 - DEBUG - end state. edges=[Edge(pc=260, stack=(), blockstack=(), npush=0), Edge(pc=272, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:40,186 - DEBUG - pending: deque([State(pc_initial=260 nstack_initial=0), State(pc_initial=272 nstack_initial=0)])
2024-06-06 03:46:40,186 - DEBUG - stack: []
2024-06-06 03:46:40,186 - DEBUG - state.pc_initial: State(pc_initial=260 nstack_initial=0)
2024-06-06 03:46:40,186 - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=6, lineno=1225)
2024-06-06 03:46:40,186 - DEBUG - stack []
2024-06-06 03:46:40,186 - DEBUG - dispatch pc=262, inst=LOAD_CONST(arg=3, lineno=1225)
2024-06-06 03:46:40,187 - DEBUG - stack ['$wait260.0']
2024-06-06 03:46:40,187 - DEBUG - dispatch pc=264, inst=BINARY_OP(arg=0, lineno=1225)
2024-06-06 03:46:40,187 - DEBUG - stack ['$wait260.0', '$const262.1']
2024-06-06 03:46:40,187 - DEBUG - dispatch pc=268, inst=STORE_FAST(arg=8, lineno=1225)
2024-06-06 03:46:40,187 - DEBUG - stack ['$binop_add264.2']
2024-06-06 03:46:40,187 - DEBUG - dispatch pc=270, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-06-06 03:46:40,187 - DEBUG - stack []
2024-06-06 03:46:40,187 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:40,187 - DEBUG - pending: deque([State(pc_initial=272 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:40,187 - DEBUG - stack: []
2024-06-06 03:46:40,187 - DEBUG - state.pc_initial: State(pc_initial=272 nstack_initial=0)
2024-06-06 03:46:40,187 - DEBUG - dispatch pc=272, inst=LOAD_CONST(arg=3, lineno=1227)
2024-06-06 03:46:40,188 - DEBUG - stack []
2024-06-06 03:46:40,188 - DEBUG - dispatch pc=274, inst=STORE_FAST(arg=8, lineno=1227)
2024-06-06 03:46:40,188 - DEBUG - stack ['$const272.0']
2024-06-06 03:46:40,188 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:40,188 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:40,188 - DEBUG - stack: []
2024-06-06 03:46:40,188 - DEBUG - state.pc_initial: State(pc_initial=276 nstack_initial=0)
2024-06-06 03:46:40,188 - DEBUG - dispatch pc=276, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-06 03:46:40,188 - DEBUG - stack []
2024-06-06 03:46:40,188 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-06 03:46:40,188 - DEBUG - stack ['$n276.0']
2024-06-06 03:46:40,188 - DEBUG - dispatch pc=280, inst=LOAD_ATTR(arg=6, lineno=1229)
2024-06-06 03:46:40,188 - DEBUG - stack ['$n276.0', '$x278.1']
2024-06-06 03:46:40,189 - DEBUG - dispatch pc=300, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-06 03:46:40,189 - DEBUG - stack ['$n276.0', '$280load_attr.2']
2024-06-06 03:46:40,189 - DEBUG - dispatch pc=302, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-06 03:46:40,189 - DEBUG - stack ['$n276.0', '$280load_attr.2', '$const300.3']
2024-06-06 03:46:40,189 - DEBUG - dispatch pc=306, inst=COMPARE_OP(arg=2, lineno=1229)
2024-06-06 03:46:40,189 - DEBUG - stack ['$n276.0', '$302binary_subscr.4']
2024-06-06 03:46:40,189 - DEBUG - dispatch pc=310, inst=POP_JUMP_IF_FALSE(arg=209, lineno=1229)
2024-06-06 03:46:40,189 - DEBUG - stack ['$306compare_op.5']
2024-06-06 03:46:40,189 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=730, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:40,189 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=312 nstack_initial=0), State(pc_initial=730 nstack_initial=0)])
2024-06-06 03:46:40,189 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=730 nstack_initial=0)])
2024-06-06 03:46:40,189 - DEBUG - stack: []
2024-06-06 03:46:40,190 - DEBUG - state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-06-06 03:46:40,190 - DEBUG - dispatch pc=312, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-06-06 03:46:40,190 - DEBUG - stack []
2024-06-06 03:46:40,190 - DEBUG - dispatch pc=322, inst=LOAD_ATTR(arg=2, lineno=1230)
2024-06-06 03:46:40,190 - DEBUG - stack ['$null$312.1', '$312load_global.0']
2024-06-06 03:46:40,190 - DEBUG - dispatch pc=342, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-06 03:46:40,190 - DEBUG - stack ['$null$312.1', '$322load_attr.2']
2024-06-06 03:46:40,190 - DEBUG - dispatch pc=344, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-06-06 03:46:40,190 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3']
2024-06-06 03:46:40,190 - DEBUG - dispatch pc=354, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-06 03:46:40,190 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4']
2024-06-06 03:46:40,190 - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-06 03:46:40,191 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6']
2024-06-06 03:46:40,191 - DEBUG - dispatch pc=358, inst=LOAD_FAST(arg=1, lineno=1230)
2024-06-06 03:46:40,191 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6', '$n356.7']
2024-06-06 03:46:40,191 - DEBUG - dispatch pc=360, inst=BINARY_OP(arg=10, lineno=1230)
2024-06-06 03:46:40,191 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6', '$n356.7', '$pre_max358.8']
2024-06-06 03:46:40,191 - DEBUG - dispatch pc=364, inst=CALL(arg=2, lineno=1230)
2024-06-06 03:46:40,191 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6', '$binop_sub360.9']
2024-06-06 03:46:40,191 - DEBUG - dispatch pc=372, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-06-06 03:46:40,191 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10']
2024-06-06 03:46:40,192 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-06 03:46:40,192 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11']
2024-06-06 03:46:40,192 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=2, lineno=1230)
2024-06-06 03:46:40,192 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$n382.13']
2024-06-06 03:46:40,192 - DEBUG - dispatch pc=386, inst=BINARY_OP(arg=0, lineno=1230)
2024-06-06 03:46:40,192 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$n382.13', '$post_max384.14']
2024-06-06 03:46:40,192 - DEBUG - dispatch pc=390, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-06 03:46:40,192 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15']
2024-06-06 03:46:40,192 - DEBUG - dispatch pc=392, inst=LOAD_ATTR(arg=6, lineno=1230)
2024-06-06 03:46:40,192 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$x390.16']
2024-06-06 03:46:40,192 - DEBUG - dispatch pc=412, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-06 03:46:40,192 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$392load_attr.17']
2024-06-06 03:46:40,192 - DEBUG - dispatch pc=414, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-06-06 03:46:40,193 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$392load_attr.17', '$const412.18']
2024-06-06 03:46:40,193 - DEBUG - dispatch pc=418, inst=CALL(arg=2, lineno=1230)
2024-06-06 03:46:40,193 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$414binary_subscr.19']
2024-06-06 03:46:40,193 - DEBUG - dispatch pc=426, inst=BINARY_SLICE(arg=None, lineno=1230)
2024-06-06 03:46:40,193 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$418call.20']
2024-06-06 03:46:40,193 - DEBUG - dispatch pc=428, inst=CALL(arg=1, lineno=1230)
2024-06-06 03:46:40,193 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$426binary_slice.22']
2024-06-06 03:46:40,193 - DEBUG - dispatch pc=436, inst=STORE_FAST(arg=9, lineno=1230)
2024-06-06 03:46:40,193 - DEBUG - stack ['$428call.24']
2024-06-06 03:46:40,193 - DEBUG - dispatch pc=438, inst=LOAD_FAST(arg=0, lineno=1233)
2024-06-06 03:46:40,193 - DEBUG - stack []
2024-06-06 03:46:40,193 - DEBUG - dispatch pc=440, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-06 03:46:40,194 - DEBUG - stack ['$x438.25']
2024-06-06 03:46:40,194 - DEBUG - dispatch pc=442, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-06-06 03:46:40,194 - DEBUG - stack ['$x438.25', '$n440.26']
2024-06-06 03:46:40,194 - DEBUG - dispatch pc=446, inst=LOAD_FAST(arg=9, lineno=1233)
2024-06-06 03:46:40,194 - DEBUG - stack ['$442binary_subscr.27']
2024-06-06 03:46:40,194 - DEBUG - dispatch pc=448, inst=COMPARE_OP(arg=40, lineno=1233)
2024-06-06 03:46:40,194 - DEBUG - stack ['$442binary_subscr.27', '$maxn446.28']
2024-06-06 03:46:40,194 - DEBUG - dispatch pc=452, inst=LOAD_FAST(arg=7, lineno=1233)
2024-06-06 03:46:40,194 - DEBUG - stack ['$448compare_op.29']
2024-06-06 03:46:40,194 - DEBUG - dispatch pc=454, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-06 03:46:40,194 - DEBUG - stack ['$448compare_op.29', '$peaks452.30']
2024-06-06 03:46:40,194 - DEBUG - dispatch pc=456, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-06-06 03:46:40,195 - DEBUG - stack ['$448compare_op.29', '$peaks452.30', '$n454.31']
2024-06-06 03:46:40,195 - DEBUG - dispatch pc=460, inst=LOAD_FAST(arg=7, lineno=1235)
2024-06-06 03:46:40,195 - DEBUG - stack []
2024-06-06 03:46:40,195 - DEBUG - dispatch pc=462, inst=LOAD_FAST(arg=8, lineno=1235)
2024-06-06 03:46:40,195 - DEBUG - stack ['$peaks460.32']
2024-06-06 03:46:40,195 - DEBUG - dispatch pc=464, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-06-06 03:46:40,195 - DEBUG - stack ['$peaks460.32', '$n462.33']
2024-06-06 03:46:40,195 - DEBUG - dispatch pc=468, inst=POP_JUMP_IF_TRUE(arg=6, lineno=1235)
2024-06-06 03:46:40,195 - DEBUG - stack ['$464binary_subscr.34']
2024-06-06 03:46:40,196 - DEBUG - end state. edges=[Edge(pc=470, stack=(), blockstack=(), npush=0), Edge(pc=482, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:40,196 - DEBUG - pending: deque([State(pc_initial=730 nstack_initial=0), State(pc_initial=470 nstack_initial=0), State(pc_initial=482 nstack_initial=0)])
2024-06-06 03:46:40,196 - DEBUG - stack: []
2024-06-06 03:46:40,196 - DEBUG - state.pc_initial: State(pc_initial=730 nstack_initial=0)
2024-06-06 03:46:40,196 - DEBUG - dispatch pc=730, inst=RETURN_CONST(arg=2, lineno=1229)
2024-06-06 03:46:40,196 - DEBUG - stack []
2024-06-06 03:46:40,196 - DEBUG - end state. edges=[]
2024-06-06 03:46:40,196 - DEBUG - pending: deque([State(pc_initial=470 nstack_initial=0), State(pc_initial=482 nstack_initial=0)])
2024-06-06 03:46:40,196 - DEBUG - stack: []
2024-06-06 03:46:40,196 - DEBUG - state.pc_initial: State(pc_initial=470 nstack_initial=0)
2024-06-06 03:46:40,196 - DEBUG - dispatch pc=470, inst=LOAD_FAST(arg=8, lineno=1236)
2024-06-06 03:46:40,196 - DEBUG - stack []
2024-06-06 03:46:40,196 - DEBUG - dispatch pc=472, inst=LOAD_CONST(arg=3, lineno=1236)
2024-06-06 03:46:40,197 - DEBUG - stack ['$n470.0']
2024-06-06 03:46:40,197 - DEBUG - dispatch pc=474, inst=BINARY_OP(arg=13, lineno=1236)
2024-06-06 03:46:40,197 - DEBUG - stack ['$n470.0', '$const472.1']
2024-06-06 03:46:40,197 - DEBUG - dispatch pc=478, inst=STORE_FAST(arg=8, lineno=1236)
2024-06-06 03:46:40,197 - DEBUG - stack ['$binop_iadd474.2']
2024-06-06 03:46:40,197 - DEBUG - dispatch pc=480, inst=JUMP_BACKWARD(arg=103, lineno=1237)
2024-06-06 03:46:40,197 - DEBUG - stack []
2024-06-06 03:46:40,197 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:40,197 - DEBUG - pending: deque([State(pc_initial=482 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:40,197 - DEBUG - stack: []
2024-06-06 03:46:40,197 - DEBUG - state.pc_initial: State(pc_initial=482 nstack_initial=0)
2024-06-06 03:46:40,197 - DEBUG - dispatch pc=482, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-06-06 03:46:40,197 - DEBUG - stack []
2024-06-06 03:46:40,198 - DEBUG - dispatch pc=492, inst=LOAD_ATTR(arg=8, lineno=1239)
2024-06-06 03:46:40,198 - DEBUG - stack ['$null$482.1', '$482load_global.0']
2024-06-06 03:46:40,198 - DEBUG - dispatch pc=512, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-06 03:46:40,198 - DEBUG - stack ['$null$482.1', '$492load_attr.2']
2024-06-06 03:46:40,198 - DEBUG - dispatch pc=514, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-06-06 03:46:40,198 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3']
2024-06-06 03:46:40,198 - DEBUG - dispatch pc=524, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-06 03:46:40,198 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4']
2024-06-06 03:46:40,198 - DEBUG - dispatch pc=526, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-06 03:46:40,198 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6']
2024-06-06 03:46:40,198 - DEBUG - dispatch pc=528, inst=LOAD_FAST(arg=3, lineno=1239)
2024-06-06 03:46:40,198 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6', '$n526.7']
2024-06-06 03:46:40,198 - DEBUG - dispatch pc=530, inst=BINARY_OP(arg=10, lineno=1239)
2024-06-06 03:46:40,199 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6', '$n526.7', '$pre_avg528.8']
2024-06-06 03:46:40,199 - DEBUG - dispatch pc=534, inst=CALL(arg=2, lineno=1239)
2024-06-06 03:46:40,199 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6', '$binop_sub530.9']
2024-06-06 03:46:40,199 - DEBUG - dispatch pc=542, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-06-06 03:46:40,199 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10']
2024-06-06 03:46:40,199 - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-06 03:46:40,199 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11']
2024-06-06 03:46:40,199 - DEBUG - dispatch pc=554, inst=LOAD_FAST(arg=4, lineno=1239)
2024-06-06 03:46:40,199 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$n552.13']
2024-06-06 03:46:40,199 - DEBUG - dispatch pc=556, inst=BINARY_OP(arg=0, lineno=1239)
2024-06-06 03:46:40,199 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$n552.13', '$post_avg554.14']
2024-06-06 03:46:40,199 - DEBUG - dispatch pc=560, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-06 03:46:40,199 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15']
2024-06-06 03:46:40,200 - DEBUG - dispatch pc=562, inst=LOAD_ATTR(arg=6, lineno=1239)
2024-06-06 03:46:40,200 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$x560.16']
2024-06-06 03:46:40,200 - DEBUG - dispatch pc=582, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-06 03:46:40,200 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$562load_attr.17']
2024-06-06 03:46:40,200 - DEBUG - dispatch pc=584, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-06-06 03:46:40,200 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$562load_attr.17', '$const582.18']
2024-06-06 03:46:40,200 - DEBUG - dispatch pc=588, inst=CALL(arg=2, lineno=1239)
2024-06-06 03:46:40,200 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$584binary_subscr.19']
2024-06-06 03:46:40,200 - DEBUG - dispatch pc=596, inst=BINARY_SLICE(arg=None, lineno=1239)
2024-06-06 03:46:40,200 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$588call.20']
2024-06-06 03:46:40,200 - DEBUG - dispatch pc=598, inst=CALL(arg=1, lineno=1239)
2024-06-06 03:46:40,200 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$596binary_slice.22']
2024-06-06 03:46:40,201 - DEBUG - dispatch pc=606, inst=STORE_FAST(arg=10, lineno=1239)
2024-06-06 03:46:40,201 - DEBUG - stack ['$598call.24']
2024-06-06 03:46:40,201 - DEBUG - dispatch pc=608, inst=LOAD_FAST(arg=7, lineno=1240)
2024-06-06 03:46:40,201 - DEBUG - stack []
2024-06-06 03:46:40,201 - DEBUG - dispatch pc=610, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-06 03:46:40,201 - DEBUG - stack ['$peaks608.25']
2024-06-06 03:46:40,201 - DEBUG - dispatch pc=612, inst=COPY(arg=2, lineno=1240)
2024-06-06 03:46:40,201 - DEBUG - stack ['$peaks608.25', '$n610.26']
2024-06-06 03:46:40,201 - DEBUG - dispatch pc=614, inst=COPY(arg=2, lineno=1240)
2024-06-06 03:46:40,201 - DEBUG - stack ['$peaks608.25', '$n610.26', '$peaks608.25']
2024-06-06 03:46:40,201 - DEBUG - dispatch pc=616, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-06 03:46:40,201 - DEBUG - stack ['$peaks608.25', '$n610.26', '$peaks608.25', '$n610.26']
2024-06-06 03:46:40,201 - DEBUG - dispatch pc=620, inst=LOAD_FAST(arg=0, lineno=1240)
2024-06-06 03:46:40,201 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27']
2024-06-06 03:46:40,202 - DEBUG - dispatch pc=622, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-06 03:46:40,202 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$x620.28']
2024-06-06 03:46:40,202 - DEBUG - dispatch pc=624, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-06 03:46:40,202 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$x620.28', '$n622.29']
2024-06-06 03:46:40,202 - DEBUG - dispatch pc=628, inst=LOAD_FAST(arg=10, lineno=1240)
2024-06-06 03:46:40,202 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30']
2024-06-06 03:46:40,202 - DEBUG - dispatch pc=630, inst=LOAD_FAST(arg=5, lineno=1240)
2024-06-06 03:46:40,202 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30', '$avgn628.31']
2024-06-06 03:46:40,202 - DEBUG - dispatch pc=632, inst=BINARY_OP(arg=0, lineno=1240)
2024-06-06 03:46:40,202 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30', '$avgn628.31', '$delta630.32']
2024-06-06 03:46:40,202 - DEBUG - dispatch pc=636, inst=COMPARE_OP(arg=92, lineno=1240)
2024-06-06 03:46:40,202 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30', '$binop_add632.33']
2024-06-06 03:46:40,202 - DEBUG - dispatch pc=640, inst=BINARY_OP(arg=14, lineno=1240)
2024-06-06 03:46:40,203 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$636compare_op.34']
2024-06-06 03:46:40,203 - DEBUG - dispatch pc=644, inst=SWAP(arg=3, lineno=1240)
2024-06-06 03:46:40,203 - DEBUG - stack ['$peaks608.25', '$n610.26', '$binop_iand640.35']
2024-06-06 03:46:40,203 - DEBUG - dispatch pc=646, inst=SWAP(arg=2, lineno=1240)
2024-06-06 03:46:40,203 - DEBUG - stack ['$binop_iand640.35', '$n610.26', '$peaks608.25']
2024-06-06 03:46:40,203 - DEBUG - dispatch pc=648, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-06-06 03:46:40,203 - DEBUG - stack ['$binop_iand640.35', '$peaks608.25', '$n610.26']
2024-06-06 03:46:40,203 - DEBUG - dispatch pc=652, inst=LOAD_FAST(arg=7, lineno=1242)
2024-06-06 03:46:40,203 - DEBUG - stack []
2024-06-06 03:46:40,203 - DEBUG - dispatch pc=654, inst=LOAD_FAST(arg=8, lineno=1242)
2024-06-06 03:46:40,203 - DEBUG - stack ['$peaks652.36']
2024-06-06 03:46:40,203 - DEBUG - dispatch pc=656, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-06-06 03:46:40,203 - DEBUG - stack ['$peaks652.36', '$n654.37']
2024-06-06 03:46:40,203 - DEBUG - dispatch pc=660, inst=POP_JUMP_IF_TRUE(arg=6, lineno=1242)
2024-06-06 03:46:40,204 - DEBUG - stack ['$656binary_subscr.38']
2024-06-06 03:46:40,204 - DEBUG - end state. edges=[Edge(pc=662, stack=(), blockstack=(), npush=0), Edge(pc=674, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:40,204 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=662 nstack_initial=0), State(pc_initial=674 nstack_initial=0)])
2024-06-06 03:46:40,204 - DEBUG - pending: deque([State(pc_initial=662 nstack_initial=0), State(pc_initial=674 nstack_initial=0)])
2024-06-06 03:46:40,204 - DEBUG - stack: []
2024-06-06 03:46:40,204 - DEBUG - state.pc_initial: State(pc_initial=662 nstack_initial=0)
2024-06-06 03:46:40,204 - DEBUG - dispatch pc=662, inst=LOAD_FAST(arg=8, lineno=1243)
2024-06-06 03:46:40,204 - DEBUG - stack []
2024-06-06 03:46:40,204 - DEBUG - dispatch pc=664, inst=LOAD_CONST(arg=3, lineno=1243)
2024-06-06 03:46:40,204 - DEBUG - stack ['$n662.0']
2024-06-06 03:46:40,204 - DEBUG - dispatch pc=666, inst=BINARY_OP(arg=13, lineno=1243)
2024-06-06 03:46:40,204 - DEBUG - stack ['$n662.0', '$const664.1']
2024-06-06 03:46:40,205 - DEBUG - dispatch pc=670, inst=STORE_FAST(arg=8, lineno=1243)
2024-06-06 03:46:40,205 - DEBUG - stack ['$binop_iadd666.2']
2024-06-06 03:46:40,205 - DEBUG - dispatch pc=672, inst=JUMP_BACKWARD(arg=199, lineno=1244)
2024-06-06 03:46:40,205 - DEBUG - stack []
2024-06-06 03:46:40,205 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:40,205 - DEBUG - pending: deque([State(pc_initial=674 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:40,205 - DEBUG - stack: []
2024-06-06 03:46:40,205 - DEBUG - state.pc_initial: State(pc_initial=674 nstack_initial=0)
2024-06-06 03:46:40,205 - DEBUG - dispatch pc=674, inst=LOAD_FAST(arg=8, lineno=1247)
2024-06-06 03:46:40,205 - DEBUG - stack []
2024-06-06 03:46:40,205 - DEBUG - dispatch pc=676, inst=LOAD_FAST(arg=6, lineno=1247)
2024-06-06 03:46:40,205 - DEBUG - stack ['$n674.0']
2024-06-06 03:46:40,205 - DEBUG - dispatch pc=678, inst=LOAD_CONST(arg=3, lineno=1247)
2024-06-06 03:46:40,206 - DEBUG - stack ['$n674.0', '$wait676.1']
2024-06-06 03:46:40,206 - DEBUG - dispatch pc=680, inst=BINARY_OP(arg=0, lineno=1247)
2024-06-06 03:46:40,206 - DEBUG - stack ['$n674.0', '$wait676.1', '$const678.2']
2024-06-06 03:46:40,206 - DEBUG - dispatch pc=684, inst=BINARY_OP(arg=13, lineno=1247)
2024-06-06 03:46:40,206 - DEBUG - stack ['$n674.0', '$binop_add680.3']
2024-06-06 03:46:40,206 - DEBUG - dispatch pc=688, inst=STORE_FAST(arg=8, lineno=1247)
2024-06-06 03:46:40,206 - DEBUG - stack ['$binop_iadd684.4']
2024-06-06 03:46:40,206 - DEBUG - dispatch pc=690, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-06 03:46:40,206 - DEBUG - stack []
2024-06-06 03:46:40,206 - DEBUG - dispatch pc=692, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-06 03:46:40,206 - DEBUG - stack ['$n690.5']
2024-06-06 03:46:40,206 - DEBUG - dispatch pc=694, inst=LOAD_ATTR(arg=6, lineno=1229)
2024-06-06 03:46:40,206 - DEBUG - stack ['$n690.5', '$x692.6']
2024-06-06 03:46:40,206 - DEBUG - dispatch pc=714, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-06 03:46:40,207 - DEBUG - stack ['$n690.5', '$694load_attr.7']
2024-06-06 03:46:40,207 - DEBUG - dispatch pc=716, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-06 03:46:40,207 - DEBUG - stack ['$n690.5', '$694load_attr.7', '$const714.8']
2024-06-06 03:46:40,207 - DEBUG - dispatch pc=720, inst=COMPARE_OP(arg=2, lineno=1229)
2024-06-06 03:46:40,207 - DEBUG - stack ['$n690.5', '$716binary_subscr.9']
2024-06-06 03:46:40,207 - DEBUG - dispatch pc=724, inst=POP_JUMP_IF_FALSE(arg=1, lineno=1229)
2024-06-06 03:46:40,207 - DEBUG - stack ['$720compare_op.10']
2024-06-06 03:46:40,207 - DEBUG - end state. edges=[Edge(pc=726, stack=(), blockstack=(), npush=0), Edge(pc=728, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:40,207 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=726 nstack_initial=0), State(pc_initial=728 nstack_initial=0)])
2024-06-06 03:46:40,207 - DEBUG - pending: deque([State(pc_initial=726 nstack_initial=0), State(pc_initial=728 nstack_initial=0)])
2024-06-06 03:46:40,207 - DEBUG - stack: []
2024-06-06 03:46:40,207 - DEBUG - state.pc_initial: State(pc_initial=726 nstack_initial=0)
2024-06-06 03:46:40,207 - DEBUG - dispatch pc=726, inst=JUMP_BACKWARD(arg=208, lineno=1229)
2024-06-06 03:46:40,208 - DEBUG - stack []
2024-06-06 03:46:40,208 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:40,208 - DEBUG - pending: deque([State(pc_initial=728 nstack_initial=0), State(pc_initial=312 nstack_initial=0)])
2024-06-06 03:46:40,208 - DEBUG - stack: []
2024-06-06 03:46:40,208 - DEBUG - state.pc_initial: State(pc_initial=728 nstack_initial=0)
2024-06-06 03:46:40,208 - DEBUG - dispatch pc=728, inst=RETURN_CONST(arg=2, lineno=1229)
2024-06-06 03:46:40,208 - DEBUG - stack []
2024-06-06 03:46:40,208 - DEBUG - end state. edges=[]
2024-06-06 03:46:40,208 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0)])
2024-06-06 03:46:40,208 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:40,208 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=260 nstack_initial=0): set(),
             State(pc_initial=272 nstack_initial=0): set(),
             State(pc_initial=276 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=470 nstack_initial=0): set(),
             State(pc_initial=482 nstack_initial=0): set(),
             State(pc_initial=662 nstack_initial=0): set(),
             State(pc_initial=674 nstack_initial=0): set(),
             State(pc_initial=726 nstack_initial=0): set(),
             State(pc_initial=728 nstack_initial=0): set(),
             State(pc_initial=730 nstack_initial=0): set()})
2024-06-06 03:46:40,209 - DEBUG - defmap: {}
2024-06-06 03:46:40,209 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:40,209 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:40,209 - DEBUG - keep phismap: {}
2024-06-06 03:46:40,209 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:40,209 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:40,209 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'idx': 0, 'res': '$12load_global.3'}), (22, {'item': '$12load_global.3', 'res': '$22load_attr.5'}), (42, {'res': '$x42.6'}), (44, {'res': '$const44.7'}), (46, {'idx': 2, 'res': '$46load_global.8'}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (80, {'res': '$const80.13'}), (82, {'index': '$const80.13', 'target': '$60load_attr.12', 'res': '$82binary_subscr.14'}), (86, {'func': '$46load_global.8', 'args': ['$post_max56.10', '$82binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (94, {'start': '$const44.7', 'end': '$86call.15', 'container': '$x42.6', 'res': '$94binary_slice.17', 'slicevar': '$94binary_slice.18', 'temp_res': '$94binary_slice.16'}), (96, {'func': '$22load_attr.5', 'args': ['$94binary_slice.17'], 'kw_names': None, 'res': '$96call.19'}), (104, {'lhs': '$8binary_subscr.2', 'rhs': '$96call.19', 'res': '$104compare_op.20'}), (108, {'res': '$peaks108.21'}), (110, {'res': '$const110.22'}), (112, {'target': '$peaks108.21', 'index': '$const110.22', 'value': '$104compare_op.20'}), (116, {'res': '$peaks116.23'}), (118, {'res': '$const118.24'}), (124, {'index': '$const118.24', 'target': '$peaks116.23', 'res': '$124binary_subscr.25'}), (128, {'res': '$x128.26'}), (130, {'res': '$const130.27'}), (132, {'index': '$const130.27', 'target': '$x128.26', 'res': '$132binary_subscr.28'}), (136, {'idx': 0, 'res': '$136load_global.29'}), (146, {'item': '$136load_global.29', 'res': '$146load_attr.31'}), (166, {'res': '$x166.32'}), (168, {'res': '$const168.33'}), (170, {'idx': 2, 'res': '$170load_global.34'}), (180, {'res': '$post_avg180.36'}), (182, {'res': '$x182.37'}), (184, {'item': '$x182.37', 'res': '$184load_attr.38'}), (204, {'res': '$const204.39'}), (206, {'index': '$const204.39', 'target': '$184load_attr.38', 'res': '$206binary_subscr.40'}), (210, {'func': '$170load_global.34', 'args': ['$post_avg180.36', '$206binary_subscr.40'], 'kw_names': None, 'res': '$210call.41'}), (218, {'start': '$const168.33', 'end': '$210call.41', 'container': '$x166.32', 'res': '$218binary_slice.43', 'slicevar': '$218binary_slice.44', 'temp_res': '$218binary_slice.42'}), (220, {'func': '$146load_attr.31', 'args': ['$218binary_slice.43'], 'kw_names': None, 'res': '$220call.45'}), (228, {'res': '$delta228.46'}), (230, {'op': '+', 'lhs': '$220call.45', 'rhs': '$delta228.46', 'res': '$binop_add230.47'}), (234, {'lhs': '$132binary_subscr.28', 'rhs': '$binop_add230.47', 'res': '$234compare_op.48'}), (238, {'op': '&=', 'lhs': '$124binary_subscr.25', 'rhs': '$234compare_op.48', 'res': '$binop_iand238.49'}), (246, {'target': '$peaks116.23', 'index': '$const118.24', 'value': '$binop_iand238.49'}), (250, {'res': '$peaks250.50'}), (252, {'res': '$const252.51'}), (254, {'index': '$const252.51', 'target': '$peaks250.50', 'res': '$254binary_subscr.52'}), (258, {'pred': '$254binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={260: (), 272: ()})
2024-06-06 03:46:40,210 - DEBUG - block_infos State(pc_initial=260 nstack_initial=0):
AdaptBlockInfo(insts=((260, {'res': '$wait260.0'}), (262, {'res': '$const262.1'}), (264, {'op': '+', 'lhs': '$wait260.0', 'rhs': '$const262.1', 'res': '$binop_add264.2'}), (268, {'value': '$binop_add264.2'}), (270, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:40,210 - DEBUG - block_infos State(pc_initial=272 nstack_initial=0):
AdaptBlockInfo(insts=((272, {'res': '$const272.0'}), (274, {'value': '$const272.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:40,210 - DEBUG - block_infos State(pc_initial=276 nstack_initial=0):
AdaptBlockInfo(insts=((276, {'res': '$n276.0'}), (278, {'res': '$x278.1'}), (280, {'item': '$x278.1', 'res': '$280load_attr.2'}), (300, {'res': '$const300.3'}), (302, {'index': '$const300.3', 'target': '$280load_attr.2', 'res': '$302binary_subscr.4'}), (306, {'lhs': '$n276.0', 'rhs': '$302binary_subscr.4', 'res': '$306compare_op.5'}), (310, {'pred': '$306compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 730: ()})
2024-06-06 03:46:40,210 - DEBUG - block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'idx': 0, 'res': '$312load_global.0'}), (322, {'item': '$312load_global.0', 'res': '$322load_attr.2'}), (342, {'res': '$x342.3'}), (344, {'idx': 1, 'res': '$344load_global.4'}), (354, {'res': '$const354.6'}), (356, {'res': '$n356.7'}), (358, {'res': '$pre_max358.8'}), (360, {'op': '-', 'lhs': '$n356.7', 'rhs': '$pre_max358.8', 'res': '$binop_sub360.9'}), (364, {'func': '$344load_global.4', 'args': ['$const354.6', '$binop_sub360.9'], 'kw_names': None, 'res': '$364call.10'}), (372, {'idx': 2, 'res': '$372load_global.11'}), (382, {'res': '$n382.13'}), (384, {'res': '$post_max384.14'}), (386, {'op': '+', 'lhs': '$n382.13', 'rhs': '$post_max384.14', 'res': '$binop_add386.15'}), (390, {'res': '$x390.16'}), (392, {'item': '$x390.16', 'res': '$392load_attr.17'}), (412, {'res': '$const412.18'}), (414, {'index': '$const412.18', 'target': '$392load_attr.17', 'res': '$414binary_subscr.19'}), (418, {'func': '$372load_global.11', 'args': ['$binop_add386.15', '$414binary_subscr.19'], 'kw_names': None, 'res': '$418call.20'}), (426, {'start': '$364call.10', 'end': '$418call.20', 'container': '$x342.3', 'res': '$426binary_slice.22', 'slicevar': '$426binary_slice.23', 'temp_res': '$426binary_slice.21'}), (428, {'func': '$322load_attr.2', 'args': ['$426binary_slice.22'], 'kw_names': None, 'res': '$428call.24'}), (436, {'value': '$428call.24'}), (438, {'res': '$x438.25'}), (440, {'res': '$n440.26'}), (442, {'index': '$n440.26', 'target': '$x438.25', 'res': '$442binary_subscr.27'}), (446, {'res': '$maxn446.28'}), (448, {'lhs': '$442binary_subscr.27', 'rhs': '$maxn446.28', 'res': '$448compare_op.29'}), (452, {'res': '$peaks452.30'}), (454, {'res': '$n454.31'}), (456, {'target': '$peaks452.30', 'index': '$n454.31', 'value': '$448compare_op.29'}), (460, {'res': '$peaks460.32'}), (462, {'res': '$n462.33'}), (464, {'index': '$n462.33', 'target': '$peaks460.32', 'res': '$464binary_subscr.34'}), (468, {'pred': '$464binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={470: (), 482: ()})
2024-06-06 03:46:40,210 - DEBUG - block_infos State(pc_initial=470 nstack_initial=0):
AdaptBlockInfo(insts=((470, {'res': '$n470.0'}), (472, {'res': '$const472.1'}), (474, {'op': '+=', 'lhs': '$n470.0', 'rhs': '$const472.1', 'res': '$binop_iadd474.2'}), (478, {'value': '$binop_iadd474.2'}), (480, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:40,210 - DEBUG - block_infos State(pc_initial=482 nstack_initial=0):
AdaptBlockInfo(insts=((482, {'idx': 0, 'res': '$482load_global.0'}), (492, {'item': '$482load_global.0', 'res': '$492load_attr.2'}), (512, {'res': '$x512.3'}), (514, {'idx': 1, 'res': '$514load_global.4'}), (524, {'res': '$const524.6'}), (526, {'res': '$n526.7'}), (528, {'res': '$pre_avg528.8'}), (530, {'op': '-', 'lhs': '$n526.7', 'rhs': '$pre_avg528.8', 'res': '$binop_sub530.9'}), (534, {'func': '$514load_global.4', 'args': ['$const524.6', '$binop_sub530.9'], 'kw_names': None, 'res': '$534call.10'}), (542, {'idx': 2, 'res': '$542load_global.11'}), (552, {'res': '$n552.13'}), (554, {'res': '$post_avg554.14'}), (556, {'op': '+', 'lhs': '$n552.13', 'rhs': '$post_avg554.14', 'res': '$binop_add556.15'}), (560, {'res': '$x560.16'}), (562, {'item': '$x560.16', 'res': '$562load_attr.17'}), (582, {'res': '$const582.18'}), (584, {'index': '$const582.18', 'target': '$562load_attr.17', 'res': '$584binary_subscr.19'}), (588, {'func': '$542load_global.11', 'args': ['$binop_add556.15', '$584binary_subscr.19'], 'kw_names': None, 'res': '$588call.20'}), (596, {'start': '$534call.10', 'end': '$588call.20', 'container': '$x512.3', 'res': '$596binary_slice.22', 'slicevar': '$596binary_slice.23', 'temp_res': '$596binary_slice.21'}), (598, {'func': '$492load_attr.2', 'args': ['$596binary_slice.22'], 'kw_names': None, 'res': '$598call.24'}), (606, {'value': '$598call.24'}), (608, {'res': '$peaks608.25'}), (610, {'res': '$n610.26'}), (616, {'index': '$n610.26', 'target': '$peaks608.25', 'res': '$616binary_subscr.27'}), (620, {'res': '$x620.28'}), (622, {'res': '$n622.29'}), (624, {'index': '$n622.29', 'target': '$x620.28', 'res': '$624binary_subscr.30'}), (628, {'res': '$avgn628.31'}), (630, {'res': '$delta630.32'}), (632, {'op': '+', 'lhs': '$avgn628.31', 'rhs': '$delta630.32', 'res': '$binop_add632.33'}), (636, {'lhs': '$624binary_subscr.30', 'rhs': '$binop_add632.33', 'res': '$636compare_op.34'}), (640, {'op': '&=', 'lhs': '$616binary_subscr.27', 'rhs': '$636compare_op.34', 'res': '$binop_iand640.35'}), (648, {'target': '$peaks608.25', 'index': '$n610.26', 'value': '$binop_iand640.35'}), (652, {'res': '$peaks652.36'}), (654, {'res': '$n654.37'}), (656, {'index': '$n654.37', 'target': '$peaks652.36', 'res': '$656binary_subscr.38'}), (660, {'pred': '$656binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={662: (), 674: ()})
2024-06-06 03:46:40,210 - DEBUG - block_infos State(pc_initial=662 nstack_initial=0):
AdaptBlockInfo(insts=((662, {'res': '$n662.0'}), (664, {'res': '$const664.1'}), (666, {'op': '+=', 'lhs': '$n662.0', 'rhs': '$const664.1', 'res': '$binop_iadd666.2'}), (670, {'value': '$binop_iadd666.2'}), (672, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:40,211 - DEBUG - block_infos State(pc_initial=674 nstack_initial=0):
AdaptBlockInfo(insts=((674, {'res': '$n674.0'}), (676, {'res': '$wait676.1'}), (678, {'res': '$const678.2'}), (680, {'op': '+', 'lhs': '$wait676.1', 'rhs': '$const678.2', 'res': '$binop_add680.3'}), (684, {'op': '+=', 'lhs': '$n674.0', 'rhs': '$binop_add680.3', 'res': '$binop_iadd684.4'}), (688, {'value': '$binop_iadd684.4'}), (690, {'res': '$n690.5'}), (692, {'res': '$x692.6'}), (694, {'item': '$x692.6', 'res': '$694load_attr.7'}), (714, {'res': '$const714.8'}), (716, {'index': '$const714.8', 'target': '$694load_attr.7', 'res': '$716binary_subscr.9'}), (720, {'lhs': '$n690.5', 'rhs': '$716binary_subscr.9', 'res': '$720compare_op.10'}), (724, {'pred': '$720compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={726: (), 728: ()})
2024-06-06 03:46:40,211 - DEBUG - block_infos State(pc_initial=726 nstack_initial=0):
AdaptBlockInfo(insts=((726, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: ()})
2024-06-06 03:46:40,211 - DEBUG - block_infos State(pc_initial=728 nstack_initial=0):
AdaptBlockInfo(insts=((728, {'retval': '$const728.0', 'castval': '$728return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:40,211 - DEBUG - block_infos State(pc_initial=730 nstack_initial=0):
AdaptBlockInfo(insts=((730, {'retval': '$const730.0', 'castval': '$730return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:40,215 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$12load_global.3']
    $22load_attr.5 = getattr(value=$12load_global.3, attr=max) ['$12load_global.3', '$22load_attr.5']
    $const44.7 = const(NoneType, None)       ['$const44.7']
    $46load_global.8 = global(min: <built-in function min>) ['$46load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const80.13 = const(int, 0)              ['$const80.13']
    $82binary_subscr.14 = getitem(value=$60load_attr.12, index=$const80.13, fn=<built-in function getitem>) ['$60load_attr.12', '$82binary_subscr.14', '$const80.13']
    $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.8', '$82binary_subscr.14', '$86call.15', 'post_max']
    $94binary_slice.18 = global(slice: <class 'slice'>) ['$94binary_slice.18']
    $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$94binary_slice.16', '$94binary_slice.18', '$const44.7']
    $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>) ['$94binary_slice.16', '$94binary_slice.17', 'x']
    $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.5', '$94binary_slice.17', '$96call.19']
    $104compare_op.20 = $8binary_subscr.2 >= $96call.19 ['$104compare_op.20', '$8binary_subscr.2', '$96call.19']
    $const110.22 = const(int, 0)             ['$const110.22']
    peaks[$const110.22] = $104compare_op.20  ['$104compare_op.20', '$const110.22', 'peaks']
    $const118.24 = const(int, 0)             ['$const118.24']
    $124binary_subscr.25 = getitem(value=peaks, index=$const118.24, fn=<built-in function getitem>) ['$124binary_subscr.25', '$const118.24', 'peaks']
    $const130.27 = const(int, 0)             ['$const130.27']
    $132binary_subscr.28 = getitem(value=x, index=$const130.27, fn=<built-in function getitem>) ['$132binary_subscr.28', '$const130.27', 'x']
    $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$136load_global.29']
    $146load_attr.31 = getattr(value=$136load_global.29, attr=mean) ['$136load_global.29', '$146load_attr.31']
    $const168.33 = const(NoneType, None)     ['$const168.33']
    $170load_global.34 = global(min: <built-in function min>) ['$170load_global.34']
    $184load_attr.38 = getattr(value=x, attr=shape) ['$184load_attr.38', 'x']
    $const204.39 = const(int, 0)             ['$const204.39']
    $206binary_subscr.40 = getitem(value=$184load_attr.38, index=$const204.39, fn=<built-in function getitem>) ['$184load_attr.38', '$206binary_subscr.40', '$const204.39']
    $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$170load_global.34', '$206binary_subscr.40', '$210call.41', 'post_avg']
    $218binary_slice.44 = global(slice: <class 'slice'>) ['$218binary_slice.44']
    $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$210call.41', '$218binary_slice.42', '$218binary_slice.44', '$const168.33']
    $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>) ['$218binary_slice.42', '$218binary_slice.43', 'x']
    $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_attr.31', '$218binary_slice.43', '$220call.45']
    $binop_add230.47 = $220call.45 + delta   ['$220call.45', '$binop_add230.47', 'delta']
    $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47 ['$132binary_subscr.28', '$234compare_op.48', '$binop_add230.47']
    $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$124binary_subscr.25', '$234compare_op.48', '$binop_iand238.49']
    peaks[$const118.24] = $binop_iand238.49  ['$binop_iand238.49', '$const118.24', 'peaks']
    $const252.51 = const(int, 0)             ['$const252.51']
    $254binary_subscr.52 = getitem(value=peaks, index=$const252.51, fn=<built-in function getitem>) ['$254binary_subscr.52', '$const252.51', 'peaks']
    bool258 = global(bool: <class 'bool'>)   ['bool258']
    $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$254binary_subscr.52', '$258pred', 'bool258']
    branch $258pred, 260, 272                ['$258pred']
label 260:
    $const262.1 = const(int, 1)              ['$const262.1']
    n = wait + $const262.1                   ['$const262.1', 'n', 'wait']
    jump 276                                 []
label 272:
    n = const(int, 1)                        ['n']
    jump 276                                 []
label 276:
    $280load_attr.2 = getattr(value=x, attr=shape) ['$280load_attr.2', 'x']
    $const300.3 = const(int, 0)              ['$const300.3']
    $302binary_subscr.4 = getitem(value=$280load_attr.2, index=$const300.3, fn=<built-in function getitem>) ['$280load_attr.2', '$302binary_subscr.4', '$const300.3']
    $306compare_op.5 = n < $302binary_subscr.4 ['$302binary_subscr.4', '$306compare_op.5', 'n']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$306compare_op.5', '$310pred', 'bool310']
    branch $310pred, 312, 730                ['$310pred']
label 312:
    $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$312load_global.0']
    $322load_attr.2 = getattr(value=$312load_global.0, attr=max) ['$312load_global.0', '$322load_attr.2']
    $344load_global.4 = global(max: <built-in function max>) ['$344load_global.4']
    $const354.6 = const(int, 0)              ['$const354.6']
    $binop_sub360.9 = n - pre_max            ['$binop_sub360.9', 'n', 'pre_max']
    $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.4', '$364call.10', '$binop_sub360.9', '$const354.6']
    $372load_global.11 = global(min: <built-in function min>) ['$372load_global.11']
    $binop_add386.15 = n + post_max          ['$binop_add386.15', 'n', 'post_max']
    $392load_attr.17 = getattr(value=x, attr=shape) ['$392load_attr.17', 'x']
    $const412.18 = const(int, 0)             ['$const412.18']
    $414binary_subscr.19 = getitem(value=$392load_attr.17, index=$const412.18, fn=<built-in function getitem>) ['$392load_attr.17', '$414binary_subscr.19', '$const412.18']
    $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$372load_global.11', '$414binary_subscr.19', '$418call.20', '$binop_add386.15']
    $426binary_slice.23 = global(slice: <class 'slice'>) ['$426binary_slice.23']
    $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$364call.10', '$418call.20', '$426binary_slice.21', '$426binary_slice.23']
    $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>) ['$426binary_slice.21', '$426binary_slice.22', 'x']
    maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$322load_attr.2', '$426binary_slice.22', 'maxn']
    $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$442binary_subscr.27', 'n', 'x']
    $448compare_op.29 = $442binary_subscr.27 == maxn ['$442binary_subscr.27', '$448compare_op.29', 'maxn']
    peaks[n] = $448compare_op.29             ['$448compare_op.29', 'n', 'peaks']
    $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$464binary_subscr.34', 'n', 'peaks']
    bool468 = global(bool: <class 'bool'>)   ['bool468']
    $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$464binary_subscr.34', '$468pred', 'bool468']
    branch $468pred, 482, 470                ['$468pred']
label 470:
    $const472.1 = const(int, 1)              ['$const472.1']
    $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd474.2', '$const472.1', 'n']
    n = $binop_iadd474.2                     ['$binop_iadd474.2', 'n']
    jump 276                                 []
label 482:
    $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$482load_global.0']
    $492load_attr.2 = getattr(value=$482load_global.0, attr=mean) ['$482load_global.0', '$492load_attr.2']
    $514load_global.4 = global(max: <built-in function max>) ['$514load_global.4']
    $const524.6 = const(int, 0)              ['$const524.6']
    $binop_sub530.9 = n - pre_avg            ['$binop_sub530.9', 'n', 'pre_avg']
    $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$514load_global.4', '$534call.10', '$binop_sub530.9', '$const524.6']
    $542load_global.11 = global(min: <built-in function min>) ['$542load_global.11']
    $binop_add556.15 = n + post_avg          ['$binop_add556.15', 'n', 'post_avg']
    $562load_attr.17 = getattr(value=x, attr=shape) ['$562load_attr.17', 'x']
    $const582.18 = const(int, 0)             ['$const582.18']
    $584binary_subscr.19 = getitem(value=$562load_attr.17, index=$const582.18, fn=<built-in function getitem>) ['$562load_attr.17', '$584binary_subscr.19', '$const582.18']
    $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$542load_global.11', '$584binary_subscr.19', '$588call.20', '$binop_add556.15']
    $596binary_slice.23 = global(slice: <class 'slice'>) ['$596binary_slice.23']
    $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$534call.10', '$588call.20', '$596binary_slice.21', '$596binary_slice.23']
    $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>) ['$596binary_slice.21', '$596binary_slice.22', 'x']
    avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$492load_attr.2', '$596binary_slice.22', 'avgn']
    $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$616binary_subscr.27', 'n', 'peaks']
    $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$624binary_subscr.30', 'n', 'x']
    $binop_add632.33 = avgn + delta          ['$binop_add632.33', 'avgn', 'delta']
    $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33 ['$624binary_subscr.30', '$636compare_op.34', '$binop_add632.33']
    $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$616binary_subscr.27', '$636compare_op.34', '$binop_iand640.35']
    peaks[n] = $binop_iand640.35             ['$binop_iand640.35', 'n', 'peaks']
    $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$656binary_subscr.38', 'n', 'peaks']
    bool660 = global(bool: <class 'bool'>)   ['bool660']
    $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$656binary_subscr.38', '$660pred', 'bool660']
    branch $660pred, 674, 662                ['$660pred']
label 662:
    $const664.1 = const(int, 1)              ['$const664.1']
    $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd666.2', '$const664.1', 'n']
    n = $binop_iadd666.2                     ['$binop_iadd666.2', 'n']
    jump 276                                 []
label 674:
    $const678.2 = const(int, 1)              ['$const678.2']
    $binop_add680.3 = wait + $const678.2     ['$binop_add680.3', '$const678.2', 'wait']
    $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add680.3', '$binop_iadd684.4', 'n']
    n = $binop_iadd684.4                     ['$binop_iadd684.4', 'n']
    $694load_attr.7 = getattr(value=x, attr=shape) ['$694load_attr.7', 'x']
    $const714.8 = const(int, 0)              ['$const714.8']
    $716binary_subscr.9 = getitem(value=$694load_attr.7, index=$const714.8, fn=<built-in function getitem>) ['$694load_attr.7', '$716binary_subscr.9', '$const714.8']
    $720compare_op.10 = n < $716binary_subscr.9 ['$716binary_subscr.9', '$720compare_op.10', 'n']
    bool724 = global(bool: <class 'bool'>)   ['bool724']
    $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$720compare_op.10', '$724pred', 'bool724']
    branch $724pred, 726, 728                ['$724pred']
label 726:
    jump 312                                 []
label 728:
    $const728.0 = const(NoneType, None)      ['$const728.0']
    $728return_const.1 = cast(value=$const728.0) ['$728return_const.1', '$const728.0']
    return $728return_const.1                ['$728return_const.1']
label 730:
    $const730.0 = const(NoneType, None)      ['$const730.0']
    $730return_const.1 = cast(value=$const730.0) ['$730return_const.1', '$const730.0']
    return $730return_const.1                ['$730return_const.1']

2024-06-06 03:46:40,233 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:40,233 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b947e780>
2024-06-06 03:46:40,233 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:40,233 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-06 03:46:40,233 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-06 03:46:40,233 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-06 03:46:40,233 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-06 03:46:40,234 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-06 03:46:40,234 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-06 03:46:40,234 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-06 03:46:40,234 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:40,234 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-06 03:46:40,234 - DEBUG - on stmt: $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,234 - DEBUG - on stmt: $22load_attr.5 = getattr(value=$12load_global.3, attr=max)
2024-06-06 03:46:40,234 - DEBUG - on stmt: $const44.7 = const(NoneType, None)
2024-06-06 03:46:40,234 - DEBUG - on stmt: $46load_global.8 = global(min: <built-in function min>)
2024-06-06 03:46:40,234 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,234 - DEBUG - on stmt: $const80.13 = const(int, 0)
2024-06-06 03:46:40,234 - DEBUG - on stmt: $82binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const80.13, fn=<built-in function getitem>)
2024-06-06 03:46:40,235 - DEBUG - on stmt: $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,235 - DEBUG - on stmt: $94binary_slice.18 = global(slice: <class 'slice'>)
2024-06-06 03:46:40,235 - DEBUG - on stmt: $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,235 - DEBUG - on stmt: $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>)
2024-06-06 03:46:40,235 - DEBUG - on stmt: $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,235 - DEBUG - on stmt: $104compare_op.20 = $8binary_subscr.2 >= $96call.19
2024-06-06 03:46:40,235 - DEBUG - on stmt: $const110.22 = const(int, 0)
2024-06-06 03:46:40,235 - DEBUG - on stmt: peaks[0] = $104compare_op.20
2024-06-06 03:46:40,235 - DEBUG - on stmt: $const118.24 = const(int, 0)
2024-06-06 03:46:40,235 - DEBUG - on stmt: $124binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const118.24, fn=<built-in function getitem>)
2024-06-06 03:46:40,235 - DEBUG - on stmt: $const130.27 = const(int, 0)
2024-06-06 03:46:40,235 - DEBUG - on stmt: $132binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const130.27, fn=<built-in function getitem>)
2024-06-06 03:46:40,236 - DEBUG - on stmt: $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,236 - DEBUG - on stmt: $146load_attr.31 = getattr(value=$136load_global.29, attr=mean)
2024-06-06 03:46:40,236 - DEBUG - on stmt: $const168.33 = const(NoneType, None)
2024-06-06 03:46:40,236 - DEBUG - on stmt: $170load_global.34 = global(min: <built-in function min>)
2024-06-06 03:46:40,236 - DEBUG - on stmt: $184load_attr.38 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,236 - DEBUG - on stmt: $const204.39 = const(int, 0)
2024-06-06 03:46:40,236 - DEBUG - on stmt: $206binary_subscr.40 = static_getitem(value=$184load_attr.38, index=0, index_var=$const204.39, fn=<built-in function getitem>)
2024-06-06 03:46:40,236 - DEBUG - on stmt: $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,236 - DEBUG - on stmt: $218binary_slice.44 = global(slice: <class 'slice'>)
2024-06-06 03:46:40,236 - DEBUG - on stmt: $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,236 - DEBUG - on stmt: $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>)
2024-06-06 03:46:40,237 - DEBUG - on stmt: $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,237 - DEBUG - on stmt: $binop_add230.47 = $220call.45 + delta
2024-06-06 03:46:40,237 - DEBUG - on stmt: $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47
2024-06-06 03:46:40,237 - DEBUG - on stmt: $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,237 - DEBUG - on stmt: peaks[0] = $binop_iand238.49
2024-06-06 03:46:40,237 - DEBUG - on stmt: $const252.51 = const(int, 0)
2024-06-06 03:46:40,237 - DEBUG - on stmt: $254binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const252.51, fn=<built-in function getitem>)
2024-06-06 03:46:40,237 - DEBUG - on stmt: bool258 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,237 - DEBUG - on stmt: $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,237 - DEBUG - on stmt: branch $258pred, 260, 272
2024-06-06 03:46:40,238 - DEBUG - ==== SSA block analysis pass on 260
2024-06-06 03:46:40,238 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b947e780>
2024-06-06 03:46:40,238 - DEBUG - on stmt: $const262.1 = const(int, 1)
2024-06-06 03:46:40,238 - DEBUG - on stmt: n = wait + $const262.1
2024-06-06 03:46:40,238 - DEBUG - on stmt: jump 276
2024-06-06 03:46:40,238 - DEBUG - ==== SSA block analysis pass on 272
2024-06-06 03:46:40,238 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b947e780>
2024-06-06 03:46:40,238 - DEBUG - on stmt: n = const(int, 1)
2024-06-06 03:46:40,238 - DEBUG - on stmt: jump 276
2024-06-06 03:46:40,238 - DEBUG - ==== SSA block analysis pass on 276
2024-06-06 03:46:40,238 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b947e780>
2024-06-06 03:46:40,238 - DEBUG - on stmt: $280load_attr.2 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,238 - DEBUG - on stmt: $const300.3 = const(int, 0)
2024-06-06 03:46:40,238 - DEBUG - on stmt: $302binary_subscr.4 = static_getitem(value=$280load_attr.2, index=0, index_var=$const300.3, fn=<built-in function getitem>)
2024-06-06 03:46:40,239 - DEBUG - on stmt: $306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:40,239 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,239 - DEBUG - on stmt: $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,239 - DEBUG - on stmt: branch $310pred, 312, 730
2024-06-06 03:46:40,239 - DEBUG - ==== SSA block analysis pass on 312
2024-06-06 03:46:40,239 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b947e780>
2024-06-06 03:46:40,239 - DEBUG - on stmt: $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,239 - DEBUG - on stmt: $322load_attr.2 = getattr(value=$312load_global.0, attr=max)
2024-06-06 03:46:40,239 - DEBUG - on stmt: $344load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:40,239 - DEBUG - on stmt: $const354.6 = const(int, 0)
2024-06-06 03:46:40,239 - DEBUG - on stmt: $binop_sub360.9 = n - pre_max
2024-06-06 03:46:40,239 - DEBUG - on stmt: $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,240 - DEBUG - on stmt: $372load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:40,240 - DEBUG - on stmt: $binop_add386.15 = n + post_max
2024-06-06 03:46:40,240 - DEBUG - on stmt: $392load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,240 - DEBUG - on stmt: $const412.18 = const(int, 0)
2024-06-06 03:46:40,240 - DEBUG - on stmt: $414binary_subscr.19 = static_getitem(value=$392load_attr.17, index=0, index_var=$const412.18, fn=<built-in function getitem>)
2024-06-06 03:46:40,240 - DEBUG - on stmt: $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,240 - DEBUG - on stmt: $426binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:40,240 - DEBUG - on stmt: $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,240 - DEBUG - on stmt: $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:40,240 - DEBUG - on stmt: maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,241 - DEBUG - on stmt: $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,241 - DEBUG - on stmt: $448compare_op.29 = $442binary_subscr.27 == maxn
2024-06-06 03:46:40,241 - DEBUG - on stmt: peaks[n] = $448compare_op.29
2024-06-06 03:46:40,241 - DEBUG - on stmt: $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,241 - DEBUG - on stmt: bool468 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,241 - DEBUG - on stmt: $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,241 - DEBUG - on stmt: branch $468pred, 482, 470
2024-06-06 03:46:40,241 - DEBUG - ==== SSA block analysis pass on 470
2024-06-06 03:46:40,241 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b947e780>
2024-06-06 03:46:40,241 - DEBUG - on stmt: $const472.1 = const(int, 1)
2024-06-06 03:46:40,241 - DEBUG - on stmt: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,242 - DEBUG - on stmt: n = $binop_iadd474.2
2024-06-06 03:46:40,242 - DEBUG - on stmt: jump 731
2024-06-06 03:46:40,242 - DEBUG - ==== SSA block analysis pass on 482
2024-06-06 03:46:40,242 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b947e780>
2024-06-06 03:46:40,242 - DEBUG - on stmt: $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,243 - DEBUG - on stmt: $492load_attr.2 = getattr(value=$482load_global.0, attr=mean)
2024-06-06 03:46:40,243 - DEBUG - on stmt: $514load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:40,243 - DEBUG - on stmt: $const524.6 = const(int, 0)
2024-06-06 03:46:40,243 - DEBUG - on stmt: $binop_sub530.9 = n - pre_avg
2024-06-06 03:46:40,243 - DEBUG - on stmt: $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,244 - DEBUG - on stmt: $542load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:40,244 - DEBUG - on stmt: $binop_add556.15 = n + post_avg
2024-06-06 03:46:40,244 - DEBUG - on stmt: $562load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,244 - DEBUG - on stmt: $const582.18 = const(int, 0)
2024-06-06 03:46:40,244 - DEBUG - on stmt: $584binary_subscr.19 = static_getitem(value=$562load_attr.17, index=0, index_var=$const582.18, fn=<built-in function getitem>)
2024-06-06 03:46:40,244 - DEBUG - on stmt: $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,244 - DEBUG - on stmt: $596binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:40,245 - DEBUG - on stmt: $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,245 - DEBUG - on stmt: $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:40,245 - DEBUG - on stmt: avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,245 - DEBUG - on stmt: $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,246 - DEBUG - on stmt: $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,246 - DEBUG - on stmt: $binop_add632.33 = avgn + delta
2024-06-06 03:46:40,246 - DEBUG - on stmt: $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33
2024-06-06 03:46:40,246 - DEBUG - on stmt: $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,246 - DEBUG - on stmt: peaks[n] = $binop_iand640.35
2024-06-06 03:46:40,246 - DEBUG - on stmt: $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,247 - DEBUG - on stmt: bool660 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,247 - DEBUG - on stmt: $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,247 - DEBUG - on stmt: branch $660pred, 674, 662
2024-06-06 03:46:40,247 - DEBUG - ==== SSA block analysis pass on 662
2024-06-06 03:46:40,247 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b947e780>
2024-06-06 03:46:40,247 - DEBUG - on stmt: $const664.1 = const(int, 1)
2024-06-06 03:46:40,247 - DEBUG - on stmt: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,248 - DEBUG - on stmt: n = $binop_iadd666.2
2024-06-06 03:46:40,248 - DEBUG - on stmt: jump 731
2024-06-06 03:46:40,248 - DEBUG - ==== SSA block analysis pass on 674
2024-06-06 03:46:40,248 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b947e780>
2024-06-06 03:46:40,248 - DEBUG - on stmt: $const678.2 = const(int, 1)
2024-06-06 03:46:40,248 - DEBUG - on stmt: $binop_add680.3 = wait + $const678.2
2024-06-06 03:46:40,248 - DEBUG - on stmt: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,248 - DEBUG - on stmt: n = $binop_iadd684.4
2024-06-06 03:46:40,248 - DEBUG - on stmt: $694load_attr.7 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,248 - DEBUG - on stmt: $const714.8 = const(int, 0)
2024-06-06 03:46:40,249 - DEBUG - on stmt: $716binary_subscr.9 = static_getitem(value=$694load_attr.7, index=0, index_var=$const714.8, fn=<built-in function getitem>)
2024-06-06 03:46:40,249 - DEBUG - on stmt: $720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:40,249 - DEBUG - on stmt: bool724 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,249 - DEBUG - on stmt: $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,249 - DEBUG - on stmt: branch $724pred, 726, 728
2024-06-06 03:46:40,249 - DEBUG - ==== SSA block analysis pass on 726
2024-06-06 03:46:40,249 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b947e780>
2024-06-06 03:46:40,249 - DEBUG - on stmt: jump 312
2024-06-06 03:46:40,249 - DEBUG - ==== SSA block analysis pass on 728
2024-06-06 03:46:40,249 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b947e780>
2024-06-06 03:46:40,249 - DEBUG - on stmt: $const728.0 = const(NoneType, None)
2024-06-06 03:46:40,249 - DEBUG - on stmt: $728return_const.1 = cast(value=$const728.0)
2024-06-06 03:46:40,250 - DEBUG - on stmt: return $728return_const.1
2024-06-06 03:46:40,250 - DEBUG - ==== SSA block analysis pass on 730
2024-06-06 03:46:40,250 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b947e780>
2024-06-06 03:46:40,250 - DEBUG - on stmt: $const730.0 = const(NoneType, None)
2024-06-06 03:46:40,250 - DEBUG - on stmt: $730return_const.1 = cast(value=$const730.0)
2024-06-06 03:46:40,250 - DEBUG - on stmt: return $730return_const.1
2024-06-06 03:46:40,250 - DEBUG - ==== SSA block analysis pass on 731
2024-06-06 03:46:40,250 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b947e780>
2024-06-06 03:46:40,250 - DEBUG - on stmt: jump 276
2024-06-06 03:46:40,253 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104compare_op.20': [(<numba.core.ir.Assign object at 0x7fe9b9a20f80>,
                                    0)],
             '$124binary_subscr.25': [(<numba.core.ir.Assign object at 0x7fe9b947e4b0>,
                                       0)],
             '$12load_global.3': [(<numba.core.ir.Assign object at 0x7fe9b999a000>,
                                   0)],
             '$132binary_subscr.28': [(<numba.core.ir.Assign object at 0x7fe9b947e840>,
                                       0)],
             '$136load_global.29': [(<numba.core.ir.Assign object at 0x7fe9b987c5f0>,
                                     0)],
             '$146load_attr.31': [(<numba.core.ir.Assign object at 0x7fe9b987ee10>,
                                   0)],
             '$170load_global.34': [(<numba.core.ir.Assign object at 0x7fe9b9b6d700>,
                                     0)],
             '$184load_attr.38': [(<numba.core.ir.Assign object at 0x7fe9b9b4f6e0>,
                                   0)],
             '$206binary_subscr.40': [(<numba.core.ir.Assign object at 0x7fe9b947e420>,
                                       0)],
             '$210call.41': [(<numba.core.ir.Assign object at 0x7fe9b9b4f290>,
                              0)],
             '$218binary_slice.42': [(<numba.core.ir.Assign object at 0x7fe9b9b4d010>,
                                      0)],
             '$218binary_slice.43': [(<numba.core.ir.Assign object at 0x7fe9b9b4d370>,
                                      0)],
             '$218binary_slice.44': [(<numba.core.ir.Assign object at 0x7fe9b9b4f470>,
                                      0)],
             '$220call.45': [(<numba.core.ir.Assign object at 0x7fe9b9b4d220>,
                              0)],
             '$22load_attr.5': [(<numba.core.ir.Assign object at 0x7fe9b989bb00>,
                                 0)],
             '$234compare_op.48': [(<numba.core.ir.Assign object at 0x7fe9b9b4cc80>,
                                    0)],
             '$254binary_subscr.52': [(<numba.core.ir.Assign object at 0x7fe9b947dd90>,
                                       0)],
             '$258pred': [(<numba.core.ir.Assign object at 0x7fe9b9b4c980>, 0)],
             '$280load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b9b4d580>,
                                  276)],
             '$302binary_subscr.4': [(<numba.core.ir.Assign object at 0x7fe9b947e2a0>,
                                      276)],
             '$306compare_op.5': [(<numba.core.ir.Assign object at 0x7fe9b9b4d970>,
                                   276)],
             '$310pred': [(<numba.core.ir.Assign object at 0x7fe9b9b4dc10>,
                           276)],
             '$312load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9b4dd90>,
                                    312)],
             '$322load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b9b4deb0>,
                                  312)],
             '$344load_global.4': [(<numba.core.ir.Assign object at 0x7fe9b9b4e150>,
                                    312)],
             '$364call.10': [(<numba.core.ir.Assign object at 0x7fe9b9b4e750>,
                              312)],
             '$372load_global.11': [(<numba.core.ir.Assign object at 0x7fe9b9b4e8d0>,
                                     312)],
             '$392load_attr.17': [(<numba.core.ir.Assign object at 0x7fe9b9b4f0e0>,
                                   312)],
             '$414binary_subscr.19': [(<numba.core.ir.Assign object at 0x7fe9b947e690>,
                                       312)],
             '$418call.20': [(<numba.core.ir.Assign object at 0x7fe9b9b4f9b0>,
                              312)],
             '$426binary_slice.21': [(<numba.core.ir.Assign object at 0x7fe9b9b4fbf0>,
                                      312)],
             '$426binary_slice.22': [(<numba.core.ir.Assign object at 0x7fe9b9b4fce0>,
                                      312)],
             '$426binary_slice.23': [(<numba.core.ir.Assign object at 0x7fe9b9b4fbc0>,
                                      312)],
             '$442binary_subscr.27': [(<numba.core.ir.Assign object at 0x7fe9b9b5c290>,
                                       312)],
             '$448compare_op.29': [(<numba.core.ir.Assign object at 0x7fe9b9b5c4d0>,
                                    312)],
             '$464binary_subscr.34': [(<numba.core.ir.Assign object at 0x7fe9b9b5ca70>,
                                       312)],
             '$468pred': [(<numba.core.ir.Assign object at 0x7fe9b9b5cce0>,
                           312)],
             '$46load_global.8': [(<numba.core.ir.Assign object at 0x7fe9b98c36e0>,
                                   0)],
             '$482load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9b5ce90>,
                                    482)],
             '$492load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b9b5cfe0>,
                                  482)],
             '$514load_global.4': [(<numba.core.ir.Assign object at 0x7fe9b9b5d220>,
                                    482)],
             '$534call.10': [(<numba.core.ir.Assign object at 0x7fe9b9b5d850>,
                              482)],
             '$542load_global.11': [(<numba.core.ir.Assign object at 0x7fe9b9b5d970>,
                                     482)],
             '$562load_attr.17': [(<numba.core.ir.Assign object at 0x7fe9b9b5dee0>,
                                   482)],
             '$584binary_subscr.19': [(<numba.core.ir.Assign object at 0x7fe9b98988c0>,
                                       482)],
             '$588call.20': [(<numba.core.ir.Assign object at 0x7fe9b9b5e330>,
                              482)],
             '$596binary_slice.21': [(<numba.core.ir.Assign object at 0x7fe9b9b5e570>,
                                      482)],
             '$596binary_slice.22': [(<numba.core.ir.Assign object at 0x7fe9b9b5e690>,
                                      482)],
             '$596binary_slice.23': [(<numba.core.ir.Assign object at 0x7fe9b9b5e450>,
                                      482)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x7fe9b98c0f50>,
                                  0)],
             '$616binary_subscr.27': [(<numba.core.ir.Assign object at 0x7fe9b9b5ec60>,
                                       482)],
             '$624binary_subscr.30': [(<numba.core.ir.Assign object at 0x7fe9b9b5ef90>,
                                       482)],
             '$636compare_op.34': [(<numba.core.ir.Assign object at 0x7fe9b9b5f410>,
                                    482)],
             '$656binary_subscr.38': [(<numba.core.ir.Assign object at 0x7fe9b9b5f920>,
                                       482)],
             '$660pred': [(<numba.core.ir.Assign object at 0x7fe9b9b5fb90>,
                           482)],
             '$694load_attr.7': [(<numba.core.ir.Assign object at 0x7fe9b947c560>,
                                  674)],
             '$716binary_subscr.9': [(<numba.core.ir.Assign object at 0x7fe9b9b4e120>,
                                      674)],
             '$720compare_op.10': [(<numba.core.ir.Assign object at 0x7fe9b947c980>,
                                    674)],
             '$724pred': [(<numba.core.ir.Assign object at 0x7fe9b947cbf0>,
                           674)],
             '$728return_const.1': [(<numba.core.ir.Assign object at 0x7fe9b947cec0>,
                                     728)],
             '$730return_const.1': [(<numba.core.ir.Assign object at 0x7fe9b947d1f0>,
                                     730)],
             '$82binary_subscr.14': [(<numba.core.ir.Assign object at 0x7fe9b947e5d0>,
                                      0)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x7fe9b97cfaa0>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7fe9b947e330>,
                                    0)],
             '$94binary_slice.16': [(<numba.core.ir.Assign object at 0x7fe9b9a1d580>,
                                     0)],
             '$94binary_slice.17': [(<numba.core.ir.Assign object at 0x7fe9b9a390d0>,
                                     0)],
             '$94binary_slice.18': [(<numba.core.ir.Assign object at 0x7fe9b9a1e5a0>,
                                     0)],
             '$96call.19': [(<numba.core.ir.Assign object at 0x7fe9b9a22ae0>,
                             0)],
             '$binop_add230.47': [(<numba.core.ir.Assign object at 0x7fe9b9b4d0d0>,
                                   0)],
             '$binop_add386.15': [(<numba.core.ir.Assign object at 0x7fe9b9b4eed0>,
                                   312)],
             '$binop_add556.15': [(<numba.core.ir.Assign object at 0x7fe9b9b5dcd0>,
                                   482)],
             '$binop_add632.33': [(<numba.core.ir.Assign object at 0x7fe9b9b5f2c0>,
                                   482)],
             '$binop_add680.3': [(<numba.core.ir.Assign object at 0x7fe9b947c080>,
                                  674)],
             '$binop_iadd474.2': [(<numba.core.ir.Assign object at 0x7fe9b9b5c5c0>,
                                   470)],
             '$binop_iadd666.2': [(<numba.core.ir.Assign object at 0x7fe9b9b5ee40>,
                                   662)],
             '$binop_iadd684.4': [(<numba.core.ir.Assign object at 0x7fe9b947c1d0>,
                                   674)],
             '$binop_iand238.49': [(<numba.core.ir.Assign object at 0x7fe9b9b4cda0>,
                                    0)],
             '$binop_iand640.35': [(<numba.core.ir.Assign object at 0x7fe9b9b5f560>,
                                    482)],
             '$binop_sub360.9': [(<numba.core.ir.Assign object at 0x7fe9b9b4e5d0>,
                                  312)],
             '$binop_sub530.9': [(<numba.core.ir.Assign object at 0x7fe9b9b5d6d0>,
                                  482)],
             '$const110.22': [(<numba.core.ir.Assign object at 0x7fe9b9c26540>,
                               0)],
             '$const118.24': [(<numba.core.ir.Assign object at 0x7fe9b97591c0>,
                               0)],
             '$const130.27': [(<numba.core.ir.Assign object at 0x7fe9b987c6e0>,
                               0)],
             '$const168.33': [(<numba.core.ir.Assign object at 0x7fe9b9b6fe30>,
                               0)],
             '$const204.39': [(<numba.core.ir.Assign object at 0x7fe9b9b4eae0>,
                               0)],
             '$const252.51': [(<numba.core.ir.Assign object at 0x7fe9b9b4c740>,
                               0)],
             '$const262.1': [(<numba.core.ir.Assign object at 0x7fe9b987e9c0>,
                              260)],
             '$const300.3': [(<numba.core.ir.Assign object at 0x7fe9b9b4d6d0>,
                              276)],
             '$const354.6': [(<numba.core.ir.Assign object at 0x7fe9b9b4e2a0>,
                              312)],
             '$const412.18': [(<numba.core.ir.Assign object at 0x7fe9b9b4eff0>,
                               312)],
             '$const44.7': [(<numba.core.ir.Assign object at 0x7fe9b986bb90>,
                             0)],
             '$const472.1': [(<numba.core.ir.Assign object at 0x7fe9b9b4ccb0>,
                              470)],
             '$const524.6': [(<numba.core.ir.Assign object at 0x7fe9b9b5d370>,
                              482)],
             '$const582.18': [(<numba.core.ir.Assign object at 0x7fe9b9b5e030>,
                               482)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9b9c60200>,
                            0)],
             '$const664.1': [(<numba.core.ir.Assign object at 0x7fe9b9b5e930>,
                              662)],
             '$const678.2': [(<numba.core.ir.Assign object at 0x7fe9b9b5fec0>,
                              674)],
             '$const714.8': [(<numba.core.ir.Assign object at 0x7fe9b947c6b0>,
                              674)],
             '$const728.0': [(<numba.core.ir.Assign object at 0x7fe9b947cda0>,
                              728)],
             '$const730.0': [(<numba.core.ir.Assign object at 0x7fe9b947d0d0>,
                              730)],
             '$const80.13': [(<numba.core.ir.Assign object at 0x7fe9b98c0560>,
                              0)],
             'avgn': [(<numba.core.ir.Assign object at 0x7fe9b9b5e840>, 482)],
             'bool258': [(<numba.core.ir.Assign object at 0x7fe9b9b4cbf0>, 0)],
             'bool310': [(<numba.core.ir.Assign object at 0x7fe9b9b4db50>,
                          276)],
             'bool468': [(<numba.core.ir.Assign object at 0x7fe9b9b5cbc0>,
                          312)],
             'bool660': [(<numba.core.ir.Assign object at 0x7fe9b9b5fa70>,
                          482)],
             'bool724': [(<numba.core.ir.Assign object at 0x7fe9b947cad0>,
                          674)],
             'delta': [(<numba.core.ir.Assign object at 0x7fe9b96e1f70>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7fe9b9b4ff80>, 312)],
             'n': [(<numba.core.ir.Assign object at 0x7fe9b9b4cfe0>, 260),
                   (<numba.core.ir.Assign object at 0x7fe9b9b4c2f0>, 272),
                   (<numba.core.ir.Assign object at 0x7fe9b9b5c6b0>, 470),
                   (<numba.core.ir.Assign object at 0x7fe9b9b5f080>, 662),
                   (<numba.core.ir.Assign object at 0x7fe9b947c230>, 674)],
             'peaks': [(<numba.core.ir.Assign object at 0x7fe9b96e2210>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7fe9b9c83fe0>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7fe9b9c80da0>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7fe9b9c808c0>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7fe9b9a6a930>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7fe9b96e0f50>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b9702720>, 0)]})
2024-06-06 03:46:40,253 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9b5d0d0>
2024-06-06 03:46:40,254 - DEBUG - Fix SSA violator on var n
2024-06-06 03:46:40,254 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:40,254 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,254 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:40,254 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-06 03:46:40,254 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-06 03:46:40,254 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-06 03:46:40,254 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-06 03:46:40,254 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-06 03:46:40,254 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-06 03:46:40,254 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-06 03:46:40,254 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:40,255 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-06 03:46:40,255 - DEBUG - on stmt: $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,255 - DEBUG - on stmt: $22load_attr.5 = getattr(value=$12load_global.3, attr=max)
2024-06-06 03:46:40,255 - DEBUG - on stmt: $const44.7 = const(NoneType, None)
2024-06-06 03:46:40,255 - DEBUG - on stmt: $46load_global.8 = global(min: <built-in function min>)
2024-06-06 03:46:40,255 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,255 - DEBUG - on stmt: $const80.13 = const(int, 0)
2024-06-06 03:46:40,255 - DEBUG - on stmt: $82binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const80.13, fn=<built-in function getitem>)
2024-06-06 03:46:40,255 - DEBUG - on stmt: $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,255 - DEBUG - on stmt: $94binary_slice.18 = global(slice: <class 'slice'>)
2024-06-06 03:46:40,256 - DEBUG - on stmt: $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,256 - DEBUG - on stmt: $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>)
2024-06-06 03:46:40,256 - DEBUG - on stmt: $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,256 - DEBUG - on stmt: $104compare_op.20 = $8binary_subscr.2 >= $96call.19
2024-06-06 03:46:40,256 - DEBUG - on stmt: $const110.22 = const(int, 0)
2024-06-06 03:46:40,256 - DEBUG - on stmt: peaks[0] = $104compare_op.20
2024-06-06 03:46:40,256 - DEBUG - on stmt: $const118.24 = const(int, 0)
2024-06-06 03:46:40,256 - DEBUG - on stmt: $124binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const118.24, fn=<built-in function getitem>)
2024-06-06 03:46:40,256 - DEBUG - on stmt: $const130.27 = const(int, 0)
2024-06-06 03:46:40,256 - DEBUG - on stmt: $132binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const130.27, fn=<built-in function getitem>)
2024-06-06 03:46:40,256 - DEBUG - on stmt: $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,257 - DEBUG - on stmt: $146load_attr.31 = getattr(value=$136load_global.29, attr=mean)
2024-06-06 03:46:40,257 - DEBUG - on stmt: $const168.33 = const(NoneType, None)
2024-06-06 03:46:40,257 - DEBUG - on stmt: $170load_global.34 = global(min: <built-in function min>)
2024-06-06 03:46:40,257 - DEBUG - on stmt: $184load_attr.38 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,257 - DEBUG - on stmt: $const204.39 = const(int, 0)
2024-06-06 03:46:40,257 - DEBUG - on stmt: $206binary_subscr.40 = static_getitem(value=$184load_attr.38, index=0, index_var=$const204.39, fn=<built-in function getitem>)
2024-06-06 03:46:40,257 - DEBUG - on stmt: $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,257 - DEBUG - on stmt: $218binary_slice.44 = global(slice: <class 'slice'>)
2024-06-06 03:46:40,257 - DEBUG - on stmt: $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,257 - DEBUG - on stmt: $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>)
2024-06-06 03:46:40,257 - DEBUG - on stmt: $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,258 - DEBUG - on stmt: $binop_add230.47 = $220call.45 + delta
2024-06-06 03:46:40,258 - DEBUG - on stmt: $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47
2024-06-06 03:46:40,258 - DEBUG - on stmt: $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,258 - DEBUG - on stmt: peaks[0] = $binop_iand238.49
2024-06-06 03:46:40,258 - DEBUG - on stmt: $const252.51 = const(int, 0)
2024-06-06 03:46:40,258 - DEBUG - on stmt: $254binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const252.51, fn=<built-in function getitem>)
2024-06-06 03:46:40,258 - DEBUG - on stmt: bool258 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,259 - DEBUG - on stmt: $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,259 - DEBUG - on stmt: branch $258pred, 260, 272
2024-06-06 03:46:40,259 - DEBUG - ==== SSA block rewrite pass on 260
2024-06-06 03:46:40,259 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,259 - DEBUG - on stmt: $const262.1 = const(int, 1)
2024-06-06 03:46:40,259 - DEBUG - on stmt: n = wait + $const262.1
2024-06-06 03:46:40,259 - DEBUG - first assign: n
2024-06-06 03:46:40,259 - DEBUG - replaced with: n = wait + $const262.1
2024-06-06 03:46:40,259 - DEBUG - on stmt: jump 276
2024-06-06 03:46:40,260 - DEBUG - ==== SSA block rewrite pass on 272
2024-06-06 03:46:40,260 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,260 - DEBUG - on stmt: n = const(int, 1)
2024-06-06 03:46:40,260 - DEBUG - replaced with: n.1 = const(int, 1)
2024-06-06 03:46:40,260 - DEBUG - on stmt: jump 276
2024-06-06 03:46:40,260 - DEBUG - ==== SSA block rewrite pass on 276
2024-06-06 03:46:40,260 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,260 - DEBUG - on stmt: $280load_attr.2 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,260 - DEBUG - on stmt: $const300.3 = const(int, 0)
2024-06-06 03:46:40,261 - DEBUG - on stmt: $302binary_subscr.4 = static_getitem(value=$280load_attr.2, index=0, index_var=$const300.3, fn=<built-in function getitem>)
2024-06-06 03:46:40,261 - DEBUG - on stmt: $306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:40,261 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,261 - DEBUG - on stmt: $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,261 - DEBUG - on stmt: branch $310pred, 312, 730
2024-06-06 03:46:40,261 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-06 03:46:40,261 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,261 - DEBUG - on stmt: $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,261 - DEBUG - on stmt: $322load_attr.2 = getattr(value=$312load_global.0, attr=max)
2024-06-06 03:46:40,261 - DEBUG - on stmt: $344load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:40,261 - DEBUG - on stmt: $const354.6 = const(int, 0)
2024-06-06 03:46:40,262 - DEBUG - on stmt: $binop_sub360.9 = n - pre_max
2024-06-06 03:46:40,262 - DEBUG - on stmt: $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,262 - DEBUG - on stmt: $372load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:40,262 - DEBUG - on stmt: $binop_add386.15 = n + post_max
2024-06-06 03:46:40,262 - DEBUG - on stmt: $392load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,262 - DEBUG - on stmt: $const412.18 = const(int, 0)
2024-06-06 03:46:40,262 - DEBUG - on stmt: $414binary_subscr.19 = static_getitem(value=$392load_attr.17, index=0, index_var=$const412.18, fn=<built-in function getitem>)
2024-06-06 03:46:40,262 - DEBUG - on stmt: $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,263 - DEBUG - on stmt: $426binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:40,263 - DEBUG - on stmt: $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,263 - DEBUG - on stmt: $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:40,263 - DEBUG - on stmt: maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,263 - DEBUG - on stmt: $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,263 - DEBUG - on stmt: $448compare_op.29 = $442binary_subscr.27 == maxn
2024-06-06 03:46:40,263 - DEBUG - on stmt: peaks[n] = $448compare_op.29
2024-06-06 03:46:40,263 - DEBUG - on stmt: $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,263 - DEBUG - on stmt: bool468 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,263 - DEBUG - on stmt: $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,263 - DEBUG - on stmt: branch $468pred, 482, 470
2024-06-06 03:46:40,264 - DEBUG - ==== SSA block rewrite pass on 470
2024-06-06 03:46:40,264 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,264 - DEBUG - on stmt: $const472.1 = const(int, 1)
2024-06-06 03:46:40,264 - DEBUG - on stmt: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,264 - DEBUG - on stmt: n = $binop_iadd474.2
2024-06-06 03:46:40,264 - DEBUG - replaced with: n.2 = $binop_iadd474.2
2024-06-06 03:46:40,264 - DEBUG - on stmt: jump 731
2024-06-06 03:46:40,264 - DEBUG - ==== SSA block rewrite pass on 482
2024-06-06 03:46:40,264 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,264 - DEBUG - on stmt: $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,264 - DEBUG - on stmt: $492load_attr.2 = getattr(value=$482load_global.0, attr=mean)
2024-06-06 03:46:40,264 - DEBUG - on stmt: $514load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:40,265 - DEBUG - on stmt: $const524.6 = const(int, 0)
2024-06-06 03:46:40,265 - DEBUG - on stmt: $binop_sub530.9 = n - pre_avg
2024-06-06 03:46:40,265 - DEBUG - on stmt: $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,265 - DEBUG - on stmt: $542load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:40,265 - DEBUG - on stmt: $binop_add556.15 = n + post_avg
2024-06-06 03:46:40,265 - DEBUG - on stmt: $562load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,265 - DEBUG - on stmt: $const582.18 = const(int, 0)
2024-06-06 03:46:40,265 - DEBUG - on stmt: $584binary_subscr.19 = static_getitem(value=$562load_attr.17, index=0, index_var=$const582.18, fn=<built-in function getitem>)
2024-06-06 03:46:40,265 - DEBUG - on stmt: $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,265 - DEBUG - on stmt: $596binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:40,265 - DEBUG - on stmt: $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,265 - DEBUG - on stmt: $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:40,265 - DEBUG - on stmt: avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,266 - DEBUG - on stmt: $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,266 - DEBUG - on stmt: $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,266 - DEBUG - on stmt: $binop_add632.33 = avgn + delta
2024-06-06 03:46:40,266 - DEBUG - on stmt: $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33
2024-06-06 03:46:40,266 - DEBUG - on stmt: $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,266 - DEBUG - on stmt: peaks[n] = $binop_iand640.35
2024-06-06 03:46:40,266 - DEBUG - on stmt: $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,266 - DEBUG - on stmt: bool660 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,266 - DEBUG - on stmt: $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,266 - DEBUG - on stmt: branch $660pred, 674, 662
2024-06-06 03:46:40,266 - DEBUG - ==== SSA block rewrite pass on 662
2024-06-06 03:46:40,266 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,266 - DEBUG - on stmt: $const664.1 = const(int, 1)
2024-06-06 03:46:40,267 - DEBUG - on stmt: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,267 - DEBUG - on stmt: n = $binop_iadd666.2
2024-06-06 03:46:40,267 - DEBUG - replaced with: n.3 = $binop_iadd666.2
2024-06-06 03:46:40,267 - DEBUG - on stmt: jump 731
2024-06-06 03:46:40,267 - DEBUG - ==== SSA block rewrite pass on 674
2024-06-06 03:46:40,267 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,267 - DEBUG - on stmt: $const678.2 = const(int, 1)
2024-06-06 03:46:40,267 - DEBUG - on stmt: $binop_add680.3 = wait + $const678.2
2024-06-06 03:46:40,267 - DEBUG - on stmt: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,267 - DEBUG - on stmt: n = $binop_iadd684.4
2024-06-06 03:46:40,267 - DEBUG - replaced with: n.4 = $binop_iadd684.4
2024-06-06 03:46:40,267 - DEBUG - on stmt: $694load_attr.7 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,267 - DEBUG - on stmt: $const714.8 = const(int, 0)
2024-06-06 03:46:40,268 - DEBUG - on stmt: $716binary_subscr.9 = static_getitem(value=$694load_attr.7, index=0, index_var=$const714.8, fn=<built-in function getitem>)
2024-06-06 03:46:40,268 - DEBUG - on stmt: $720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:40,268 - DEBUG - on stmt: bool724 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,268 - DEBUG - on stmt: $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,268 - DEBUG - on stmt: branch $724pred, 726, 728
2024-06-06 03:46:40,268 - DEBUG - ==== SSA block rewrite pass on 726
2024-06-06 03:46:40,268 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,268 - DEBUG - on stmt: jump 312
2024-06-06 03:46:40,268 - DEBUG - ==== SSA block rewrite pass on 728
2024-06-06 03:46:40,268 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,268 - DEBUG - on stmt: $const728.0 = const(NoneType, None)
2024-06-06 03:46:40,268 - DEBUG - on stmt: $728return_const.1 = cast(value=$const728.0)
2024-06-06 03:46:40,268 - DEBUG - on stmt: return $728return_const.1
2024-06-06 03:46:40,269 - DEBUG - ==== SSA block rewrite pass on 730
2024-06-06 03:46:40,269 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,269 - DEBUG - on stmt: $const730.0 = const(NoneType, None)
2024-06-06 03:46:40,269 - DEBUG - on stmt: $730return_const.1 = cast(value=$const730.0)
2024-06-06 03:46:40,269 - DEBUG - on stmt: return $730return_const.1
2024-06-06 03:46:40,269 - DEBUG - ==== SSA block rewrite pass on 731
2024-06-06 03:46:40,269 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,269 - DEBUG - on stmt: jump 276
2024-06-06 03:46:40,269 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {260: [<numba.core.ir.Assign object at 0x7fe9b947e030>],
             272: [<numba.core.ir.Assign object at 0x7fe9b947df10>],
             470: [<numba.core.ir.Assign object at 0x7fe9b947ef30>],
             662: [<numba.core.ir.Assign object at 0x7fe9b947fbc0>],
             674: [<numba.core.ir.Assign object at 0x7fe9b947dac0>]})
2024-06-06 03:46:40,269 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:40,269 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,269 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:40,270 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-06 03:46:40,270 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-06 03:46:40,270 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-06 03:46:40,270 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-06 03:46:40,270 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-06 03:46:40,270 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-06 03:46:40,270 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-06 03:46:40,270 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:40,270 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-06 03:46:40,270 - DEBUG - on stmt: $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,270 - DEBUG - on stmt: $22load_attr.5 = getattr(value=$12load_global.3, attr=max)
2024-06-06 03:46:40,270 - DEBUG - on stmt: $const44.7 = const(NoneType, None)
2024-06-06 03:46:40,270 - DEBUG - on stmt: $46load_global.8 = global(min: <built-in function min>)
2024-06-06 03:46:40,271 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,271 - DEBUG - on stmt: $const80.13 = const(int, 0)
2024-06-06 03:46:40,271 - DEBUG - on stmt: $82binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const80.13, fn=<built-in function getitem>)
2024-06-06 03:46:40,271 - DEBUG - on stmt: $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,271 - DEBUG - on stmt: $94binary_slice.18 = global(slice: <class 'slice'>)
2024-06-06 03:46:40,271 - DEBUG - on stmt: $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,271 - DEBUG - on stmt: $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>)
2024-06-06 03:46:40,271 - DEBUG - on stmt: $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,271 - DEBUG - on stmt: $104compare_op.20 = $8binary_subscr.2 >= $96call.19
2024-06-06 03:46:40,271 - DEBUG - on stmt: $const110.22 = const(int, 0)
2024-06-06 03:46:40,272 - DEBUG - on stmt: peaks[0] = $104compare_op.20
2024-06-06 03:46:40,272 - DEBUG - on stmt: $const118.24 = const(int, 0)
2024-06-06 03:46:40,272 - DEBUG - on stmt: $124binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const118.24, fn=<built-in function getitem>)
2024-06-06 03:46:40,272 - DEBUG - on stmt: $const130.27 = const(int, 0)
2024-06-06 03:46:40,272 - DEBUG - on stmt: $132binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const130.27, fn=<built-in function getitem>)
2024-06-06 03:46:40,272 - DEBUG - on stmt: $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,272 - DEBUG - on stmt: $146load_attr.31 = getattr(value=$136load_global.29, attr=mean)
2024-06-06 03:46:40,272 - DEBUG - on stmt: $const168.33 = const(NoneType, None)
2024-06-06 03:46:40,272 - DEBUG - on stmt: $170load_global.34 = global(min: <built-in function min>)
2024-06-06 03:46:40,272 - DEBUG - on stmt: $184load_attr.38 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,272 - DEBUG - on stmt: $const204.39 = const(int, 0)
2024-06-06 03:46:40,272 - DEBUG - on stmt: $206binary_subscr.40 = static_getitem(value=$184load_attr.38, index=0, index_var=$const204.39, fn=<built-in function getitem>)
2024-06-06 03:46:40,273 - DEBUG - on stmt: $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,273 - DEBUG - on stmt: $218binary_slice.44 = global(slice: <class 'slice'>)
2024-06-06 03:46:40,273 - DEBUG - on stmt: $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,273 - DEBUG - on stmt: $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>)
2024-06-06 03:46:40,273 - DEBUG - on stmt: $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,273 - DEBUG - on stmt: $binop_add230.47 = $220call.45 + delta
2024-06-06 03:46:40,273 - DEBUG - on stmt: $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47
2024-06-06 03:46:40,273 - DEBUG - on stmt: $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,273 - DEBUG - on stmt: peaks[0] = $binop_iand238.49
2024-06-06 03:46:40,273 - DEBUG - on stmt: $const252.51 = const(int, 0)
2024-06-06 03:46:40,273 - DEBUG - on stmt: $254binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const252.51, fn=<built-in function getitem>)
2024-06-06 03:46:40,273 - DEBUG - on stmt: bool258 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,274 - DEBUG - on stmt: $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,274 - DEBUG - on stmt: branch $258pred, 260, 272
2024-06-06 03:46:40,274 - DEBUG - ==== SSA block rewrite pass on 260
2024-06-06 03:46:40,274 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,274 - DEBUG - on stmt: $const262.1 = const(int, 1)
2024-06-06 03:46:40,274 - DEBUG - on stmt: n = wait + $const262.1
2024-06-06 03:46:40,274 - DEBUG - on stmt: jump 276
2024-06-06 03:46:40,274 - DEBUG - ==== SSA block rewrite pass on 272
2024-06-06 03:46:40,274 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,274 - DEBUG - on stmt: n.1 = const(int, 1)
2024-06-06 03:46:40,274 - DEBUG - on stmt: jump 276
2024-06-06 03:46:40,275 - DEBUG - ==== SSA block rewrite pass on 276
2024-06-06 03:46:40,275 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,275 - DEBUG - on stmt: $280load_attr.2 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,275 - DEBUG - on stmt: $const300.3 = const(int, 0)
2024-06-06 03:46:40,275 - DEBUG - on stmt: $302binary_subscr.4 = static_getitem(value=$280load_attr.2, index=0, index_var=$const300.3, fn=<built-in function getitem>)
2024-06-06 03:46:40,275 - DEBUG - on stmt: $306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:40,275 - DEBUG - find_def var='n' stmt=$306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:40,275 - DEBUG - find_def_from_top label 276
2024-06-06 03:46:40,275 - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 276
2024-06-06 03:46:40,275 - DEBUG - find_def_from_bottom label 272
2024-06-06 03:46:40,275 - DEBUG - incoming_def n.1 = const(int, 1)
2024-06-06 03:46:40,276 - DEBUG - find_def_from_bottom label 731
2024-06-06 03:46:40,276 - DEBUG - find_def_from_top label 731
2024-06-06 03:46:40,276 - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 731
2024-06-06 03:46:40,276 - DEBUG - find_def_from_bottom label 662
2024-06-06 03:46:40,276 - DEBUG - incoming_def n.3 = $binop_iadd666.2
2024-06-06 03:46:40,276 - DEBUG - find_def_from_bottom label 470
2024-06-06 03:46:40,276 - DEBUG - incoming_def n.2 = $binop_iadd474.2
2024-06-06 03:46:40,276 - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.3, utils.py:1243), Var(n.2, utils.py:1236)], incoming_blocks=[662, 470])
2024-06-06 03:46:40,276 - DEBUG - find_def_from_bottom label 260
2024-06-06 03:46:40,276 - DEBUG - incoming_def n = wait + $const262.1
2024-06-06 03:46:40,276 - DEBUG - replaced with: $306compare_op.5 = n.5 < $302binary_subscr.4
2024-06-06 03:46:40,276 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,276 - DEBUG - on stmt: $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,277 - DEBUG - on stmt: branch $310pred, 312, 730
2024-06-06 03:46:40,277 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-06 03:46:40,277 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,277 - DEBUG - on stmt: $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,277 - DEBUG - on stmt: $322load_attr.2 = getattr(value=$312load_global.0, attr=max)
2024-06-06 03:46:40,277 - DEBUG - on stmt: $344load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:40,277 - DEBUG - on stmt: $const354.6 = const(int, 0)
2024-06-06 03:46:40,277 - DEBUG - on stmt: $binop_sub360.9 = n - pre_max
2024-06-06 03:46:40,277 - DEBUG - find_def var='n' stmt=$binop_sub360.9 = n - pre_max
2024-06-06 03:46:40,277 - DEBUG - find_def_from_top label 312
2024-06-06 03:46:40,277 - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 312
2024-06-06 03:46:40,277 - DEBUG - find_def_from_bottom label 276
2024-06-06 03:46:40,278 - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n.1, utils.py:1227), Var(n.6, utils.py:1229), Var(n, utils.py:1225)], incoming_blocks=[272, 731, 260])
2024-06-06 03:46:40,278 - DEBUG - find_def_from_bottom label 726
2024-06-06 03:46:40,278 - DEBUG - find_def_from_top label 726
2024-06-06 03:46:40,278 - DEBUG - idom 674 from label 726
2024-06-06 03:46:40,278 - DEBUG - find_def_from_bottom label 674
2024-06-06 03:46:40,278 - DEBUG - incoming_def n.4 = $binop_iadd684.4
2024-06-06 03:46:40,278 - DEBUG - replaced with: $binop_sub360.9 = n.7 - pre_max
2024-06-06 03:46:40,278 - DEBUG - on stmt: $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,278 - DEBUG - on stmt: $372load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:40,278 - DEBUG - on stmt: $binop_add386.15 = n + post_max
2024-06-06 03:46:40,278 - DEBUG - find_def var='n' stmt=$binop_add386.15 = n + post_max
2024-06-06 03:46:40,278 - DEBUG - replaced with: $binop_add386.15 = n.7 + post_max
2024-06-06 03:46:40,278 - DEBUG - on stmt: $392load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,279 - DEBUG - on stmt: $const412.18 = const(int, 0)
2024-06-06 03:46:40,279 - DEBUG - on stmt: $414binary_subscr.19 = static_getitem(value=$392load_attr.17, index=0, index_var=$const412.18, fn=<built-in function getitem>)
2024-06-06 03:46:40,279 - DEBUG - on stmt: $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,279 - DEBUG - on stmt: $426binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:40,279 - DEBUG - on stmt: $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,279 - DEBUG - on stmt: $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:40,279 - DEBUG - on stmt: maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,279 - DEBUG - on stmt: $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,279 - DEBUG - find_def var='n' stmt=$442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,279 - DEBUG - replaced with: $442binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:40,280 - DEBUG - on stmt: $448compare_op.29 = $442binary_subscr.27 == maxn
2024-06-06 03:46:40,280 - DEBUG - on stmt: peaks[n] = $448compare_op.29
2024-06-06 03:46:40,280 - DEBUG - find_def var='n' stmt=peaks[n] = $448compare_op.29
2024-06-06 03:46:40,280 - DEBUG - replaced with: peaks[n.7] = $448compare_op.29
2024-06-06 03:46:40,280 - DEBUG - on stmt: $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,280 - DEBUG - find_def var='n' stmt=$464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,280 - DEBUG - replaced with: $464binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:40,280 - DEBUG - on stmt: bool468 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,280 - DEBUG - on stmt: $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,280 - DEBUG - on stmt: branch $468pred, 482, 470
2024-06-06 03:46:40,280 - DEBUG - ==== SSA block rewrite pass on 470
2024-06-06 03:46:40,280 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,281 - DEBUG - on stmt: $const472.1 = const(int, 1)
2024-06-06 03:46:40,281 - DEBUG - on stmt: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,281 - DEBUG - find_def var='n' stmt=$binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,281 - DEBUG - find_def_from_top label 470
2024-06-06 03:46:40,281 - DEBUG - idom 312 from label 470
2024-06-06 03:46:40,281 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:40,281 - DEBUG - replaced with: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,281 - DEBUG - on stmt: n.2 = $binop_iadd474.2
2024-06-06 03:46:40,281 - DEBUG - on stmt: jump 731
2024-06-06 03:46:40,281 - DEBUG - ==== SSA block rewrite pass on 482
2024-06-06 03:46:40,281 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,281 - DEBUG - on stmt: $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,281 - DEBUG - on stmt: $492load_attr.2 = getattr(value=$482load_global.0, attr=mean)
2024-06-06 03:46:40,282 - DEBUG - on stmt: $514load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:40,282 - DEBUG - on stmt: $const524.6 = const(int, 0)
2024-06-06 03:46:40,282 - DEBUG - on stmt: $binop_sub530.9 = n - pre_avg
2024-06-06 03:46:40,282 - DEBUG - find_def var='n' stmt=$binop_sub530.9 = n - pre_avg
2024-06-06 03:46:40,282 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:40,282 - DEBUG - idom 312 from label 482
2024-06-06 03:46:40,282 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:40,282 - DEBUG - replaced with: $binop_sub530.9 = n.7 - pre_avg
2024-06-06 03:46:40,282 - DEBUG - on stmt: $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,282 - DEBUG - on stmt: $542load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:40,282 - DEBUG - on stmt: $binop_add556.15 = n + post_avg
2024-06-06 03:46:40,282 - DEBUG - find_def var='n' stmt=$binop_add556.15 = n + post_avg
2024-06-06 03:46:40,283 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:40,283 - DEBUG - idom 312 from label 482
2024-06-06 03:46:40,283 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:40,283 - DEBUG - replaced with: $binop_add556.15 = n.7 + post_avg
2024-06-06 03:46:40,283 - DEBUG - on stmt: $562load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,283 - DEBUG - on stmt: $const582.18 = const(int, 0)
2024-06-06 03:46:40,283 - DEBUG - on stmt: $584binary_subscr.19 = static_getitem(value=$562load_attr.17, index=0, index_var=$const582.18, fn=<built-in function getitem>)
2024-06-06 03:46:40,283 - DEBUG - on stmt: $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,283 - DEBUG - on stmt: $596binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:40,283 - DEBUG - on stmt: $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,283 - DEBUG - on stmt: $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:40,283 - DEBUG - on stmt: avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,284 - DEBUG - on stmt: $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,284 - DEBUG - find_def var='n' stmt=$616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,284 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:40,284 - DEBUG - idom 312 from label 482
2024-06-06 03:46:40,284 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:40,284 - DEBUG - replaced with: $616binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:40,284 - DEBUG - on stmt: $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,284 - DEBUG - find_def var='n' stmt=$624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,284 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:40,284 - DEBUG - idom 312 from label 482
2024-06-06 03:46:40,284 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:40,284 - DEBUG - replaced with: $624binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:40,285 - DEBUG - on stmt: $binop_add632.33 = avgn + delta
2024-06-06 03:46:40,285 - DEBUG - on stmt: $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33
2024-06-06 03:46:40,285 - DEBUG - on stmt: $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,285 - DEBUG - on stmt: peaks[n] = $binop_iand640.35
2024-06-06 03:46:40,285 - DEBUG - find_def var='n' stmt=peaks[n] = $binop_iand640.35
2024-06-06 03:46:40,285 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:40,285 - DEBUG - idom 312 from label 482
2024-06-06 03:46:40,285 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:40,285 - DEBUG - replaced with: peaks[n.7] = $binop_iand640.35
2024-06-06 03:46:40,285 - DEBUG - on stmt: $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,285 - DEBUG - find_def var='n' stmt=$656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:40,285 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:40,285 - DEBUG - idom 312 from label 482
2024-06-06 03:46:40,286 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:40,286 - DEBUG - replaced with: $656binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:40,286 - DEBUG - on stmt: bool660 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,286 - DEBUG - on stmt: $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,286 - DEBUG - on stmt: branch $660pred, 674, 662
2024-06-06 03:46:40,286 - DEBUG - ==== SSA block rewrite pass on 662
2024-06-06 03:46:40,286 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,286 - DEBUG - on stmt: $const664.1 = const(int, 1)
2024-06-06 03:46:40,286 - DEBUG - on stmt: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,286 - DEBUG - find_def var='n' stmt=$binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,286 - DEBUG - find_def_from_top label 662
2024-06-06 03:46:40,286 - DEBUG - idom 482 from label 662
2024-06-06 03:46:40,286 - DEBUG - find_def_from_bottom label 482
2024-06-06 03:46:40,287 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:40,287 - DEBUG - idom 312 from label 482
2024-06-06 03:46:40,287 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:40,287 - DEBUG - replaced with: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,287 - DEBUG - on stmt: n.3 = $binop_iadd666.2
2024-06-06 03:46:40,287 - DEBUG - on stmt: jump 731
2024-06-06 03:46:40,287 - DEBUG - ==== SSA block rewrite pass on 674
2024-06-06 03:46:40,287 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,287 - DEBUG - on stmt: $const678.2 = const(int, 1)
2024-06-06 03:46:40,287 - DEBUG - on stmt: $binop_add680.3 = wait + $const678.2
2024-06-06 03:46:40,287 - DEBUG - on stmt: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,287 - DEBUG - find_def var='n' stmt=$binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,288 - DEBUG - find_def_from_top label 674
2024-06-06 03:46:40,288 - DEBUG - idom 482 from label 674
2024-06-06 03:46:40,288 - DEBUG - find_def_from_bottom label 482
2024-06-06 03:46:40,288 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:40,288 - DEBUG - idom 312 from label 482
2024-06-06 03:46:40,288 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:40,288 - DEBUG - replaced with: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,288 - DEBUG - on stmt: n.4 = $binop_iadd684.4
2024-06-06 03:46:40,288 - DEBUG - on stmt: $694load_attr.7 = getattr(value=x, attr=shape)
2024-06-06 03:46:40,288 - DEBUG - on stmt: $const714.8 = const(int, 0)
2024-06-06 03:46:40,288 - DEBUG - on stmt: $716binary_subscr.9 = static_getitem(value=$694load_attr.7, index=0, index_var=$const714.8, fn=<built-in function getitem>)
2024-06-06 03:46:40,288 - DEBUG - on stmt: $720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:40,288 - DEBUG - find_def var='n' stmt=$720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:40,289 - DEBUG - replaced with: $720compare_op.10 = n.4 < $716binary_subscr.9
2024-06-06 03:46:40,289 - DEBUG - on stmt: bool724 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,289 - DEBUG - on stmt: $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,289 - DEBUG - on stmt: branch $724pred, 726, 728
2024-06-06 03:46:40,289 - DEBUG - ==== SSA block rewrite pass on 726
2024-06-06 03:46:40,289 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,289 - DEBUG - on stmt: jump 312
2024-06-06 03:46:40,289 - DEBUG - ==== SSA block rewrite pass on 728
2024-06-06 03:46:40,289 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,289 - DEBUG - on stmt: $const728.0 = const(NoneType, None)
2024-06-06 03:46:40,289 - DEBUG - on stmt: $728return_const.1 = cast(value=$const728.0)
2024-06-06 03:46:40,289 - DEBUG - on stmt: return $728return_const.1
2024-06-06 03:46:40,290 - DEBUG - ==== SSA block rewrite pass on 730
2024-06-06 03:46:40,290 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,290 - DEBUG - on stmt: $const730.0 = const(NoneType, None)
2024-06-06 03:46:40,290 - DEBUG - on stmt: $730return_const.1 = cast(value=$const730.0)
2024-06-06 03:46:40,290 - DEBUG - on stmt: return $730return_const.1
2024-06-06 03:46:40,290 - DEBUG - ==== SSA block rewrite pass on 731
2024-06-06 03:46:40,290 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b98c00e0>
2024-06-06 03:46:40,290 - DEBUG - on stmt: jump 276
2024-06-06 03:46:40,299 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          28	LOAD_CONST(arg=1, lineno=571)
          30	COMPARE_OP(arg=40, lineno=571)
          34	POP_JUMP_IF_FALSE(arg=11, lineno=571)
          36	LOAD_GLOBAL(arg=3, lineno=572)
          46	LOAD_CONST(arg=2, lineno=572)
          48	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          68	LOAD_ATTR(arg=6, lineno=575)
          88	LOAD_FAST(arg=0, lineno=575)
          90	CALL(arg=1, lineno=575)
          98	STORE_FAST(arg=1, lineno=575)
         100	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	CALL(arg=1, lineno=576)
         120	LOAD_ATTR(arg=11, lineno=576)
         140	LOAD_CONST(arg=1, lineno=576)
         142	CALL(arg=1, lineno=576)
         150	STORE_FAST(arg=2, lineno=576)
         152	PUSH_NULL(arg=None, lineno=577)
         154	LOAD_DEREF(arg=6, lineno=577)
         156	LOAD_FAST(arg=2, lineno=577)
         158	CALL(arg=1, lineno=577)
         166	POP_JUMP_IF_FALSE(arg=2, lineno=577)
         168	LOAD_FAST(arg=2, lineno=578)
         170	RETURN_VALUE(arg=None, lineno=578)
>        172	LOAD_FAST(arg=1, lineno=580)
         174	GET_ITER(arg=None, lineno=580)
>        176	FOR_ITER(arg=42, lineno=580)
         180	STORE_FAST(arg=3, lineno=580)
         182	LOAD_FAST(arg=3, lineno=581)
         184	LOAD_ATTR(arg=13, lineno=581)
         204	CALL(arg=0, lineno=581)
         212	STORE_FAST(arg=4, lineno=581)
         214	PUSH_NULL(arg=None, lineno=582)
         216	LOAD_DEREF(arg=6, lineno=582)
         218	LOAD_FAST(arg=4, lineno=582)
         220	CALL(arg=1, lineno=582)
         228	POP_JUMP_IF_FALSE(arg=4, lineno=582)
         230	LOAD_FAST(arg=4, lineno=583)
         232	SWAP(arg=2, lineno=583)
         234	POP_TOP(arg=None, lineno=583)
         236	RETURN_VALUE(arg=None, lineno=583)
>        238	PUSH_NULL(arg=None, lineno=584)
         240	LOAD_DEREF(arg=5, lineno=584)
         242	LOAD_FAST(arg=4, lineno=584)
         244	LOAD_FAST(arg=2, lineno=584)
         246	CALL(arg=2, lineno=584)
         254	POP_JUMP_IF_TRUE(arg=1, lineno=584)
         256	JUMP_BACKWARD(arg=41, lineno=584)
>        258	LOAD_FAST(arg=4, lineno=585)
         260	STORE_FAST(arg=2, lineno=585)
         262	JUMP_BACKWARD(arg=44, lineno=585)
>        264	END_FOR(arg=None, lineno=580)
         266	LOAD_FAST(arg=2, lineno=586)
         268	RETURN_VALUE(arg=None, lineno=586)
2024-06-06 03:46:40,299 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:40,299 - DEBUG - stack: []
2024-06-06 03:46:40,299 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:40,299 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-06-06 03:46:40,299 - DEBUG - stack []
2024-06-06 03:46:40,299 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-06-06 03:46:40,299 - DEBUG - stack []
2024-06-06 03:46:40,299 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-06-06 03:46:40,299 - DEBUG - stack []
2024-06-06 03:46:40,299 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-06-06 03:46:40,299 - DEBUG - stack []
2024-06-06 03:46:40,300 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-06-06 03:46:40,300 - DEBUG - stack ['$a6.0']
2024-06-06 03:46:40,300 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=571)
2024-06-06 03:46:40,300 - DEBUG - stack ['$8load_attr.1']
2024-06-06 03:46:40,300 - DEBUG - dispatch pc=30, inst=COMPARE_OP(arg=40, lineno=571)
2024-06-06 03:46:40,300 - DEBUG - stack ['$8load_attr.1', '$const28.2']
2024-06-06 03:46:40,300 - DEBUG - dispatch pc=34, inst=POP_JUMP_IF_FALSE(arg=11, lineno=571)
2024-06-06 03:46:40,300 - DEBUG - stack ['$30compare_op.3']
2024-06-06 03:46:40,300 - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:40,300 - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-06-06 03:46:40,300 - DEBUG - stack: []
2024-06-06 03:46:40,300 - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2024-06-06 03:46:40,300 - DEBUG - dispatch pc=36, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-06-06 03:46:40,301 - DEBUG - stack []
2024-06-06 03:46:40,301 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=2, lineno=572)
2024-06-06 03:46:40,301 - DEBUG - stack ['$null$36.1', '$36load_global.0']
2024-06-06 03:46:40,301 - DEBUG - dispatch pc=48, inst=CALL(arg=1, lineno=572)
2024-06-06 03:46:40,301 - DEBUG - stack ['$null$36.1', '$36load_global.0', '$const46.2']
2024-06-06 03:46:40,301 - DEBUG - dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-06-06 03:46:40,301 - DEBUG - stack ['$48call.3']
2024-06-06 03:46:40,301 - DEBUG - end state. edges=[]
2024-06-06 03:46:40,301 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-06-06 03:46:40,301 - DEBUG - stack: []
2024-06-06 03:46:40,301 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-06-06 03:46:40,301 - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-06-06 03:46:40,301 - DEBUG - stack []
2024-06-06 03:46:40,302 - DEBUG - dispatch pc=68, inst=LOAD_ATTR(arg=6, lineno=575)
2024-06-06 03:46:40,302 - DEBUG - stack ['$null$58.1', '$58load_global.0']
2024-06-06 03:46:40,302 - DEBUG - dispatch pc=88, inst=LOAD_FAST(arg=0, lineno=575)
2024-06-06 03:46:40,302 - DEBUG - stack ['$null$58.1', '$68load_attr.2']
2024-06-06 03:46:40,302 - DEBUG - dispatch pc=90, inst=CALL(arg=1, lineno=575)
2024-06-06 03:46:40,302 - DEBUG - stack ['$null$58.1', '$68load_attr.2', '$a88.3']
2024-06-06 03:46:40,302 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=1, lineno=575)
2024-06-06 03:46:40,302 - DEBUG - stack ['$90call.4']
2024-06-06 03:46:40,302 - DEBUG - dispatch pc=100, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-06-06 03:46:40,302 - DEBUG - stack []
2024-06-06 03:46:40,302 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-06-06 03:46:40,302 - DEBUG - stack ['$null$100.6', '$100load_global.5']
2024-06-06 03:46:40,302 - DEBUG - dispatch pc=112, inst=CALL(arg=1, lineno=576)
2024-06-06 03:46:40,302 - DEBUG - stack ['$null$100.6', '$100load_global.5', '$it110.7']
2024-06-06 03:46:40,303 - DEBUG - dispatch pc=120, inst=LOAD_ATTR(arg=11, lineno=576)
2024-06-06 03:46:40,303 - DEBUG - stack ['$112call.8']
2024-06-06 03:46:40,303 - DEBUG - dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=576)
2024-06-06 03:46:40,303 - DEBUG - stack ['$null$120.9', '$120load_attr.10']
2024-06-06 03:46:40,303 - DEBUG - dispatch pc=142, inst=CALL(arg=1, lineno=576)
2024-06-06 03:46:40,303 - DEBUG - stack ['$null$120.9', '$120load_attr.10', '$const140.11']
2024-06-06 03:46:40,303 - DEBUG - dispatch pc=150, inst=STORE_FAST(arg=2, lineno=576)
2024-06-06 03:46:40,303 - DEBUG - stack ['$142call.12']
2024-06-06 03:46:40,303 - DEBUG - dispatch pc=152, inst=PUSH_NULL(arg=None, lineno=577)
2024-06-06 03:46:40,303 - DEBUG - stack []
2024-06-06 03:46:40,303 - DEBUG - dispatch pc=154, inst=LOAD_DEREF(arg=6, lineno=577)
2024-06-06 03:46:40,303 - DEBUG - stack ['$null$152.13']
2024-06-06 03:46:40,303 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=2, lineno=577)
2024-06-06 03:46:40,303 - DEBUG - stack ['$null$152.13', '$154load_deref.14']
2024-06-06 03:46:40,304 - DEBUG - dispatch pc=158, inst=CALL(arg=1, lineno=577)
2024-06-06 03:46:40,304 - DEBUG - stack ['$null$152.13', '$154load_deref.14', '$max_value156.15']
2024-06-06 03:46:40,304 - DEBUG - dispatch pc=166, inst=POP_JUMP_IF_FALSE(arg=2, lineno=577)
2024-06-06 03:46:40,304 - DEBUG - stack ['$158call.16']
2024-06-06 03:46:40,304 - DEBUG - end state. edges=[Edge(pc=168, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:40,304 - DEBUG - pending: deque([State(pc_initial=168 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
2024-06-06 03:46:40,304 - DEBUG - stack: []
2024-06-06 03:46:40,304 - DEBUG - state.pc_initial: State(pc_initial=168 nstack_initial=0)
2024-06-06 03:46:40,304 - DEBUG - dispatch pc=168, inst=LOAD_FAST(arg=2, lineno=578)
2024-06-06 03:46:40,304 - DEBUG - stack []
2024-06-06 03:46:40,304 - DEBUG - dispatch pc=170, inst=RETURN_VALUE(arg=None, lineno=578)
2024-06-06 03:46:40,304 - DEBUG - stack ['$max_value168.0']
2024-06-06 03:46:40,305 - DEBUG - end state. edges=[]
2024-06-06 03:46:40,305 - DEBUG - pending: deque([State(pc_initial=172 nstack_initial=0)])
2024-06-06 03:46:40,305 - DEBUG - stack: []
2024-06-06 03:46:40,305 - DEBUG - state.pc_initial: State(pc_initial=172 nstack_initial=0)
2024-06-06 03:46:40,305 - DEBUG - dispatch pc=172, inst=LOAD_FAST(arg=1, lineno=580)
2024-06-06 03:46:40,305 - DEBUG - stack []
2024-06-06 03:46:40,305 - DEBUG - dispatch pc=174, inst=GET_ITER(arg=None, lineno=580)
2024-06-06 03:46:40,305 - DEBUG - stack ['$it172.0']
2024-06-06 03:46:40,305 - DEBUG - end state. edges=[Edge(pc=176, stack=('$174get_iter.1',), blockstack=(), npush=0)]
2024-06-06 03:46:40,305 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:40,305 - DEBUG - stack: ['$phi176.0']
2024-06-06 03:46:40,305 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=1)
2024-06-06 03:46:40,305 - DEBUG - dispatch pc=176, inst=FOR_ITER(arg=42, lineno=580)
2024-06-06 03:46:40,305 - DEBUG - stack ['$phi176.0']
2024-06-06 03:46:40,306 - DEBUG - end state. edges=[Edge(pc=264, stack=('$phi176.0', '$176for_iter.2'), blockstack=(), npush=0), Edge(pc=180, stack=('$phi176.0', '$176for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:40,306 - DEBUG - pending: deque([State(pc_initial=264 nstack_initial=2), State(pc_initial=180 nstack_initial=2)])
2024-06-06 03:46:40,306 - DEBUG - stack: ['$phi264.0', '$phi264.1']
2024-06-06 03:46:40,306 - DEBUG - state.pc_initial: State(pc_initial=264 nstack_initial=2)
2024-06-06 03:46:40,306 - DEBUG - dispatch pc=264, inst=END_FOR(arg=None, lineno=580)
2024-06-06 03:46:40,306 - DEBUG - stack ['$phi264.0', '$phi264.1']
2024-06-06 03:46:40,306 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=2, lineno=586)
2024-06-06 03:46:40,306 - DEBUG - stack []
2024-06-06 03:46:40,306 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=586)
2024-06-06 03:46:40,307 - DEBUG - stack ['$max_value266.2']
2024-06-06 03:46:40,307 - DEBUG - end state. edges=[]
2024-06-06 03:46:40,307 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=2)])
2024-06-06 03:46:40,307 - DEBUG - stack: ['$phi180.0', '$phi180.1']
2024-06-06 03:46:40,307 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=2)
2024-06-06 03:46:40,307 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=3, lineno=580)
2024-06-06 03:46:40,307 - DEBUG - stack ['$phi180.0', '$phi180.1']
2024-06-06 03:46:40,307 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=3, lineno=581)
2024-06-06 03:46:40,307 - DEBUG - stack ['$phi180.0']
2024-06-06 03:46:40,307 - DEBUG - dispatch pc=184, inst=LOAD_ATTR(arg=13, lineno=581)
2024-06-06 03:46:40,307 - DEBUG - stack ['$phi180.0', '$view182.2']
2024-06-06 03:46:40,308 - DEBUG - dispatch pc=204, inst=CALL(arg=0, lineno=581)
2024-06-06 03:46:40,308 - DEBUG - stack ['$phi180.0', '$null$184.3', '$184load_attr.4']
2024-06-06 03:46:40,308 - DEBUG - dispatch pc=212, inst=STORE_FAST(arg=4, lineno=581)
2024-06-06 03:46:40,308 - DEBUG - stack ['$phi180.0', '$204call.5']
2024-06-06 03:46:40,308 - DEBUG - dispatch pc=214, inst=PUSH_NULL(arg=None, lineno=582)
2024-06-06 03:46:40,308 - DEBUG - stack ['$phi180.0']
2024-06-06 03:46:40,308 - DEBUG - dispatch pc=216, inst=LOAD_DEREF(arg=6, lineno=582)
2024-06-06 03:46:40,308 - DEBUG - stack ['$phi180.0', '$null$214.6']
2024-06-06 03:46:40,308 - DEBUG - dispatch pc=218, inst=LOAD_FAST(arg=4, lineno=582)
2024-06-06 03:46:40,308 - DEBUG - stack ['$phi180.0', '$null$214.6', '$216load_deref.7']
2024-06-06 03:46:40,308 - DEBUG - dispatch pc=220, inst=CALL(arg=1, lineno=582)
2024-06-06 03:46:40,308 - DEBUG - stack ['$phi180.0', '$null$214.6', '$216load_deref.7', '$v218.8']
2024-06-06 03:46:40,308 - DEBUG - dispatch pc=228, inst=POP_JUMP_IF_FALSE(arg=4, lineno=582)
2024-06-06 03:46:40,309 - DEBUG - stack ['$phi180.0', '$220call.9']
2024-06-06 03:46:40,309 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi180.0',), blockstack=(), npush=0), Edge(pc=238, stack=('$phi180.0',), blockstack=(), npush=0)]
2024-06-06 03:46:40,309 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1), State(pc_initial=238 nstack_initial=1)])
2024-06-06 03:46:40,309 - DEBUG - stack: ['$phi230.0']
2024-06-06 03:46:40,309 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-06 03:46:40,309 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=4, lineno=583)
2024-06-06 03:46:40,309 - DEBUG - stack ['$phi230.0']
2024-06-06 03:46:40,309 - DEBUG - dispatch pc=232, inst=SWAP(arg=2, lineno=583)
2024-06-06 03:46:40,309 - DEBUG - stack ['$phi230.0', '$v230.1']
2024-06-06 03:46:40,309 - DEBUG - dispatch pc=234, inst=POP_TOP(arg=None, lineno=583)
2024-06-06 03:46:40,309 - DEBUG - stack ['$v230.1', '$phi230.0']
2024-06-06 03:46:40,309 - DEBUG - dispatch pc=236, inst=RETURN_VALUE(arg=None, lineno=583)
2024-06-06 03:46:40,309 - DEBUG - stack ['$v230.1']
2024-06-06 03:46:40,310 - DEBUG - end state. edges=[]
2024-06-06 03:46:40,310 - DEBUG - pending: deque([State(pc_initial=238 nstack_initial=1)])
2024-06-06 03:46:40,310 - DEBUG - stack: ['$phi238.0']
2024-06-06 03:46:40,310 - DEBUG - state.pc_initial: State(pc_initial=238 nstack_initial=1)
2024-06-06 03:46:40,310 - DEBUG - dispatch pc=238, inst=PUSH_NULL(arg=None, lineno=584)
2024-06-06 03:46:40,310 - DEBUG - stack ['$phi238.0']
2024-06-06 03:46:40,310 - DEBUG - dispatch pc=240, inst=LOAD_DEREF(arg=5, lineno=584)
2024-06-06 03:46:40,310 - DEBUG - stack ['$phi238.0', '$null$238.1']
2024-06-06 03:46:40,310 - DEBUG - dispatch pc=242, inst=LOAD_FAST(arg=4, lineno=584)
2024-06-06 03:46:40,310 - DEBUG - stack ['$phi238.0', '$null$238.1', '$240load_deref.2']
2024-06-06 03:46:40,310 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=2, lineno=584)
2024-06-06 03:46:40,310 - DEBUG - stack ['$phi238.0', '$null$238.1', '$240load_deref.2', '$v242.3']
2024-06-06 03:46:40,310 - DEBUG - dispatch pc=246, inst=CALL(arg=2, lineno=584)
2024-06-06 03:46:40,310 - DEBUG - stack ['$phi238.0', '$null$238.1', '$240load_deref.2', '$v242.3', '$max_value244.4']
2024-06-06 03:46:40,311 - DEBUG - dispatch pc=254, inst=POP_JUMP_IF_TRUE(arg=1, lineno=584)
2024-06-06 03:46:40,311 - DEBUG - stack ['$phi238.0', '$246call.5']
2024-06-06 03:46:40,311 - DEBUG - end state. edges=[Edge(pc=256, stack=('$phi238.0',), blockstack=(), npush=0), Edge(pc=258, stack=('$phi238.0',), blockstack=(), npush=0)]
2024-06-06 03:46:40,311 - DEBUG - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=258 nstack_initial=1)])
2024-06-06 03:46:40,311 - DEBUG - stack: ['$phi256.0']
2024-06-06 03:46:40,311 - DEBUG - state.pc_initial: State(pc_initial=256 nstack_initial=1)
2024-06-06 03:46:40,311 - DEBUG - dispatch pc=256, inst=JUMP_BACKWARD(arg=41, lineno=584)
2024-06-06 03:46:40,311 - DEBUG - stack ['$phi256.0']
2024-06-06 03:46:40,311 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi256.0',), blockstack=(), npush=0)]
2024-06-06 03:46:40,311 - DEBUG - pending: deque([State(pc_initial=258 nstack_initial=1), State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:40,311 - DEBUG - stack: ['$phi258.0']
2024-06-06 03:46:40,311 - DEBUG - state.pc_initial: State(pc_initial=258 nstack_initial=1)
2024-06-06 03:46:40,312 - DEBUG - dispatch pc=258, inst=LOAD_FAST(arg=4, lineno=585)
2024-06-06 03:46:40,312 - DEBUG - stack ['$phi258.0']
2024-06-06 03:46:40,312 - DEBUG - dispatch pc=260, inst=STORE_FAST(arg=2, lineno=585)
2024-06-06 03:46:40,312 - DEBUG - stack ['$phi258.0', '$v258.1']
2024-06-06 03:46:40,312 - DEBUG - dispatch pc=262, inst=JUMP_BACKWARD(arg=44, lineno=585)
2024-06-06 03:46:40,312 - DEBUG - stack ['$phi258.0']
2024-06-06 03:46:40,312 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi258.0',), blockstack=(), npush=0)]
2024-06-06 03:46:40,312 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:40,312 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:40,312 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:40,312 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=168 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): {'$phi176.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=230 nstack_initial=1): set(),
             State(pc_initial=238 nstack_initial=1): set(),
             State(pc_initial=256 nstack_initial=1): set(),
             State(pc_initial=258 nstack_initial=1): set(),
             State(pc_initial=264 nstack_initial=2): set()})
2024-06-06 03:46:40,313 - DEBUG - defmap: {'$phi176.0': State(pc_initial=172 nstack_initial=0),
 '$phi180.1': State(pc_initial=176 nstack_initial=1),
 '$phi264.1': State(pc_initial=176 nstack_initial=1)}
2024-06-06 03:46:40,314 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi256.0',
                            State(pc_initial=256 nstack_initial=1)),
                           ('$phi258.0',
                            State(pc_initial=258 nstack_initial=1))},
             '$phi180.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi238.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi256.0': {('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi258.0': {('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi264.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:40,315 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi180.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi238.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi256.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi258.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:40,316 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi238.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi256.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi258.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:40,317 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi238.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi256.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi258.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:40,318 - DEBUG - keep phismap: {'$phi176.0': {('$174get_iter.1', State(pc_initial=172 nstack_initial=0))},
 '$phi180.1': {('$176for_iter.2', State(pc_initial=176 nstack_initial=1))}}
2024-06-06 03:46:40,318 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=172 nstack_initial=0): {'$phi176.0': '$174get_iter.1'},
             State(pc_initial=176 nstack_initial=1): {'$phi180.1': '$176for_iter.2'}})
2024-06-06 03:46:40,318 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:40,318 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (28, {'res': '$const28.2'}), (30, {'lhs': '$8load_attr.1', 'rhs': '$const28.2', 'res': '$30compare_op.3'}), (34, {'pred': '$30compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: (), 58: ()})
2024-06-06 03:46:40,318 - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'idx': 1, 'res': '$36load_global.0'}), (46, {'res': '$const46.2'}), (48, {'func': '$36load_global.0', 'args': ['$const46.2'], 'kw_names': None, 'res': '$48call.3'}), (56, {'exc': '$48call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:40,319 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (68, {'item': '$58load_global.0', 'res': '$68load_attr.2'}), (88, {'res': '$a88.3'}), (90, {'func': '$68load_attr.2', 'args': ['$a88.3'], 'kw_names': None, 'res': '$90call.4'}), (98, {'value': '$90call.4'}), (100, {'idx': 4, 'res': '$100load_global.5'}), (110, {'res': '$it110.7'}), (112, {'func': '$100load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$112call.8'}), (120, {'item': '$112call.8', 'res': '$120load_attr.10'}), (140, {'res': '$const140.11'}), (142, {'func': '$120load_attr.10', 'args': ['$const140.11'], 'kw_names': None, 'res': '$142call.12'}), (150, {'value': '$142call.12'}), (152, {}), (154, {'res': '$154load_deref.14'}), (156, {'res': '$max_value156.15'}), (158, {'func': '$154load_deref.14', 'args': ['$max_value156.15'], 'kw_names': None, 'res': '$158call.16'}), (166, {'pred': '$158call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={168: (), 172: ()})
2024-06-06 03:46:40,319 - DEBUG - block_infos State(pc_initial=168 nstack_initial=0):
AdaptBlockInfo(insts=((168, {'res': '$max_value168.0'}), (170, {'retval': '$max_value168.0', 'castval': '$170return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:40,319 - DEBUG - block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$it172.0'}), (174, {'value': '$it172.0', 'res': '$174get_iter.1'})), outgoing_phis={'$phi176.0': '$174get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.1',)})
2024-06-06 03:46:40,319 - DEBUG - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {'iterator': '$phi176.0', 'pair': '$176for_iter.1', 'indval': '$176for_iter.2', 'pred': '$176for_iter.3'}),), outgoing_phis={'$phi180.1': '$176for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={264: ('$phi176.0', '$176for_iter.2'), 180: ('$phi176.0', '$176for_iter.2')})
2024-06-06 03:46:40,319 - DEBUG - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$view182.2'}), (184, {'item': '$view182.2', 'res': '$184load_attr.4'}), (204, {'func': '$184load_attr.4', 'args': [], 'kw_names': None, 'res': '$204call.5'}), (212, {'value': '$204call.5'}), (214, {}), (216, {'res': '$216load_deref.7'}), (218, {'res': '$v218.8'}), (220, {'func': '$216load_deref.7', 'args': ['$v218.8'], 'kw_names': None, 'res': '$220call.9'}), (228, {'pred': '$220call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi180.0',), 238: ('$phi180.0',)})
2024-06-06 03:46:40,319 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'res': '$v230.1'}), (236, {'retval': '$v230.1', 'castval': '$236return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:40,319 - DEBUG - block_infos State(pc_initial=238 nstack_initial=1):
AdaptBlockInfo(insts=((238, {}), (240, {'res': '$240load_deref.2'}), (242, {'res': '$v242.3'}), (244, {'res': '$max_value244.4'}), (246, {'func': '$240load_deref.2', 'args': ['$v242.3', '$max_value244.4'], 'kw_names': None, 'res': '$246call.5'}), (254, {'pred': '$246call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={256: ('$phi238.0',), 258: ('$phi238.0',)})
2024-06-06 03:46:40,319 - DEBUG - block_infos State(pc_initial=256 nstack_initial=1):
AdaptBlockInfo(insts=((256, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi256.0',)})
2024-06-06 03:46:40,319 - DEBUG - block_infos State(pc_initial=258 nstack_initial=1):
AdaptBlockInfo(insts=((258, {'res': '$v258.1'}), (260, {'value': '$v258.1'}), (262, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi258.0',)})
2024-06-06 03:46:40,319 - DEBUG - block_infos State(pc_initial=264 nstack_initial=2):
AdaptBlockInfo(insts=((266, {'res': '$max_value266.2'}), (268, {'retval': '$max_value266.2', 'castval': '$268return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:40,321 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const28.2 = const(int, 0)               ['$const28.2']
    $30compare_op.3 = $8load_attr.1 == $const28.2 ['$30compare_op.3', '$8load_attr.1', '$const28.2']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$34pred', 'bool34']
    branch $34pred, 36, 58                   ['$34pred']
label 36:
    $36load_global.0 = global(ValueError: <class 'ValueError'>) ['$36load_global.0']
    $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const46.2']
    $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_global.0', '$48call.3', '$const46.2']
    raise $48call.3                          ['$48call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$58load_global.0']
    $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$68load_attr.2']
    it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_attr.2', 'a', 'it']
    $100load_global.5 = global(next: <built-in function next>) ['$100load_global.5']
    $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.5', '$112call.8', 'it']
    $120load_attr.10 = getattr(value=$112call.8, attr=take) ['$112call.8', '$120load_attr.10']
    $const140.11 = const(int, 0)             ['$const140.11']
    max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_attr.10', '$const140.11', 'max_value']
    $154load_deref.14 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>) ['$154load_deref.14']
    $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$154load_deref.14', '$158call.16', 'max_value']
    bool166 = global(bool: <class 'bool'>)   ['bool166']
    $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$158call.16', '$166pred', 'bool166']
    branch $166pred, 168, 172                ['$166pred']
label 168:
    $170return_value.1 = cast(value=max_value) ['$170return_value.1', 'max_value']
    return $170return_value.1                ['$170return_value.1']
label 172:
    $174get_iter.1 = getiter(value=it)       ['$174get_iter.1', 'it']
    $phi176.0 = $174get_iter.1               ['$174get_iter.1', '$phi176.0']
    jump 176                                 []
label 176:
    $176for_iter.1 = iternext(value=$phi176.0) ['$176for_iter.1', '$phi176.0']
    $176for_iter.2 = pair_first(value=$176for_iter.1) ['$176for_iter.1', '$176for_iter.2']
    $176for_iter.3 = pair_second(value=$176for_iter.1) ['$176for_iter.1', '$176for_iter.3']
    $phi180.1 = $176for_iter.2               ['$176for_iter.2', '$phi180.1']
    branch $176for_iter.3, 180, 264          ['$176for_iter.3']
label 180:
    view = $phi180.1                         ['$phi180.1', 'view']
    $184load_attr.4 = getattr(value=view, attr=item) ['$184load_attr.4', 'view']
    v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$184load_attr.4', 'v']
    $216load_deref.7 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>) ['$216load_deref.7']
    $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$216load_deref.7', '$220call.9', 'v']
    bool228 = global(bool: <class 'bool'>)   ['bool228']
    $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$220call.9', '$228pred', 'bool228']
    branch $228pred, 230, 238                ['$228pred']
label 230:
    $236return_value.2 = cast(value=v)       ['$236return_value.2', 'v']
    return $236return_value.2                ['$236return_value.2']
label 238:
    $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>) ['$240load_deref.2']
    $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$240load_deref.2', '$246call.5', 'max_value', 'v']
    bool254 = global(bool: <class 'bool'>)   ['bool254']
    $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$246call.5', '$254pred', 'bool254']
    branch $254pred, 258, 256                ['$254pred']
label 256:
    jump 176                                 []
label 258:
    max_value = v                            ['max_value', 'v']
    jump 176                                 []
label 264:
    $268return_value.3 = cast(value=max_value) ['$268return_value.3', 'max_value']
    return $268return_value.3                ['$268return_value.3']

2024-06-06 03:46:40,332 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:40,332 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9496c60>
2024-06-06 03:46:40,332 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:40,332 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-06 03:46:40,332 - DEBUG - on stmt: $const28.2 = const(int, 0)
2024-06-06 03:46:40,332 - DEBUG - on stmt: $30compare_op.3 = $8load_attr.1 == $const28.2
2024-06-06 03:46:40,332 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,333 - DEBUG - on stmt: $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,333 - DEBUG - on stmt: branch $34pred, 36, 58
2024-06-06 03:46:40,333 - DEBUG - ==== SSA block analysis pass on 36
2024-06-06 03:46:40,333 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9496c60>
2024-06-06 03:46:40,333 - DEBUG - on stmt: $36load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:40,333 - DEBUG - on stmt: $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-06 03:46:40,333 - DEBUG - on stmt: $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,333 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-06 03:46:40,333 - DEBUG - ==== SSA block analysis pass on 58
2024-06-06 03:46:40,333 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9496c60>
2024-06-06 03:46:40,333 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,333 - DEBUG - on stmt: $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-06 03:46:40,334 - DEBUG - on stmt: it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,334 - DEBUG - on stmt: $100load_global.5 = global(next: <built-in function next>)
2024-06-06 03:46:40,334 - DEBUG - on stmt: $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,334 - DEBUG - on stmt: $120load_attr.10 = getattr(value=$112call.8, attr=take)
2024-06-06 03:46:40,334 - DEBUG - on stmt: $const140.11 = const(int, 0)
2024-06-06 03:46:40,334 - DEBUG - on stmt: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,334 - DEBUG - on stmt: $154load_deref.14 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>)
2024-06-06 03:46:40,334 - DEBUG - on stmt: $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,334 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,334 - DEBUG - on stmt: $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,334 - DEBUG - on stmt: branch $166pred, 168, 172
2024-06-06 03:46:40,335 - DEBUG - ==== SSA block analysis pass on 168
2024-06-06 03:46:40,335 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9496c60>
2024-06-06 03:46:40,335 - DEBUG - on stmt: $170return_value.1 = cast(value=max_value)
2024-06-06 03:46:40,335 - DEBUG - on stmt: return $170return_value.1
2024-06-06 03:46:40,335 - DEBUG - ==== SSA block analysis pass on 172
2024-06-06 03:46:40,335 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9496c60>
2024-06-06 03:46:40,335 - DEBUG - on stmt: $174get_iter.1 = getiter(value=it)
2024-06-06 03:46:40,335 - DEBUG - on stmt: $phi176.0 = $174get_iter.1
2024-06-06 03:46:40,335 - DEBUG - on stmt: jump 176
2024-06-06 03:46:40,335 - DEBUG - ==== SSA block analysis pass on 176
2024-06-06 03:46:40,335 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9496c60>
2024-06-06 03:46:40,335 - DEBUG - on stmt: $176for_iter.1 = iternext(value=$phi176.0)
2024-06-06 03:46:40,335 - DEBUG - on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
2024-06-06 03:46:40,335 - DEBUG - on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
2024-06-06 03:46:40,336 - DEBUG - on stmt: $phi180.1 = $176for_iter.2
2024-06-06 03:46:40,336 - DEBUG - on stmt: branch $176for_iter.3, 180, 264
2024-06-06 03:46:40,336 - DEBUG - ==== SSA block analysis pass on 180
2024-06-06 03:46:40,336 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9496c60>
2024-06-06 03:46:40,336 - DEBUG - on stmt: view = $phi180.1
2024-06-06 03:46:40,336 - DEBUG - on stmt: $184load_attr.4 = getattr(value=view, attr=item)
2024-06-06 03:46:40,336 - DEBUG - on stmt: v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,336 - DEBUG - on stmt: $216load_deref.7 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>)
2024-06-06 03:46:40,336 - DEBUG - on stmt: $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,336 - DEBUG - on stmt: bool228 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,336 - DEBUG - on stmt: $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,336 - DEBUG - on stmt: branch $228pred, 230, 238
2024-06-06 03:46:40,337 - DEBUG - ==== SSA block analysis pass on 230
2024-06-06 03:46:40,337 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9496c60>
2024-06-06 03:46:40,337 - DEBUG - on stmt: $236return_value.2 = cast(value=v)
2024-06-06 03:46:40,337 - DEBUG - on stmt: return $236return_value.2
2024-06-06 03:46:40,337 - DEBUG - ==== SSA block analysis pass on 238
2024-06-06 03:46:40,337 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9496c60>
2024-06-06 03:46:40,337 - DEBUG - on stmt: $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>)
2024-06-06 03:46:40,337 - DEBUG - on stmt: $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,337 - DEBUG - on stmt: bool254 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,337 - DEBUG - on stmt: $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,337 - DEBUG - on stmt: branch $254pred, 258, 256
2024-06-06 03:46:40,337 - DEBUG - ==== SSA block analysis pass on 256
2024-06-06 03:46:40,338 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9496c60>
2024-06-06 03:46:40,338 - DEBUG - on stmt: jump 265
2024-06-06 03:46:40,338 - DEBUG - ==== SSA block analysis pass on 258
2024-06-06 03:46:40,338 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9496c60>
2024-06-06 03:46:40,338 - DEBUG - on stmt: max_value = v
2024-06-06 03:46:40,338 - DEBUG - on stmt: jump 265
2024-06-06 03:46:40,338 - DEBUG - ==== SSA block analysis pass on 264
2024-06-06 03:46:40,338 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9496c60>
2024-06-06 03:46:40,338 - DEBUG - on stmt: $268return_value.3 = cast(value=max_value)
2024-06-06 03:46:40,338 - DEBUG - on stmt: return $268return_value.3
2024-06-06 03:46:40,338 - DEBUG - ==== SSA block analysis pass on 265
2024-06-06 03:46:40,338 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9496c60>
2024-06-06 03:46:40,338 - DEBUG - on stmt: jump 176
2024-06-06 03:46:40,341 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100load_global.5': [(<numba.core.ir.Assign object at 0x7fe9b949cd40>,
                                    58)],
             '$112call.8': [(<numba.core.ir.Assign object at 0x7fe9b949cfe0>,
                             58)],
             '$120load_attr.10': [(<numba.core.ir.Assign object at 0x7fe9b949d100>,
                                   58)],
             '$154load_deref.14': [(<numba.core.ir.Assign object at 0x7fe9b949d5e0>,
                                    58)],
             '$158call.16': [(<numba.core.ir.Assign object at 0x7fe9b949d880>,
                              58)],
             '$166pred': [(<numba.core.ir.Assign object at 0x7fe9b949daf0>,
                           58)],
             '$170return_value.1': [(<numba.core.ir.Assign object at 0x7fe9b949dc40>,
                                     168)],
             '$174get_iter.1': [(<numba.core.ir.Assign object at 0x7fe9b949dee0>,
                                 172)],
             '$176for_iter.1': [(<numba.core.ir.Assign object at 0x7fe9b949e180>,
                                 176)],
             '$176for_iter.2': [(<numba.core.ir.Assign object at 0x7fe9b949e2a0>,
                                 176)],
             '$176for_iter.3': [(<numba.core.ir.Assign object at 0x7fe9b949e3c0>,
                                 176)],
             '$184load_attr.4': [(<numba.core.ir.Assign object at 0x7fe9b949e870>,
                                  180)],
             '$216load_deref.7': [(<numba.core.ir.Assign object at 0x7fe9b949ec00>,
                                   180)],
             '$220call.9': [(<numba.core.ir.Assign object at 0x7fe9b949eea0>,
                             180)],
             '$228pred': [(<numba.core.ir.Assign object at 0x7fe9b949f110>,
                           180)],
             '$236return_value.2': [(<numba.core.ir.Assign object at 0x7fe9b949f320>,
                                     230)],
             '$240load_deref.2': [(<numba.core.ir.Assign object at 0x7fe9b949f4a0>,
                                   238)],
             '$246call.5': [(<numba.core.ir.Assign object at 0x7fe9b949f830>,
                             238)],
             '$254pred': [(<numba.core.ir.Assign object at 0x7fe9b949faa0>,
                           238)],
             '$268return_value.3': [(<numba.core.ir.Assign object at 0x7fe9b94a4050>,
                                     264)],
             '$30compare_op.3': [(<numba.core.ir.Assign object at 0x7fe9b9497d70>,
                                  0)],
             '$34pred': [(<numba.core.ir.Assign object at 0x7fe9b949c050>, 0)],
             '$36load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b949c230>,
                                   36)],
             '$48call.3': [(<numba.core.ir.Assign object at 0x7fe9b949c530>,
                            36)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b949c740>,
                                   58)],
             '$68load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b949c890>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x7fe9b9497860>,
                                0)],
             '$const140.11': [(<numba.core.ir.Assign object at 0x7fe9b949d250>,
                               58)],
             '$const28.2': [(<numba.core.ir.Assign object at 0x7fe9b9497bf0>,
                             0)],
             '$const46.2': [(<numba.core.ir.Assign object at 0x7fe9b949c380>,
                             36)],
             '$phi176.0': [(<numba.core.ir.Assign object at 0x7fe9b949cc20>,
                            172)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x7fe9b949e480>,
                            176)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b9497950>, 0)],
             'bool166': [(<numba.core.ir.Assign object at 0x7fe9b949d9d0>, 58)],
             'bool228': [(<numba.core.ir.Assign object at 0x7fe9b949eff0>,
                          180)],
             'bool254': [(<numba.core.ir.Assign object at 0x7fe9b949f980>,
                          238)],
             'bool34': [(<numba.core.ir.Assign object at 0x7fe9b9497ec0>, 0)],
             'it': [(<numba.core.ir.Assign object at 0x7fe9b949cb30>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x7fe9b949d400>,
                            58),
                           (<numba.core.ir.Assign object at 0x7fe9b949fd40>,
                            258)],
             'v': [(<numba.core.ir.Assign object at 0x7fe9b949ea20>, 180)],
             'view': [(<numba.core.ir.Assign object at 0x7fe9b949e630>, 180)]})
2024-06-06 03:46:40,341 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9496c60>
2024-06-06 03:46:40,341 - DEBUG - Fix SSA violator on var max_value
2024-06-06 03:46:40,342 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:40,342 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9496d20>
2024-06-06 03:46:40,342 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:40,342 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-06 03:46:40,342 - DEBUG - on stmt: $const28.2 = const(int, 0)
2024-06-06 03:46:40,342 - DEBUG - on stmt: $30compare_op.3 = $8load_attr.1 == $const28.2
2024-06-06 03:46:40,342 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,342 - DEBUG - on stmt: $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,342 - DEBUG - on stmt: branch $34pred, 36, 58
2024-06-06 03:46:40,342 - DEBUG - ==== SSA block rewrite pass on 36
2024-06-06 03:46:40,342 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9496d20>
2024-06-06 03:46:40,342 - DEBUG - on stmt: $36load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:40,343 - DEBUG - on stmt: $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-06 03:46:40,343 - DEBUG - on stmt: $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,343 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-06 03:46:40,343 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-06 03:46:40,343 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9496d20>
2024-06-06 03:46:40,343 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,343 - DEBUG - on stmt: $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-06 03:46:40,343 - DEBUG - on stmt: it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,343 - DEBUG - on stmt: $100load_global.5 = global(next: <built-in function next>)
2024-06-06 03:46:40,343 - DEBUG - on stmt: $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,344 - DEBUG - on stmt: $120load_attr.10 = getattr(value=$112call.8, attr=take)
2024-06-06 03:46:40,344 - DEBUG - on stmt: $const140.11 = const(int, 0)
2024-06-06 03:46:40,344 - DEBUG - on stmt: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,344 - DEBUG - first assign: max_value
2024-06-06 03:46:40,344 - DEBUG - replaced with: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,344 - DEBUG - on stmt: $154load_deref.14 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>)
2024-06-06 03:46:40,344 - DEBUG - on stmt: $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,344 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,344 - DEBUG - on stmt: $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,344 - DEBUG - on stmt: branch $166pred, 168, 172
2024-06-06 03:46:40,344 - DEBUG - ==== SSA block rewrite pass on 168
2024-06-06 03:46:40,344 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9496d20>
2024-06-06 03:46:40,345 - DEBUG - on stmt: $170return_value.1 = cast(value=max_value)
2024-06-06 03:46:40,345 - DEBUG - on stmt: return $170return_value.1
2024-06-06 03:46:40,345 - DEBUG - ==== SSA block rewrite pass on 172
2024-06-06 03:46:40,345 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9496d20>
2024-06-06 03:46:40,345 - DEBUG - on stmt: $174get_iter.1 = getiter(value=it)
2024-06-06 03:46:40,345 - DEBUG - on stmt: $phi176.0 = $174get_iter.1
2024-06-06 03:46:40,345 - DEBUG - on stmt: jump 176
2024-06-06 03:46:40,345 - DEBUG - ==== SSA block rewrite pass on 176
2024-06-06 03:46:40,345 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9496d20>
2024-06-06 03:46:40,345 - DEBUG - on stmt: $176for_iter.1 = iternext(value=$phi176.0)
2024-06-06 03:46:40,345 - DEBUG - on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
2024-06-06 03:46:40,345 - DEBUG - on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
2024-06-06 03:46:40,345 - DEBUG - on stmt: $phi180.1 = $176for_iter.2
2024-06-06 03:46:40,345 - DEBUG - on stmt: branch $176for_iter.3, 180, 264
2024-06-06 03:46:40,346 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-06 03:46:40,346 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9496d20>
2024-06-06 03:46:40,346 - DEBUG - on stmt: view = $phi180.1
2024-06-06 03:46:40,346 - DEBUG - on stmt: $184load_attr.4 = getattr(value=view, attr=item)
2024-06-06 03:46:40,346 - DEBUG - on stmt: v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,346 - DEBUG - on stmt: $216load_deref.7 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>)
2024-06-06 03:46:40,346 - DEBUG - on stmt: $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,346 - DEBUG - on stmt: bool228 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,346 - DEBUG - on stmt: $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,346 - DEBUG - on stmt: branch $228pred, 230, 238
2024-06-06 03:46:40,346 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:40,346 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9496d20>
2024-06-06 03:46:40,346 - DEBUG - on stmt: $236return_value.2 = cast(value=v)
2024-06-06 03:46:40,347 - DEBUG - on stmt: return $236return_value.2
2024-06-06 03:46:40,347 - DEBUG - ==== SSA block rewrite pass on 238
2024-06-06 03:46:40,347 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9496d20>
2024-06-06 03:46:40,347 - DEBUG - on stmt: $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>)
2024-06-06 03:46:40,347 - DEBUG - on stmt: $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,347 - DEBUG - on stmt: bool254 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,347 - DEBUG - on stmt: $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,347 - DEBUG - on stmt: branch $254pred, 258, 256
2024-06-06 03:46:40,347 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:40,347 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9496d20>
2024-06-06 03:46:40,347 - DEBUG - on stmt: jump 265
2024-06-06 03:46:40,347 - DEBUG - ==== SSA block rewrite pass on 258
2024-06-06 03:46:40,347 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9496d20>
2024-06-06 03:46:40,348 - DEBUG - on stmt: max_value = v
2024-06-06 03:46:40,348 - DEBUG - replaced with: max_value.1 = v
2024-06-06 03:46:40,348 - DEBUG - on stmt: jump 265
2024-06-06 03:46:40,348 - DEBUG - ==== SSA block rewrite pass on 264
2024-06-06 03:46:40,348 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9496d20>
2024-06-06 03:46:40,348 - DEBUG - on stmt: $268return_value.3 = cast(value=max_value)
2024-06-06 03:46:40,348 - DEBUG - on stmt: return $268return_value.3
2024-06-06 03:46:40,348 - DEBUG - ==== SSA block rewrite pass on 265
2024-06-06 03:46:40,348 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9496d20>
2024-06-06 03:46:40,348 - DEBUG - on stmt: jump 176
2024-06-06 03:46:40,348 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x7fe9b9496810>],
             258: [<numba.core.ir.Assign object at 0x7fe9b94a4710>]})
2024-06-06 03:46:40,348 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:40,349 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9496d20>
2024-06-06 03:46:40,349 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:40,349 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-06 03:46:40,349 - DEBUG - on stmt: $const28.2 = const(int, 0)
2024-06-06 03:46:40,349 - DEBUG - on stmt: $30compare_op.3 = $8load_attr.1 == $const28.2
2024-06-06 03:46:40,349 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,349 - DEBUG - on stmt: $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,349 - DEBUG - on stmt: branch $34pred, 36, 58
2024-06-06 03:46:40,349 - DEBUG - ==== SSA block rewrite pass on 36
2024-06-06 03:46:40,349 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9496d20>
2024-06-06 03:46:40,349 - DEBUG - on stmt: $36load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:40,349 - DEBUG - on stmt: $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-06 03:46:40,350 - DEBUG - on stmt: $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,350 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-06 03:46:40,350 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-06 03:46:40,350 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9496d20>
2024-06-06 03:46:40,350 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,350 - DEBUG - on stmt: $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-06 03:46:40,350 - DEBUG - on stmt: it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,350 - DEBUG - on stmt: $100load_global.5 = global(next: <built-in function next>)
2024-06-06 03:46:40,350 - DEBUG - on stmt: $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,350 - DEBUG - on stmt: $120load_attr.10 = getattr(value=$112call.8, attr=take)
2024-06-06 03:46:40,350 - DEBUG - on stmt: $const140.11 = const(int, 0)
2024-06-06 03:46:40,350 - DEBUG - on stmt: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,351 - DEBUG - on stmt: $154load_deref.14 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>)
2024-06-06 03:46:40,351 - DEBUG - on stmt: $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,351 - DEBUG - find_def var='max_value' stmt=$158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,351 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,351 - DEBUG - on stmt: $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,351 - DEBUG - on stmt: branch $166pred, 168, 172
2024-06-06 03:46:40,351 - DEBUG - ==== SSA block rewrite pass on 168
2024-06-06 03:46:40,351 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9496d20>
2024-06-06 03:46:40,351 - DEBUG - on stmt: $170return_value.1 = cast(value=max_value)
2024-06-06 03:46:40,351 - DEBUG - find_def var='max_value' stmt=$170return_value.1 = cast(value=max_value)
2024-06-06 03:46:40,351 - DEBUG - find_def_from_top label 168
2024-06-06 03:46:40,352 - DEBUG - idom 58 from label 168
2024-06-06 03:46:40,352 - DEBUG - find_def_from_bottom label 58
2024-06-06 03:46:40,352 - DEBUG - on stmt: return $170return_value.1
2024-06-06 03:46:40,352 - DEBUG - ==== SSA block rewrite pass on 172
2024-06-06 03:46:40,352 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9496d20>
2024-06-06 03:46:40,352 - DEBUG - on stmt: $174get_iter.1 = getiter(value=it)
2024-06-06 03:46:40,352 - DEBUG - on stmt: $phi176.0 = $174get_iter.1
2024-06-06 03:46:40,352 - DEBUG - on stmt: jump 176
2024-06-06 03:46:40,352 - DEBUG - ==== SSA block rewrite pass on 176
2024-06-06 03:46:40,352 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9496d20>
2024-06-06 03:46:40,352 - DEBUG - on stmt: $176for_iter.1 = iternext(value=$phi176.0)
2024-06-06 03:46:40,352 - DEBUG - on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
2024-06-06 03:46:40,352 - DEBUG - on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
2024-06-06 03:46:40,353 - DEBUG - on stmt: $phi180.1 = $176for_iter.2
2024-06-06 03:46:40,353 - DEBUG - on stmt: branch $176for_iter.3, 180, 264
2024-06-06 03:46:40,353 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-06 03:46:40,353 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9496d20>
2024-06-06 03:46:40,353 - DEBUG - on stmt: view = $phi180.1
2024-06-06 03:46:40,353 - DEBUG - on stmt: $184load_attr.4 = getattr(value=view, attr=item)
2024-06-06 03:46:40,353 - DEBUG - on stmt: v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,353 - DEBUG - on stmt: $216load_deref.7 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>)
2024-06-06 03:46:40,353 - DEBUG - on stmt: $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,353 - DEBUG - on stmt: bool228 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,353 - DEBUG - on stmt: $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,353 - DEBUG - on stmt: branch $228pred, 230, 238
2024-06-06 03:46:40,354 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:40,354 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9496d20>
2024-06-06 03:46:40,354 - DEBUG - on stmt: $236return_value.2 = cast(value=v)
2024-06-06 03:46:40,354 - DEBUG - on stmt: return $236return_value.2
2024-06-06 03:46:40,354 - DEBUG - ==== SSA block rewrite pass on 238
2024-06-06 03:46:40,354 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9496d20>
2024-06-06 03:46:40,354 - DEBUG - on stmt: $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>)
2024-06-06 03:46:40,354 - DEBUG - on stmt: $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,354 - DEBUG - find_def var='max_value' stmt=$246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,355 - DEBUG - find_def_from_top label 238
2024-06-06 03:46:40,355 - DEBUG - idom 180 from label 238
2024-06-06 03:46:40,355 - DEBUG - find_def_from_bottom label 180
2024-06-06 03:46:40,355 - DEBUG - find_def_from_top label 180
2024-06-06 03:46:40,355 - DEBUG - idom 176 from label 180
2024-06-06 03:46:40,355 - DEBUG - find_def_from_bottom label 176
2024-06-06 03:46:40,355 - DEBUG - find_def_from_top label 176
2024-06-06 03:46:40,355 - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 176
2024-06-06 03:46:40,356 - DEBUG - find_def_from_bottom label 265
2024-06-06 03:46:40,356 - DEBUG - find_def_from_top label 265
2024-06-06 03:46:40,356 - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 265
2024-06-06 03:46:40,356 - DEBUG - find_def_from_bottom label 256
2024-06-06 03:46:40,356 - DEBUG - find_def_from_top label 256
2024-06-06 03:46:40,356 - DEBUG - idom 238 from label 256
2024-06-06 03:46:40,357 - DEBUG - find_def_from_bottom label 238
2024-06-06 03:46:40,357 - DEBUG - find_def_from_top label 238
2024-06-06 03:46:40,357 - DEBUG - idom 180 from label 238
2024-06-06 03:46:40,357 - DEBUG - find_def_from_bottom label 180
2024-06-06 03:46:40,357 - DEBUG - find_def_from_top label 180
2024-06-06 03:46:40,357 - DEBUG - idom 176 from label 180
2024-06-06 03:46:40,357 - DEBUG - find_def_from_bottom label 176
2024-06-06 03:46:40,357 - DEBUG - incoming_def max_value.2 = phi(incoming_values=[], incoming_blocks=[])
2024-06-06 03:46:40,357 - DEBUG - find_def_from_bottom label 258
2024-06-06 03:46:40,357 - DEBUG - incoming_def max_value.1 = v
2024-06-06 03:46:40,358 - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.2, arraymath.py:584), Var(max_value.1, arraymath.py:585)], incoming_blocks=[256, 258])
2024-06-06 03:46:40,358 - DEBUG - find_def_from_bottom label 172
2024-06-06 03:46:40,358 - DEBUG - find_def_from_top label 172
2024-06-06 03:46:40,358 - DEBUG - idom 58 from label 172
2024-06-06 03:46:40,358 - DEBUG - find_def_from_bottom label 58
2024-06-06 03:46:40,358 - DEBUG - incoming_def max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,358 - DEBUG - replaced with: $246call.5 = call $240load_deref.2(v, max_value.2, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,359 - DEBUG - on stmt: bool254 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,359 - DEBUG - on stmt: $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,359 - DEBUG - on stmt: branch $254pred, 258, 256
2024-06-06 03:46:40,359 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:40,359 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9496d20>
2024-06-06 03:46:40,359 - DEBUG - on stmt: jump 265
2024-06-06 03:46:40,359 - DEBUG - ==== SSA block rewrite pass on 258
2024-06-06 03:46:40,359 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9496d20>
2024-06-06 03:46:40,359 - DEBUG - on stmt: max_value.1 = v
2024-06-06 03:46:40,359 - DEBUG - on stmt: jump 265
2024-06-06 03:46:40,359 - DEBUG - ==== SSA block rewrite pass on 264
2024-06-06 03:46:40,359 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9496d20>
2024-06-06 03:46:40,359 - DEBUG - on stmt: $268return_value.3 = cast(value=max_value)
2024-06-06 03:46:40,360 - DEBUG - find_def var='max_value' stmt=$268return_value.3 = cast(value=max_value)
2024-06-06 03:46:40,360 - DEBUG - find_def_from_top label 264
2024-06-06 03:46:40,360 - DEBUG - idom 176 from label 264
2024-06-06 03:46:40,360 - DEBUG - find_def_from_bottom label 176
2024-06-06 03:46:40,360 - DEBUG - replaced with: $268return_value.3 = cast(value=max_value.2)
2024-06-06 03:46:40,360 - DEBUG - on stmt: return $268return_value.3
2024-06-06 03:46:40,360 - DEBUG - ==== SSA block rewrite pass on 265
2024-06-06 03:46:40,360 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9496d20>
2024-06-06 03:46:40,360 - DEBUG - on stmt: jump 176
2024-06-06 03:46:40,366 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4680)
           2	RESUME(arg=0, lineno=4680)
           4	LOAD_FAST(arg=1, lineno=4681)
           6	LOAD_FAST(arg=0, lineno=4681)
           8	LOAD_ATTR(arg=0, lineno=4681)
          28	LOAD_CONST(arg=1, lineno=4681)
          30	BINARY_OP(arg=10, lineno=4681)
          34	COMPARE_OP(arg=68, lineno=4681)
          38	POP_JUMP_IF_TRUE(arg=16, lineno=4681)
          40	LOAD_FAST(arg=1, lineno=4681)
          42	LOAD_FAST(arg=0, lineno=4681)
          44	LOAD_ATTR(arg=0, lineno=4681)
          64	UNARY_NEGATIVE(arg=None, lineno=4681)
          66	COMPARE_OP(arg=2, lineno=4681)
          70	POP_JUMP_IF_FALSE(arg=11, lineno=4681)
>         72	LOAD_GLOBAL(arg=3, lineno=4682)
          82	LOAD_CONST(arg=2, lineno=4682)
          84	CALL(arg=1, lineno=4682)
          92	RAISE_VARARGS(arg=1, lineno=4682)
>         94	LOAD_FAST(arg=0, lineno=4683)
          96	LOAD_ATTR(arg=5, lineno=4683)
         116	CALL(arg=0, lineno=4683)
         124	LOAD_FAST(arg=1, lineno=4683)
         126	BINARY_SUBSCR(arg=None, lineno=4683)
         130	RETURN_VALUE(arg=None, lineno=4683)
2024-06-06 03:46:40,366 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:40,366 - DEBUG - stack: []
2024-06-06 03:46:40,366 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:40,366 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4680)
2024-06-06 03:46:40,366 - DEBUG - stack []
2024-06-06 03:46:40,366 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4680)
2024-06-06 03:46:40,367 - DEBUG - stack []
2024-06-06 03:46:40,367 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4681)
2024-06-06 03:46:40,367 - DEBUG - stack []
2024-06-06 03:46:40,367 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4681)
2024-06-06 03:46:40,367 - DEBUG - stack ['$indices4.0']
2024-06-06 03:46:40,367 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4681)
2024-06-06 03:46:40,367 - DEBUG - stack ['$indices4.0', '$a6.1']
2024-06-06 03:46:40,367 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=4681)
2024-06-06 03:46:40,367 - DEBUG - stack ['$indices4.0', '$8load_attr.2']
2024-06-06 03:46:40,367 - DEBUG - dispatch pc=30, inst=BINARY_OP(arg=10, lineno=4681)
2024-06-06 03:46:40,367 - DEBUG - stack ['$indices4.0', '$8load_attr.2', '$const28.3']
2024-06-06 03:46:40,367 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=68, lineno=4681)
2024-06-06 03:46:40,367 - DEBUG - stack ['$indices4.0', '$binop_sub30.4']
2024-06-06 03:46:40,368 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_TRUE(arg=16, lineno=4681)
2024-06-06 03:46:40,368 - DEBUG - stack ['$34compare_op.5']
2024-06-06 03:46:40,368 - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=72, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:40,368 - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=72 nstack_initial=0)])
2024-06-06 03:46:40,368 - DEBUG - stack: []
2024-06-06 03:46:40,368 - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2024-06-06 03:46:40,368 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=4681)
2024-06-06 03:46:40,368 - DEBUG - stack []
2024-06-06 03:46:40,368 - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=4681)
2024-06-06 03:46:40,368 - DEBUG - stack ['$indices40.0']
2024-06-06 03:46:40,368 - DEBUG - dispatch pc=44, inst=LOAD_ATTR(arg=0, lineno=4681)
2024-06-06 03:46:40,368 - DEBUG - stack ['$indices40.0', '$a42.1']
2024-06-06 03:46:40,368 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=4681)
2024-06-06 03:46:40,369 - DEBUG - stack ['$indices40.0', '$44load_attr.2']
2024-06-06 03:46:40,369 - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=2, lineno=4681)
2024-06-06 03:46:40,369 - DEBUG - stack ['$indices40.0', '$64unary_negative.3']
2024-06-06 03:46:40,369 - DEBUG - dispatch pc=70, inst=POP_JUMP_IF_FALSE(arg=11, lineno=4681)
2024-06-06 03:46:40,369 - DEBUG - stack ['$66compare_op.4']
2024-06-06 03:46:40,369 - DEBUG - end state. edges=[Edge(pc=72, stack=(), blockstack=(), npush=0), Edge(pc=94, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:40,369 - DEBUG - pending: deque([State(pc_initial=72 nstack_initial=0), State(pc_initial=72 nstack_initial=0), State(pc_initial=94 nstack_initial=0)])
2024-06-06 03:46:40,369 - DEBUG - stack: []
2024-06-06 03:46:40,369 - DEBUG - state.pc_initial: State(pc_initial=72 nstack_initial=0)
2024-06-06 03:46:40,369 - DEBUG - dispatch pc=72, inst=LOAD_GLOBAL(arg=3, lineno=4682)
2024-06-06 03:46:40,369 - DEBUG - stack []
2024-06-06 03:46:40,369 - DEBUG - dispatch pc=82, inst=LOAD_CONST(arg=2, lineno=4682)
2024-06-06 03:46:40,369 - DEBUG - stack ['$null$72.1', '$72load_global.0']
2024-06-06 03:46:40,370 - DEBUG - dispatch pc=84, inst=CALL(arg=1, lineno=4682)
2024-06-06 03:46:40,370 - DEBUG - stack ['$null$72.1', '$72load_global.0', '$const82.2']
2024-06-06 03:46:40,370 - DEBUG - dispatch pc=92, inst=RAISE_VARARGS(arg=1, lineno=4682)
2024-06-06 03:46:40,370 - DEBUG - stack ['$84call.3']
2024-06-06 03:46:40,370 - DEBUG - end state. edges=[]
2024-06-06 03:46:40,370 - DEBUG - pending: deque([State(pc_initial=72 nstack_initial=0), State(pc_initial=94 nstack_initial=0)])
2024-06-06 03:46:40,370 - DEBUG - pending: deque([State(pc_initial=94 nstack_initial=0)])
2024-06-06 03:46:40,370 - DEBUG - stack: []
2024-06-06 03:46:40,370 - DEBUG - state.pc_initial: State(pc_initial=94 nstack_initial=0)
2024-06-06 03:46:40,370 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=4683)
2024-06-06 03:46:40,370 - DEBUG - stack []
2024-06-06 03:46:40,371 - DEBUG - dispatch pc=96, inst=LOAD_ATTR(arg=5, lineno=4683)
2024-06-06 03:46:40,371 - DEBUG - stack ['$a94.0']
2024-06-06 03:46:40,371 - DEBUG - dispatch pc=116, inst=CALL(arg=0, lineno=4683)
2024-06-06 03:46:40,371 - DEBUG - stack ['$null$96.1', '$96load_attr.2']
2024-06-06 03:46:40,371 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4683)
2024-06-06 03:46:40,371 - DEBUG - stack ['$116call.3']
2024-06-06 03:46:40,371 - DEBUG - dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4683)
2024-06-06 03:46:40,371 - DEBUG - stack ['$116call.3', '$indices124.4']
2024-06-06 03:46:40,371 - DEBUG - dispatch pc=130, inst=RETURN_VALUE(arg=None, lineno=4683)
2024-06-06 03:46:40,371 - DEBUG - stack ['$126binary_subscr.5']
2024-06-06 03:46:40,371 - DEBUG - end state. edges=[]
2024-06-06 03:46:40,371 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:40,372 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=72 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set()})
2024-06-06 03:46:40,372 - DEBUG - defmap: {}
2024-06-06 03:46:40,372 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:40,372 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:40,372 - DEBUG - keep phismap: {}
2024-06-06 03:46:40,372 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:40,372 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:40,372 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (28, {'res': '$const28.3'}), (30, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const28.3', 'res': '$binop_sub30.4'}), (34, {'lhs': '$indices4.0', 'rhs': '$binop_sub30.4', 'res': '$34compare_op.5'}), (38, {'pred': '$34compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 72: ()})
2024-06-06 03:46:40,372 - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$indices40.0'}), (42, {'res': '$a42.1'}), (44, {'item': '$a42.1', 'res': '$44load_attr.2'}), (64, {'value': '$44load_attr.2', 'res': '$64unary_negative.3'}), (66, {'lhs': '$indices40.0', 'rhs': '$64unary_negative.3', 'res': '$66compare_op.4'}), (70, {'pred': '$66compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={72: (), 94: ()})
2024-06-06 03:46:40,373 - DEBUG - block_infos State(pc_initial=72 nstack_initial=0):
AdaptBlockInfo(insts=((72, {'idx': 1, 'res': '$72load_global.0'}), (82, {'res': '$const82.2'}), (84, {'func': '$72load_global.0', 'args': ['$const82.2'], 'kw_names': None, 'res': '$84call.3'}), (92, {'exc': '$84call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:40,373 - DEBUG - block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$a94.0'}), (96, {'item': '$a94.0', 'res': '$96load_attr.2'}), (116, {'func': '$96load_attr.2', 'args': [], 'kw_names': None, 'res': '$116call.3'}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$116call.3', 'res': '$126binary_subscr.5'}), (130, {'retval': '$126binary_subscr.5', 'castval': '$130return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:40,374 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const28.3 = const(int, 1)               ['$const28.3']
    $binop_sub30.4 = $8load_attr.2 - $const28.3 ['$8load_attr.2', '$binop_sub30.4', '$const28.3']
    $34compare_op.5 = indices > $binop_sub30.4 ['$34compare_op.5', '$binop_sub30.4', 'indices']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
    $38pred = call bool38($34compare_op.5, func=bool38, args=(Var($34compare_op.5, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.5', '$38pred', 'bool38']
    branch $38pred, 72, 40                   ['$38pred']
label 40:
    $44load_attr.2 = getattr(value=a, attr=size) ['$44load_attr.2', 'a']
    $64unary_negative.3 = unary(fn=<built-in function neg>, value=$44load_attr.2) ['$44load_attr.2', '$64unary_negative.3']
    $66compare_op.4 = indices < $64unary_negative.3 ['$64unary_negative.3', '$66compare_op.4', 'indices']
    bool70 = global(bool: <class 'bool'>)    ['bool70']
    $70pred = call bool70($66compare_op.4, func=bool70, args=(Var($66compare_op.4, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.4', '$70pred', 'bool70']
    branch $70pred, 72, 94                   ['$70pred']
label 72:
    $72load_global.0 = global(IndexError: <class 'IndexError'>) ['$72load_global.0']
    $const82.2 = const(str, Index out of bounds) ['$const82.2']
    $84call.3 = call $72load_global.0($const82.2, func=$72load_global.0, args=[Var($const82.2, arrayobj.py:4682)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_global.0', '$84call.3', '$const82.2']
    raise $84call.3                          ['$84call.3']
label 94:
    $96load_attr.2 = getattr(value=a, attr=ravel) ['$96load_attr.2', 'a']
    $116call.3 = call $96load_attr.2(func=$96load_attr.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.3', '$96load_attr.2']
    $126binary_subscr.5 = getitem(value=$116call.3, index=indices, fn=<built-in function getitem>) ['$116call.3', '$126binary_subscr.5', 'indices']
    $130return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$130return_value.6']
    return $130return_value.6                ['$130return_value.6']

2024-06-06 03:46:40,381 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:40,381 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b94b1550>
2024-06-06 03:46:40,381 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:40,381 - DEBUG - on stmt: indices = arg(1, name=indices)
2024-06-06 03:46:40,381 - DEBUG - on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-06-06 03:46:40,381 - DEBUG - on stmt: $const28.3 = const(int, 1)
2024-06-06 03:46:40,381 - DEBUG - on stmt: $binop_sub30.4 = $8load_attr.2 - $const28.3
2024-06-06 03:46:40,382 - DEBUG - on stmt: $34compare_op.5 = indices > $binop_sub30.4
2024-06-06 03:46:40,382 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,382 - DEBUG - on stmt: $38pred = call bool38($34compare_op.5, func=bool38, args=(Var($34compare_op.5, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,382 - DEBUG - on stmt: branch $38pred, 72, 40
2024-06-06 03:46:40,382 - DEBUG - ==== SSA block analysis pass on 40
2024-06-06 03:46:40,382 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b94b1550>
2024-06-06 03:46:40,382 - DEBUG - on stmt: $44load_attr.2 = getattr(value=a, attr=size)
2024-06-06 03:46:40,382 - DEBUG - on stmt: $64unary_negative.3 = unary(fn=<built-in function neg>, value=$44load_attr.2)
2024-06-06 03:46:40,382 - DEBUG - on stmt: $66compare_op.4 = indices < $64unary_negative.3
2024-06-06 03:46:40,382 - DEBUG - on stmt: bool70 = global(bool: <class 'bool'>)
2024-06-06 03:46:40,382 - DEBUG - on stmt: $70pred = call bool70($66compare_op.4, func=bool70, args=(Var($66compare_op.4, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,383 - DEBUG - on stmt: branch $70pred, 72, 94
2024-06-06 03:46:40,383 - DEBUG - ==== SSA block analysis pass on 72
2024-06-06 03:46:40,383 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b94b1550>
2024-06-06 03:46:40,383 - DEBUG - on stmt: $72load_global.0 = global(IndexError: <class 'IndexError'>)
2024-06-06 03:46:40,383 - DEBUG - on stmt: $const82.2 = const(str, Index out of bounds)
2024-06-06 03:46:40,383 - DEBUG - on stmt: $84call.3 = call $72load_global.0($const82.2, func=$72load_global.0, args=[Var($const82.2, arrayobj.py:4682)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,383 - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-06-06 03:46:40,383 - DEBUG - ==== SSA block analysis pass on 94
2024-06-06 03:46:40,383 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b94b1550>
2024-06-06 03:46:40,383 - DEBUG - on stmt: $96load_attr.2 = getattr(value=a, attr=ravel)
2024-06-06 03:46:40,383 - DEBUG - on stmt: $116call.3 = call $96load_attr.2(func=$96load_attr.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,384 - DEBUG - on stmt: $126binary_subscr.5 = getitem(value=$116call.3, index=indices, fn=<built-in function getitem>)
2024-06-06 03:46:40,384 - DEBUG - on stmt: $130return_value.6 = cast(value=$126binary_subscr.5)
2024-06-06 03:46:40,384 - DEBUG - on stmt: return $130return_value.6
2024-06-06 03:46:40,384 - DEBUG - defs defaultdict(<class 'list'>,
            {'$116call.3': [(<numba.core.ir.Assign object at 0x7fe9b94b0ad0>,
                             94)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x7fe9b94b0d10>,
                                      94)],
             '$130return_value.6': [(<numba.core.ir.Assign object at 0x7fe9b94b0e30>,
                                     94)],
             '$34compare_op.5': [(<numba.core.ir.Assign object at 0x7fe9b94a7650>,
                                  0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x7fe9b94a78f0>, 0)],
             '$44load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b94a7c50>,
                                 40)],
             '$64unary_negative.3': [(<numba.core.ir.Assign object at 0x7fe9b94a7d70>,
                                      40)],
             '$66compare_op.4': [(<numba.core.ir.Assign object at 0x7fe9b94a7ef0>,
                                  40)],
             '$70pred': [(<numba.core.ir.Assign object at 0x7fe9b94b01a0>, 40)],
             '$72load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b94b0320>,
                                   72)],
             '$84call.3': [(<numba.core.ir.Assign object at 0x7fe9b94b0620>,
                            72)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b94a7230>,
                                0)],
             '$96load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b94b0920>,
                                 94)],
             '$binop_sub30.4': [(<numba.core.ir.Assign object at 0x7fe9b94a7500>,
                                 0)],
             '$const28.3': [(<numba.core.ir.Assign object at 0x7fe9b94a7380>,
                             0)],
             '$const82.2': [(<numba.core.ir.Assign object at 0x7fe9b94b0470>,
                             72)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b94a6f30>, 0)],
             'bool38': [(<numba.core.ir.Assign object at 0x7fe9b94a77a0>, 0)],
             'bool70': [(<numba.core.ir.Assign object at 0x7fe9b94b0050>, 40)],
             'indices': [(<numba.core.ir.Assign object at 0x7fe9b94a6de0>, 0)]})
2024-06-06 03:46:40,385 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b94b1550>
2024-06-06 03:46:40,404 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2229)
           2	RESUME(arg=0, lineno=2229)
           4	LOAD_FAST(arg=0, lineno=2231)
           6	LOAD_ATTR(arg=1, lineno=2231)
          26	LOAD_FAST(arg=0, lineno=2231)
          28	LOAD_ATTR(arg=2, lineno=2231)
          48	CALL(arg=1, lineno=2231)
          56	RETURN_VALUE(arg=None, lineno=2231)
2024-06-06 03:46:40,404 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:40,404 - DEBUG - stack: []
2024-06-06 03:46:40,404 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:40,404 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2229)
2024-06-06 03:46:40,404 - DEBUG - stack []
2024-06-06 03:46:40,405 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2229)
2024-06-06 03:46:40,405 - DEBUG - stack []
2024-06-06 03:46:40,405 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2231)
2024-06-06 03:46:40,405 - DEBUG - stack []
2024-06-06 03:46:40,405 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=2231)
2024-06-06 03:46:40,405 - DEBUG - stack ['$ary4.0']
2024-06-06 03:46:40,405 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=2231)
2024-06-06 03:46:40,405 - DEBUG - stack ['$null$6.1', '$6load_attr.2']
2024-06-06 03:46:40,405 - DEBUG - dispatch pc=28, inst=LOAD_ATTR(arg=2, lineno=2231)
2024-06-06 03:46:40,405 - DEBUG - stack ['$null$6.1', '$6load_attr.2', '$ary26.3']
2024-06-06 03:46:40,405 - DEBUG - dispatch pc=48, inst=CALL(arg=1, lineno=2231)
2024-06-06 03:46:40,405 - DEBUG - stack ['$null$6.1', '$6load_attr.2', '$28load_attr.4']
2024-06-06 03:46:40,405 - DEBUG - dispatch pc=56, inst=RETURN_VALUE(arg=None, lineno=2231)
2024-06-06 03:46:40,406 - DEBUG - stack ['$48call.5']
2024-06-06 03:46:40,406 - DEBUG - end state. edges=[]
2024-06-06 03:46:40,406 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:40,406 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:40,406 - DEBUG - defmap: {}
2024-06-06 03:46:40,406 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:40,406 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:40,406 - DEBUG - keep phismap: {}
2024-06-06 03:46:40,406 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:40,406 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:40,406 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_attr.2'}), (26, {'res': '$ary26.3'}), (28, {'item': '$ary26.3', 'res': '$28load_attr.4'}), (48, {'func': '$6load_attr.2', 'args': ['$28load_attr.4'], 'kw_names': None, 'res': '$48call.5'}), (56, {'retval': '$48call.5', 'castval': '$56return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:40,407 - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_attr.2 = getattr(value=ary, attr=reshape) ['$6load_attr.2', 'ary']
    $28load_attr.4 = getattr(value=ary, attr=size) ['$28load_attr.4', 'ary']
    $48call.5 = call $6load_attr.2($28load_attr.4, func=$6load_attr.2, args=[Var($28load_attr.4, arrayobj.py:2231)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_attr.4', '$48call.5', '$6load_attr.2']
    $56return_value.6 = cast(value=$48call.5) ['$48call.5', '$56return_value.6']
    return $56return_value.6                 ['$56return_value.6']

2024-06-06 03:46:40,411 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:40,412 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b94bf9b0>
2024-06-06 03:46:40,412 - DEBUG - on stmt: ary = arg(0, name=ary)
2024-06-06 03:46:40,412 - DEBUG - on stmt: $6load_attr.2 = getattr(value=ary, attr=reshape)
2024-06-06 03:46:40,412 - DEBUG - on stmt: $28load_attr.4 = getattr(value=ary, attr=size)
2024-06-06 03:46:40,412 - DEBUG - on stmt: $48call.5 = call $6load_attr.2($28load_attr.4, func=$6load_attr.2, args=[Var($28load_attr.4, arrayobj.py:2231)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,412 - DEBUG - on stmt: $56return_value.6 = cast(value=$48call.5)
2024-06-06 03:46:40,412 - DEBUG - on stmt: return $56return_value.6
2024-06-06 03:46:40,412 - DEBUG - defs defaultdict(<class 'list'>,
            {'$28load_attr.4': [(<numba.core.ir.Assign object at 0x7fe9b94bebd0>,
                                 0)],
             '$48call.5': [(<numba.core.ir.Assign object at 0x7fe9b94bed80>,
                            0)],
             '$56return_value.6': [(<numba.core.ir.Assign object at 0x7fe9b94beea0>,
                                    0)],
             '$6load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b94be870>,
                                0)],
             'ary': [(<numba.core.ir.Assign object at 0x7fe9b94be7e0>, 0)]})
2024-06-06 03:46:40,412 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b94bf9b0>
2024-06-06 03:46:40,492 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=486)
           2	RESUME(arg=0, lineno=486)
           4	RETURN_CONST(arg=1, lineno=488)
2024-06-06 03:46:40,492 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:40,492 - DEBUG - stack: []
2024-06-06 03:46:40,492 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:40,492 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=486)
2024-06-06 03:46:40,492 - DEBUG - stack []
2024-06-06 03:46:40,493 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=486)
2024-06-06 03:46:40,493 - DEBUG - stack []
2024-06-06 03:46:40,493 - DEBUG - dispatch pc=4, inst=RETURN_CONST(arg=1, lineno=488)
2024-06-06 03:46:40,493 - DEBUG - stack []
2024-06-06 03:46:40,493 - DEBUG - end state. edges=[]
2024-06-06 03:46:40,493 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:40,493 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:40,493 - DEBUG - defmap: {}
2024-06-06 03:46:40,493 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:40,493 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:40,494 - DEBUG - keep phismap: {}
2024-06-06 03:46:40,494 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:40,494 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:40,494 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'retval': '$const4.0', 'castval': '$4return_const.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:40,494 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $const4.0 = const(bool, False)           ['$const4.0']
    $4return_const.1 = cast(value=$const4.0) ['$4return_const.1', '$const4.0']
    return $4return_const.1                  ['$4return_const.1']

2024-06-06 03:46:40,498 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:40,499 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b94d2360>
2024-06-06 03:46:40,499 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:40,499 - DEBUG - on stmt: $const4.0 = const(bool, False)
2024-06-06 03:46:40,499 - DEBUG - on stmt: $4return_const.1 = cast(value=$const4.0)
2024-06-06 03:46:40,499 - DEBUG - on stmt: return $4return_const.1
2024-06-06 03:46:40,499 - DEBUG - defs defaultdict(<class 'list'>,
            {'$4return_const.1': [(<numba.core.ir.Assign object at 0x7fe9b94d3230>,
                                   0)],
             '$const4.0': [(<numba.core.ir.Assign object at 0x7fe9b94d2c90>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b94d2a80>, 0)]})
2024-06-06 03:46:40,499 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b94d2360>
2024-06-06 03:46:40,520 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=68, lineno=483)
          12	RETURN_VALUE(arg=None, lineno=483)
2024-06-06 03:46:40,520 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:40,520 - DEBUG - stack: []
2024-06-06 03:46:40,520 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:40,520 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-06-06 03:46:40,520 - DEBUG - stack []
2024-06-06 03:46:40,520 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-06-06 03:46:40,521 - DEBUG - stack []
2024-06-06 03:46:40,521 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-06-06 03:46:40,521 - DEBUG - stack []
2024-06-06 03:46:40,521 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-06-06 03:46:40,521 - DEBUG - stack ['$a4.0']
2024-06-06 03:46:40,521 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=68, lineno=483)
2024-06-06 03:46:40,521 - DEBUG - stack ['$a4.0', '$min_val6.1']
2024-06-06 03:46:40,521 - DEBUG - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=483)
2024-06-06 03:46:40,521 - DEBUG - stack ['$8compare_op.2']
2024-06-06 03:46:40,521 - DEBUG - end state. edges=[]
2024-06-06 03:46:40,521 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:40,521 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:40,521 - DEBUG - defmap: {}
2024-06-06 03:46:40,522 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:40,522 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:40,522 - DEBUG - keep phismap: {}
2024-06-06 03:46:40,522 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:40,522 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:40,522 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (12, {'retval': '$8compare_op.2', 'castval': '$12return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:40,522 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $12return_value.3 = cast(value=$8compare_op.2) ['$12return_value.3', '$8compare_op.2']
    return $12return_value.3                 ['$12return_value.3']

2024-06-06 03:46:40,527 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:40,527 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9526ed0>
2024-06-06 03:46:40,527 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:40,527 - DEBUG - on stmt: min_val = arg(1, name=min_val)
2024-06-06 03:46:40,527 - DEBUG - on stmt: $8compare_op.2 = a > min_val
2024-06-06 03:46:40,528 - DEBUG - on stmt: $12return_value.3 = cast(value=$8compare_op.2)
2024-06-06 03:46:40,528 - DEBUG - on stmt: return $12return_value.3
2024-06-06 03:46:40,528 - DEBUG - defs defaultdict(<class 'list'>,
            {'$12return_value.3': [(<numba.core.ir.Assign object at 0x7fe9b95265a0>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x7fe9b9526480>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b9525fd0>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7fe9b9525730>, 0)]})
2024-06-06 03:46:40,528 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9526ed0>
2024-06-06 03:46:40,670 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          20	LOAD_ATTR(arg=2, lineno=441)
          40	LOAD_FAST(arg=0, lineno=441)
          42	CALL(arg=1, lineno=441)
          50	GET_ITER(arg=None, lineno=441)
>         52	FOR_ITER(arg=21, lineno=441)
          56	STORE_FAST(arg=2, lineno=441)
          58	LOAD_FAST(arg=1, lineno=442)
          60	LOAD_FAST(arg=2, lineno=442)
          62	LOAD_ATTR(arg=5, lineno=442)
          82	CALL(arg=0, lineno=442)
          90	BINARY_OP(arg=13, lineno=442)
          94	STORE_FAST(arg=1, lineno=442)
          96	JUMP_BACKWARD(arg=23, lineno=442)
>         98	END_FOR(arg=None, lineno=441)
         100	LOAD_FAST(arg=1, lineno=443)
         102	LOAD_FAST(arg=0, lineno=443)
         104	LOAD_ATTR(arg=6, lineno=443)
         124	BINARY_OP(arg=11, lineno=443)
         128	RETURN_VALUE(arg=None, lineno=443)
2024-06-06 03:46:40,670 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:40,670 - DEBUG - stack: []
2024-06-06 03:46:40,670 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:40,670 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-06-06 03:46:40,670 - DEBUG - stack []
2024-06-06 03:46:40,671 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-06-06 03:46:40,671 - DEBUG - stack []
2024-06-06 03:46:40,671 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-06-06 03:46:40,671 - DEBUG - stack []
2024-06-06 03:46:40,671 - DEBUG - dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-06-06 03:46:40,671 - DEBUG - stack []
2024-06-06 03:46:40,671 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-06-06 03:46:40,671 - DEBUG - stack ['$6load_deref.0']
2024-06-06 03:46:40,671 - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-06-06 03:46:40,671 - DEBUG - stack []
2024-06-06 03:46:40,671 - DEBUG - dispatch pc=20, inst=LOAD_ATTR(arg=2, lineno=441)
2024-06-06 03:46:40,671 - DEBUG - stack ['$null$10.2', '$10load_global.1']
2024-06-06 03:46:40,672 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=441)
2024-06-06 03:46:40,672 - DEBUG - stack ['$null$10.2', '$20load_attr.3']
2024-06-06 03:46:40,672 - DEBUG - dispatch pc=42, inst=CALL(arg=1, lineno=441)
2024-06-06 03:46:40,672 - DEBUG - stack ['$null$10.2', '$20load_attr.3', '$a40.4']
2024-06-06 03:46:40,672 - DEBUG - dispatch pc=50, inst=GET_ITER(arg=None, lineno=441)
2024-06-06 03:46:40,672 - DEBUG - stack ['$42call.5']
2024-06-06 03:46:40,672 - DEBUG - end state. edges=[Edge(pc=52, stack=('$50get_iter.6',), blockstack=(), npush=0)]
2024-06-06 03:46:40,672 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=1)])
2024-06-06 03:46:40,672 - DEBUG - stack: ['$phi52.0']
2024-06-06 03:46:40,672 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=1)
2024-06-06 03:46:40,672 - DEBUG - dispatch pc=52, inst=FOR_ITER(arg=21, lineno=441)
2024-06-06 03:46:40,672 - DEBUG - stack ['$phi52.0']
2024-06-06 03:46:40,673 - DEBUG - end state. edges=[Edge(pc=98, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0), Edge(pc=56, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:40,673 - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=2), State(pc_initial=56 nstack_initial=2)])
2024-06-06 03:46:40,673 - DEBUG - stack: ['$phi98.0', '$phi98.1']
2024-06-06 03:46:40,673 - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=2)
2024-06-06 03:46:40,673 - DEBUG - dispatch pc=98, inst=END_FOR(arg=None, lineno=441)
2024-06-06 03:46:40,673 - DEBUG - stack ['$phi98.0', '$phi98.1']
2024-06-06 03:46:40,673 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=1, lineno=443)
2024-06-06 03:46:40,673 - DEBUG - stack []
2024-06-06 03:46:40,673 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=443)
2024-06-06 03:46:40,674 - DEBUG - stack ['$c100.2']
2024-06-06 03:46:40,674 - DEBUG - dispatch pc=104, inst=LOAD_ATTR(arg=6, lineno=443)
2024-06-06 03:46:40,674 - DEBUG - stack ['$c100.2', '$a102.3']
2024-06-06 03:46:40,674 - DEBUG - dispatch pc=124, inst=BINARY_OP(arg=11, lineno=443)
2024-06-06 03:46:40,674 - DEBUG - stack ['$c100.2', '$104load_attr.4']
2024-06-06 03:46:40,674 - DEBUG - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=443)
2024-06-06 03:46:40,674 - DEBUG - stack ['$binop_truediv124.5']
2024-06-06 03:46:40,674 - DEBUG - end state. edges=[]
2024-06-06 03:46:40,674 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=2)])
2024-06-06 03:46:40,674 - DEBUG - stack: ['$phi56.0', '$phi56.1']
2024-06-06 03:46:40,674 - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=2)
2024-06-06 03:46:40,675 - DEBUG - dispatch pc=56, inst=STORE_FAST(arg=2, lineno=441)
2024-06-06 03:46:40,675 - DEBUG - stack ['$phi56.0', '$phi56.1']
2024-06-06 03:46:40,675 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=442)
2024-06-06 03:46:40,675 - DEBUG - stack ['$phi56.0']
2024-06-06 03:46:40,675 - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=2, lineno=442)
2024-06-06 03:46:40,675 - DEBUG - stack ['$phi56.0', '$c58.2']
2024-06-06 03:46:40,675 - DEBUG - dispatch pc=62, inst=LOAD_ATTR(arg=5, lineno=442)
2024-06-06 03:46:40,675 - DEBUG - stack ['$phi56.0', '$c58.2', '$v60.3']
2024-06-06 03:46:40,675 - DEBUG - dispatch pc=82, inst=CALL(arg=0, lineno=442)
2024-06-06 03:46:40,675 - DEBUG - stack ['$phi56.0', '$c58.2', '$null$62.4', '$62load_attr.5']
2024-06-06 03:46:40,675 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=13, lineno=442)
2024-06-06 03:46:40,675 - DEBUG - stack ['$phi56.0', '$c58.2', '$82call.6']
2024-06-06 03:46:40,675 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=1, lineno=442)
2024-06-06 03:46:40,676 - DEBUG - stack ['$phi56.0', '$binop_iadd90.7']
2024-06-06 03:46:40,676 - DEBUG - dispatch pc=96, inst=JUMP_BACKWARD(arg=23, lineno=442)
2024-06-06 03:46:40,676 - DEBUG - stack ['$phi56.0']
2024-06-06 03:46:40,676 - DEBUG - end state. edges=[Edge(pc=52, stack=('$phi56.0',), blockstack=(), npush=0)]
2024-06-06 03:46:40,676 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=1)])
2024-06-06 03:46:40,676 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:40,676 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=1): {'$phi52.0'},
             State(pc_initial=56 nstack_initial=2): {'$phi56.1'},
             State(pc_initial=98 nstack_initial=2): set()})
2024-06-06 03:46:40,677 - DEBUG - defmap: {'$phi52.0': State(pc_initial=0 nstack_initial=0),
 '$phi56.1': State(pc_initial=52 nstack_initial=1),
 '$phi98.1': State(pc_initial=52 nstack_initial=1)}
2024-06-06 03:46:40,677 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi56.0', State(pc_initial=56 nstack_initial=2))},
             '$phi56.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:40,678 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:40,678 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:40,679 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:40,680 - DEBUG - keep phismap: {'$phi52.0': {('$50get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi56.1': {('$52for_iter.2', State(pc_initial=52 nstack_initial=1))}}
2024-06-06 03:46:40,680 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi52.0': '$50get_iter.6'},
             State(pc_initial=52 nstack_initial=1): {'$phi56.1': '$52for_iter.2'}})
2024-06-06 03:46:40,680 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:40,681 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (20, {'item': '$10load_global.1', 'res': '$20load_attr.3'}), (40, {'res': '$a40.4'}), (42, {'func': '$20load_attr.3', 'args': ['$a40.4'], 'kw_names': None, 'res': '$42call.5'}), (50, {'value': '$42call.5', 'res': '$50get_iter.6'})), outgoing_phis={'$phi52.0': '$50get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$50get_iter.6',)})
2024-06-06 03:46:40,681 - DEBUG - block_infos State(pc_initial=52 nstack_initial=1):
AdaptBlockInfo(insts=((52, {'iterator': '$phi52.0', 'pair': '$52for_iter.1', 'indval': '$52for_iter.2', 'pred': '$52for_iter.3'}),), outgoing_phis={'$phi56.1': '$52for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi52.0', '$52for_iter.2'), 56: ('$phi52.0', '$52for_iter.2')})
2024-06-06 03:46:40,681 - DEBUG - block_infos State(pc_initial=56 nstack_initial=2):
AdaptBlockInfo(insts=((56, {'value': '$phi56.1'}), (58, {'res': '$c58.2'}), (60, {'res': '$v60.3'}), (62, {'item': '$v60.3', 'res': '$62load_attr.5'}), (82, {'func': '$62load_attr.5', 'args': [], 'kw_names': None, 'res': '$82call.6'}), (90, {'op': '+=', 'lhs': '$c58.2', 'rhs': '$82call.6', 'res': '$binop_iadd90.7'}), (94, {'value': '$binop_iadd90.7'}), (96, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$phi56.0',)})
2024-06-06 03:46:40,681 - DEBUG - block_infos State(pc_initial=98 nstack_initial=2):
AdaptBlockInfo(insts=((100, {'res': '$c100.2'}), (102, {'res': '$a102.3'}), (104, {'item': '$a102.3', 'res': '$104load_attr.4'}), (124, {'op': '/', 'lhs': '$c100.2', 'rhs': '$104load_attr.4', 'res': '$binop_truediv124.5'}), (128, {'retval': '$binop_truediv124.5', 'castval': '$128return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:40,682 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$10load_global.1']
    $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$20load_attr.3']
    $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_attr.3', '$42call.5', 'a']
    $50get_iter.6 = getiter(value=$42call.5) ['$42call.5', '$50get_iter.6']
    $phi52.0 = $50get_iter.6                 ['$50get_iter.6', '$phi52.0']
    jump 52                                  []
label 52:
    $52for_iter.1 = iternext(value=$phi52.0) ['$52for_iter.1', '$phi52.0']
    $52for_iter.2 = pair_first(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.2']
    $52for_iter.3 = pair_second(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.3']
    $phi56.1 = $52for_iter.2                 ['$52for_iter.2', '$phi56.1']
    branch $52for_iter.3, 56, 98             ['$52for_iter.3']
label 56:
    v = $phi56.1                             ['$phi56.1', 'v']
    $62load_attr.5 = getattr(value=v, attr=item) ['$62load_attr.5', 'v']
    $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$62load_attr.5', '$82call.6']
    $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined) ['$82call.6', '$binop_iadd90.7', 'c']
    c = $binop_iadd90.7                      ['$binop_iadd90.7', 'c']
    jump 52                                  []
label 98:
    $104load_attr.4 = getattr(value=a, attr=size) ['$104load_attr.4', 'a']
    $binop_truediv124.5 = c / $104load_attr.4 ['$104load_attr.4', '$binop_truediv124.5', 'c']
    $128return_value.6 = cast(value=$binop_truediv124.5) ['$128return_value.6', '$binop_truediv124.5']
    return $128return_value.6                ['$128return_value.6']

2024-06-06 03:46:40,690 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:40,690 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939f770>
2024-06-06 03:46:40,690 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:40,690 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-06 03:46:40,690 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,691 - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-06 03:46:40,691 - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,691 - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2024-06-06 03:46:40,691 - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2024-06-06 03:46:40,691 - DEBUG - on stmt: jump 52
2024-06-06 03:46:40,691 - DEBUG - ==== SSA block analysis pass on 52
2024-06-06 03:46:40,691 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939f770>
2024-06-06 03:46:40,691 - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2024-06-06 03:46:40,691 - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2024-06-06 03:46:40,691 - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2024-06-06 03:46:40,691 - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2024-06-06 03:46:40,692 - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2024-06-06 03:46:40,692 - DEBUG - ==== SSA block analysis pass on 56
2024-06-06 03:46:40,692 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939f770>
2024-06-06 03:46:40,692 - DEBUG - on stmt: v = $phi56.1
2024-06-06 03:46:40,692 - DEBUG - on stmt: $62load_attr.5 = getattr(value=v, attr=item)
2024-06-06 03:46:40,692 - DEBUG - on stmt: $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,692 - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,692 - DEBUG - on stmt: c = $binop_iadd90.7
2024-06-06 03:46:40,692 - DEBUG - on stmt: jump 52
2024-06-06 03:46:40,692 - DEBUG - ==== SSA block analysis pass on 98
2024-06-06 03:46:40,692 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939f770>
2024-06-06 03:46:40,693 - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2024-06-06 03:46:40,693 - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:40,693 - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2024-06-06 03:46:40,693 - DEBUG - on stmt: return $128return_value.6
2024-06-06 03:46:40,694 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104load_attr.4': [(<numba.core.ir.Assign object at 0x7fe9b93dc890>,
                                  98)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x7fe9b9349490>,
                                   0)],
             '$128return_value.6': [(<numba.core.ir.Assign object at 0x7fe9b93dcb30>,
                                     98)],
             '$20load_attr.3': [(<numba.core.ir.Assign object at 0x7fe9b93b6480>,
                                 0)],
             '$42call.5': [(<numba.core.ir.Assign object at 0x7fe9b93b7650>,
                            0)],
             '$50get_iter.6': [(<numba.core.ir.Assign object at 0x7fe9b93b7770>,
                                0)],
             '$52for_iter.1': [(<numba.core.ir.Assign object at 0x7fe9b93b79b0>,
                                52)],
             '$52for_iter.2': [(<numba.core.ir.Assign object at 0x7fe9b93b7ad0>,
                                52)],
             '$52for_iter.3': [(<numba.core.ir.Assign object at 0x7fe9b93b7bf0>,
                                52)],
             '$62load_attr.5': [(<numba.core.ir.Assign object at 0x7fe9b93dc1d0>,
                                 56)],
             '$82call.6': [(<numba.core.ir.Assign object at 0x7fe9b93dc380>,
                            56)],
             '$binop_iadd90.7': [(<numba.core.ir.Assign object at 0x7fe9b93dc4d0>,
                                  56)],
             '$binop_truediv124.5': [(<numba.core.ir.Assign object at 0x7fe9b93dca10>,
                                      98)],
             '$phi52.0': [(<numba.core.ir.Assign object at 0x7fe9b9526db0>, 0)],
             '$phi56.1': [(<numba.core.ir.Assign object at 0x7fe9b93b7cb0>,
                           52)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b95251f0>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7fe9b936f860>, 0),
                   (<numba.core.ir.Assign object at 0x7fe9b93dc530>, 56)],
             'v': [(<numba.core.ir.Assign object at 0x7fe9b93b7e60>, 56)]})
2024-06-06 03:46:40,694 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b939f770>
2024-06-06 03:46:40,694 - DEBUG - Fix SSA violator on var c
2024-06-06 03:46:40,694 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:40,694 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b94967b0>
2024-06-06 03:46:40,694 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:40,694 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-06 03:46:40,695 - DEBUG - first assign: c
2024-06-06 03:46:40,695 - DEBUG - replaced with: c = freevar(acc_init: 0.0)
2024-06-06 03:46:40,695 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,695 - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-06 03:46:40,695 - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,695 - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2024-06-06 03:46:40,695 - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2024-06-06 03:46:40,695 - DEBUG - on stmt: jump 52
2024-06-06 03:46:40,695 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-06 03:46:40,695 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b94967b0>
2024-06-06 03:46:40,695 - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2024-06-06 03:46:40,695 - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2024-06-06 03:46:40,695 - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2024-06-06 03:46:40,696 - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2024-06-06 03:46:40,696 - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2024-06-06 03:46:40,696 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:40,696 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b94967b0>
2024-06-06 03:46:40,696 - DEBUG - on stmt: v = $phi56.1
2024-06-06 03:46:40,696 - DEBUG - on stmt: $62load_attr.5 = getattr(value=v, attr=item)
2024-06-06 03:46:40,696 - DEBUG - on stmt: $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,696 - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,696 - DEBUG - on stmt: c = $binop_iadd90.7
2024-06-06 03:46:40,696 - DEBUG - replaced with: c.1 = $binop_iadd90.7
2024-06-06 03:46:40,696 - DEBUG - on stmt: jump 52
2024-06-06 03:46:40,696 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-06 03:46:40,697 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b94967b0>
2024-06-06 03:46:40,697 - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2024-06-06 03:46:40,697 - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:40,697 - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2024-06-06 03:46:40,697 - DEBUG - on stmt: return $128return_value.6
2024-06-06 03:46:40,697 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fe9b94963c0>],
             56: [<numba.core.ir.Assign object at 0x7fe9b9495d60>]})
2024-06-06 03:46:40,697 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:40,697 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b94967b0>
2024-06-06 03:46:40,697 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:40,697 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-06 03:46:40,697 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:40,698 - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-06 03:46:40,698 - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,698 - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2024-06-06 03:46:40,698 - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2024-06-06 03:46:40,698 - DEBUG - on stmt: jump 52
2024-06-06 03:46:40,698 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-06 03:46:40,698 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b94967b0>
2024-06-06 03:46:40,698 - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2024-06-06 03:46:40,698 - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2024-06-06 03:46:40,698 - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2024-06-06 03:46:40,699 - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2024-06-06 03:46:40,699 - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2024-06-06 03:46:40,699 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:40,699 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b94967b0>
2024-06-06 03:46:40,699 - DEBUG - on stmt: v = $phi56.1
2024-06-06 03:46:40,699 - DEBUG - on stmt: $62load_attr.5 = getattr(value=v, attr=item)
2024-06-06 03:46:40,699 - DEBUG - on stmt: $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:40,699 - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,699 - DEBUG - find_def var='c' stmt=$binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,700 - DEBUG - find_def_from_top label 56
2024-06-06 03:46:40,700 - DEBUG - idom 52 from label 56
2024-06-06 03:46:40,700 - DEBUG - find_def_from_bottom label 52
2024-06-06 03:46:40,700 - DEBUG - find_def_from_top label 52
2024-06-06 03:46:40,700 - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 52
2024-06-06 03:46:40,700 - DEBUG - find_def_from_bottom label 0
2024-06-06 03:46:40,700 - DEBUG - incoming_def c = freevar(acc_init: 0.0)
2024-06-06 03:46:40,700 - DEBUG - find_def_from_bottom label 56
2024-06-06 03:46:40,701 - DEBUG - incoming_def c.1 = $binop_iadd90.7
2024-06-06 03:46:40,701 - DEBUG - replaced with: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:40,701 - DEBUG - on stmt: c.1 = $binop_iadd90.7
2024-06-06 03:46:40,701 - DEBUG - on stmt: jump 52
2024-06-06 03:46:40,701 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-06 03:46:40,701 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b94967b0>
2024-06-06 03:46:40,701 - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2024-06-06 03:46:40,701 - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:40,701 - DEBUG - find_def var='c' stmt=$binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:40,701 - DEBUG - find_def_from_top label 98
2024-06-06 03:46:40,702 - DEBUG - idom 52 from label 98
2024-06-06 03:46:40,702 - DEBUG - find_def_from_bottom label 52
2024-06-06 03:46:40,702 - DEBUG - replaced with: $binop_truediv124.5 = c.2 / $104load_attr.4
2024-06-06 03:46:40,702 - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2024-06-06 03:46:40,702 - DEBUG - on stmt: return $128return_value.6
2024-06-06 03:46:41,131 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	RESUME(arg=0, lineno=1209)
           4	LOAD_FAST(arg=0, lineno=1221)
           6	LOAD_CONST(arg=1, lineno=1221)
           8	BINARY_SUBSCR(arg=None, lineno=1221)
          12	LOAD_GLOBAL(arg=1, lineno=1221)
          22	LOAD_ATTR(arg=2, lineno=1221)
          42	LOAD_FAST(arg=0, lineno=1221)
          44	LOAD_CONST(arg=2, lineno=1221)
          46	LOAD_GLOBAL(arg=5, lineno=1221)
          56	LOAD_FAST(arg=2, lineno=1221)
          58	LOAD_FAST(arg=0, lineno=1221)
          60	LOAD_ATTR(arg=6, lineno=1221)
          80	LOAD_CONST(arg=1, lineno=1221)
          82	BINARY_SUBSCR(arg=None, lineno=1221)
          86	CALL(arg=2, lineno=1221)
          94	BINARY_SLICE(arg=None, lineno=1221)
          96	CALL(arg=1, lineno=1221)
         104	COMPARE_OP(arg=92, lineno=1221)
         108	LOAD_FAST(arg=7, lineno=1221)
         110	LOAD_CONST(arg=1, lineno=1221)
         112	STORE_SUBSCR(arg=None, lineno=1221)
         116	LOAD_FAST(arg=7, lineno=1222)
         118	LOAD_CONST(arg=1, lineno=1222)
         120	COPY(arg=2, lineno=1222)
         122	COPY(arg=2, lineno=1222)
         124	BINARY_SUBSCR(arg=None, lineno=1222)
         128	LOAD_FAST(arg=0, lineno=1222)
         130	LOAD_CONST(arg=1, lineno=1222)
         132	BINARY_SUBSCR(arg=None, lineno=1222)
         136	LOAD_GLOBAL(arg=1, lineno=1222)
         146	LOAD_ATTR(arg=8, lineno=1222)
         166	LOAD_FAST(arg=0, lineno=1222)
         168	LOAD_CONST(arg=2, lineno=1222)
         170	LOAD_GLOBAL(arg=5, lineno=1222)
         180	LOAD_FAST(arg=4, lineno=1222)
         182	LOAD_FAST(arg=0, lineno=1222)
         184	LOAD_ATTR(arg=6, lineno=1222)
         204	LOAD_CONST(arg=1, lineno=1222)
         206	BINARY_SUBSCR(arg=None, lineno=1222)
         210	CALL(arg=2, lineno=1222)
         218	BINARY_SLICE(arg=None, lineno=1222)
         220	CALL(arg=1, lineno=1222)
         228	LOAD_FAST(arg=5, lineno=1222)
         230	BINARY_OP(arg=0, lineno=1222)
         234	COMPARE_OP(arg=92, lineno=1222)
         238	BINARY_OP(arg=14, lineno=1222)
         242	SWAP(arg=3, lineno=1222)
         244	SWAP(arg=2, lineno=1222)
         246	STORE_SUBSCR(arg=None, lineno=1222)
         250	LOAD_FAST(arg=7, lineno=1224)
         252	LOAD_CONST(arg=1, lineno=1224)
         254	BINARY_SUBSCR(arg=None, lineno=1224)
         258	POP_JUMP_IF_FALSE(arg=6, lineno=1224)
         260	LOAD_FAST(arg=6, lineno=1225)
         262	LOAD_CONST(arg=3, lineno=1225)
         264	BINARY_OP(arg=0, lineno=1225)
         268	STORE_FAST(arg=8, lineno=1225)
         270	JUMP_FORWARD(arg=2, lineno=1225)
>        272	LOAD_CONST(arg=3, lineno=1227)
         274	STORE_FAST(arg=8, lineno=1227)
>        276	LOAD_FAST(arg=8, lineno=1229)
         278	LOAD_FAST(arg=0, lineno=1229)
         280	LOAD_ATTR(arg=6, lineno=1229)
         300	LOAD_CONST(arg=1, lineno=1229)
         302	BINARY_SUBSCR(arg=None, lineno=1229)
         306	COMPARE_OP(arg=2, lineno=1229)
         310	POP_JUMP_IF_FALSE(arg=209, lineno=1229)
>        312	LOAD_GLOBAL(arg=1, lineno=1230)
         322	LOAD_ATTR(arg=2, lineno=1230)
         342	LOAD_FAST(arg=0, lineno=1230)
         344	LOAD_GLOBAL(arg=3, lineno=1230)
         354	LOAD_CONST(arg=1, lineno=1230)
         356	LOAD_FAST(arg=8, lineno=1230)
         358	LOAD_FAST(arg=1, lineno=1230)
         360	BINARY_OP(arg=10, lineno=1230)
         364	CALL(arg=2, lineno=1230)
         372	LOAD_GLOBAL(arg=5, lineno=1230)
         382	LOAD_FAST(arg=8, lineno=1230)
         384	LOAD_FAST(arg=2, lineno=1230)
         386	BINARY_OP(arg=0, lineno=1230)
         390	LOAD_FAST(arg=0, lineno=1230)
         392	LOAD_ATTR(arg=6, lineno=1230)
         412	LOAD_CONST(arg=1, lineno=1230)
         414	BINARY_SUBSCR(arg=None, lineno=1230)
         418	CALL(arg=2, lineno=1230)
         426	BINARY_SLICE(arg=None, lineno=1230)
         428	CALL(arg=1, lineno=1230)
         436	STORE_FAST(arg=9, lineno=1230)
         438	LOAD_FAST(arg=0, lineno=1233)
         440	LOAD_FAST(arg=8, lineno=1233)
         442	BINARY_SUBSCR(arg=None, lineno=1233)
         446	LOAD_FAST(arg=9, lineno=1233)
         448	COMPARE_OP(arg=40, lineno=1233)
         452	LOAD_FAST(arg=7, lineno=1233)
         454	LOAD_FAST(arg=8, lineno=1233)
         456	STORE_SUBSCR(arg=None, lineno=1233)
         460	LOAD_FAST(arg=7, lineno=1235)
         462	LOAD_FAST(arg=8, lineno=1235)
         464	BINARY_SUBSCR(arg=None, lineno=1235)
         468	POP_JUMP_IF_TRUE(arg=6, lineno=1235)
         470	LOAD_FAST(arg=8, lineno=1236)
         472	LOAD_CONST(arg=3, lineno=1236)
         474	BINARY_OP(arg=13, lineno=1236)
         478	STORE_FAST(arg=8, lineno=1236)
         480	JUMP_BACKWARD(arg=103, lineno=1237)
>        482	LOAD_GLOBAL(arg=1, lineno=1239)
         492	LOAD_ATTR(arg=8, lineno=1239)
         512	LOAD_FAST(arg=0, lineno=1239)
         514	LOAD_GLOBAL(arg=3, lineno=1239)
         524	LOAD_CONST(arg=1, lineno=1239)
         526	LOAD_FAST(arg=8, lineno=1239)
         528	LOAD_FAST(arg=3, lineno=1239)
         530	BINARY_OP(arg=10, lineno=1239)
         534	CALL(arg=2, lineno=1239)
         542	LOAD_GLOBAL(arg=5, lineno=1239)
         552	LOAD_FAST(arg=8, lineno=1239)
         554	LOAD_FAST(arg=4, lineno=1239)
         556	BINARY_OP(arg=0, lineno=1239)
         560	LOAD_FAST(arg=0, lineno=1239)
         562	LOAD_ATTR(arg=6, lineno=1239)
         582	LOAD_CONST(arg=1, lineno=1239)
         584	BINARY_SUBSCR(arg=None, lineno=1239)
         588	CALL(arg=2, lineno=1239)
         596	BINARY_SLICE(arg=None, lineno=1239)
         598	CALL(arg=1, lineno=1239)
         606	STORE_FAST(arg=10, lineno=1239)
         608	LOAD_FAST(arg=7, lineno=1240)
         610	LOAD_FAST(arg=8, lineno=1240)
         612	COPY(arg=2, lineno=1240)
         614	COPY(arg=2, lineno=1240)
         616	BINARY_SUBSCR(arg=None, lineno=1240)
         620	LOAD_FAST(arg=0, lineno=1240)
         622	LOAD_FAST(arg=8, lineno=1240)
         624	BINARY_SUBSCR(arg=None, lineno=1240)
         628	LOAD_FAST(arg=10, lineno=1240)
         630	LOAD_FAST(arg=5, lineno=1240)
         632	BINARY_OP(arg=0, lineno=1240)
         636	COMPARE_OP(arg=92, lineno=1240)
         640	BINARY_OP(arg=14, lineno=1240)
         644	SWAP(arg=3, lineno=1240)
         646	SWAP(arg=2, lineno=1240)
         648	STORE_SUBSCR(arg=None, lineno=1240)
         652	LOAD_FAST(arg=7, lineno=1242)
         654	LOAD_FAST(arg=8, lineno=1242)
         656	BINARY_SUBSCR(arg=None, lineno=1242)
         660	POP_JUMP_IF_TRUE(arg=6, lineno=1242)
         662	LOAD_FAST(arg=8, lineno=1243)
         664	LOAD_CONST(arg=3, lineno=1243)
         666	BINARY_OP(arg=13, lineno=1243)
         670	STORE_FAST(arg=8, lineno=1243)
         672	JUMP_BACKWARD(arg=199, lineno=1244)
>        674	LOAD_FAST(arg=8, lineno=1247)
         676	LOAD_FAST(arg=6, lineno=1247)
         678	LOAD_CONST(arg=3, lineno=1247)
         680	BINARY_OP(arg=0, lineno=1247)
         684	BINARY_OP(arg=13, lineno=1247)
         688	STORE_FAST(arg=8, lineno=1247)
         690	LOAD_FAST(arg=8, lineno=1229)
         692	LOAD_FAST(arg=0, lineno=1229)
         694	LOAD_ATTR(arg=6, lineno=1229)
         714	LOAD_CONST(arg=1, lineno=1229)
         716	BINARY_SUBSCR(arg=None, lineno=1229)
         720	COMPARE_OP(arg=2, lineno=1229)
         724	POP_JUMP_IF_FALSE(arg=1, lineno=1229)
         726	JUMP_BACKWARD(arg=208, lineno=1229)
>        728	RETURN_CONST(arg=2, lineno=1229)
>        730	RETURN_CONST(arg=2, lineno=1229)
2024-06-06 03:46:41,131 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:41,131 - DEBUG - stack: []
2024-06-06 03:46:41,131 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:41,131 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
2024-06-06 03:46:41,131 - DEBUG - stack []
2024-06-06 03:46:41,132 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1209)
2024-06-06 03:46:41,132 - DEBUG - stack []
2024-06-06 03:46:41,132 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-06 03:46:41,132 - DEBUG - stack []
2024-06-06 03:46:41,132 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-06 03:46:41,132 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:41,132 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-06 03:46:41,132 - DEBUG - stack ['$x4.0', '$const6.1']
2024-06-06 03:46:41,132 - DEBUG - dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=1221)
2024-06-06 03:46:41,132 - DEBUG - stack ['$8binary_subscr.2']
2024-06-06 03:46:41,133 - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=2, lineno=1221)
2024-06-06 03:46:41,133 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$12load_global.3']
2024-06-06 03:46:41,133 - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-06 03:46:41,133 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5']
2024-06-06 03:46:41,133 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=1221)
2024-06-06 03:46:41,133 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6']
2024-06-06 03:46:41,133 - DEBUG - dispatch pc=46, inst=LOAD_GLOBAL(arg=5, lineno=1221)
2024-06-06 03:46:41,133 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7']
2024-06-06 03:46:41,133 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1221)
2024-06-06 03:46:41,133 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8']
2024-06-06 03:46:41,133 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1221)
2024-06-06 03:46:41,133 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10']
2024-06-06 03:46:41,134 - DEBUG - dispatch pc=60, inst=LOAD_ATTR(arg=6, lineno=1221)
2024-06-06 03:46:41,134 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$x58.11']
2024-06-06 03:46:41,134 - DEBUG - dispatch pc=80, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-06 03:46:41,134 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$60load_attr.12']
2024-06-06 03:46:41,134 - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=1221)
2024-06-06 03:46:41,134 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$60load_attr.12', '$const80.13']
2024-06-06 03:46:41,134 - DEBUG - dispatch pc=86, inst=CALL(arg=2, lineno=1221)
2024-06-06 03:46:41,134 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$null$46.9', '$46load_global.8', '$post_max56.10', '$82binary_subscr.14']
2024-06-06 03:46:41,134 - DEBUG - dispatch pc=94, inst=BINARY_SLICE(arg=None, lineno=1221)
2024-06-06 03:46:41,134 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$x42.6', '$const44.7', '$86call.15']
2024-06-06 03:46:41,134 - DEBUG - dispatch pc=96, inst=CALL(arg=1, lineno=1221)
2024-06-06 03:46:41,135 - DEBUG - stack ['$8binary_subscr.2', '$null$12.4', '$22load_attr.5', '$94binary_slice.17']
2024-06-06 03:46:41,135 - DEBUG - dispatch pc=104, inst=COMPARE_OP(arg=92, lineno=1221)
2024-06-06 03:46:41,135 - DEBUG - stack ['$8binary_subscr.2', '$96call.19']
2024-06-06 03:46:41,135 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=7, lineno=1221)
2024-06-06 03:46:41,135 - DEBUG - stack ['$104compare_op.20']
2024-06-06 03:46:41,135 - DEBUG - dispatch pc=110, inst=LOAD_CONST(arg=1, lineno=1221)
2024-06-06 03:46:41,135 - DEBUG - stack ['$104compare_op.20', '$peaks108.21']
2024-06-06 03:46:41,135 - DEBUG - dispatch pc=112, inst=STORE_SUBSCR(arg=None, lineno=1221)
2024-06-06 03:46:41,135 - DEBUG - stack ['$104compare_op.20', '$peaks108.21', '$const110.22']
2024-06-06 03:46:41,135 - DEBUG - dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=1222)
2024-06-06 03:46:41,135 - DEBUG - stack []
2024-06-06 03:46:41,135 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-06 03:46:41,136 - DEBUG - stack ['$peaks116.23']
2024-06-06 03:46:41,136 - DEBUG - dispatch pc=120, inst=COPY(arg=2, lineno=1222)
2024-06-06 03:46:41,136 - DEBUG - stack ['$peaks116.23', '$const118.24']
2024-06-06 03:46:41,136 - DEBUG - dispatch pc=122, inst=COPY(arg=2, lineno=1222)
2024-06-06 03:46:41,136 - DEBUG - stack ['$peaks116.23', '$const118.24', '$peaks116.23']
2024-06-06 03:46:41,136 - DEBUG - dispatch pc=124, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:41,136 - DEBUG - stack ['$peaks116.23', '$const118.24', '$peaks116.23', '$const118.24']
2024-06-06 03:46:41,136 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-06 03:46:41,136 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25']
2024-06-06 03:46:41,136 - DEBUG - dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-06 03:46:41,136 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$x128.26']
2024-06-06 03:46:41,136 - DEBUG - dispatch pc=132, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:41,136 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$x128.26', '$const130.27']
2024-06-06 03:46:41,137 - DEBUG - dispatch pc=136, inst=LOAD_GLOBAL(arg=1, lineno=1222)
2024-06-06 03:46:41,137 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28']
2024-06-06 03:46:41,137 - DEBUG - dispatch pc=146, inst=LOAD_ATTR(arg=8, lineno=1222)
2024-06-06 03:46:41,137 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$136load_global.29']
2024-06-06 03:46:41,137 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-06 03:46:41,137 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31']
2024-06-06 03:46:41,137 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=1222)
2024-06-06 03:46:41,137 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32']
2024-06-06 03:46:41,137 - DEBUG - dispatch pc=170, inst=LOAD_GLOBAL(arg=5, lineno=1222)
2024-06-06 03:46:41,137 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33']
2024-06-06 03:46:41,137 - DEBUG - dispatch pc=180, inst=LOAD_FAST(arg=4, lineno=1222)
2024-06-06 03:46:41,137 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34']
2024-06-06 03:46:41,137 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=0, lineno=1222)
2024-06-06 03:46:41,138 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36']
2024-06-06 03:46:41,138 - DEBUG - dispatch pc=184, inst=LOAD_ATTR(arg=6, lineno=1222)
2024-06-06 03:46:41,138 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$x182.37']
2024-06-06 03:46:41,138 - DEBUG - dispatch pc=204, inst=LOAD_CONST(arg=1, lineno=1222)
2024-06-06 03:46:41,138 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$184load_attr.38']
2024-06-06 03:46:41,138 - DEBUG - dispatch pc=206, inst=BINARY_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:41,138 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$184load_attr.38', '$const204.39']
2024-06-06 03:46:41,138 - DEBUG - dispatch pc=210, inst=CALL(arg=2, lineno=1222)
2024-06-06 03:46:41,138 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$null$170.35', '$170load_global.34', '$post_avg180.36', '$206binary_subscr.40']
2024-06-06 03:46:41,138 - DEBUG - dispatch pc=218, inst=BINARY_SLICE(arg=None, lineno=1222)
2024-06-06 03:46:41,138 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$x166.32', '$const168.33', '$210call.41']
2024-06-06 03:46:41,138 - DEBUG - dispatch pc=220, inst=CALL(arg=1, lineno=1222)
2024-06-06 03:46:41,138 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$null$136.30', '$146load_attr.31', '$218binary_slice.43']
2024-06-06 03:46:41,139 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=1222)
2024-06-06 03:46:41,139 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$220call.45']
2024-06-06 03:46:41,139 - DEBUG - dispatch pc=230, inst=BINARY_OP(arg=0, lineno=1222)
2024-06-06 03:46:41,139 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$220call.45', '$delta228.46']
2024-06-06 03:46:41,139 - DEBUG - dispatch pc=234, inst=COMPARE_OP(arg=92, lineno=1222)
2024-06-06 03:46:41,139 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$132binary_subscr.28', '$binop_add230.47']
2024-06-06 03:46:41,139 - DEBUG - dispatch pc=238, inst=BINARY_OP(arg=14, lineno=1222)
2024-06-06 03:46:41,139 - DEBUG - stack ['$peaks116.23', '$const118.24', '$124binary_subscr.25', '$234compare_op.48']
2024-06-06 03:46:41,139 - DEBUG - dispatch pc=242, inst=SWAP(arg=3, lineno=1222)
2024-06-06 03:46:41,139 - DEBUG - stack ['$peaks116.23', '$const118.24', '$binop_iand238.49']
2024-06-06 03:46:41,139 - DEBUG - dispatch pc=244, inst=SWAP(arg=2, lineno=1222)
2024-06-06 03:46:41,140 - DEBUG - stack ['$binop_iand238.49', '$const118.24', '$peaks116.23']
2024-06-06 03:46:41,140 - DEBUG - dispatch pc=246, inst=STORE_SUBSCR(arg=None, lineno=1222)
2024-06-06 03:46:41,140 - DEBUG - stack ['$binop_iand238.49', '$peaks116.23', '$const118.24']
2024-06-06 03:46:41,140 - DEBUG - dispatch pc=250, inst=LOAD_FAST(arg=7, lineno=1224)
2024-06-06 03:46:41,140 - DEBUG - stack []
2024-06-06 03:46:41,140 - DEBUG - dispatch pc=252, inst=LOAD_CONST(arg=1, lineno=1224)
2024-06-06 03:46:41,140 - DEBUG - stack ['$peaks250.50']
2024-06-06 03:46:41,140 - DEBUG - dispatch pc=254, inst=BINARY_SUBSCR(arg=None, lineno=1224)
2024-06-06 03:46:41,140 - DEBUG - stack ['$peaks250.50', '$const252.51']
2024-06-06 03:46:41,140 - DEBUG - dispatch pc=258, inst=POP_JUMP_IF_FALSE(arg=6, lineno=1224)
2024-06-06 03:46:41,140 - DEBUG - stack ['$254binary_subscr.52']
2024-06-06 03:46:41,140 - DEBUG - end state. edges=[Edge(pc=260, stack=(), blockstack=(), npush=0), Edge(pc=272, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:41,140 - DEBUG - pending: deque([State(pc_initial=260 nstack_initial=0), State(pc_initial=272 nstack_initial=0)])
2024-06-06 03:46:41,141 - DEBUG - stack: []
2024-06-06 03:46:41,141 - DEBUG - state.pc_initial: State(pc_initial=260 nstack_initial=0)
2024-06-06 03:46:41,141 - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=6, lineno=1225)
2024-06-06 03:46:41,141 - DEBUG - stack []
2024-06-06 03:46:41,141 - DEBUG - dispatch pc=262, inst=LOAD_CONST(arg=3, lineno=1225)
2024-06-06 03:46:41,141 - DEBUG - stack ['$wait260.0']
2024-06-06 03:46:41,141 - DEBUG - dispatch pc=264, inst=BINARY_OP(arg=0, lineno=1225)
2024-06-06 03:46:41,141 - DEBUG - stack ['$wait260.0', '$const262.1']
2024-06-06 03:46:41,141 - DEBUG - dispatch pc=268, inst=STORE_FAST(arg=8, lineno=1225)
2024-06-06 03:46:41,141 - DEBUG - stack ['$binop_add264.2']
2024-06-06 03:46:41,141 - DEBUG - dispatch pc=270, inst=JUMP_FORWARD(arg=2, lineno=1225)
2024-06-06 03:46:41,142 - DEBUG - stack []
2024-06-06 03:46:41,142 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:41,142 - DEBUG - pending: deque([State(pc_initial=272 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:41,142 - DEBUG - stack: []
2024-06-06 03:46:41,142 - DEBUG - state.pc_initial: State(pc_initial=272 nstack_initial=0)
2024-06-06 03:46:41,142 - DEBUG - dispatch pc=272, inst=LOAD_CONST(arg=3, lineno=1227)
2024-06-06 03:46:41,142 - DEBUG - stack []
2024-06-06 03:46:41,142 - DEBUG - dispatch pc=274, inst=STORE_FAST(arg=8, lineno=1227)
2024-06-06 03:46:41,142 - DEBUG - stack ['$const272.0']
2024-06-06 03:46:41,142 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:41,142 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:41,142 - DEBUG - stack: []
2024-06-06 03:46:41,142 - DEBUG - state.pc_initial: State(pc_initial=276 nstack_initial=0)
2024-06-06 03:46:41,143 - DEBUG - dispatch pc=276, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-06 03:46:41,143 - DEBUG - stack []
2024-06-06 03:46:41,143 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-06 03:46:41,143 - DEBUG - stack ['$n276.0']
2024-06-06 03:46:41,143 - DEBUG - dispatch pc=280, inst=LOAD_ATTR(arg=6, lineno=1229)
2024-06-06 03:46:41,143 - DEBUG - stack ['$n276.0', '$x278.1']
2024-06-06 03:46:41,143 - DEBUG - dispatch pc=300, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-06 03:46:41,143 - DEBUG - stack ['$n276.0', '$280load_attr.2']
2024-06-06 03:46:41,143 - DEBUG - dispatch pc=302, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-06 03:46:41,143 - DEBUG - stack ['$n276.0', '$280load_attr.2', '$const300.3']
2024-06-06 03:46:41,143 - DEBUG - dispatch pc=306, inst=COMPARE_OP(arg=2, lineno=1229)
2024-06-06 03:46:41,143 - DEBUG - stack ['$n276.0', '$302binary_subscr.4']
2024-06-06 03:46:41,144 - DEBUG - dispatch pc=310, inst=POP_JUMP_IF_FALSE(arg=209, lineno=1229)
2024-06-06 03:46:41,144 - DEBUG - stack ['$306compare_op.5']
2024-06-06 03:46:41,144 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=730, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:41,144 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=312 nstack_initial=0), State(pc_initial=730 nstack_initial=0)])
2024-06-06 03:46:41,144 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=730 nstack_initial=0)])
2024-06-06 03:46:41,144 - DEBUG - stack: []
2024-06-06 03:46:41,144 - DEBUG - state.pc_initial: State(pc_initial=312 nstack_initial=0)
2024-06-06 03:46:41,144 - DEBUG - dispatch pc=312, inst=LOAD_GLOBAL(arg=1, lineno=1230)
2024-06-06 03:46:41,144 - DEBUG - stack []
2024-06-06 03:46:41,144 - DEBUG - dispatch pc=322, inst=LOAD_ATTR(arg=2, lineno=1230)
2024-06-06 03:46:41,144 - DEBUG - stack ['$null$312.1', '$312load_global.0']
2024-06-06 03:46:41,144 - DEBUG - dispatch pc=342, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-06 03:46:41,145 - DEBUG - stack ['$null$312.1', '$322load_attr.2']
2024-06-06 03:46:41,145 - DEBUG - dispatch pc=344, inst=LOAD_GLOBAL(arg=3, lineno=1230)
2024-06-06 03:46:41,145 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3']
2024-06-06 03:46:41,145 - DEBUG - dispatch pc=354, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-06 03:46:41,145 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4']
2024-06-06 03:46:41,145 - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-06 03:46:41,145 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6']
2024-06-06 03:46:41,145 - DEBUG - dispatch pc=358, inst=LOAD_FAST(arg=1, lineno=1230)
2024-06-06 03:46:41,145 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6', '$n356.7']
2024-06-06 03:46:41,145 - DEBUG - dispatch pc=360, inst=BINARY_OP(arg=10, lineno=1230)
2024-06-06 03:46:41,145 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6', '$n356.7', '$pre_max358.8']
2024-06-06 03:46:41,146 - DEBUG - dispatch pc=364, inst=CALL(arg=2, lineno=1230)
2024-06-06 03:46:41,146 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$null$344.5', '$344load_global.4', '$const354.6', '$binop_sub360.9']
2024-06-06 03:46:41,146 - DEBUG - dispatch pc=372, inst=LOAD_GLOBAL(arg=5, lineno=1230)
2024-06-06 03:46:41,146 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10']
2024-06-06 03:46:41,146 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=8, lineno=1230)
2024-06-06 03:46:41,146 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11']
2024-06-06 03:46:41,146 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=2, lineno=1230)
2024-06-06 03:46:41,146 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$n382.13']
2024-06-06 03:46:41,146 - DEBUG - dispatch pc=386, inst=BINARY_OP(arg=0, lineno=1230)
2024-06-06 03:46:41,146 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$n382.13', '$post_max384.14']
2024-06-06 03:46:41,146 - DEBUG - dispatch pc=390, inst=LOAD_FAST(arg=0, lineno=1230)
2024-06-06 03:46:41,146 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15']
2024-06-06 03:46:41,146 - DEBUG - dispatch pc=392, inst=LOAD_ATTR(arg=6, lineno=1230)
2024-06-06 03:46:41,147 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$x390.16']
2024-06-06 03:46:41,147 - DEBUG - dispatch pc=412, inst=LOAD_CONST(arg=1, lineno=1230)
2024-06-06 03:46:41,147 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$392load_attr.17']
2024-06-06 03:46:41,147 - DEBUG - dispatch pc=414, inst=BINARY_SUBSCR(arg=None, lineno=1230)
2024-06-06 03:46:41,147 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$392load_attr.17', '$const412.18']
2024-06-06 03:46:41,147 - DEBUG - dispatch pc=418, inst=CALL(arg=2, lineno=1230)
2024-06-06 03:46:41,147 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$null$372.12', '$372load_global.11', '$binop_add386.15', '$414binary_subscr.19']
2024-06-06 03:46:41,147 - DEBUG - dispatch pc=426, inst=BINARY_SLICE(arg=None, lineno=1230)
2024-06-06 03:46:41,147 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$x342.3', '$364call.10', '$418call.20']
2024-06-06 03:46:41,147 - DEBUG - dispatch pc=428, inst=CALL(arg=1, lineno=1230)
2024-06-06 03:46:41,147 - DEBUG - stack ['$null$312.1', '$322load_attr.2', '$426binary_slice.22']
2024-06-06 03:46:41,147 - DEBUG - dispatch pc=436, inst=STORE_FAST(arg=9, lineno=1230)
2024-06-06 03:46:41,148 - DEBUG - stack ['$428call.24']
2024-06-06 03:46:41,148 - DEBUG - dispatch pc=438, inst=LOAD_FAST(arg=0, lineno=1233)
2024-06-06 03:46:41,148 - DEBUG - stack []
2024-06-06 03:46:41,148 - DEBUG - dispatch pc=440, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-06 03:46:41,148 - DEBUG - stack ['$x438.25']
2024-06-06 03:46:41,148 - DEBUG - dispatch pc=442, inst=BINARY_SUBSCR(arg=None, lineno=1233)
2024-06-06 03:46:41,148 - DEBUG - stack ['$x438.25', '$n440.26']
2024-06-06 03:46:41,148 - DEBUG - dispatch pc=446, inst=LOAD_FAST(arg=9, lineno=1233)
2024-06-06 03:46:41,148 - DEBUG - stack ['$442binary_subscr.27']
2024-06-06 03:46:41,148 - DEBUG - dispatch pc=448, inst=COMPARE_OP(arg=40, lineno=1233)
2024-06-06 03:46:41,148 - DEBUG - stack ['$442binary_subscr.27', '$maxn446.28']
2024-06-06 03:46:41,148 - DEBUG - dispatch pc=452, inst=LOAD_FAST(arg=7, lineno=1233)
2024-06-06 03:46:41,148 - DEBUG - stack ['$448compare_op.29']
2024-06-06 03:46:41,149 - DEBUG - dispatch pc=454, inst=LOAD_FAST(arg=8, lineno=1233)
2024-06-06 03:46:41,149 - DEBUG - stack ['$448compare_op.29', '$peaks452.30']
2024-06-06 03:46:41,149 - DEBUG - dispatch pc=456, inst=STORE_SUBSCR(arg=None, lineno=1233)
2024-06-06 03:46:41,149 - DEBUG - stack ['$448compare_op.29', '$peaks452.30', '$n454.31']
2024-06-06 03:46:41,149 - DEBUG - dispatch pc=460, inst=LOAD_FAST(arg=7, lineno=1235)
2024-06-06 03:46:41,149 - DEBUG - stack []
2024-06-06 03:46:41,149 - DEBUG - dispatch pc=462, inst=LOAD_FAST(arg=8, lineno=1235)
2024-06-06 03:46:41,149 - DEBUG - stack ['$peaks460.32']
2024-06-06 03:46:41,149 - DEBUG - dispatch pc=464, inst=BINARY_SUBSCR(arg=None, lineno=1235)
2024-06-06 03:46:41,149 - DEBUG - stack ['$peaks460.32', '$n462.33']
2024-06-06 03:46:41,149 - DEBUG - dispatch pc=468, inst=POP_JUMP_IF_TRUE(arg=6, lineno=1235)
2024-06-06 03:46:41,149 - DEBUG - stack ['$464binary_subscr.34']
2024-06-06 03:46:41,150 - DEBUG - end state. edges=[Edge(pc=470, stack=(), blockstack=(), npush=0), Edge(pc=482, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:41,150 - DEBUG - pending: deque([State(pc_initial=730 nstack_initial=0), State(pc_initial=470 nstack_initial=0), State(pc_initial=482 nstack_initial=0)])
2024-06-06 03:46:41,150 - DEBUG - stack: []
2024-06-06 03:46:41,150 - DEBUG - state.pc_initial: State(pc_initial=730 nstack_initial=0)
2024-06-06 03:46:41,150 - DEBUG - dispatch pc=730, inst=RETURN_CONST(arg=2, lineno=1229)
2024-06-06 03:46:41,150 - DEBUG - stack []
2024-06-06 03:46:41,150 - DEBUG - end state. edges=[]
2024-06-06 03:46:41,150 - DEBUG - pending: deque([State(pc_initial=470 nstack_initial=0), State(pc_initial=482 nstack_initial=0)])
2024-06-06 03:46:41,150 - DEBUG - stack: []
2024-06-06 03:46:41,150 - DEBUG - state.pc_initial: State(pc_initial=470 nstack_initial=0)
2024-06-06 03:46:41,150 - DEBUG - dispatch pc=470, inst=LOAD_FAST(arg=8, lineno=1236)
2024-06-06 03:46:41,150 - DEBUG - stack []
2024-06-06 03:46:41,150 - DEBUG - dispatch pc=472, inst=LOAD_CONST(arg=3, lineno=1236)
2024-06-06 03:46:41,151 - DEBUG - stack ['$n470.0']
2024-06-06 03:46:41,151 - DEBUG - dispatch pc=474, inst=BINARY_OP(arg=13, lineno=1236)
2024-06-06 03:46:41,151 - DEBUG - stack ['$n470.0', '$const472.1']
2024-06-06 03:46:41,151 - DEBUG - dispatch pc=478, inst=STORE_FAST(arg=8, lineno=1236)
2024-06-06 03:46:41,151 - DEBUG - stack ['$binop_iadd474.2']
2024-06-06 03:46:41,151 - DEBUG - dispatch pc=480, inst=JUMP_BACKWARD(arg=103, lineno=1237)
2024-06-06 03:46:41,151 - DEBUG - stack []
2024-06-06 03:46:41,151 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:41,151 - DEBUG - pending: deque([State(pc_initial=482 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:41,151 - DEBUG - stack: []
2024-06-06 03:46:41,151 - DEBUG - state.pc_initial: State(pc_initial=482 nstack_initial=0)
2024-06-06 03:46:41,151 - DEBUG - dispatch pc=482, inst=LOAD_GLOBAL(arg=1, lineno=1239)
2024-06-06 03:46:41,151 - DEBUG - stack []
2024-06-06 03:46:41,152 - DEBUG - dispatch pc=492, inst=LOAD_ATTR(arg=8, lineno=1239)
2024-06-06 03:46:41,152 - DEBUG - stack ['$null$482.1', '$482load_global.0']
2024-06-06 03:46:41,152 - DEBUG - dispatch pc=512, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-06 03:46:41,152 - DEBUG - stack ['$null$482.1', '$492load_attr.2']
2024-06-06 03:46:41,152 - DEBUG - dispatch pc=514, inst=LOAD_GLOBAL(arg=3, lineno=1239)
2024-06-06 03:46:41,152 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3']
2024-06-06 03:46:41,152 - DEBUG - dispatch pc=524, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-06 03:46:41,152 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4']
2024-06-06 03:46:41,152 - DEBUG - dispatch pc=526, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-06 03:46:41,152 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6']
2024-06-06 03:46:41,152 - DEBUG - dispatch pc=528, inst=LOAD_FAST(arg=3, lineno=1239)
2024-06-06 03:46:41,152 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6', '$n526.7']
2024-06-06 03:46:41,153 - DEBUG - dispatch pc=530, inst=BINARY_OP(arg=10, lineno=1239)
2024-06-06 03:46:41,153 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6', '$n526.7', '$pre_avg528.8']
2024-06-06 03:46:41,153 - DEBUG - dispatch pc=534, inst=CALL(arg=2, lineno=1239)
2024-06-06 03:46:41,153 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$null$514.5', '$514load_global.4', '$const524.6', '$binop_sub530.9']
2024-06-06 03:46:41,153 - DEBUG - dispatch pc=542, inst=LOAD_GLOBAL(arg=5, lineno=1239)
2024-06-06 03:46:41,153 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10']
2024-06-06 03:46:41,153 - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=8, lineno=1239)
2024-06-06 03:46:41,153 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11']
2024-06-06 03:46:41,153 - DEBUG - dispatch pc=554, inst=LOAD_FAST(arg=4, lineno=1239)
2024-06-06 03:46:41,153 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$n552.13']
2024-06-06 03:46:41,153 - DEBUG - dispatch pc=556, inst=BINARY_OP(arg=0, lineno=1239)
2024-06-06 03:46:41,153 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$n552.13', '$post_avg554.14']
2024-06-06 03:46:41,153 - DEBUG - dispatch pc=560, inst=LOAD_FAST(arg=0, lineno=1239)
2024-06-06 03:46:41,154 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15']
2024-06-06 03:46:41,154 - DEBUG - dispatch pc=562, inst=LOAD_ATTR(arg=6, lineno=1239)
2024-06-06 03:46:41,154 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$x560.16']
2024-06-06 03:46:41,154 - DEBUG - dispatch pc=582, inst=LOAD_CONST(arg=1, lineno=1239)
2024-06-06 03:46:41,154 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$562load_attr.17']
2024-06-06 03:46:41,154 - DEBUG - dispatch pc=584, inst=BINARY_SUBSCR(arg=None, lineno=1239)
2024-06-06 03:46:41,154 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$562load_attr.17', '$const582.18']
2024-06-06 03:46:41,154 - DEBUG - dispatch pc=588, inst=CALL(arg=2, lineno=1239)
2024-06-06 03:46:41,154 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$null$542.12', '$542load_global.11', '$binop_add556.15', '$584binary_subscr.19']
2024-06-06 03:46:41,154 - DEBUG - dispatch pc=596, inst=BINARY_SLICE(arg=None, lineno=1239)
2024-06-06 03:46:41,154 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$x512.3', '$534call.10', '$588call.20']
2024-06-06 03:46:41,155 - DEBUG - dispatch pc=598, inst=CALL(arg=1, lineno=1239)
2024-06-06 03:46:41,155 - DEBUG - stack ['$null$482.1', '$492load_attr.2', '$596binary_slice.22']
2024-06-06 03:46:41,155 - DEBUG - dispatch pc=606, inst=STORE_FAST(arg=10, lineno=1239)
2024-06-06 03:46:41,155 - DEBUG - stack ['$598call.24']
2024-06-06 03:46:41,155 - DEBUG - dispatch pc=608, inst=LOAD_FAST(arg=7, lineno=1240)
2024-06-06 03:46:41,155 - DEBUG - stack []
2024-06-06 03:46:41,155 - DEBUG - dispatch pc=610, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-06 03:46:41,155 - DEBUG - stack ['$peaks608.25']
2024-06-06 03:46:41,155 - DEBUG - dispatch pc=612, inst=COPY(arg=2, lineno=1240)
2024-06-06 03:46:41,155 - DEBUG - stack ['$peaks608.25', '$n610.26']
2024-06-06 03:46:41,155 - DEBUG - dispatch pc=614, inst=COPY(arg=2, lineno=1240)
2024-06-06 03:46:41,155 - DEBUG - stack ['$peaks608.25', '$n610.26', '$peaks608.25']
2024-06-06 03:46:41,155 - DEBUG - dispatch pc=616, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-06 03:46:41,156 - DEBUG - stack ['$peaks608.25', '$n610.26', '$peaks608.25', '$n610.26']
2024-06-06 03:46:41,156 - DEBUG - dispatch pc=620, inst=LOAD_FAST(arg=0, lineno=1240)
2024-06-06 03:46:41,156 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27']
2024-06-06 03:46:41,156 - DEBUG - dispatch pc=622, inst=LOAD_FAST(arg=8, lineno=1240)
2024-06-06 03:46:41,156 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$x620.28']
2024-06-06 03:46:41,156 - DEBUG - dispatch pc=624, inst=BINARY_SUBSCR(arg=None, lineno=1240)
2024-06-06 03:46:41,156 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$x620.28', '$n622.29']
2024-06-06 03:46:41,156 - DEBUG - dispatch pc=628, inst=LOAD_FAST(arg=10, lineno=1240)
2024-06-06 03:46:41,156 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30']
2024-06-06 03:46:41,156 - DEBUG - dispatch pc=630, inst=LOAD_FAST(arg=5, lineno=1240)
2024-06-06 03:46:41,156 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30', '$avgn628.31']
2024-06-06 03:46:41,156 - DEBUG - dispatch pc=632, inst=BINARY_OP(arg=0, lineno=1240)
2024-06-06 03:46:41,156 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30', '$avgn628.31', '$delta630.32']
2024-06-06 03:46:41,157 - DEBUG - dispatch pc=636, inst=COMPARE_OP(arg=92, lineno=1240)
2024-06-06 03:46:41,157 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$624binary_subscr.30', '$binop_add632.33']
2024-06-06 03:46:41,157 - DEBUG - dispatch pc=640, inst=BINARY_OP(arg=14, lineno=1240)
2024-06-06 03:46:41,157 - DEBUG - stack ['$peaks608.25', '$n610.26', '$616binary_subscr.27', '$636compare_op.34']
2024-06-06 03:46:41,157 - DEBUG - dispatch pc=644, inst=SWAP(arg=3, lineno=1240)
2024-06-06 03:46:41,157 - DEBUG - stack ['$peaks608.25', '$n610.26', '$binop_iand640.35']
2024-06-06 03:46:41,157 - DEBUG - dispatch pc=646, inst=SWAP(arg=2, lineno=1240)
2024-06-06 03:46:41,157 - DEBUG - stack ['$binop_iand640.35', '$n610.26', '$peaks608.25']
2024-06-06 03:46:41,157 - DEBUG - dispatch pc=648, inst=STORE_SUBSCR(arg=None, lineno=1240)
2024-06-06 03:46:41,157 - DEBUG - stack ['$binop_iand640.35', '$peaks608.25', '$n610.26']
2024-06-06 03:46:41,157 - DEBUG - dispatch pc=652, inst=LOAD_FAST(arg=7, lineno=1242)
2024-06-06 03:46:41,157 - DEBUG - stack []
2024-06-06 03:46:41,158 - DEBUG - dispatch pc=654, inst=LOAD_FAST(arg=8, lineno=1242)
2024-06-06 03:46:41,158 - DEBUG - stack ['$peaks652.36']
2024-06-06 03:46:41,158 - DEBUG - dispatch pc=656, inst=BINARY_SUBSCR(arg=None, lineno=1242)
2024-06-06 03:46:41,158 - DEBUG - stack ['$peaks652.36', '$n654.37']
2024-06-06 03:46:41,158 - DEBUG - dispatch pc=660, inst=POP_JUMP_IF_TRUE(arg=6, lineno=1242)
2024-06-06 03:46:41,158 - DEBUG - stack ['$656binary_subscr.38']
2024-06-06 03:46:41,158 - DEBUG - end state. edges=[Edge(pc=662, stack=(), blockstack=(), npush=0), Edge(pc=674, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:41,158 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=662 nstack_initial=0), State(pc_initial=674 nstack_initial=0)])
2024-06-06 03:46:41,158 - DEBUG - pending: deque([State(pc_initial=662 nstack_initial=0), State(pc_initial=674 nstack_initial=0)])
2024-06-06 03:46:41,158 - DEBUG - stack: []
2024-06-06 03:46:41,158 - DEBUG - state.pc_initial: State(pc_initial=662 nstack_initial=0)
2024-06-06 03:46:41,158 - DEBUG - dispatch pc=662, inst=LOAD_FAST(arg=8, lineno=1243)
2024-06-06 03:46:41,158 - DEBUG - stack []
2024-06-06 03:46:41,159 - DEBUG - dispatch pc=664, inst=LOAD_CONST(arg=3, lineno=1243)
2024-06-06 03:46:41,159 - DEBUG - stack ['$n662.0']
2024-06-06 03:46:41,159 - DEBUG - dispatch pc=666, inst=BINARY_OP(arg=13, lineno=1243)
2024-06-06 03:46:41,159 - DEBUG - stack ['$n662.0', '$const664.1']
2024-06-06 03:46:41,159 - DEBUG - dispatch pc=670, inst=STORE_FAST(arg=8, lineno=1243)
2024-06-06 03:46:41,159 - DEBUG - stack ['$binop_iadd666.2']
2024-06-06 03:46:41,159 - DEBUG - dispatch pc=672, inst=JUMP_BACKWARD(arg=199, lineno=1244)
2024-06-06 03:46:41,159 - DEBUG - stack []
2024-06-06 03:46:41,159 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:41,159 - DEBUG - pending: deque([State(pc_initial=674 nstack_initial=0), State(pc_initial=276 nstack_initial=0)])
2024-06-06 03:46:41,159 - DEBUG - stack: []
2024-06-06 03:46:41,160 - DEBUG - state.pc_initial: State(pc_initial=674 nstack_initial=0)
2024-06-06 03:46:41,160 - DEBUG - dispatch pc=674, inst=LOAD_FAST(arg=8, lineno=1247)
2024-06-06 03:46:41,160 - DEBUG - stack []
2024-06-06 03:46:41,160 - DEBUG - dispatch pc=676, inst=LOAD_FAST(arg=6, lineno=1247)
2024-06-06 03:46:41,160 - DEBUG - stack ['$n674.0']
2024-06-06 03:46:41,160 - DEBUG - dispatch pc=678, inst=LOAD_CONST(arg=3, lineno=1247)
2024-06-06 03:46:41,160 - DEBUG - stack ['$n674.0', '$wait676.1']
2024-06-06 03:46:41,160 - DEBUG - dispatch pc=680, inst=BINARY_OP(arg=0, lineno=1247)
2024-06-06 03:46:41,160 - DEBUG - stack ['$n674.0', '$wait676.1', '$const678.2']
2024-06-06 03:46:41,161 - DEBUG - dispatch pc=684, inst=BINARY_OP(arg=13, lineno=1247)
2024-06-06 03:46:41,161 - DEBUG - stack ['$n674.0', '$binop_add680.3']
2024-06-06 03:46:41,161 - DEBUG - dispatch pc=688, inst=STORE_FAST(arg=8, lineno=1247)
2024-06-06 03:46:41,161 - DEBUG - stack ['$binop_iadd684.4']
2024-06-06 03:46:41,161 - DEBUG - dispatch pc=690, inst=LOAD_FAST(arg=8, lineno=1229)
2024-06-06 03:46:41,161 - DEBUG - stack []
2024-06-06 03:46:41,162 - DEBUG - dispatch pc=692, inst=LOAD_FAST(arg=0, lineno=1229)
2024-06-06 03:46:41,162 - DEBUG - stack ['$n690.5']
2024-06-06 03:46:41,162 - DEBUG - dispatch pc=694, inst=LOAD_ATTR(arg=6, lineno=1229)
2024-06-06 03:46:41,162 - DEBUG - stack ['$n690.5', '$x692.6']
2024-06-06 03:46:41,162 - DEBUG - dispatch pc=714, inst=LOAD_CONST(arg=1, lineno=1229)
2024-06-06 03:46:41,162 - DEBUG - stack ['$n690.5', '$694load_attr.7']
2024-06-06 03:46:41,162 - DEBUG - dispatch pc=716, inst=BINARY_SUBSCR(arg=None, lineno=1229)
2024-06-06 03:46:41,162 - DEBUG - stack ['$n690.5', '$694load_attr.7', '$const714.8']
2024-06-06 03:46:41,162 - DEBUG - dispatch pc=720, inst=COMPARE_OP(arg=2, lineno=1229)
2024-06-06 03:46:41,162 - DEBUG - stack ['$n690.5', '$716binary_subscr.9']
2024-06-06 03:46:41,162 - DEBUG - dispatch pc=724, inst=POP_JUMP_IF_FALSE(arg=1, lineno=1229)
2024-06-06 03:46:41,163 - DEBUG - stack ['$720compare_op.10']
2024-06-06 03:46:41,163 - DEBUG - end state. edges=[Edge(pc=726, stack=(), blockstack=(), npush=0), Edge(pc=728, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:41,163 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=726 nstack_initial=0), State(pc_initial=728 nstack_initial=0)])
2024-06-06 03:46:41,163 - DEBUG - pending: deque([State(pc_initial=726 nstack_initial=0), State(pc_initial=728 nstack_initial=0)])
2024-06-06 03:46:41,163 - DEBUG - stack: []
2024-06-06 03:46:41,163 - DEBUG - state.pc_initial: State(pc_initial=726 nstack_initial=0)
2024-06-06 03:46:41,163 - DEBUG - dispatch pc=726, inst=JUMP_BACKWARD(arg=208, lineno=1229)
2024-06-06 03:46:41,163 - DEBUG - stack []
2024-06-06 03:46:41,164 - DEBUG - end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:41,164 - DEBUG - pending: deque([State(pc_initial=728 nstack_initial=0), State(pc_initial=312 nstack_initial=0)])
2024-06-06 03:46:41,164 - DEBUG - stack: []
2024-06-06 03:46:41,164 - DEBUG - state.pc_initial: State(pc_initial=728 nstack_initial=0)
2024-06-06 03:46:41,164 - DEBUG - dispatch pc=728, inst=RETURN_CONST(arg=2, lineno=1229)
2024-06-06 03:46:41,164 - DEBUG - stack []
2024-06-06 03:46:41,164 - DEBUG - end state. edges=[]
2024-06-06 03:46:41,164 - DEBUG - pending: deque([State(pc_initial=312 nstack_initial=0)])
2024-06-06 03:46:41,164 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:41,164 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=260 nstack_initial=0): set(),
             State(pc_initial=272 nstack_initial=0): set(),
             State(pc_initial=276 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=470 nstack_initial=0): set(),
             State(pc_initial=482 nstack_initial=0): set(),
             State(pc_initial=662 nstack_initial=0): set(),
             State(pc_initial=674 nstack_initial=0): set(),
             State(pc_initial=726 nstack_initial=0): set(),
             State(pc_initial=728 nstack_initial=0): set(),
             State(pc_initial=730 nstack_initial=0): set()})
2024-06-06 03:46:41,165 - DEBUG - defmap: {}
2024-06-06 03:46:41,165 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:41,165 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:41,165 - DEBUG - keep phismap: {}
2024-06-06 03:46:41,165 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:41,165 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:41,165 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1'}), (8, {'index': '$const6.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (12, {'idx': 0, 'res': '$12load_global.3'}), (22, {'item': '$12load_global.3', 'res': '$22load_attr.5'}), (42, {'res': '$x42.6'}), (44, {'res': '$const44.7'}), (46, {'idx': 2, 'res': '$46load_global.8'}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (80, {'res': '$const80.13'}), (82, {'index': '$const80.13', 'target': '$60load_attr.12', 'res': '$82binary_subscr.14'}), (86, {'func': '$46load_global.8', 'args': ['$post_max56.10', '$82binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (94, {'start': '$const44.7', 'end': '$86call.15', 'container': '$x42.6', 'res': '$94binary_slice.17', 'slicevar': '$94binary_slice.18', 'temp_res': '$94binary_slice.16'}), (96, {'func': '$22load_attr.5', 'args': ['$94binary_slice.17'], 'kw_names': None, 'res': '$96call.19'}), (104, {'lhs': '$8binary_subscr.2', 'rhs': '$96call.19', 'res': '$104compare_op.20'}), (108, {'res': '$peaks108.21'}), (110, {'res': '$const110.22'}), (112, {'target': '$peaks108.21', 'index': '$const110.22', 'value': '$104compare_op.20'}), (116, {'res': '$peaks116.23'}), (118, {'res': '$const118.24'}), (124, {'index': '$const118.24', 'target': '$peaks116.23', 'res': '$124binary_subscr.25'}), (128, {'res': '$x128.26'}), (130, {'res': '$const130.27'}), (132, {'index': '$const130.27', 'target': '$x128.26', 'res': '$132binary_subscr.28'}), (136, {'idx': 0, 'res': '$136load_global.29'}), (146, {'item': '$136load_global.29', 'res': '$146load_attr.31'}), (166, {'res': '$x166.32'}), (168, {'res': '$const168.33'}), (170, {'idx': 2, 'res': '$170load_global.34'}), (180, {'res': '$post_avg180.36'}), (182, {'res': '$x182.37'}), (184, {'item': '$x182.37', 'res': '$184load_attr.38'}), (204, {'res': '$const204.39'}), (206, {'index': '$const204.39', 'target': '$184load_attr.38', 'res': '$206binary_subscr.40'}), (210, {'func': '$170load_global.34', 'args': ['$post_avg180.36', '$206binary_subscr.40'], 'kw_names': None, 'res': '$210call.41'}), (218, {'start': '$const168.33', 'end': '$210call.41', 'container': '$x166.32', 'res': '$218binary_slice.43', 'slicevar': '$218binary_slice.44', 'temp_res': '$218binary_slice.42'}), (220, {'func': '$146load_attr.31', 'args': ['$218binary_slice.43'], 'kw_names': None, 'res': '$220call.45'}), (228, {'res': '$delta228.46'}), (230, {'op': '+', 'lhs': '$220call.45', 'rhs': '$delta228.46', 'res': '$binop_add230.47'}), (234, {'lhs': '$132binary_subscr.28', 'rhs': '$binop_add230.47', 'res': '$234compare_op.48'}), (238, {'op': '&=', 'lhs': '$124binary_subscr.25', 'rhs': '$234compare_op.48', 'res': '$binop_iand238.49'}), (246, {'target': '$peaks116.23', 'index': '$const118.24', 'value': '$binop_iand238.49'}), (250, {'res': '$peaks250.50'}), (252, {'res': '$const252.51'}), (254, {'index': '$const252.51', 'target': '$peaks250.50', 'res': '$254binary_subscr.52'}), (258, {'pred': '$254binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={260: (), 272: ()})
2024-06-06 03:46:41,166 - DEBUG - block_infos State(pc_initial=260 nstack_initial=0):
AdaptBlockInfo(insts=((260, {'res': '$wait260.0'}), (262, {'res': '$const262.1'}), (264, {'op': '+', 'lhs': '$wait260.0', 'rhs': '$const262.1', 'res': '$binop_add264.2'}), (268, {'value': '$binop_add264.2'}), (270, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:41,166 - DEBUG - block_infos State(pc_initial=272 nstack_initial=0):
AdaptBlockInfo(insts=((272, {'res': '$const272.0'}), (274, {'value': '$const272.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:41,166 - DEBUG - block_infos State(pc_initial=276 nstack_initial=0):
AdaptBlockInfo(insts=((276, {'res': '$n276.0'}), (278, {'res': '$x278.1'}), (280, {'item': '$x278.1', 'res': '$280load_attr.2'}), (300, {'res': '$const300.3'}), (302, {'index': '$const300.3', 'target': '$280load_attr.2', 'res': '$302binary_subscr.4'}), (306, {'lhs': '$n276.0', 'rhs': '$302binary_subscr.4', 'res': '$306compare_op.5'}), (310, {'pred': '$306compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 730: ()})
2024-06-06 03:46:41,166 - DEBUG - block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'idx': 0, 'res': '$312load_global.0'}), (322, {'item': '$312load_global.0', 'res': '$322load_attr.2'}), (342, {'res': '$x342.3'}), (344, {'idx': 1, 'res': '$344load_global.4'}), (354, {'res': '$const354.6'}), (356, {'res': '$n356.7'}), (358, {'res': '$pre_max358.8'}), (360, {'op': '-', 'lhs': '$n356.7', 'rhs': '$pre_max358.8', 'res': '$binop_sub360.9'}), (364, {'func': '$344load_global.4', 'args': ['$const354.6', '$binop_sub360.9'], 'kw_names': None, 'res': '$364call.10'}), (372, {'idx': 2, 'res': '$372load_global.11'}), (382, {'res': '$n382.13'}), (384, {'res': '$post_max384.14'}), (386, {'op': '+', 'lhs': '$n382.13', 'rhs': '$post_max384.14', 'res': '$binop_add386.15'}), (390, {'res': '$x390.16'}), (392, {'item': '$x390.16', 'res': '$392load_attr.17'}), (412, {'res': '$const412.18'}), (414, {'index': '$const412.18', 'target': '$392load_attr.17', 'res': '$414binary_subscr.19'}), (418, {'func': '$372load_global.11', 'args': ['$binop_add386.15', '$414binary_subscr.19'], 'kw_names': None, 'res': '$418call.20'}), (426, {'start': '$364call.10', 'end': '$418call.20', 'container': '$x342.3', 'res': '$426binary_slice.22', 'slicevar': '$426binary_slice.23', 'temp_res': '$426binary_slice.21'}), (428, {'func': '$322load_attr.2', 'args': ['$426binary_slice.22'], 'kw_names': None, 'res': '$428call.24'}), (436, {'value': '$428call.24'}), (438, {'res': '$x438.25'}), (440, {'res': '$n440.26'}), (442, {'index': '$n440.26', 'target': '$x438.25', 'res': '$442binary_subscr.27'}), (446, {'res': '$maxn446.28'}), (448, {'lhs': '$442binary_subscr.27', 'rhs': '$maxn446.28', 'res': '$448compare_op.29'}), (452, {'res': '$peaks452.30'}), (454, {'res': '$n454.31'}), (456, {'target': '$peaks452.30', 'index': '$n454.31', 'value': '$448compare_op.29'}), (460, {'res': '$peaks460.32'}), (462, {'res': '$n462.33'}), (464, {'index': '$n462.33', 'target': '$peaks460.32', 'res': '$464binary_subscr.34'}), (468, {'pred': '$464binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={470: (), 482: ()})
2024-06-06 03:46:41,166 - DEBUG - block_infos State(pc_initial=470 nstack_initial=0):
AdaptBlockInfo(insts=((470, {'res': '$n470.0'}), (472, {'res': '$const472.1'}), (474, {'op': '+=', 'lhs': '$n470.0', 'rhs': '$const472.1', 'res': '$binop_iadd474.2'}), (478, {'value': '$binop_iadd474.2'}), (480, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:41,166 - DEBUG - block_infos State(pc_initial=482 nstack_initial=0):
AdaptBlockInfo(insts=((482, {'idx': 0, 'res': '$482load_global.0'}), (492, {'item': '$482load_global.0', 'res': '$492load_attr.2'}), (512, {'res': '$x512.3'}), (514, {'idx': 1, 'res': '$514load_global.4'}), (524, {'res': '$const524.6'}), (526, {'res': '$n526.7'}), (528, {'res': '$pre_avg528.8'}), (530, {'op': '-', 'lhs': '$n526.7', 'rhs': '$pre_avg528.8', 'res': '$binop_sub530.9'}), (534, {'func': '$514load_global.4', 'args': ['$const524.6', '$binop_sub530.9'], 'kw_names': None, 'res': '$534call.10'}), (542, {'idx': 2, 'res': '$542load_global.11'}), (552, {'res': '$n552.13'}), (554, {'res': '$post_avg554.14'}), (556, {'op': '+', 'lhs': '$n552.13', 'rhs': '$post_avg554.14', 'res': '$binop_add556.15'}), (560, {'res': '$x560.16'}), (562, {'item': '$x560.16', 'res': '$562load_attr.17'}), (582, {'res': '$const582.18'}), (584, {'index': '$const582.18', 'target': '$562load_attr.17', 'res': '$584binary_subscr.19'}), (588, {'func': '$542load_global.11', 'args': ['$binop_add556.15', '$584binary_subscr.19'], 'kw_names': None, 'res': '$588call.20'}), (596, {'start': '$534call.10', 'end': '$588call.20', 'container': '$x512.3', 'res': '$596binary_slice.22', 'slicevar': '$596binary_slice.23', 'temp_res': '$596binary_slice.21'}), (598, {'func': '$492load_attr.2', 'args': ['$596binary_slice.22'], 'kw_names': None, 'res': '$598call.24'}), (606, {'value': '$598call.24'}), (608, {'res': '$peaks608.25'}), (610, {'res': '$n610.26'}), (616, {'index': '$n610.26', 'target': '$peaks608.25', 'res': '$616binary_subscr.27'}), (620, {'res': '$x620.28'}), (622, {'res': '$n622.29'}), (624, {'index': '$n622.29', 'target': '$x620.28', 'res': '$624binary_subscr.30'}), (628, {'res': '$avgn628.31'}), (630, {'res': '$delta630.32'}), (632, {'op': '+', 'lhs': '$avgn628.31', 'rhs': '$delta630.32', 'res': '$binop_add632.33'}), (636, {'lhs': '$624binary_subscr.30', 'rhs': '$binop_add632.33', 'res': '$636compare_op.34'}), (640, {'op': '&=', 'lhs': '$616binary_subscr.27', 'rhs': '$636compare_op.34', 'res': '$binop_iand640.35'}), (648, {'target': '$peaks608.25', 'index': '$n610.26', 'value': '$binop_iand640.35'}), (652, {'res': '$peaks652.36'}), (654, {'res': '$n654.37'}), (656, {'index': '$n654.37', 'target': '$peaks652.36', 'res': '$656binary_subscr.38'}), (660, {'pred': '$656binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={662: (), 674: ()})
2024-06-06 03:46:41,166 - DEBUG - block_infos State(pc_initial=662 nstack_initial=0):
AdaptBlockInfo(insts=((662, {'res': '$n662.0'}), (664, {'res': '$const664.1'}), (666, {'op': '+=', 'lhs': '$n662.0', 'rhs': '$const664.1', 'res': '$binop_iadd666.2'}), (670, {'value': '$binop_iadd666.2'}), (672, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2024-06-06 03:46:41,167 - DEBUG - block_infos State(pc_initial=674 nstack_initial=0):
AdaptBlockInfo(insts=((674, {'res': '$n674.0'}), (676, {'res': '$wait676.1'}), (678, {'res': '$const678.2'}), (680, {'op': '+', 'lhs': '$wait676.1', 'rhs': '$const678.2', 'res': '$binop_add680.3'}), (684, {'op': '+=', 'lhs': '$n674.0', 'rhs': '$binop_add680.3', 'res': '$binop_iadd684.4'}), (688, {'value': '$binop_iadd684.4'}), (690, {'res': '$n690.5'}), (692, {'res': '$x692.6'}), (694, {'item': '$x692.6', 'res': '$694load_attr.7'}), (714, {'res': '$const714.8'}), (716, {'index': '$const714.8', 'target': '$694load_attr.7', 'res': '$716binary_subscr.9'}), (720, {'lhs': '$n690.5', 'rhs': '$716binary_subscr.9', 'res': '$720compare_op.10'}), (724, {'pred': '$720compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={726: (), 728: ()})
2024-06-06 03:46:41,167 - DEBUG - block_infos State(pc_initial=726 nstack_initial=0):
AdaptBlockInfo(insts=((726, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: ()})
2024-06-06 03:46:41,167 - DEBUG - block_infos State(pc_initial=728 nstack_initial=0):
AdaptBlockInfo(insts=((728, {'retval': '$const728.0', 'castval': '$728return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:41,167 - DEBUG - block_infos State(pc_initial=730 nstack_initial=0):
AdaptBlockInfo(insts=((730, {'retval': '$const730.0', 'castval': '$730return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:41,171 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1 = const(int, 0)                ['$const6.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1', 'x']
    $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$12load_global.3']
    $22load_attr.5 = getattr(value=$12load_global.3, attr=max) ['$12load_global.3', '$22load_attr.5']
    $const44.7 = const(NoneType, None)       ['$const44.7']
    $46load_global.8 = global(min: <built-in function min>) ['$46load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const80.13 = const(int, 0)              ['$const80.13']
    $82binary_subscr.14 = getitem(value=$60load_attr.12, index=$const80.13, fn=<built-in function getitem>) ['$60load_attr.12', '$82binary_subscr.14', '$const80.13']
    $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.8', '$82binary_subscr.14', '$86call.15', 'post_max']
    $94binary_slice.18 = global(slice: <class 'slice'>) ['$94binary_slice.18']
    $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$94binary_slice.16', '$94binary_slice.18', '$const44.7']
    $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>) ['$94binary_slice.16', '$94binary_slice.17', 'x']
    $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.5', '$94binary_slice.17', '$96call.19']
    $104compare_op.20 = $8binary_subscr.2 >= $96call.19 ['$104compare_op.20', '$8binary_subscr.2', '$96call.19']
    $const110.22 = const(int, 0)             ['$const110.22']
    peaks[$const110.22] = $104compare_op.20  ['$104compare_op.20', '$const110.22', 'peaks']
    $const118.24 = const(int, 0)             ['$const118.24']
    $124binary_subscr.25 = getitem(value=peaks, index=$const118.24, fn=<built-in function getitem>) ['$124binary_subscr.25', '$const118.24', 'peaks']
    $const130.27 = const(int, 0)             ['$const130.27']
    $132binary_subscr.28 = getitem(value=x, index=$const130.27, fn=<built-in function getitem>) ['$132binary_subscr.28', '$const130.27', 'x']
    $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$136load_global.29']
    $146load_attr.31 = getattr(value=$136load_global.29, attr=mean) ['$136load_global.29', '$146load_attr.31']
    $const168.33 = const(NoneType, None)     ['$const168.33']
    $170load_global.34 = global(min: <built-in function min>) ['$170load_global.34']
    $184load_attr.38 = getattr(value=x, attr=shape) ['$184load_attr.38', 'x']
    $const204.39 = const(int, 0)             ['$const204.39']
    $206binary_subscr.40 = getitem(value=$184load_attr.38, index=$const204.39, fn=<built-in function getitem>) ['$184load_attr.38', '$206binary_subscr.40', '$const204.39']
    $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$170load_global.34', '$206binary_subscr.40', '$210call.41', 'post_avg']
    $218binary_slice.44 = global(slice: <class 'slice'>) ['$218binary_slice.44']
    $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$210call.41', '$218binary_slice.42', '$218binary_slice.44', '$const168.33']
    $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>) ['$218binary_slice.42', '$218binary_slice.43', 'x']
    $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_attr.31', '$218binary_slice.43', '$220call.45']
    $binop_add230.47 = $220call.45 + delta   ['$220call.45', '$binop_add230.47', 'delta']
    $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47 ['$132binary_subscr.28', '$234compare_op.48', '$binop_add230.47']
    $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$124binary_subscr.25', '$234compare_op.48', '$binop_iand238.49']
    peaks[$const118.24] = $binop_iand238.49  ['$binop_iand238.49', '$const118.24', 'peaks']
    $const252.51 = const(int, 0)             ['$const252.51']
    $254binary_subscr.52 = getitem(value=peaks, index=$const252.51, fn=<built-in function getitem>) ['$254binary_subscr.52', '$const252.51', 'peaks']
    bool258 = global(bool: <class 'bool'>)   ['bool258']
    $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$254binary_subscr.52', '$258pred', 'bool258']
    branch $258pred, 260, 272                ['$258pred']
label 260:
    $const262.1 = const(int, 1)              ['$const262.1']
    n = wait + $const262.1                   ['$const262.1', 'n', 'wait']
    jump 276                                 []
label 272:
    n = const(int, 1)                        ['n']
    jump 276                                 []
label 276:
    $280load_attr.2 = getattr(value=x, attr=shape) ['$280load_attr.2', 'x']
    $const300.3 = const(int, 0)              ['$const300.3']
    $302binary_subscr.4 = getitem(value=$280load_attr.2, index=$const300.3, fn=<built-in function getitem>) ['$280load_attr.2', '$302binary_subscr.4', '$const300.3']
    $306compare_op.5 = n < $302binary_subscr.4 ['$302binary_subscr.4', '$306compare_op.5', 'n']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$306compare_op.5', '$310pred', 'bool310']
    branch $310pred, 312, 730                ['$310pred']
label 312:
    $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$312load_global.0']
    $322load_attr.2 = getattr(value=$312load_global.0, attr=max) ['$312load_global.0', '$322load_attr.2']
    $344load_global.4 = global(max: <built-in function max>) ['$344load_global.4']
    $const354.6 = const(int, 0)              ['$const354.6']
    $binop_sub360.9 = n - pre_max            ['$binop_sub360.9', 'n', 'pre_max']
    $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.4', '$364call.10', '$binop_sub360.9', '$const354.6']
    $372load_global.11 = global(min: <built-in function min>) ['$372load_global.11']
    $binop_add386.15 = n + post_max          ['$binop_add386.15', 'n', 'post_max']
    $392load_attr.17 = getattr(value=x, attr=shape) ['$392load_attr.17', 'x']
    $const412.18 = const(int, 0)             ['$const412.18']
    $414binary_subscr.19 = getitem(value=$392load_attr.17, index=$const412.18, fn=<built-in function getitem>) ['$392load_attr.17', '$414binary_subscr.19', '$const412.18']
    $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$372load_global.11', '$414binary_subscr.19', '$418call.20', '$binop_add386.15']
    $426binary_slice.23 = global(slice: <class 'slice'>) ['$426binary_slice.23']
    $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$364call.10', '$418call.20', '$426binary_slice.21', '$426binary_slice.23']
    $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>) ['$426binary_slice.21', '$426binary_slice.22', 'x']
    maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$322load_attr.2', '$426binary_slice.22', 'maxn']
    $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$442binary_subscr.27', 'n', 'x']
    $448compare_op.29 = $442binary_subscr.27 == maxn ['$442binary_subscr.27', '$448compare_op.29', 'maxn']
    peaks[n] = $448compare_op.29             ['$448compare_op.29', 'n', 'peaks']
    $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$464binary_subscr.34', 'n', 'peaks']
    bool468 = global(bool: <class 'bool'>)   ['bool468']
    $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$464binary_subscr.34', '$468pred', 'bool468']
    branch $468pred, 482, 470                ['$468pred']
label 470:
    $const472.1 = const(int, 1)              ['$const472.1']
    $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd474.2', '$const472.1', 'n']
    n = $binop_iadd474.2                     ['$binop_iadd474.2', 'n']
    jump 276                                 []
label 482:
    $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$482load_global.0']
    $492load_attr.2 = getattr(value=$482load_global.0, attr=mean) ['$482load_global.0', '$492load_attr.2']
    $514load_global.4 = global(max: <built-in function max>) ['$514load_global.4']
    $const524.6 = const(int, 0)              ['$const524.6']
    $binop_sub530.9 = n - pre_avg            ['$binop_sub530.9', 'n', 'pre_avg']
    $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$514load_global.4', '$534call.10', '$binop_sub530.9', '$const524.6']
    $542load_global.11 = global(min: <built-in function min>) ['$542load_global.11']
    $binop_add556.15 = n + post_avg          ['$binop_add556.15', 'n', 'post_avg']
    $562load_attr.17 = getattr(value=x, attr=shape) ['$562load_attr.17', 'x']
    $const582.18 = const(int, 0)             ['$const582.18']
    $584binary_subscr.19 = getitem(value=$562load_attr.17, index=$const582.18, fn=<built-in function getitem>) ['$562load_attr.17', '$584binary_subscr.19', '$const582.18']
    $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$542load_global.11', '$584binary_subscr.19', '$588call.20', '$binop_add556.15']
    $596binary_slice.23 = global(slice: <class 'slice'>) ['$596binary_slice.23']
    $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$534call.10', '$588call.20', '$596binary_slice.21', '$596binary_slice.23']
    $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>) ['$596binary_slice.21', '$596binary_slice.22', 'x']
    avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$492load_attr.2', '$596binary_slice.22', 'avgn']
    $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$616binary_subscr.27', 'n', 'peaks']
    $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$624binary_subscr.30', 'n', 'x']
    $binop_add632.33 = avgn + delta          ['$binop_add632.33', 'avgn', 'delta']
    $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33 ['$624binary_subscr.30', '$636compare_op.34', '$binop_add632.33']
    $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$616binary_subscr.27', '$636compare_op.34', '$binop_iand640.35']
    peaks[n] = $binop_iand640.35             ['$binop_iand640.35', 'n', 'peaks']
    $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$656binary_subscr.38', 'n', 'peaks']
    bool660 = global(bool: <class 'bool'>)   ['bool660']
    $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$656binary_subscr.38', '$660pred', 'bool660']
    branch $660pred, 674, 662                ['$660pred']
label 662:
    $const664.1 = const(int, 1)              ['$const664.1']
    $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd666.2', '$const664.1', 'n']
    n = $binop_iadd666.2                     ['$binop_iadd666.2', 'n']
    jump 276                                 []
label 674:
    $const678.2 = const(int, 1)              ['$const678.2']
    $binop_add680.3 = wait + $const678.2     ['$binop_add680.3', '$const678.2', 'wait']
    $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add680.3', '$binop_iadd684.4', 'n']
    n = $binop_iadd684.4                     ['$binop_iadd684.4', 'n']
    $694load_attr.7 = getattr(value=x, attr=shape) ['$694load_attr.7', 'x']
    $const714.8 = const(int, 0)              ['$const714.8']
    $716binary_subscr.9 = getitem(value=$694load_attr.7, index=$const714.8, fn=<built-in function getitem>) ['$694load_attr.7', '$716binary_subscr.9', '$const714.8']
    $720compare_op.10 = n < $716binary_subscr.9 ['$716binary_subscr.9', '$720compare_op.10', 'n']
    bool724 = global(bool: <class 'bool'>)   ['bool724']
    $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$720compare_op.10', '$724pred', 'bool724']
    branch $724pred, 726, 728                ['$724pred']
label 726:
    jump 312                                 []
label 728:
    $const728.0 = const(NoneType, None)      ['$const728.0']
    $728return_const.1 = cast(value=$const728.0) ['$728return_const.1', '$const728.0']
    return $728return_const.1                ['$728return_const.1']
label 730:
    $const730.0 = const(NoneType, None)      ['$const730.0']
    $730return_const.1 = cast(value=$const730.0) ['$730return_const.1', '$const730.0']
    return $730return_const.1                ['$730return_const.1']

2024-06-06 03:46:41,190 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:41,190 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939de50>
2024-06-06 03:46:41,190 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:41,190 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-06 03:46:41,190 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-06 03:46:41,190 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-06 03:46:41,190 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-06 03:46:41,190 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-06 03:46:41,191 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-06 03:46:41,191 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-06 03:46:41,191 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:41,191 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-06 03:46:41,191 - DEBUG - on stmt: $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,191 - DEBUG - on stmt: $22load_attr.5 = getattr(value=$12load_global.3, attr=max)
2024-06-06 03:46:41,192 - DEBUG - on stmt: $const44.7 = const(NoneType, None)
2024-06-06 03:46:41,192 - DEBUG - on stmt: $46load_global.8 = global(min: <built-in function min>)
2024-06-06 03:46:41,192 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,192 - DEBUG - on stmt: $const80.13 = const(int, 0)
2024-06-06 03:46:41,192 - DEBUG - on stmt: $82binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const80.13, fn=<built-in function getitem>)
2024-06-06 03:46:41,192 - DEBUG - on stmt: $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,193 - DEBUG - on stmt: $94binary_slice.18 = global(slice: <class 'slice'>)
2024-06-06 03:46:41,193 - DEBUG - on stmt: $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,193 - DEBUG - on stmt: $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>)
2024-06-06 03:46:41,193 - DEBUG - on stmt: $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,193 - DEBUG - on stmt: $104compare_op.20 = $8binary_subscr.2 >= $96call.19
2024-06-06 03:46:41,194 - DEBUG - on stmt: $const110.22 = const(int, 0)
2024-06-06 03:46:41,194 - DEBUG - on stmt: peaks[0] = $104compare_op.20
2024-06-06 03:46:41,194 - DEBUG - on stmt: $const118.24 = const(int, 0)
2024-06-06 03:46:41,194 - DEBUG - on stmt: $124binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const118.24, fn=<built-in function getitem>)
2024-06-06 03:46:41,194 - DEBUG - on stmt: $const130.27 = const(int, 0)
2024-06-06 03:46:41,194 - DEBUG - on stmt: $132binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const130.27, fn=<built-in function getitem>)
2024-06-06 03:46:41,194 - DEBUG - on stmt: $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,194 - DEBUG - on stmt: $146load_attr.31 = getattr(value=$136load_global.29, attr=mean)
2024-06-06 03:46:41,194 - DEBUG - on stmt: $const168.33 = const(NoneType, None)
2024-06-06 03:46:41,194 - DEBUG - on stmt: $170load_global.34 = global(min: <built-in function min>)
2024-06-06 03:46:41,194 - DEBUG - on stmt: $184load_attr.38 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,195 - DEBUG - on stmt: $const204.39 = const(int, 0)
2024-06-06 03:46:41,195 - DEBUG - on stmt: $206binary_subscr.40 = static_getitem(value=$184load_attr.38, index=0, index_var=$const204.39, fn=<built-in function getitem>)
2024-06-06 03:46:41,195 - DEBUG - on stmt: $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,195 - DEBUG - on stmt: $218binary_slice.44 = global(slice: <class 'slice'>)
2024-06-06 03:46:41,195 - DEBUG - on stmt: $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,195 - DEBUG - on stmt: $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>)
2024-06-06 03:46:41,195 - DEBUG - on stmt: $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,195 - DEBUG - on stmt: $binop_add230.47 = $220call.45 + delta
2024-06-06 03:46:41,195 - DEBUG - on stmt: $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47
2024-06-06 03:46:41,195 - DEBUG - on stmt: $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,196 - DEBUG - on stmt: peaks[0] = $binop_iand238.49
2024-06-06 03:46:41,196 - DEBUG - on stmt: $const252.51 = const(int, 0)
2024-06-06 03:46:41,196 - DEBUG - on stmt: $254binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const252.51, fn=<built-in function getitem>)
2024-06-06 03:46:41,196 - DEBUG - on stmt: bool258 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,196 - DEBUG - on stmt: $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,196 - DEBUG - on stmt: branch $258pred, 260, 272
2024-06-06 03:46:41,196 - DEBUG - ==== SSA block analysis pass on 260
2024-06-06 03:46:41,196 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939de50>
2024-06-06 03:46:41,196 - DEBUG - on stmt: $const262.1 = const(int, 1)
2024-06-06 03:46:41,196 - DEBUG - on stmt: n = wait + $const262.1
2024-06-06 03:46:41,196 - DEBUG - on stmt: jump 276
2024-06-06 03:46:41,197 - DEBUG - ==== SSA block analysis pass on 272
2024-06-06 03:46:41,197 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939de50>
2024-06-06 03:46:41,197 - DEBUG - on stmt: n = const(int, 1)
2024-06-06 03:46:41,197 - DEBUG - on stmt: jump 276
2024-06-06 03:46:41,197 - DEBUG - ==== SSA block analysis pass on 276
2024-06-06 03:46:41,197 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939de50>
2024-06-06 03:46:41,197 - DEBUG - on stmt: $280load_attr.2 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,197 - DEBUG - on stmt: $const300.3 = const(int, 0)
2024-06-06 03:46:41,197 - DEBUG - on stmt: $302binary_subscr.4 = static_getitem(value=$280load_attr.2, index=0, index_var=$const300.3, fn=<built-in function getitem>)
2024-06-06 03:46:41,197 - DEBUG - on stmt: $306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:41,197 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,197 - DEBUG - on stmt: $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,198 - DEBUG - on stmt: branch $310pred, 312, 730
2024-06-06 03:46:41,198 - DEBUG - ==== SSA block analysis pass on 312
2024-06-06 03:46:41,198 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939de50>
2024-06-06 03:46:41,198 - DEBUG - on stmt: $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,198 - DEBUG - on stmt: $322load_attr.2 = getattr(value=$312load_global.0, attr=max)
2024-06-06 03:46:41,198 - DEBUG - on stmt: $344load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:41,198 - DEBUG - on stmt: $const354.6 = const(int, 0)
2024-06-06 03:46:41,198 - DEBUG - on stmt: $binop_sub360.9 = n - pre_max
2024-06-06 03:46:41,198 - DEBUG - on stmt: $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,198 - DEBUG - on stmt: $372load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:41,198 - DEBUG - on stmt: $binop_add386.15 = n + post_max
2024-06-06 03:46:41,198 - DEBUG - on stmt: $392load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,199 - DEBUG - on stmt: $const412.18 = const(int, 0)
2024-06-06 03:46:41,199 - DEBUG - on stmt: $414binary_subscr.19 = static_getitem(value=$392load_attr.17, index=0, index_var=$const412.18, fn=<built-in function getitem>)
2024-06-06 03:46:41,199 - DEBUG - on stmt: $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,199 - DEBUG - on stmt: $426binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:41,199 - DEBUG - on stmt: $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,199 - DEBUG - on stmt: $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:41,199 - DEBUG - on stmt: maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,199 - DEBUG - on stmt: $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,199 - DEBUG - on stmt: $448compare_op.29 = $442binary_subscr.27 == maxn
2024-06-06 03:46:41,199 - DEBUG - on stmt: peaks[n] = $448compare_op.29
2024-06-06 03:46:41,200 - DEBUG - on stmt: $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,200 - DEBUG - on stmt: bool468 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,200 - DEBUG - on stmt: $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,200 - DEBUG - on stmt: branch $468pred, 482, 470
2024-06-06 03:46:41,200 - DEBUG - ==== SSA block analysis pass on 470
2024-06-06 03:46:41,200 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939de50>
2024-06-06 03:46:41,200 - DEBUG - on stmt: $const472.1 = const(int, 1)
2024-06-06 03:46:41,200 - DEBUG - on stmt: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,200 - DEBUG - on stmt: n = $binop_iadd474.2
2024-06-06 03:46:41,200 - DEBUG - on stmt: jump 731
2024-06-06 03:46:41,200 - DEBUG - ==== SSA block analysis pass on 482
2024-06-06 03:46:41,201 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939de50>
2024-06-06 03:46:41,201 - DEBUG - on stmt: $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,201 - DEBUG - on stmt: $492load_attr.2 = getattr(value=$482load_global.0, attr=mean)
2024-06-06 03:46:41,201 - DEBUG - on stmt: $514load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:41,201 - DEBUG - on stmt: $const524.6 = const(int, 0)
2024-06-06 03:46:41,201 - DEBUG - on stmt: $binop_sub530.9 = n - pre_avg
2024-06-06 03:46:41,201 - DEBUG - on stmt: $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,201 - DEBUG - on stmt: $542load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:41,201 - DEBUG - on stmt: $binop_add556.15 = n + post_avg
2024-06-06 03:46:41,201 - DEBUG - on stmt: $562load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,201 - DEBUG - on stmt: $const582.18 = const(int, 0)
2024-06-06 03:46:41,201 - DEBUG - on stmt: $584binary_subscr.19 = static_getitem(value=$562load_attr.17, index=0, index_var=$const582.18, fn=<built-in function getitem>)
2024-06-06 03:46:41,202 - DEBUG - on stmt: $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,202 - DEBUG - on stmt: $596binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:41,202 - DEBUG - on stmt: $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,202 - DEBUG - on stmt: $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:41,202 - DEBUG - on stmt: avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,202 - DEBUG - on stmt: $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,202 - DEBUG - on stmt: $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,202 - DEBUG - on stmt: $binop_add632.33 = avgn + delta
2024-06-06 03:46:41,202 - DEBUG - on stmt: $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33
2024-06-06 03:46:41,202 - DEBUG - on stmt: $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,203 - DEBUG - on stmt: peaks[n] = $binop_iand640.35
2024-06-06 03:46:41,203 - DEBUG - on stmt: $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,203 - DEBUG - on stmt: bool660 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,203 - DEBUG - on stmt: $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,203 - DEBUG - on stmt: branch $660pred, 674, 662
2024-06-06 03:46:41,203 - DEBUG - ==== SSA block analysis pass on 662
2024-06-06 03:46:41,203 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939de50>
2024-06-06 03:46:41,203 - DEBUG - on stmt: $const664.1 = const(int, 1)
2024-06-06 03:46:41,203 - DEBUG - on stmt: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,203 - DEBUG - on stmt: n = $binop_iadd666.2
2024-06-06 03:46:41,203 - DEBUG - on stmt: jump 731
2024-06-06 03:46:41,204 - DEBUG - ==== SSA block analysis pass on 674
2024-06-06 03:46:41,204 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939de50>
2024-06-06 03:46:41,204 - DEBUG - on stmt: $const678.2 = const(int, 1)
2024-06-06 03:46:41,204 - DEBUG - on stmt: $binop_add680.3 = wait + $const678.2
2024-06-06 03:46:41,204 - DEBUG - on stmt: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,204 - DEBUG - on stmt: n = $binop_iadd684.4
2024-06-06 03:46:41,204 - DEBUG - on stmt: $694load_attr.7 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,204 - DEBUG - on stmt: $const714.8 = const(int, 0)
2024-06-06 03:46:41,204 - DEBUG - on stmt: $716binary_subscr.9 = static_getitem(value=$694load_attr.7, index=0, index_var=$const714.8, fn=<built-in function getitem>)
2024-06-06 03:46:41,204 - DEBUG - on stmt: $720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:41,204 - DEBUG - on stmt: bool724 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,204 - DEBUG - on stmt: $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,205 - DEBUG - on stmt: branch $724pred, 726, 728
2024-06-06 03:46:41,205 - DEBUG - ==== SSA block analysis pass on 726
2024-06-06 03:46:41,205 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939de50>
2024-06-06 03:46:41,205 - DEBUG - on stmt: jump 312
2024-06-06 03:46:41,205 - DEBUG - ==== SSA block analysis pass on 728
2024-06-06 03:46:41,205 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939de50>
2024-06-06 03:46:41,205 - DEBUG - on stmt: $const728.0 = const(NoneType, None)
2024-06-06 03:46:41,205 - DEBUG - on stmt: $728return_const.1 = cast(value=$const728.0)
2024-06-06 03:46:41,205 - DEBUG - on stmt: return $728return_const.1
2024-06-06 03:46:41,205 - DEBUG - ==== SSA block analysis pass on 730
2024-06-06 03:46:41,205 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939de50>
2024-06-06 03:46:41,205 - DEBUG - on stmt: $const730.0 = const(NoneType, None)
2024-06-06 03:46:41,206 - DEBUG - on stmt: $730return_const.1 = cast(value=$const730.0)
2024-06-06 03:46:41,206 - DEBUG - on stmt: return $730return_const.1
2024-06-06 03:46:41,206 - DEBUG - ==== SSA block analysis pass on 731
2024-06-06 03:46:41,206 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b939de50>
2024-06-06 03:46:41,206 - DEBUG - on stmt: jump 276
2024-06-06 03:46:41,210 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104compare_op.20': [(<numba.core.ir.Assign object at 0x7fe9b952a300>,
                                    0)],
             '$124binary_subscr.25': [(<numba.core.ir.Assign object at 0x7fe9b939ed50>,
                                       0)],
             '$12load_global.3': [(<numba.core.ir.Assign object at 0x7fe9b952b830>,
                                   0)],
             '$132binary_subscr.28': [(<numba.core.ir.Assign object at 0x7fe9b939e480>,
                                       0)],
             '$136load_global.29': [(<numba.core.ir.Assign object at 0x7fe9b934bf80>,
                                     0)],
             '$146load_attr.31': [(<numba.core.ir.Assign object at 0x7fe9b934be30>,
                                   0)],
             '$170load_global.34': [(<numba.core.ir.Assign object at 0x7fe9b934b7d0>,
                                     0)],
             '$184load_attr.38': [(<numba.core.ir.Assign object at 0x7fe9b934b260>,
                                   0)],
             '$206binary_subscr.40': [(<numba.core.ir.Assign object at 0x7fe9b939f5c0>,
                                       0)],
             '$210call.41': [(<numba.core.ir.Assign object at 0x7fe9b934b1d0>,
                              0)],
             '$218binary_slice.42': [(<numba.core.ir.Assign object at 0x7fe9b9348590>,
                                      0)],
             '$218binary_slice.43': [(<numba.core.ir.Assign object at 0x7fe9b9349d90>,
                                      0)],
             '$218binary_slice.44': [(<numba.core.ir.Assign object at 0x7fe9b934b080>,
                                      0)],
             '$220call.45': [(<numba.core.ir.Assign object at 0x7fe9b9349190>,
                              0)],
             '$22load_attr.5': [(<numba.core.ir.Assign object at 0x7fe9b9529be0>,
                                 0)],
             '$234compare_op.48': [(<numba.core.ir.Assign object at 0x7fe9b934a720>,
                                    0)],
             '$254binary_subscr.52': [(<numba.core.ir.Assign object at 0x7fe9b939fb60>,
                                       0)],
             '$258pred': [(<numba.core.ir.Assign object at 0x7fe9b9349250>, 0)],
             '$280load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b934a000>,
                                  276)],
             '$302binary_subscr.4': [(<numba.core.ir.Assign object at 0x7fe9b939ee10>,
                                      276)],
             '$306compare_op.5': [(<numba.core.ir.Assign object at 0x7fe9b9348bc0>,
                                   276)],
             '$310pred': [(<numba.core.ir.Assign object at 0x7fe9b93482f0>,
                           276)],
             '$312load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9348a10>,
                                    312)],
             '$322load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b93483b0>,
                                  312)],
             '$344load_global.4': [(<numba.core.ir.Assign object at 0x7fe9b9349f40>,
                                    312)],
             '$364call.10': [(<numba.core.ir.Assign object at 0x7fe9b94a61b0>,
                              312)],
             '$372load_global.11': [(<numba.core.ir.Assign object at 0x7fe9b94a6750>,
                                     312)],
             '$392load_attr.17': [(<numba.core.ir.Assign object at 0x7fe9b94a7020>,
                                   312)],
             '$414binary_subscr.19': [(<numba.core.ir.Assign object at 0x7fe9b939ed20>,
                                       312)],
             '$418call.20': [(<numba.core.ir.Assign object at 0x7fe9b94a5c10>,
                              312)],
             '$426binary_slice.21': [(<numba.core.ir.Assign object at 0x7fe9b9526a20>,
                                      312)],
             '$426binary_slice.22': [(<numba.core.ir.Assign object at 0x7fe9b9526bd0>,
                                      312)],
             '$426binary_slice.23': [(<numba.core.ir.Assign object at 0x7fe9b94a51f0>,
                                      312)],
             '$442binary_subscr.27': [(<numba.core.ir.Assign object at 0x7fe9b9525ca0>,
                                       312)],
             '$448compare_op.29': [(<numba.core.ir.Assign object at 0x7fe9b9525e50>,
                                    312)],
             '$464binary_subscr.34': [(<numba.core.ir.Assign object at 0x7fe9b95244a0>,
                                       312)],
             '$468pred': [(<numba.core.ir.Assign object at 0x7fe9b9524860>,
                           312)],
             '$46load_global.8': [(<numba.core.ir.Assign object at 0x7fe9b9528200>,
                                   0)],
             '$482load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b95243b0>,
                                    482)],
             '$492load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b9524650>,
                                  482)],
             '$514load_global.4': [(<numba.core.ir.Assign object at 0x7fe9b9524080>,
                                    482)],
             '$534call.10': [(<numba.core.ir.Assign object at 0x7fe9b9527860>,
                              482)],
             '$542load_global.11': [(<numba.core.ir.Assign object at 0x7fe9b9527830>,
                                     482)],
             '$562load_attr.17': [(<numba.core.ir.Assign object at 0x7fe9b9527a40>,
                                   482)],
             '$584binary_subscr.19': [(<numba.core.ir.Assign object at 0x7fe9b939ec60>,
                                       482)],
             '$588call.20': [(<numba.core.ir.Assign object at 0x7fe9b9526780>,
                              482)],
             '$596binary_slice.21': [(<numba.core.ir.Assign object at 0x7fe9b95259a0>,
                                      482)],
             '$596binary_slice.22': [(<numba.core.ir.Assign object at 0x7fe9b939f860>,
                                      482)],
             '$596binary_slice.23': [(<numba.core.ir.Assign object at 0x7fe9b9527e30>,
                                      482)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x7fe9b95283b0>,
                                  0)],
             '$616binary_subscr.27': [(<numba.core.ir.Assign object at 0x7fe9b939e270>,
                                       482)],
             '$624binary_subscr.30': [(<numba.core.ir.Assign object at 0x7fe9b939f800>,
                                       482)],
             '$636compare_op.34': [(<numba.core.ir.Assign object at 0x7fe9b939f230>,
                                    482)],
             '$656binary_subscr.38': [(<numba.core.ir.Assign object at 0x7fe9b939ec00>,
                                       482)],
             '$660pred': [(<numba.core.ir.Assign object at 0x7fe9b939c620>,
                           482)],
             '$694load_attr.7': [(<numba.core.ir.Assign object at 0x7fe9b939c860>,
                                  674)],
             '$716binary_subscr.9': [(<numba.core.ir.Assign object at 0x7fe9b93f1e50>,
                                      674)],
             '$720compare_op.10': [(<numba.core.ir.Assign object at 0x7fe9b939cc50>,
                                    674)],
             '$724pred': [(<numba.core.ir.Assign object at 0x7fe9b939cd70>,
                           674)],
             '$728return_const.1': [(<numba.core.ir.Assign object at 0x7fe9b939d4f0>,
                                     728)],
             '$730return_const.1': [(<numba.core.ir.Assign object at 0x7fe9b939e720>,
                                     730)],
             '$82binary_subscr.14': [(<numba.core.ir.Assign object at 0x7fe9b939d0d0>,
                                      0)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x7fe9b95283e0>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x7fe9b939fd70>,
                                    0)],
             '$94binary_slice.16': [(<numba.core.ir.Assign object at 0x7fe9b9529bb0>,
                                     0)],
             '$94binary_slice.17': [(<numba.core.ir.Assign object at 0x7fe9b95295e0>,
                                     0)],
             '$94binary_slice.18': [(<numba.core.ir.Assign object at 0x7fe9b95296a0>,
                                     0)],
             '$96call.19': [(<numba.core.ir.Assign object at 0x7fe9b952bc50>,
                             0)],
             '$binop_add230.47': [(<numba.core.ir.Assign object at 0x7fe9b93480b0>,
                                   0)],
             '$binop_add386.15': [(<numba.core.ir.Assign object at 0x7fe9b94a5f10>,
                                   312)],
             '$binop_add556.15': [(<numba.core.ir.Assign object at 0x7fe9b9527ad0>,
                                   482)],
             '$binop_add632.33': [(<numba.core.ir.Assign object at 0x7fe9b939ffb0>,
                                   482)],
             '$binop_add680.3': [(<numba.core.ir.Assign object at 0x7fe9b939c680>,
                                  674)],
             '$binop_iadd474.2': [(<numba.core.ir.Assign object at 0x7fe9b9527140>,
                                   470)],
             '$binop_iadd666.2': [(<numba.core.ir.Assign object at 0x7fe9b939f410>,
                                   662)],
             '$binop_iadd684.4': [(<numba.core.ir.Assign object at 0x7fe9b939d610>,
                                   674)],
             '$binop_iand238.49': [(<numba.core.ir.Assign object at 0x7fe9b934a8d0>,
                                    0)],
             '$binop_iand640.35': [(<numba.core.ir.Assign object at 0x7fe9b939eb10>,
                                    482)],
             '$binop_sub360.9': [(<numba.core.ir.Assign object at 0x7fe9b93498b0>,
                                  312)],
             '$binop_sub530.9': [(<numba.core.ir.Assign object at 0x7fe9b9527a70>,
                                  482)],
             '$const110.22': [(<numba.core.ir.Assign object at 0x7fe9b9529a60>,
                               0)],
             '$const118.24': [(<numba.core.ir.Assign object at 0x7fe9b934a570>,
                               0)],
             '$const130.27': [(<numba.core.ir.Assign object at 0x7fe9b934bcb0>,
                               0)],
             '$const168.33': [(<numba.core.ir.Assign object at 0x7fe9b934b9b0>,
                               0)],
             '$const204.39': [(<numba.core.ir.Assign object at 0x7fe9b934b320>,
                               0)],
             '$const252.51': [(<numba.core.ir.Assign object at 0x7fe9b934ac60>,
                               0)],
             '$const262.1': [(<numba.core.ir.Assign object at 0x7fe9b934ac00>,
                              260)],
             '$const300.3': [(<numba.core.ir.Assign object at 0x7fe9b934a150>,
                              276)],
             '$const354.6': [(<numba.core.ir.Assign object at 0x7fe9b934ae10>,
                              312)],
             '$const412.18': [(<numba.core.ir.Assign object at 0x7fe9b94a6570>,
                               312)],
             '$const44.7': [(<numba.core.ir.Assign object at 0x7fe9b9528740>,
                             0)],
             '$const472.1': [(<numba.core.ir.Assign object at 0x7fe9b9526e10>,
                              470)],
             '$const524.6': [(<numba.core.ir.Assign object at 0x7fe9b9526630>,
                              482)],
             '$const582.18': [(<numba.core.ir.Assign object at 0x7fe9b9527b30>,
                               482)],
             '$const6.1': [(<numba.core.ir.Assign object at 0x7fe9b9322270>,
                            0)],
             '$const664.1': [(<numba.core.ir.Assign object at 0x7fe9b939f6e0>,
                              662)],
             '$const678.2': [(<numba.core.ir.Assign object at 0x7fe9b939c080>,
                              674)],
             '$const714.8': [(<numba.core.ir.Assign object at 0x7fe9b939c800>,
                              674)],
             '$const728.0': [(<numba.core.ir.Assign object at 0x7fe9b939d220>,
                              728)],
             '$const730.0': [(<numba.core.ir.Assign object at 0x7fe9b939d5b0>,
                              730)],
             '$const80.13': [(<numba.core.ir.Assign object at 0x7fe9b95288c0>,
                              0)],
             'avgn': [(<numba.core.ir.Assign object at 0x7fe9b939dd60>, 482)],
             'bool258': [(<numba.core.ir.Assign object at 0x7fe9b93490a0>, 0)],
             'bool310': [(<numba.core.ir.Assign object at 0x7fe9b9348080>,
                          276)],
             'bool468': [(<numba.core.ir.Assign object at 0x7fe9b95248f0>,
                          312)],
             'bool660': [(<numba.core.ir.Assign object at 0x7fe9b939e390>,
                          482)],
             'bool724': [(<numba.core.ir.Assign object at 0x7fe9b939ce00>,
                          674)],
             'delta': [(<numba.core.ir.Assign object at 0x7fe9b9b5f890>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x7fe9b9526c90>, 312)],
             'n': [(<numba.core.ir.Assign object at 0x7fe9b9348380>, 260),
                   (<numba.core.ir.Assign object at 0x7fe9b9349970>, 272),
                   (<numba.core.ir.Assign object at 0x7fe9b9525250>, 470),
                   (<numba.core.ir.Assign object at 0x7fe9b939d850>, 662),
                   (<numba.core.ir.Assign object at 0x7fe9b939cda0>, 674)],
             'peaks': [(<numba.core.ir.Assign object at 0x7fe9b926e6c0>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7fe9b9b5f140>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7fe9b9b5e210>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7fe9b9b5c680>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7fe9b9b4c5c0>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7fe9b92596d0>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b9b4c290>, 0)]})
2024-06-06 03:46:41,210 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b98c1cd0>
2024-06-06 03:46:41,211 - DEBUG - Fix SSA violator on var n
2024-06-06 03:46:41,211 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:41,211 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,211 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:41,211 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-06 03:46:41,211 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-06 03:46:41,211 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-06 03:46:41,212 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-06 03:46:41,212 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-06 03:46:41,212 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-06 03:46:41,212 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-06 03:46:41,212 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:41,212 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-06 03:46:41,212 - DEBUG - on stmt: $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,212 - DEBUG - on stmt: $22load_attr.5 = getattr(value=$12load_global.3, attr=max)
2024-06-06 03:46:41,212 - DEBUG - on stmt: $const44.7 = const(NoneType, None)
2024-06-06 03:46:41,212 - DEBUG - on stmt: $46load_global.8 = global(min: <built-in function min>)
2024-06-06 03:46:41,213 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,213 - DEBUG - on stmt: $const80.13 = const(int, 0)
2024-06-06 03:46:41,213 - DEBUG - on stmt: $82binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const80.13, fn=<built-in function getitem>)
2024-06-06 03:46:41,213 - DEBUG - on stmt: $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,213 - DEBUG - on stmt: $94binary_slice.18 = global(slice: <class 'slice'>)
2024-06-06 03:46:41,213 - DEBUG - on stmt: $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,213 - DEBUG - on stmt: $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>)
2024-06-06 03:46:41,213 - DEBUG - on stmt: $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,213 - DEBUG - on stmt: $104compare_op.20 = $8binary_subscr.2 >= $96call.19
2024-06-06 03:46:41,214 - DEBUG - on stmt: $const110.22 = const(int, 0)
2024-06-06 03:46:41,214 - DEBUG - on stmt: peaks[0] = $104compare_op.20
2024-06-06 03:46:41,214 - DEBUG - on stmt: $const118.24 = const(int, 0)
2024-06-06 03:46:41,214 - DEBUG - on stmt: $124binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const118.24, fn=<built-in function getitem>)
2024-06-06 03:46:41,214 - DEBUG - on stmt: $const130.27 = const(int, 0)
2024-06-06 03:46:41,214 - DEBUG - on stmt: $132binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const130.27, fn=<built-in function getitem>)
2024-06-06 03:46:41,214 - DEBUG - on stmt: $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,214 - DEBUG - on stmt: $146load_attr.31 = getattr(value=$136load_global.29, attr=mean)
2024-06-06 03:46:41,214 - DEBUG - on stmt: $const168.33 = const(NoneType, None)
2024-06-06 03:46:41,214 - DEBUG - on stmt: $170load_global.34 = global(min: <built-in function min>)
2024-06-06 03:46:41,214 - DEBUG - on stmt: $184load_attr.38 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,214 - DEBUG - on stmt: $const204.39 = const(int, 0)
2024-06-06 03:46:41,215 - DEBUG - on stmt: $206binary_subscr.40 = static_getitem(value=$184load_attr.38, index=0, index_var=$const204.39, fn=<built-in function getitem>)
2024-06-06 03:46:41,215 - DEBUG - on stmt: $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,215 - DEBUG - on stmt: $218binary_slice.44 = global(slice: <class 'slice'>)
2024-06-06 03:46:41,215 - DEBUG - on stmt: $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,215 - DEBUG - on stmt: $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>)
2024-06-06 03:46:41,215 - DEBUG - on stmt: $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,215 - DEBUG - on stmt: $binop_add230.47 = $220call.45 + delta
2024-06-06 03:46:41,215 - DEBUG - on stmt: $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47
2024-06-06 03:46:41,215 - DEBUG - on stmt: $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,215 - DEBUG - on stmt: peaks[0] = $binop_iand238.49
2024-06-06 03:46:41,215 - DEBUG - on stmt: $const252.51 = const(int, 0)
2024-06-06 03:46:41,215 - DEBUG - on stmt: $254binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const252.51, fn=<built-in function getitem>)
2024-06-06 03:46:41,216 - DEBUG - on stmt: bool258 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,216 - DEBUG - on stmt: $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,216 - DEBUG - on stmt: branch $258pred, 260, 272
2024-06-06 03:46:41,216 - DEBUG - ==== SSA block rewrite pass on 260
2024-06-06 03:46:41,216 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,216 - DEBUG - on stmt: $const262.1 = const(int, 1)
2024-06-06 03:46:41,216 - DEBUG - on stmt: n = wait + $const262.1
2024-06-06 03:46:41,216 - DEBUG - first assign: n
2024-06-06 03:46:41,216 - DEBUG - replaced with: n = wait + $const262.1
2024-06-06 03:46:41,216 - DEBUG - on stmt: jump 276
2024-06-06 03:46:41,216 - DEBUG - ==== SSA block rewrite pass on 272
2024-06-06 03:46:41,216 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,216 - DEBUG - on stmt: n = const(int, 1)
2024-06-06 03:46:41,216 - DEBUG - replaced with: n.1 = const(int, 1)
2024-06-06 03:46:41,217 - DEBUG - on stmt: jump 276
2024-06-06 03:46:41,217 - DEBUG - ==== SSA block rewrite pass on 276
2024-06-06 03:46:41,217 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,217 - DEBUG - on stmt: $280load_attr.2 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,217 - DEBUG - on stmt: $const300.3 = const(int, 0)
2024-06-06 03:46:41,217 - DEBUG - on stmt: $302binary_subscr.4 = static_getitem(value=$280load_attr.2, index=0, index_var=$const300.3, fn=<built-in function getitem>)
2024-06-06 03:46:41,217 - DEBUG - on stmt: $306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:41,217 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,217 - DEBUG - on stmt: $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,217 - DEBUG - on stmt: branch $310pred, 312, 730
2024-06-06 03:46:41,217 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-06 03:46:41,217 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,218 - DEBUG - on stmt: $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,218 - DEBUG - on stmt: $322load_attr.2 = getattr(value=$312load_global.0, attr=max)
2024-06-06 03:46:41,218 - DEBUG - on stmt: $344load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:41,218 - DEBUG - on stmt: $const354.6 = const(int, 0)
2024-06-06 03:46:41,218 - DEBUG - on stmt: $binop_sub360.9 = n - pre_max
2024-06-06 03:46:41,218 - DEBUG - on stmt: $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,218 - DEBUG - on stmt: $372load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:41,218 - DEBUG - on stmt: $binop_add386.15 = n + post_max
2024-06-06 03:46:41,218 - DEBUG - on stmt: $392load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,218 - DEBUG - on stmt: $const412.18 = const(int, 0)
2024-06-06 03:46:41,218 - DEBUG - on stmt: $414binary_subscr.19 = static_getitem(value=$392load_attr.17, index=0, index_var=$const412.18, fn=<built-in function getitem>)
2024-06-06 03:46:41,218 - DEBUG - on stmt: $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,219 - DEBUG - on stmt: $426binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:41,219 - DEBUG - on stmt: $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,219 - DEBUG - on stmt: $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:41,219 - DEBUG - on stmt: maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,219 - DEBUG - on stmt: $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,219 - DEBUG - on stmt: $448compare_op.29 = $442binary_subscr.27 == maxn
2024-06-06 03:46:41,219 - DEBUG - on stmt: peaks[n] = $448compare_op.29
2024-06-06 03:46:41,219 - DEBUG - on stmt: $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,219 - DEBUG - on stmt: bool468 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,219 - DEBUG - on stmt: $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,219 - DEBUG - on stmt: branch $468pred, 482, 470
2024-06-06 03:46:41,220 - DEBUG - ==== SSA block rewrite pass on 470
2024-06-06 03:46:41,220 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,220 - DEBUG - on stmt: $const472.1 = const(int, 1)
2024-06-06 03:46:41,220 - DEBUG - on stmt: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,220 - DEBUG - on stmt: n = $binop_iadd474.2
2024-06-06 03:46:41,220 - DEBUG - replaced with: n.2 = $binop_iadd474.2
2024-06-06 03:46:41,220 - DEBUG - on stmt: jump 731
2024-06-06 03:46:41,220 - DEBUG - ==== SSA block rewrite pass on 482
2024-06-06 03:46:41,220 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,220 - DEBUG - on stmt: $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,220 - DEBUG - on stmt: $492load_attr.2 = getattr(value=$482load_global.0, attr=mean)
2024-06-06 03:46:41,220 - DEBUG - on stmt: $514load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:41,220 - DEBUG - on stmt: $const524.6 = const(int, 0)
2024-06-06 03:46:41,221 - DEBUG - on stmt: $binop_sub530.9 = n - pre_avg
2024-06-06 03:46:41,221 - DEBUG - on stmt: $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,221 - DEBUG - on stmt: $542load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:41,221 - DEBUG - on stmt: $binop_add556.15 = n + post_avg
2024-06-06 03:46:41,221 - DEBUG - on stmt: $562load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,221 - DEBUG - on stmt: $const582.18 = const(int, 0)
2024-06-06 03:46:41,221 - DEBUG - on stmt: $584binary_subscr.19 = static_getitem(value=$562load_attr.17, index=0, index_var=$const582.18, fn=<built-in function getitem>)
2024-06-06 03:46:41,221 - DEBUG - on stmt: $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,221 - DEBUG - on stmt: $596binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:41,221 - DEBUG - on stmt: $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,221 - DEBUG - on stmt: $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:41,221 - DEBUG - on stmt: avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,222 - DEBUG - on stmt: $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,222 - DEBUG - on stmt: $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,222 - DEBUG - on stmt: $binop_add632.33 = avgn + delta
2024-06-06 03:46:41,222 - DEBUG - on stmt: $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33
2024-06-06 03:46:41,222 - DEBUG - on stmt: $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,222 - DEBUG - on stmt: peaks[n] = $binop_iand640.35
2024-06-06 03:46:41,222 - DEBUG - on stmt: $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,222 - DEBUG - on stmt: bool660 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,222 - DEBUG - on stmt: $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,222 - DEBUG - on stmt: branch $660pred, 674, 662
2024-06-06 03:46:41,222 - DEBUG - ==== SSA block rewrite pass on 662
2024-06-06 03:46:41,222 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,222 - DEBUG - on stmt: $const664.1 = const(int, 1)
2024-06-06 03:46:41,223 - DEBUG - on stmt: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,223 - DEBUG - on stmt: n = $binop_iadd666.2
2024-06-06 03:46:41,223 - DEBUG - replaced with: n.3 = $binop_iadd666.2
2024-06-06 03:46:41,223 - DEBUG - on stmt: jump 731
2024-06-06 03:46:41,223 - DEBUG - ==== SSA block rewrite pass on 674
2024-06-06 03:46:41,223 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,223 - DEBUG - on stmt: $const678.2 = const(int, 1)
2024-06-06 03:46:41,223 - DEBUG - on stmt: $binop_add680.3 = wait + $const678.2
2024-06-06 03:46:41,223 - DEBUG - on stmt: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,223 - DEBUG - on stmt: n = $binop_iadd684.4
2024-06-06 03:46:41,223 - DEBUG - replaced with: n.4 = $binop_iadd684.4
2024-06-06 03:46:41,223 - DEBUG - on stmt: $694load_attr.7 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,224 - DEBUG - on stmt: $const714.8 = const(int, 0)
2024-06-06 03:46:41,224 - DEBUG - on stmt: $716binary_subscr.9 = static_getitem(value=$694load_attr.7, index=0, index_var=$const714.8, fn=<built-in function getitem>)
2024-06-06 03:46:41,224 - DEBUG - on stmt: $720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:41,224 - DEBUG - on stmt: bool724 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,224 - DEBUG - on stmt: $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,224 - DEBUG - on stmt: branch $724pred, 726, 728
2024-06-06 03:46:41,224 - DEBUG - ==== SSA block rewrite pass on 726
2024-06-06 03:46:41,224 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,224 - DEBUG - on stmt: jump 312
2024-06-06 03:46:41,224 - DEBUG - ==== SSA block rewrite pass on 728
2024-06-06 03:46:41,224 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,224 - DEBUG - on stmt: $const728.0 = const(NoneType, None)
2024-06-06 03:46:41,224 - DEBUG - on stmt: $728return_const.1 = cast(value=$const728.0)
2024-06-06 03:46:41,225 - DEBUG - on stmt: return $728return_const.1
2024-06-06 03:46:41,225 - DEBUG - ==== SSA block rewrite pass on 730
2024-06-06 03:46:41,225 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,225 - DEBUG - on stmt: $const730.0 = const(NoneType, None)
2024-06-06 03:46:41,225 - DEBUG - on stmt: $730return_const.1 = cast(value=$const730.0)
2024-06-06 03:46:41,225 - DEBUG - on stmt: return $730return_const.1
2024-06-06 03:46:41,225 - DEBUG - ==== SSA block rewrite pass on 731
2024-06-06 03:46:41,225 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,225 - DEBUG - on stmt: jump 276
2024-06-06 03:46:41,225 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {260: [<numba.core.ir.Assign object at 0x7fe9b939d9d0>],
             272: [<numba.core.ir.Assign object at 0x7fe9b939de80>],
             470: [<numba.core.ir.Assign object at 0x7fe9b939e780>],
             662: [<numba.core.ir.Assign object at 0x7fe9b939d6d0>],
             674: [<numba.core.ir.Assign object at 0x7fe9b939dc10>]})
2024-06-06 03:46:41,225 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:41,226 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,226 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:41,226 - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
2024-06-06 03:46:41,226 - DEBUG - on stmt: post_max = arg(2, name=post_max)
2024-06-06 03:46:41,226 - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
2024-06-06 03:46:41,226 - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
2024-06-06 03:46:41,226 - DEBUG - on stmt: delta = arg(5, name=delta)
2024-06-06 03:46:41,226 - DEBUG - on stmt: wait = arg(6, name=wait)
2024-06-06 03:46:41,226 - DEBUG - on stmt: peaks = arg(7, name=peaks)
2024-06-06 03:46:41,226 - DEBUG - on stmt: $const6.1 = const(int, 0)
2024-06-06 03:46:41,226 - DEBUG - on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1, fn=<built-in function getitem>)
2024-06-06 03:46:41,226 - DEBUG - on stmt: $12load_global.3 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,226 - DEBUG - on stmt: $22load_attr.5 = getattr(value=$12load_global.3, attr=max)
2024-06-06 03:46:41,227 - DEBUG - on stmt: $const44.7 = const(NoneType, None)
2024-06-06 03:46:41,227 - DEBUG - on stmt: $46load_global.8 = global(min: <built-in function min>)
2024-06-06 03:46:41,227 - DEBUG - on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,227 - DEBUG - on stmt: $const80.13 = const(int, 0)
2024-06-06 03:46:41,227 - DEBUG - on stmt: $82binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const80.13, fn=<built-in function getitem>)
2024-06-06 03:46:41,227 - DEBUG - on stmt: $86call.15 = call $46load_global.8(post_max, $82binary_subscr.14, func=$46load_global.8, args=[Var(post_max, utils.py:1209), Var($82binary_subscr.14, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,227 - DEBUG - on stmt: $94binary_slice.18 = global(slice: <class 'slice'>)
2024-06-06 03:46:41,227 - DEBUG - on stmt: $94binary_slice.16 = call $94binary_slice.18($const44.7, $86call.15, func=$94binary_slice.18, args=(Var($const44.7, utils.py:1221), Var($86call.15, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,227 - DEBUG - on stmt: $94binary_slice.17 = getitem(value=x, index=$94binary_slice.16, fn=<built-in function getitem>)
2024-06-06 03:46:41,227 - DEBUG - on stmt: $96call.19 = call $22load_attr.5($94binary_slice.17, func=$22load_attr.5, args=[Var($94binary_slice.17, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,228 - DEBUG - on stmt: $104compare_op.20 = $8binary_subscr.2 >= $96call.19
2024-06-06 03:46:41,228 - DEBUG - on stmt: $const110.22 = const(int, 0)
2024-06-06 03:46:41,228 - DEBUG - on stmt: peaks[0] = $104compare_op.20
2024-06-06 03:46:41,228 - DEBUG - on stmt: $const118.24 = const(int, 0)
2024-06-06 03:46:41,228 - DEBUG - on stmt: $124binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const118.24, fn=<built-in function getitem>)
2024-06-06 03:46:41,228 - DEBUG - on stmt: $const130.27 = const(int, 0)
2024-06-06 03:46:41,228 - DEBUG - on stmt: $132binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const130.27, fn=<built-in function getitem>)
2024-06-06 03:46:41,228 - DEBUG - on stmt: $136load_global.29 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,228 - DEBUG - on stmt: $146load_attr.31 = getattr(value=$136load_global.29, attr=mean)
2024-06-06 03:46:41,228 - DEBUG - on stmt: $const168.33 = const(NoneType, None)
2024-06-06 03:46:41,228 - DEBUG - on stmt: $170load_global.34 = global(min: <built-in function min>)
2024-06-06 03:46:41,229 - DEBUG - on stmt: $184load_attr.38 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,229 - DEBUG - on stmt: $const204.39 = const(int, 0)
2024-06-06 03:46:41,229 - DEBUG - on stmt: $206binary_subscr.40 = static_getitem(value=$184load_attr.38, index=0, index_var=$const204.39, fn=<built-in function getitem>)
2024-06-06 03:46:41,229 - DEBUG - on stmt: $210call.41 = call $170load_global.34(post_avg, $206binary_subscr.40, func=$170load_global.34, args=[Var(post_avg, utils.py:1209), Var($206binary_subscr.40, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,229 - DEBUG - on stmt: $218binary_slice.44 = global(slice: <class 'slice'>)
2024-06-06 03:46:41,229 - DEBUG - on stmt: $218binary_slice.42 = call $218binary_slice.44($const168.33, $210call.41, func=$218binary_slice.44, args=(Var($const168.33, utils.py:1222), Var($210call.41, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,229 - DEBUG - on stmt: $218binary_slice.43 = getitem(value=x, index=$218binary_slice.42, fn=<built-in function getitem>)
2024-06-06 03:46:41,229 - DEBUG - on stmt: $220call.45 = call $146load_attr.31($218binary_slice.43, func=$146load_attr.31, args=[Var($218binary_slice.43, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,229 - DEBUG - on stmt: $binop_add230.47 = $220call.45 + delta
2024-06-06 03:46:41,229 - DEBUG - on stmt: $234compare_op.48 = $132binary_subscr.28 >= $binop_add230.47
2024-06-06 03:46:41,229 - DEBUG - on stmt: $binop_iand238.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$124binary_subscr.25, rhs=$234compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,230 - DEBUG - on stmt: peaks[0] = $binop_iand238.49
2024-06-06 03:46:41,230 - DEBUG - on stmt: $const252.51 = const(int, 0)
2024-06-06 03:46:41,230 - DEBUG - on stmt: $254binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const252.51, fn=<built-in function getitem>)
2024-06-06 03:46:41,230 - DEBUG - on stmt: bool258 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,230 - DEBUG - on stmt: $258pred = call bool258($254binary_subscr.52, func=bool258, args=(Var($254binary_subscr.52, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,230 - DEBUG - on stmt: branch $258pred, 260, 272
2024-06-06 03:46:41,230 - DEBUG - ==== SSA block rewrite pass on 260
2024-06-06 03:46:41,230 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,230 - DEBUG - on stmt: $const262.1 = const(int, 1)
2024-06-06 03:46:41,230 - DEBUG - on stmt: n = wait + $const262.1
2024-06-06 03:46:41,231 - DEBUG - on stmt: jump 276
2024-06-06 03:46:41,231 - DEBUG - ==== SSA block rewrite pass on 272
2024-06-06 03:46:41,231 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,231 - DEBUG - on stmt: n.1 = const(int, 1)
2024-06-06 03:46:41,231 - DEBUG - on stmt: jump 276
2024-06-06 03:46:41,231 - DEBUG - ==== SSA block rewrite pass on 276
2024-06-06 03:46:41,231 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,231 - DEBUG - on stmt: $280load_attr.2 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,231 - DEBUG - on stmt: $const300.3 = const(int, 0)
2024-06-06 03:46:41,231 - DEBUG - on stmt: $302binary_subscr.4 = static_getitem(value=$280load_attr.2, index=0, index_var=$const300.3, fn=<built-in function getitem>)
2024-06-06 03:46:41,231 - DEBUG - on stmt: $306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:41,231 - DEBUG - find_def var='n' stmt=$306compare_op.5 = n < $302binary_subscr.4
2024-06-06 03:46:41,232 - DEBUG - find_def_from_top label 276
2024-06-06 03:46:41,232 - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 276
2024-06-06 03:46:41,232 - DEBUG - find_def_from_bottom label 272
2024-06-06 03:46:41,232 - DEBUG - incoming_def n.1 = const(int, 1)
2024-06-06 03:46:41,232 - DEBUG - find_def_from_bottom label 731
2024-06-06 03:46:41,232 - DEBUG - find_def_from_top label 731
2024-06-06 03:46:41,232 - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 731
2024-06-06 03:46:41,232 - DEBUG - find_def_from_bottom label 662
2024-06-06 03:46:41,232 - DEBUG - incoming_def n.3 = $binop_iadd666.2
2024-06-06 03:46:41,232 - DEBUG - find_def_from_bottom label 470
2024-06-06 03:46:41,232 - DEBUG - incoming_def n.2 = $binop_iadd474.2
2024-06-06 03:46:41,232 - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.3, utils.py:1243), Var(n.2, utils.py:1236)], incoming_blocks=[662, 470])
2024-06-06 03:46:41,233 - DEBUG - find_def_from_bottom label 260
2024-06-06 03:46:41,233 - DEBUG - incoming_def n = wait + $const262.1
2024-06-06 03:46:41,233 - DEBUG - replaced with: $306compare_op.5 = n.5 < $302binary_subscr.4
2024-06-06 03:46:41,233 - DEBUG - on stmt: bool310 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,233 - DEBUG - on stmt: $310pred = call bool310($306compare_op.5, func=bool310, args=(Var($306compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,233 - DEBUG - on stmt: branch $310pred, 312, 730
2024-06-06 03:46:41,233 - DEBUG - ==== SSA block rewrite pass on 312
2024-06-06 03:46:41,233 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,233 - DEBUG - on stmt: $312load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,233 - DEBUG - on stmt: $322load_attr.2 = getattr(value=$312load_global.0, attr=max)
2024-06-06 03:46:41,233 - DEBUG - on stmt: $344load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:41,234 - DEBUG - on stmt: $const354.6 = const(int, 0)
2024-06-06 03:46:41,234 - DEBUG - on stmt: $binop_sub360.9 = n - pre_max
2024-06-06 03:46:41,234 - DEBUG - find_def var='n' stmt=$binop_sub360.9 = n - pre_max
2024-06-06 03:46:41,234 - DEBUG - find_def_from_top label 312
2024-06-06 03:46:41,234 - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 312
2024-06-06 03:46:41,234 - DEBUG - find_def_from_bottom label 276
2024-06-06 03:46:41,234 - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n.1, utils.py:1227), Var(n.6, utils.py:1229), Var(n, utils.py:1225)], incoming_blocks=[272, 731, 260])
2024-06-06 03:46:41,234 - DEBUG - find_def_from_bottom label 726
2024-06-06 03:46:41,234 - DEBUG - find_def_from_top label 726
2024-06-06 03:46:41,234 - DEBUG - idom 674 from label 726
2024-06-06 03:46:41,234 - DEBUG - find_def_from_bottom label 674
2024-06-06 03:46:41,234 - DEBUG - incoming_def n.4 = $binop_iadd684.4
2024-06-06 03:46:41,235 - DEBUG - replaced with: $binop_sub360.9 = n.7 - pre_max
2024-06-06 03:46:41,235 - DEBUG - on stmt: $364call.10 = call $344load_global.4($const354.6, $binop_sub360.9, func=$344load_global.4, args=[Var($const354.6, utils.py:1230), Var($binop_sub360.9, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,235 - DEBUG - on stmt: $372load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:41,235 - DEBUG - on stmt: $binop_add386.15 = n + post_max
2024-06-06 03:46:41,235 - DEBUG - find_def var='n' stmt=$binop_add386.15 = n + post_max
2024-06-06 03:46:41,235 - DEBUG - replaced with: $binop_add386.15 = n.7 + post_max
2024-06-06 03:46:41,235 - DEBUG - on stmt: $392load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,235 - DEBUG - on stmt: $const412.18 = const(int, 0)
2024-06-06 03:46:41,235 - DEBUG - on stmt: $414binary_subscr.19 = static_getitem(value=$392load_attr.17, index=0, index_var=$const412.18, fn=<built-in function getitem>)
2024-06-06 03:46:41,235 - DEBUG - on stmt: $418call.20 = call $372load_global.11($binop_add386.15, $414binary_subscr.19, func=$372load_global.11, args=[Var($binop_add386.15, utils.py:1230), Var($414binary_subscr.19, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,235 - DEBUG - on stmt: $426binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:41,236 - DEBUG - on stmt: $426binary_slice.21 = call $426binary_slice.23($364call.10, $418call.20, func=$426binary_slice.23, args=(Var($364call.10, utils.py:1230), Var($418call.20, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,236 - DEBUG - on stmt: $426binary_slice.22 = getitem(value=x, index=$426binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:41,236 - DEBUG - on stmt: maxn = call $322load_attr.2($426binary_slice.22, func=$322load_attr.2, args=[Var($426binary_slice.22, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,236 - DEBUG - on stmt: $442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,236 - DEBUG - find_def var='n' stmt=$442binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,236 - DEBUG - replaced with: $442binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:41,236 - DEBUG - on stmt: $448compare_op.29 = $442binary_subscr.27 == maxn
2024-06-06 03:46:41,236 - DEBUG - on stmt: peaks[n] = $448compare_op.29
2024-06-06 03:46:41,236 - DEBUG - find_def var='n' stmt=peaks[n] = $448compare_op.29
2024-06-06 03:46:41,236 - DEBUG - replaced with: peaks[n.7] = $448compare_op.29
2024-06-06 03:46:41,236 - DEBUG - on stmt: $464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,237 - DEBUG - find_def var='n' stmt=$464binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,237 - DEBUG - replaced with: $464binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:41,237 - DEBUG - on stmt: bool468 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,237 - DEBUG - on stmt: $468pred = call bool468($464binary_subscr.34, func=bool468, args=(Var($464binary_subscr.34, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,237 - DEBUG - on stmt: branch $468pred, 482, 470
2024-06-06 03:46:41,237 - DEBUG - ==== SSA block rewrite pass on 470
2024-06-06 03:46:41,237 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,237 - DEBUG - on stmt: $const472.1 = const(int, 1)
2024-06-06 03:46:41,237 - DEBUG - on stmt: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,237 - DEBUG - find_def var='n' stmt=$binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,237 - DEBUG - find_def_from_top label 470
2024-06-06 03:46:41,237 - DEBUG - idom 312 from label 470
2024-06-06 03:46:41,237 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:41,238 - DEBUG - replaced with: $binop_iadd474.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const472.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,238 - DEBUG - on stmt: n.2 = $binop_iadd474.2
2024-06-06 03:46:41,238 - DEBUG - on stmt: jump 731
2024-06-06 03:46:41,238 - DEBUG - ==== SSA block rewrite pass on 482
2024-06-06 03:46:41,238 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,238 - DEBUG - on stmt: $482load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,238 - DEBUG - on stmt: $492load_attr.2 = getattr(value=$482load_global.0, attr=mean)
2024-06-06 03:46:41,238 - DEBUG - on stmt: $514load_global.4 = global(max: <built-in function max>)
2024-06-06 03:46:41,238 - DEBUG - on stmt: $const524.6 = const(int, 0)
2024-06-06 03:46:41,238 - DEBUG - on stmt: $binop_sub530.9 = n - pre_avg
2024-06-06 03:46:41,238 - DEBUG - find_def var='n' stmt=$binop_sub530.9 = n - pre_avg
2024-06-06 03:46:41,239 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:41,239 - DEBUG - idom 312 from label 482
2024-06-06 03:46:41,239 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:41,239 - DEBUG - replaced with: $binop_sub530.9 = n.7 - pre_avg
2024-06-06 03:46:41,239 - DEBUG - on stmt: $534call.10 = call $514load_global.4($const524.6, $binop_sub530.9, func=$514load_global.4, args=[Var($const524.6, utils.py:1239), Var($binop_sub530.9, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,239 - DEBUG - on stmt: $542load_global.11 = global(min: <built-in function min>)
2024-06-06 03:46:41,239 - DEBUG - on stmt: $binop_add556.15 = n + post_avg
2024-06-06 03:46:41,240 - DEBUG - find_def var='n' stmt=$binop_add556.15 = n + post_avg
2024-06-06 03:46:41,240 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:41,240 - DEBUG - idom 312 from label 482
2024-06-06 03:46:41,240 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:41,240 - DEBUG - replaced with: $binop_add556.15 = n.7 + post_avg
2024-06-06 03:46:41,240 - DEBUG - on stmt: $562load_attr.17 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,241 - DEBUG - on stmt: $const582.18 = const(int, 0)
2024-06-06 03:46:41,241 - DEBUG - on stmt: $584binary_subscr.19 = static_getitem(value=$562load_attr.17, index=0, index_var=$const582.18, fn=<built-in function getitem>)
2024-06-06 03:46:41,241 - DEBUG - on stmt: $588call.20 = call $542load_global.11($binop_add556.15, $584binary_subscr.19, func=$542load_global.11, args=[Var($binop_add556.15, utils.py:1239), Var($584binary_subscr.19, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,241 - DEBUG - on stmt: $596binary_slice.23 = global(slice: <class 'slice'>)
2024-06-06 03:46:41,241 - DEBUG - on stmt: $596binary_slice.21 = call $596binary_slice.23($534call.10, $588call.20, func=$596binary_slice.23, args=(Var($534call.10, utils.py:1239), Var($588call.20, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,241 - DEBUG - on stmt: $596binary_slice.22 = getitem(value=x, index=$596binary_slice.21, fn=<built-in function getitem>)
2024-06-06 03:46:41,241 - DEBUG - on stmt: avgn = call $492load_attr.2($596binary_slice.22, func=$492load_attr.2, args=[Var($596binary_slice.22, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,242 - DEBUG - on stmt: $616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,242 - DEBUG - find_def var='n' stmt=$616binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,242 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:41,242 - DEBUG - idom 312 from label 482
2024-06-06 03:46:41,242 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:41,242 - DEBUG - replaced with: $616binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:41,242 - DEBUG - on stmt: $624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,243 - DEBUG - find_def var='n' stmt=$624binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,243 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:41,243 - DEBUG - idom 312 from label 482
2024-06-06 03:46:41,243 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:41,243 - DEBUG - replaced with: $624binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:41,243 - DEBUG - on stmt: $binop_add632.33 = avgn + delta
2024-06-06 03:46:41,243 - DEBUG - on stmt: $636compare_op.34 = $624binary_subscr.30 >= $binop_add632.33
2024-06-06 03:46:41,243 - DEBUG - on stmt: $binop_iand640.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$616binary_subscr.27, rhs=$636compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,244 - DEBUG - on stmt: peaks[n] = $binop_iand640.35
2024-06-06 03:46:41,244 - DEBUG - find_def var='n' stmt=peaks[n] = $binop_iand640.35
2024-06-06 03:46:41,244 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:41,244 - DEBUG - idom 312 from label 482
2024-06-06 03:46:41,244 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:41,244 - DEBUG - replaced with: peaks[n.7] = $binop_iand640.35
2024-06-06 03:46:41,244 - DEBUG - on stmt: $656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,244 - DEBUG - find_def var='n' stmt=$656binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
2024-06-06 03:46:41,245 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:41,245 - DEBUG - idom 312 from label 482
2024-06-06 03:46:41,245 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:41,245 - DEBUG - replaced with: $656binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
2024-06-06 03:46:41,245 - DEBUG - on stmt: bool660 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,245 - DEBUG - on stmt: $660pred = call bool660($656binary_subscr.38, func=bool660, args=(Var($656binary_subscr.38, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,245 - DEBUG - on stmt: branch $660pred, 674, 662
2024-06-06 03:46:41,245 - DEBUG - ==== SSA block rewrite pass on 662
2024-06-06 03:46:41,245 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,246 - DEBUG - on stmt: $const664.1 = const(int, 1)
2024-06-06 03:46:41,246 - DEBUG - on stmt: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,246 - DEBUG - find_def var='n' stmt=$binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,246 - DEBUG - find_def_from_top label 662
2024-06-06 03:46:41,246 - DEBUG - idom 482 from label 662
2024-06-06 03:46:41,246 - DEBUG - find_def_from_bottom label 482
2024-06-06 03:46:41,246 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:41,246 - DEBUG - idom 312 from label 482
2024-06-06 03:46:41,247 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:41,247 - DEBUG - replaced with: $binop_iadd666.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const664.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,247 - DEBUG - on stmt: n.3 = $binop_iadd666.2
2024-06-06 03:46:41,247 - DEBUG - on stmt: jump 731
2024-06-06 03:46:41,247 - DEBUG - ==== SSA block rewrite pass on 674
2024-06-06 03:46:41,247 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,247 - DEBUG - on stmt: $const678.2 = const(int, 1)
2024-06-06 03:46:41,247 - DEBUG - on stmt: $binop_add680.3 = wait + $const678.2
2024-06-06 03:46:41,248 - DEBUG - on stmt: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,248 - DEBUG - find_def var='n' stmt=$binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,248 - DEBUG - find_def_from_top label 674
2024-06-06 03:46:41,248 - DEBUG - idom 482 from label 674
2024-06-06 03:46:41,248 - DEBUG - find_def_from_bottom label 482
2024-06-06 03:46:41,248 - DEBUG - find_def_from_top label 482
2024-06-06 03:46:41,248 - DEBUG - idom 312 from label 482
2024-06-06 03:46:41,248 - DEBUG - find_def_from_bottom label 312
2024-06-06 03:46:41,249 - DEBUG - replaced with: $binop_iadd684.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add680.3, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,249 - DEBUG - on stmt: n.4 = $binop_iadd684.4
2024-06-06 03:46:41,249 - DEBUG - on stmt: $694load_attr.7 = getattr(value=x, attr=shape)
2024-06-06 03:46:41,249 - DEBUG - on stmt: $const714.8 = const(int, 0)
2024-06-06 03:46:41,249 - DEBUG - on stmt: $716binary_subscr.9 = static_getitem(value=$694load_attr.7, index=0, index_var=$const714.8, fn=<built-in function getitem>)
2024-06-06 03:46:41,249 - DEBUG - on stmt: $720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:41,249 - DEBUG - find_def var='n' stmt=$720compare_op.10 = n < $716binary_subscr.9
2024-06-06 03:46:41,249 - DEBUG - replaced with: $720compare_op.10 = n.4 < $716binary_subscr.9
2024-06-06 03:46:41,250 - DEBUG - on stmt: bool724 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,250 - DEBUG - on stmt: $724pred = call bool724($720compare_op.10, func=bool724, args=(Var($720compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,250 - DEBUG - on stmt: branch $724pred, 726, 728
2024-06-06 03:46:41,250 - DEBUG - ==== SSA block rewrite pass on 726
2024-06-06 03:46:41,250 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,250 - DEBUG - on stmt: jump 312
2024-06-06 03:46:41,250 - DEBUG - ==== SSA block rewrite pass on 728
2024-06-06 03:46:41,251 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,251 - DEBUG - on stmt: $const728.0 = const(NoneType, None)
2024-06-06 03:46:41,251 - DEBUG - on stmt: $728return_const.1 = cast(value=$const728.0)
2024-06-06 03:46:41,251 - DEBUG - on stmt: return $728return_const.1
2024-06-06 03:46:41,251 - DEBUG - ==== SSA block rewrite pass on 730
2024-06-06 03:46:41,251 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,251 - DEBUG - on stmt: $const730.0 = const(NoneType, None)
2024-06-06 03:46:41,251 - DEBUG - on stmt: $730return_const.1 = cast(value=$const730.0)
2024-06-06 03:46:41,251 - DEBUG - on stmt: return $730return_const.1
2024-06-06 03:46:41,252 - DEBUG - ==== SSA block rewrite pass on 731
2024-06-06 03:46:41,252 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b93b4f50>
2024-06-06 03:46:41,252 - DEBUG - on stmt: jump 276
2024-06-06 03:46:41,263 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	COPY_FREE_VARS(arg=2, lineno=570)
           4	RESUME(arg=0, lineno=570)
           6	LOAD_FAST(arg=0, lineno=571)
           8	LOAD_ATTR(arg=0, lineno=571)
          28	LOAD_CONST(arg=1, lineno=571)
          30	COMPARE_OP(arg=40, lineno=571)
          34	POP_JUMP_IF_FALSE(arg=11, lineno=571)
          36	LOAD_GLOBAL(arg=3, lineno=572)
          46	LOAD_CONST(arg=2, lineno=572)
          48	CALL(arg=1, lineno=572)
          56	RAISE_VARARGS(arg=1, lineno=572)
>         58	LOAD_GLOBAL(arg=5, lineno=575)
          68	LOAD_ATTR(arg=6, lineno=575)
          88	LOAD_FAST(arg=0, lineno=575)
          90	CALL(arg=1, lineno=575)
          98	STORE_FAST(arg=1, lineno=575)
         100	LOAD_GLOBAL(arg=9, lineno=576)
         110	LOAD_FAST(arg=1, lineno=576)
         112	CALL(arg=1, lineno=576)
         120	LOAD_ATTR(arg=11, lineno=576)
         140	LOAD_CONST(arg=1, lineno=576)
         142	CALL(arg=1, lineno=576)
         150	STORE_FAST(arg=2, lineno=576)
         152	PUSH_NULL(arg=None, lineno=577)
         154	LOAD_DEREF(arg=6, lineno=577)
         156	LOAD_FAST(arg=2, lineno=577)
         158	CALL(arg=1, lineno=577)
         166	POP_JUMP_IF_FALSE(arg=2, lineno=577)
         168	LOAD_FAST(arg=2, lineno=578)
         170	RETURN_VALUE(arg=None, lineno=578)
>        172	LOAD_FAST(arg=1, lineno=580)
         174	GET_ITER(arg=None, lineno=580)
>        176	FOR_ITER(arg=42, lineno=580)
         180	STORE_FAST(arg=3, lineno=580)
         182	LOAD_FAST(arg=3, lineno=581)
         184	LOAD_ATTR(arg=13, lineno=581)
         204	CALL(arg=0, lineno=581)
         212	STORE_FAST(arg=4, lineno=581)
         214	PUSH_NULL(arg=None, lineno=582)
         216	LOAD_DEREF(arg=6, lineno=582)
         218	LOAD_FAST(arg=4, lineno=582)
         220	CALL(arg=1, lineno=582)
         228	POP_JUMP_IF_FALSE(arg=4, lineno=582)
         230	LOAD_FAST(arg=4, lineno=583)
         232	SWAP(arg=2, lineno=583)
         234	POP_TOP(arg=None, lineno=583)
         236	RETURN_VALUE(arg=None, lineno=583)
>        238	PUSH_NULL(arg=None, lineno=584)
         240	LOAD_DEREF(arg=5, lineno=584)
         242	LOAD_FAST(arg=4, lineno=584)
         244	LOAD_FAST(arg=2, lineno=584)
         246	CALL(arg=2, lineno=584)
         254	POP_JUMP_IF_TRUE(arg=1, lineno=584)
         256	JUMP_BACKWARD(arg=41, lineno=584)
>        258	LOAD_FAST(arg=4, lineno=585)
         260	STORE_FAST(arg=2, lineno=585)
         262	JUMP_BACKWARD(arg=44, lineno=585)
>        264	END_FOR(arg=None, lineno=580)
         266	LOAD_FAST(arg=2, lineno=586)
         268	RETURN_VALUE(arg=None, lineno=586)
2024-06-06 03:46:41,263 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:41,263 - DEBUG - stack: []
2024-06-06 03:46:41,264 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:41,264 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
2024-06-06 03:46:41,264 - DEBUG - stack []
2024-06-06 03:46:41,264 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=570)
2024-06-06 03:46:41,264 - DEBUG - stack []
2024-06-06 03:46:41,264 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=570)
2024-06-06 03:46:41,264 - DEBUG - stack []
2024-06-06 03:46:41,264 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=571)
2024-06-06 03:46:41,264 - DEBUG - stack []
2024-06-06 03:46:41,265 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=571)
2024-06-06 03:46:41,265 - DEBUG - stack ['$a6.0']
2024-06-06 03:46:41,265 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=571)
2024-06-06 03:46:41,265 - DEBUG - stack ['$8load_attr.1']
2024-06-06 03:46:41,265 - DEBUG - dispatch pc=30, inst=COMPARE_OP(arg=40, lineno=571)
2024-06-06 03:46:41,265 - DEBUG - stack ['$8load_attr.1', '$const28.2']
2024-06-06 03:46:41,265 - DEBUG - dispatch pc=34, inst=POP_JUMP_IF_FALSE(arg=11, lineno=571)
2024-06-06 03:46:41,265 - DEBUG - stack ['$30compare_op.3']
2024-06-06 03:46:41,266 - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:41,266 - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2024-06-06 03:46:41,266 - DEBUG - stack: []
2024-06-06 03:46:41,266 - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2024-06-06 03:46:41,266 - DEBUG - dispatch pc=36, inst=LOAD_GLOBAL(arg=3, lineno=572)
2024-06-06 03:46:41,266 - DEBUG - stack []
2024-06-06 03:46:41,266 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=2, lineno=572)
2024-06-06 03:46:41,266 - DEBUG - stack ['$null$36.1', '$36load_global.0']
2024-06-06 03:46:41,267 - DEBUG - dispatch pc=48, inst=CALL(arg=1, lineno=572)
2024-06-06 03:46:41,267 - DEBUG - stack ['$null$36.1', '$36load_global.0', '$const46.2']
2024-06-06 03:46:41,267 - DEBUG - dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=572)
2024-06-06 03:46:41,267 - DEBUG - stack ['$48call.3']
2024-06-06 03:46:41,267 - DEBUG - end state. edges=[]
2024-06-06 03:46:41,267 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0)])
2024-06-06 03:46:41,267 - DEBUG - stack: []
2024-06-06 03:46:41,267 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2024-06-06 03:46:41,267 - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=575)
2024-06-06 03:46:41,268 - DEBUG - stack []
2024-06-06 03:46:41,268 - DEBUG - dispatch pc=68, inst=LOAD_ATTR(arg=6, lineno=575)
2024-06-06 03:46:41,268 - DEBUG - stack ['$null$58.1', '$58load_global.0']
2024-06-06 03:46:41,268 - DEBUG - dispatch pc=88, inst=LOAD_FAST(arg=0, lineno=575)
2024-06-06 03:46:41,268 - DEBUG - stack ['$null$58.1', '$68load_attr.2']
2024-06-06 03:46:41,268 - DEBUG - dispatch pc=90, inst=CALL(arg=1, lineno=575)
2024-06-06 03:46:41,268 - DEBUG - stack ['$null$58.1', '$68load_attr.2', '$a88.3']
2024-06-06 03:46:41,268 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=1, lineno=575)
2024-06-06 03:46:41,268 - DEBUG - stack ['$90call.4']
2024-06-06 03:46:41,269 - DEBUG - dispatch pc=100, inst=LOAD_GLOBAL(arg=9, lineno=576)
2024-06-06 03:46:41,269 - DEBUG - stack []
2024-06-06 03:46:41,269 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=576)
2024-06-06 03:46:41,269 - DEBUG - stack ['$null$100.6', '$100load_global.5']
2024-06-06 03:46:41,269 - DEBUG - dispatch pc=112, inst=CALL(arg=1, lineno=576)
2024-06-06 03:46:41,269 - DEBUG - stack ['$null$100.6', '$100load_global.5', '$it110.7']
2024-06-06 03:46:41,269 - DEBUG - dispatch pc=120, inst=LOAD_ATTR(arg=11, lineno=576)
2024-06-06 03:46:41,269 - DEBUG - stack ['$112call.8']
2024-06-06 03:46:41,269 - DEBUG - dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=576)
2024-06-06 03:46:41,269 - DEBUG - stack ['$null$120.9', '$120load_attr.10']
2024-06-06 03:46:41,269 - DEBUG - dispatch pc=142, inst=CALL(arg=1, lineno=576)
2024-06-06 03:46:41,270 - DEBUG - stack ['$null$120.9', '$120load_attr.10', '$const140.11']
2024-06-06 03:46:41,270 - DEBUG - dispatch pc=150, inst=STORE_FAST(arg=2, lineno=576)
2024-06-06 03:46:41,270 - DEBUG - stack ['$142call.12']
2024-06-06 03:46:41,270 - DEBUG - dispatch pc=152, inst=PUSH_NULL(arg=None, lineno=577)
2024-06-06 03:46:41,270 - DEBUG - stack []
2024-06-06 03:46:41,270 - DEBUG - dispatch pc=154, inst=LOAD_DEREF(arg=6, lineno=577)
2024-06-06 03:46:41,270 - DEBUG - stack ['$null$152.13']
2024-06-06 03:46:41,270 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=2, lineno=577)
2024-06-06 03:46:41,270 - DEBUG - stack ['$null$152.13', '$154load_deref.14']
2024-06-06 03:46:41,270 - DEBUG - dispatch pc=158, inst=CALL(arg=1, lineno=577)
2024-06-06 03:46:41,271 - DEBUG - stack ['$null$152.13', '$154load_deref.14', '$max_value156.15']
2024-06-06 03:46:41,271 - DEBUG - dispatch pc=166, inst=POP_JUMP_IF_FALSE(arg=2, lineno=577)
2024-06-06 03:46:41,271 - DEBUG - stack ['$158call.16']
2024-06-06 03:46:41,271 - DEBUG - end state. edges=[Edge(pc=168, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:41,271 - DEBUG - pending: deque([State(pc_initial=168 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
2024-06-06 03:46:41,271 - DEBUG - stack: []
2024-06-06 03:46:41,271 - DEBUG - state.pc_initial: State(pc_initial=168 nstack_initial=0)
2024-06-06 03:46:41,271 - DEBUG - dispatch pc=168, inst=LOAD_FAST(arg=2, lineno=578)
2024-06-06 03:46:41,271 - DEBUG - stack []
2024-06-06 03:46:41,271 - DEBUG - dispatch pc=170, inst=RETURN_VALUE(arg=None, lineno=578)
2024-06-06 03:46:41,272 - DEBUG - stack ['$max_value168.0']
2024-06-06 03:46:41,272 - DEBUG - end state. edges=[]
2024-06-06 03:46:41,272 - DEBUG - pending: deque([State(pc_initial=172 nstack_initial=0)])
2024-06-06 03:46:41,272 - DEBUG - stack: []
2024-06-06 03:46:41,272 - DEBUG - state.pc_initial: State(pc_initial=172 nstack_initial=0)
2024-06-06 03:46:41,272 - DEBUG - dispatch pc=172, inst=LOAD_FAST(arg=1, lineno=580)
2024-06-06 03:46:41,272 - DEBUG - stack []
2024-06-06 03:46:41,272 - DEBUG - dispatch pc=174, inst=GET_ITER(arg=None, lineno=580)
2024-06-06 03:46:41,272 - DEBUG - stack ['$it172.0']
2024-06-06 03:46:41,272 - DEBUG - end state. edges=[Edge(pc=176, stack=('$174get_iter.1',), blockstack=(), npush=0)]
2024-06-06 03:46:41,272 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:41,272 - DEBUG - stack: ['$phi176.0']
2024-06-06 03:46:41,272 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=1)
2024-06-06 03:46:41,273 - DEBUG - dispatch pc=176, inst=FOR_ITER(arg=42, lineno=580)
2024-06-06 03:46:41,273 - DEBUG - stack ['$phi176.0']
2024-06-06 03:46:41,273 - DEBUG - end state. edges=[Edge(pc=264, stack=('$phi176.0', '$176for_iter.2'), blockstack=(), npush=0), Edge(pc=180, stack=('$phi176.0', '$176for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:41,273 - DEBUG - pending: deque([State(pc_initial=264 nstack_initial=2), State(pc_initial=180 nstack_initial=2)])
2024-06-06 03:46:41,273 - DEBUG - stack: ['$phi264.0', '$phi264.1']
2024-06-06 03:46:41,273 - DEBUG - state.pc_initial: State(pc_initial=264 nstack_initial=2)
2024-06-06 03:46:41,273 - DEBUG - dispatch pc=264, inst=END_FOR(arg=None, lineno=580)
2024-06-06 03:46:41,273 - DEBUG - stack ['$phi264.0', '$phi264.1']
2024-06-06 03:46:41,273 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=2, lineno=586)
2024-06-06 03:46:41,273 - DEBUG - stack []
2024-06-06 03:46:41,273 - DEBUG - dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=586)
2024-06-06 03:46:41,273 - DEBUG - stack ['$max_value266.2']
2024-06-06 03:46:41,274 - DEBUG - end state. edges=[]
2024-06-06 03:46:41,274 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=2)])
2024-06-06 03:46:41,274 - DEBUG - stack: ['$phi180.0', '$phi180.1']
2024-06-06 03:46:41,274 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=2)
2024-06-06 03:46:41,274 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=3, lineno=580)
2024-06-06 03:46:41,274 - DEBUG - stack ['$phi180.0', '$phi180.1']
2024-06-06 03:46:41,274 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=3, lineno=581)
2024-06-06 03:46:41,274 - DEBUG - stack ['$phi180.0']
2024-06-06 03:46:41,274 - DEBUG - dispatch pc=184, inst=LOAD_ATTR(arg=13, lineno=581)
2024-06-06 03:46:41,274 - DEBUG - stack ['$phi180.0', '$view182.2']
2024-06-06 03:46:41,274 - DEBUG - dispatch pc=204, inst=CALL(arg=0, lineno=581)
2024-06-06 03:46:41,274 - DEBUG - stack ['$phi180.0', '$null$184.3', '$184load_attr.4']
2024-06-06 03:46:41,274 - DEBUG - dispatch pc=212, inst=STORE_FAST(arg=4, lineno=581)
2024-06-06 03:46:41,275 - DEBUG - stack ['$phi180.0', '$204call.5']
2024-06-06 03:46:41,275 - DEBUG - dispatch pc=214, inst=PUSH_NULL(arg=None, lineno=582)
2024-06-06 03:46:41,275 - DEBUG - stack ['$phi180.0']
2024-06-06 03:46:41,275 - DEBUG - dispatch pc=216, inst=LOAD_DEREF(arg=6, lineno=582)
2024-06-06 03:46:41,275 - DEBUG - stack ['$phi180.0', '$null$214.6']
2024-06-06 03:46:41,275 - DEBUG - dispatch pc=218, inst=LOAD_FAST(arg=4, lineno=582)
2024-06-06 03:46:41,275 - DEBUG - stack ['$phi180.0', '$null$214.6', '$216load_deref.7']
2024-06-06 03:46:41,275 - DEBUG - dispatch pc=220, inst=CALL(arg=1, lineno=582)
2024-06-06 03:46:41,275 - DEBUG - stack ['$phi180.0', '$null$214.6', '$216load_deref.7', '$v218.8']
2024-06-06 03:46:41,275 - DEBUG - dispatch pc=228, inst=POP_JUMP_IF_FALSE(arg=4, lineno=582)
2024-06-06 03:46:41,275 - DEBUG - stack ['$phi180.0', '$220call.9']
2024-06-06 03:46:41,275 - DEBUG - end state. edges=[Edge(pc=230, stack=('$phi180.0',), blockstack=(), npush=0), Edge(pc=238, stack=('$phi180.0',), blockstack=(), npush=0)]
2024-06-06 03:46:41,276 - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1), State(pc_initial=238 nstack_initial=1)])
2024-06-06 03:46:41,276 - DEBUG - stack: ['$phi230.0']
2024-06-06 03:46:41,276 - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2024-06-06 03:46:41,276 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=4, lineno=583)
2024-06-06 03:46:41,276 - DEBUG - stack ['$phi230.0']
2024-06-06 03:46:41,276 - DEBUG - dispatch pc=232, inst=SWAP(arg=2, lineno=583)
2024-06-06 03:46:41,276 - DEBUG - stack ['$phi230.0', '$v230.1']
2024-06-06 03:46:41,276 - DEBUG - dispatch pc=234, inst=POP_TOP(arg=None, lineno=583)
2024-06-06 03:46:41,276 - DEBUG - stack ['$v230.1', '$phi230.0']
2024-06-06 03:46:41,276 - DEBUG - dispatch pc=236, inst=RETURN_VALUE(arg=None, lineno=583)
2024-06-06 03:46:41,276 - DEBUG - stack ['$v230.1']
2024-06-06 03:46:41,276 - DEBUG - end state. edges=[]
2024-06-06 03:46:41,276 - DEBUG - pending: deque([State(pc_initial=238 nstack_initial=1)])
2024-06-06 03:46:41,277 - DEBUG - stack: ['$phi238.0']
2024-06-06 03:46:41,277 - DEBUG - state.pc_initial: State(pc_initial=238 nstack_initial=1)
2024-06-06 03:46:41,277 - DEBUG - dispatch pc=238, inst=PUSH_NULL(arg=None, lineno=584)
2024-06-06 03:46:41,277 - DEBUG - stack ['$phi238.0']
2024-06-06 03:46:41,277 - DEBUG - dispatch pc=240, inst=LOAD_DEREF(arg=5, lineno=584)
2024-06-06 03:46:41,277 - DEBUG - stack ['$phi238.0', '$null$238.1']
2024-06-06 03:46:41,277 - DEBUG - dispatch pc=242, inst=LOAD_FAST(arg=4, lineno=584)
2024-06-06 03:46:41,277 - DEBUG - stack ['$phi238.0', '$null$238.1', '$240load_deref.2']
2024-06-06 03:46:41,277 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=2, lineno=584)
2024-06-06 03:46:41,277 - DEBUG - stack ['$phi238.0', '$null$238.1', '$240load_deref.2', '$v242.3']
2024-06-06 03:46:41,277 - DEBUG - dispatch pc=246, inst=CALL(arg=2, lineno=584)
2024-06-06 03:46:41,277 - DEBUG - stack ['$phi238.0', '$null$238.1', '$240load_deref.2', '$v242.3', '$max_value244.4']
2024-06-06 03:46:41,278 - DEBUG - dispatch pc=254, inst=POP_JUMP_IF_TRUE(arg=1, lineno=584)
2024-06-06 03:46:41,278 - DEBUG - stack ['$phi238.0', '$246call.5']
2024-06-06 03:46:41,278 - DEBUG - end state. edges=[Edge(pc=256, stack=('$phi238.0',), blockstack=(), npush=0), Edge(pc=258, stack=('$phi238.0',), blockstack=(), npush=0)]
2024-06-06 03:46:41,278 - DEBUG - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=258 nstack_initial=1)])
2024-06-06 03:46:41,278 - DEBUG - stack: ['$phi256.0']
2024-06-06 03:46:41,278 - DEBUG - state.pc_initial: State(pc_initial=256 nstack_initial=1)
2024-06-06 03:46:41,278 - DEBUG - dispatch pc=256, inst=JUMP_BACKWARD(arg=41, lineno=584)
2024-06-06 03:46:41,278 - DEBUG - stack ['$phi256.0']
2024-06-06 03:46:41,278 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi256.0',), blockstack=(), npush=0)]
2024-06-06 03:46:41,279 - DEBUG - pending: deque([State(pc_initial=258 nstack_initial=1), State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:41,279 - DEBUG - stack: ['$phi258.0']
2024-06-06 03:46:41,279 - DEBUG - state.pc_initial: State(pc_initial=258 nstack_initial=1)
2024-06-06 03:46:41,279 - DEBUG - dispatch pc=258, inst=LOAD_FAST(arg=4, lineno=585)
2024-06-06 03:46:41,279 - DEBUG - stack ['$phi258.0']
2024-06-06 03:46:41,279 - DEBUG - dispatch pc=260, inst=STORE_FAST(arg=2, lineno=585)
2024-06-06 03:46:41,279 - DEBUG - stack ['$phi258.0', '$v258.1']
2024-06-06 03:46:41,279 - DEBUG - dispatch pc=262, inst=JUMP_BACKWARD(arg=44, lineno=585)
2024-06-06 03:46:41,279 - DEBUG - stack ['$phi258.0']
2024-06-06 03:46:41,279 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi258.0',), blockstack=(), npush=0)]
2024-06-06 03:46:41,280 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:41,280 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2024-06-06 03:46:41,280 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:41,280 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=168 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): {'$phi176.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=230 nstack_initial=1): set(),
             State(pc_initial=238 nstack_initial=1): set(),
             State(pc_initial=256 nstack_initial=1): set(),
             State(pc_initial=258 nstack_initial=1): set(),
             State(pc_initial=264 nstack_initial=2): set()})
2024-06-06 03:46:41,281 - DEBUG - defmap: {'$phi176.0': State(pc_initial=172 nstack_initial=0),
 '$phi180.1': State(pc_initial=176 nstack_initial=1),
 '$phi264.1': State(pc_initial=176 nstack_initial=1)}
2024-06-06 03:46:41,281 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi256.0',
                            State(pc_initial=256 nstack_initial=1)),
                           ('$phi258.0',
                            State(pc_initial=258 nstack_initial=1))},
             '$phi180.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi238.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi256.0': {('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi258.0': {('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi264.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:41,283 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi180.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi238.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi256.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi258.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:41,284 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi238.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi256.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi258.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:41,285 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi230.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi238.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi256.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi258.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.0': {('$174get_iter.1',
                            State(pc_initial=172 nstack_initial=0))},
             '$phi264.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))}})
2024-06-06 03:46:41,287 - DEBUG - keep phismap: {'$phi176.0': {('$174get_iter.1', State(pc_initial=172 nstack_initial=0))},
 '$phi180.1': {('$176for_iter.2', State(pc_initial=176 nstack_initial=1))}}
2024-06-06 03:46:41,287 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=172 nstack_initial=0): {'$phi176.0': '$174get_iter.1'},
             State(pc_initial=176 nstack_initial=1): {'$phi180.1': '$176for_iter.2'}})
2024-06-06 03:46:41,287 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:41,287 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (28, {'res': '$const28.2'}), (30, {'lhs': '$8load_attr.1', 'rhs': '$const28.2', 'res': '$30compare_op.3'}), (34, {'pred': '$30compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: (), 58: ()})
2024-06-06 03:46:41,287 - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'idx': 1, 'res': '$36load_global.0'}), (46, {'res': '$const46.2'}), (48, {'func': '$36load_global.0', 'args': ['$const46.2'], 'kw_names': None, 'res': '$48call.3'}), (56, {'exc': '$48call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:41,288 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (68, {'item': '$58load_global.0', 'res': '$68load_attr.2'}), (88, {'res': '$a88.3'}), (90, {'func': '$68load_attr.2', 'args': ['$a88.3'], 'kw_names': None, 'res': '$90call.4'}), (98, {'value': '$90call.4'}), (100, {'idx': 4, 'res': '$100load_global.5'}), (110, {'res': '$it110.7'}), (112, {'func': '$100load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$112call.8'}), (120, {'item': '$112call.8', 'res': '$120load_attr.10'}), (140, {'res': '$const140.11'}), (142, {'func': '$120load_attr.10', 'args': ['$const140.11'], 'kw_names': None, 'res': '$142call.12'}), (150, {'value': '$142call.12'}), (152, {}), (154, {'res': '$154load_deref.14'}), (156, {'res': '$max_value156.15'}), (158, {'func': '$154load_deref.14', 'args': ['$max_value156.15'], 'kw_names': None, 'res': '$158call.16'}), (166, {'pred': '$158call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={168: (), 172: ()})
2024-06-06 03:46:41,288 - DEBUG - block_infos State(pc_initial=168 nstack_initial=0):
AdaptBlockInfo(insts=((168, {'res': '$max_value168.0'}), (170, {'retval': '$max_value168.0', 'castval': '$170return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:41,288 - DEBUG - block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$it172.0'}), (174, {'value': '$it172.0', 'res': '$174get_iter.1'})), outgoing_phis={'$phi176.0': '$174get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.1',)})
2024-06-06 03:46:41,288 - DEBUG - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {'iterator': '$phi176.0', 'pair': '$176for_iter.1', 'indval': '$176for_iter.2', 'pred': '$176for_iter.3'}),), outgoing_phis={'$phi180.1': '$176for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={264: ('$phi176.0', '$176for_iter.2'), 180: ('$phi176.0', '$176for_iter.2')})
2024-06-06 03:46:41,288 - DEBUG - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$view182.2'}), (184, {'item': '$view182.2', 'res': '$184load_attr.4'}), (204, {'func': '$184load_attr.4', 'args': [], 'kw_names': None, 'res': '$204call.5'}), (212, {'value': '$204call.5'}), (214, {}), (216, {'res': '$216load_deref.7'}), (218, {'res': '$v218.8'}), (220, {'func': '$216load_deref.7', 'args': ['$v218.8'], 'kw_names': None, 'res': '$220call.9'}), (228, {'pred': '$220call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi180.0',), 238: ('$phi180.0',)})
2024-06-06 03:46:41,288 - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'res': '$v230.1'}), (236, {'retval': '$v230.1', 'castval': '$236return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:41,288 - DEBUG - block_infos State(pc_initial=238 nstack_initial=1):
AdaptBlockInfo(insts=((238, {}), (240, {'res': '$240load_deref.2'}), (242, {'res': '$v242.3'}), (244, {'res': '$max_value244.4'}), (246, {'func': '$240load_deref.2', 'args': ['$v242.3', '$max_value244.4'], 'kw_names': None, 'res': '$246call.5'}), (254, {'pred': '$246call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={256: ('$phi238.0',), 258: ('$phi238.0',)})
2024-06-06 03:46:41,289 - DEBUG - block_infos State(pc_initial=256 nstack_initial=1):
AdaptBlockInfo(insts=((256, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi256.0',)})
2024-06-06 03:46:41,289 - DEBUG - block_infos State(pc_initial=258 nstack_initial=1):
AdaptBlockInfo(insts=((258, {'res': '$v258.1'}), (260, {'value': '$v258.1'}), (262, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi258.0',)})
2024-06-06 03:46:41,289 - DEBUG - block_infos State(pc_initial=264 nstack_initial=2):
AdaptBlockInfo(insts=((266, {'res': '$max_value266.2'}), (268, {'retval': '$max_value266.2', 'castval': '$268return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:41,291 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const28.2 = const(int, 0)               ['$const28.2']
    $30compare_op.3 = $8load_attr.1 == $const28.2 ['$30compare_op.3', '$8load_attr.1', '$const28.2']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.3', '$34pred', 'bool34']
    branch $34pred, 36, 58                   ['$34pred']
label 36:
    $36load_global.0 = global(ValueError: <class 'ValueError'>) ['$36load_global.0']
    $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const46.2']
    $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_global.0', '$48call.3', '$const46.2']
    raise $48call.3                          ['$48call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$58load_global.0']
    $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$68load_attr.2']
    it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_attr.2', 'a', 'it']
    $100load_global.5 = global(next: <built-in function next>) ['$100load_global.5']
    $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.5', '$112call.8', 'it']
    $120load_attr.10 = getattr(value=$112call.8, attr=take) ['$112call.8', '$120load_attr.10']
    $const140.11 = const(int, 0)             ['$const140.11']
    max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_attr.10', '$const140.11', 'max_value']
    $154load_deref.14 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>) ['$154load_deref.14']
    $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$154load_deref.14', '$158call.16', 'max_value']
    bool166 = global(bool: <class 'bool'>)   ['bool166']
    $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$158call.16', '$166pred', 'bool166']
    branch $166pred, 168, 172                ['$166pred']
label 168:
    $170return_value.1 = cast(value=max_value) ['$170return_value.1', 'max_value']
    return $170return_value.1                ['$170return_value.1']
label 172:
    $174get_iter.1 = getiter(value=it)       ['$174get_iter.1', 'it']
    $phi176.0 = $174get_iter.1               ['$174get_iter.1', '$phi176.0']
    jump 176                                 []
label 176:
    $176for_iter.1 = iternext(value=$phi176.0) ['$176for_iter.1', '$phi176.0']
    $176for_iter.2 = pair_first(value=$176for_iter.1) ['$176for_iter.1', '$176for_iter.2']
    $176for_iter.3 = pair_second(value=$176for_iter.1) ['$176for_iter.1', '$176for_iter.3']
    $phi180.1 = $176for_iter.2               ['$176for_iter.2', '$phi180.1']
    branch $176for_iter.3, 180, 264          ['$176for_iter.3']
label 180:
    view = $phi180.1                         ['$phi180.1', 'view']
    $184load_attr.4 = getattr(value=view, attr=item) ['$184load_attr.4', 'view']
    v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$184load_attr.4', 'v']
    $216load_deref.7 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>) ['$216load_deref.7']
    $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$216load_deref.7', '$220call.9', 'v']
    bool228 = global(bool: <class 'bool'>)   ['bool228']
    $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$220call.9', '$228pred', 'bool228']
    branch $228pred, 230, 238                ['$228pred']
label 230:
    $236return_value.2 = cast(value=v)       ['$236return_value.2', 'v']
    return $236return_value.2                ['$236return_value.2']
label 238:
    $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>) ['$240load_deref.2']
    $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$240load_deref.2', '$246call.5', 'max_value', 'v']
    bool254 = global(bool: <class 'bool'>)   ['bool254']
    $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$246call.5', '$254pred', 'bool254']
    branch $254pred, 258, 256                ['$254pred']
label 256:
    jump 176                                 []
label 258:
    max_value = v                            ['max_value', 'v']
    jump 176                                 []
label 264:
    $268return_value.3 = cast(value=max_value) ['$268return_value.3', 'max_value']
    return $268return_value.3                ['$268return_value.3']

2024-06-06 03:46:41,302 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:41,302 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936ecc0>
2024-06-06 03:46:41,302 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:41,303 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-06 03:46:41,303 - DEBUG - on stmt: $const28.2 = const(int, 0)
2024-06-06 03:46:41,303 - DEBUG - on stmt: $30compare_op.3 = $8load_attr.1 == $const28.2
2024-06-06 03:46:41,303 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,303 - DEBUG - on stmt: $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,303 - DEBUG - on stmt: branch $34pred, 36, 58
2024-06-06 03:46:41,303 - DEBUG - ==== SSA block analysis pass on 36
2024-06-06 03:46:41,303 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936ecc0>
2024-06-06 03:46:41,303 - DEBUG - on stmt: $36load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:41,304 - DEBUG - on stmt: $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-06 03:46:41,304 - DEBUG - on stmt: $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,304 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-06 03:46:41,304 - DEBUG - ==== SSA block analysis pass on 58
2024-06-06 03:46:41,304 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936ecc0>
2024-06-06 03:46:41,304 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,304 - DEBUG - on stmt: $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-06 03:46:41,304 - DEBUG - on stmt: it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,304 - DEBUG - on stmt: $100load_global.5 = global(next: <built-in function next>)
2024-06-06 03:46:41,304 - DEBUG - on stmt: $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,304 - DEBUG - on stmt: $120load_attr.10 = getattr(value=$112call.8, attr=take)
2024-06-06 03:46:41,305 - DEBUG - on stmt: $const140.11 = const(int, 0)
2024-06-06 03:46:41,305 - DEBUG - on stmt: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,305 - DEBUG - on stmt: $154load_deref.14 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>)
2024-06-06 03:46:41,305 - DEBUG - on stmt: $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,305 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,305 - DEBUG - on stmt: $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,305 - DEBUG - on stmt: branch $166pred, 168, 172
2024-06-06 03:46:41,305 - DEBUG - ==== SSA block analysis pass on 168
2024-06-06 03:46:41,305 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936ecc0>
2024-06-06 03:46:41,305 - DEBUG - on stmt: $170return_value.1 = cast(value=max_value)
2024-06-06 03:46:41,306 - DEBUG - on stmt: return $170return_value.1
2024-06-06 03:46:41,306 - DEBUG - ==== SSA block analysis pass on 172
2024-06-06 03:46:41,306 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936ecc0>
2024-06-06 03:46:41,306 - DEBUG - on stmt: $174get_iter.1 = getiter(value=it)
2024-06-06 03:46:41,306 - DEBUG - on stmt: $phi176.0 = $174get_iter.1
2024-06-06 03:46:41,306 - DEBUG - on stmt: jump 176
2024-06-06 03:46:41,306 - DEBUG - ==== SSA block analysis pass on 176
2024-06-06 03:46:41,306 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936ecc0>
2024-06-06 03:46:41,306 - DEBUG - on stmt: $176for_iter.1 = iternext(value=$phi176.0)
2024-06-06 03:46:41,306 - DEBUG - on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
2024-06-06 03:46:41,306 - DEBUG - on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
2024-06-06 03:46:41,306 - DEBUG - on stmt: $phi180.1 = $176for_iter.2
2024-06-06 03:46:41,307 - DEBUG - on stmt: branch $176for_iter.3, 180, 264
2024-06-06 03:46:41,307 - DEBUG - ==== SSA block analysis pass on 180
2024-06-06 03:46:41,307 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936ecc0>
2024-06-06 03:46:41,307 - DEBUG - on stmt: view = $phi180.1
2024-06-06 03:46:41,307 - DEBUG - on stmt: $184load_attr.4 = getattr(value=view, attr=item)
2024-06-06 03:46:41,307 - DEBUG - on stmt: v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,307 - DEBUG - on stmt: $216load_deref.7 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>)
2024-06-06 03:46:41,307 - DEBUG - on stmt: $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,307 - DEBUG - on stmt: bool228 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,307 - DEBUG - on stmt: $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,307 - DEBUG - on stmt: branch $228pred, 230, 238
2024-06-06 03:46:41,307 - DEBUG - ==== SSA block analysis pass on 230
2024-06-06 03:46:41,308 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936ecc0>
2024-06-06 03:46:41,308 - DEBUG - on stmt: $236return_value.2 = cast(value=v)
2024-06-06 03:46:41,308 - DEBUG - on stmt: return $236return_value.2
2024-06-06 03:46:41,308 - DEBUG - ==== SSA block analysis pass on 238
2024-06-06 03:46:41,308 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936ecc0>
2024-06-06 03:46:41,308 - DEBUG - on stmt: $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>)
2024-06-06 03:46:41,308 - DEBUG - on stmt: $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,308 - DEBUG - on stmt: bool254 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,308 - DEBUG - on stmt: $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,308 - DEBUG - on stmt: branch $254pred, 258, 256
2024-06-06 03:46:41,309 - DEBUG - ==== SSA block analysis pass on 256
2024-06-06 03:46:41,309 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936ecc0>
2024-06-06 03:46:41,309 - DEBUG - on stmt: jump 265
2024-06-06 03:46:41,309 - DEBUG - ==== SSA block analysis pass on 258
2024-06-06 03:46:41,309 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936ecc0>
2024-06-06 03:46:41,309 - DEBUG - on stmt: max_value = v
2024-06-06 03:46:41,309 - DEBUG - on stmt: jump 265
2024-06-06 03:46:41,309 - DEBUG - ==== SSA block analysis pass on 264
2024-06-06 03:46:41,309 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936ecc0>
2024-06-06 03:46:41,309 - DEBUG - on stmt: $268return_value.3 = cast(value=max_value)
2024-06-06 03:46:41,309 - DEBUG - on stmt: return $268return_value.3
2024-06-06 03:46:41,309 - DEBUG - ==== SSA block analysis pass on 265
2024-06-06 03:46:41,309 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936ecc0>
2024-06-06 03:46:41,310 - DEBUG - on stmt: jump 176
2024-06-06 03:46:41,312 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100load_global.5': [(<numba.core.ir.Assign object at 0x7fe9b936e7b0>,
                                    58)],
             '$112call.8': [(<numba.core.ir.Assign object at 0x7fe9b936e2a0>,
                             58)],
             '$120load_attr.10': [(<numba.core.ir.Assign object at 0x7fe9b936e660>,
                                   58)],
             '$154load_deref.14': [(<numba.core.ir.Assign object at 0x7fe9b9357620>,
                                    58)],
             '$158call.16': [(<numba.core.ir.Assign object at 0x7fe9b9357470>,
                              58)],
             '$166pred': [(<numba.core.ir.Assign object at 0x7fe9b9357fe0>,
                           58)],
             '$170return_value.1': [(<numba.core.ir.Assign object at 0x7fe9b93571a0>,
                                     168)],
             '$174get_iter.1': [(<numba.core.ir.Assign object at 0x7fe9b9355460>,
                                 172)],
             '$176for_iter.1': [(<numba.core.ir.Assign object at 0x7fe9b9354f50>,
                                 176)],
             '$176for_iter.2': [(<numba.core.ir.Assign object at 0x7fe9b9357e00>,
                                 176)],
             '$176for_iter.3': [(<numba.core.ir.Assign object at 0x7fe9b9357a70>,
                                 176)],
             '$184load_attr.4': [(<numba.core.ir.Assign object at 0x7fe9b9355820>,
                                  180)],
             '$216load_deref.7': [(<numba.core.ir.Assign object at 0x7fe9b9355c40>,
                                   180)],
             '$220call.9': [(<numba.core.ir.Assign object at 0x7fe9b9355f10>,
                             180)],
             '$228pred': [(<numba.core.ir.Assign object at 0x7fe9b9356300>,
                           180)],
             '$236return_value.2': [(<numba.core.ir.Assign object at 0x7fe9b93566c0>,
                                     230)],
             '$240load_deref.2': [(<numba.core.ir.Assign object at 0x7fe9b9356840>,
                                   238)],
             '$246call.5': [(<numba.core.ir.Assign object at 0x7fe9b9356d80>,
                             238)],
             '$254pred': [(<numba.core.ir.Assign object at 0x7fe9b9356c30>,
                           238)],
             '$268return_value.3': [(<numba.core.ir.Assign object at 0x7fe9b9357980>,
                                     264)],
             '$30compare_op.3': [(<numba.core.ir.Assign object at 0x7fe9b936d2b0>,
                                  0)],
             '$34pred': [(<numba.core.ir.Assign object at 0x7fe9b936d0d0>, 0)],
             '$36load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b936cbf0>,
                                   36)],
             '$48call.3': [(<numba.core.ir.Assign object at 0x7fe9b936c7a0>,
                            36)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b936c5f0>,
                                   58)],
             '$68load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b936c110>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x7fe9b936d5b0>,
                                0)],
             '$const140.11': [(<numba.core.ir.Assign object at 0x7fe9b936e540>,
                               58)],
             '$const28.2': [(<numba.core.ir.Assign object at 0x7fe9b936e990>,
                             0)],
             '$const46.2': [(<numba.core.ir.Assign object at 0x7fe9b936ca70>,
                             36)],
             '$phi176.0': [(<numba.core.ir.Assign object at 0x7fe9b93554c0>,
                            172)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x7fe9b9357b00>,
                            176)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b936d730>, 0)],
             'bool166': [(<numba.core.ir.Assign object at 0x7fe9b93541d0>, 58)],
             'bool228': [(<numba.core.ir.Assign object at 0x7fe9b9355fa0>,
                          180)],
             'bool254': [(<numba.core.ir.Assign object at 0x7fe9b9356f60>,
                          238)],
             'bool34': [(<numba.core.ir.Assign object at 0x7fe9b936cb60>, 0)],
             'it': [(<numba.core.ir.Assign object at 0x7fe9b936c560>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x7fe9b936ce30>,
                            58),
                           (<numba.core.ir.Assign object at 0x7fe9b93571d0>,
                            258)],
             'v': [(<numba.core.ir.Assign object at 0x7fe9b9355af0>, 180)],
             'view': [(<numba.core.ir.Assign object at 0x7fe9b93550a0>, 180)]})
2024-06-06 03:46:41,312 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b936ecc0>
2024-06-06 03:46:41,312 - DEBUG - Fix SSA violator on var max_value
2024-06-06 03:46:41,312 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:41,312 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fec0>
2024-06-06 03:46:41,312 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:41,312 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-06 03:46:41,312 - DEBUG - on stmt: $const28.2 = const(int, 0)
2024-06-06 03:46:41,313 - DEBUG - on stmt: $30compare_op.3 = $8load_attr.1 == $const28.2
2024-06-06 03:46:41,313 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,313 - DEBUG - on stmt: $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,313 - DEBUG - on stmt: branch $34pred, 36, 58
2024-06-06 03:46:41,313 - DEBUG - ==== SSA block rewrite pass on 36
2024-06-06 03:46:41,313 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fec0>
2024-06-06 03:46:41,313 - DEBUG - on stmt: $36load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:41,313 - DEBUG - on stmt: $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-06 03:46:41,313 - DEBUG - on stmt: $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,313 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-06 03:46:41,313 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-06 03:46:41,313 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fec0>
2024-06-06 03:46:41,313 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,314 - DEBUG - on stmt: $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-06 03:46:41,314 - DEBUG - on stmt: it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,314 - DEBUG - on stmt: $100load_global.5 = global(next: <built-in function next>)
2024-06-06 03:46:41,314 - DEBUG - on stmt: $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,314 - DEBUG - on stmt: $120load_attr.10 = getattr(value=$112call.8, attr=take)
2024-06-06 03:46:41,314 - DEBUG - on stmt: $const140.11 = const(int, 0)
2024-06-06 03:46:41,314 - DEBUG - on stmt: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,314 - DEBUG - first assign: max_value
2024-06-06 03:46:41,314 - DEBUG - replaced with: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,314 - DEBUG - on stmt: $154load_deref.14 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>)
2024-06-06 03:46:41,314 - DEBUG - on stmt: $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,315 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,315 - DEBUG - on stmt: $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,315 - DEBUG - on stmt: branch $166pred, 168, 172
2024-06-06 03:46:41,315 - DEBUG - ==== SSA block rewrite pass on 168
2024-06-06 03:46:41,315 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fec0>
2024-06-06 03:46:41,315 - DEBUG - on stmt: $170return_value.1 = cast(value=max_value)
2024-06-06 03:46:41,315 - DEBUG - on stmt: return $170return_value.1
2024-06-06 03:46:41,315 - DEBUG - ==== SSA block rewrite pass on 172
2024-06-06 03:46:41,315 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fec0>
2024-06-06 03:46:41,315 - DEBUG - on stmt: $174get_iter.1 = getiter(value=it)
2024-06-06 03:46:41,315 - DEBUG - on stmt: $phi176.0 = $174get_iter.1
2024-06-06 03:46:41,315 - DEBUG - on stmt: jump 176
2024-06-06 03:46:41,315 - DEBUG - ==== SSA block rewrite pass on 176
2024-06-06 03:46:41,316 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fec0>
2024-06-06 03:46:41,316 - DEBUG - on stmt: $176for_iter.1 = iternext(value=$phi176.0)
2024-06-06 03:46:41,316 - DEBUG - on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
2024-06-06 03:46:41,316 - DEBUG - on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
2024-06-06 03:46:41,316 - DEBUG - on stmt: $phi180.1 = $176for_iter.2
2024-06-06 03:46:41,316 - DEBUG - on stmt: branch $176for_iter.3, 180, 264
2024-06-06 03:46:41,316 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-06 03:46:41,316 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fec0>
2024-06-06 03:46:41,316 - DEBUG - on stmt: view = $phi180.1
2024-06-06 03:46:41,316 - DEBUG - on stmt: $184load_attr.4 = getattr(value=view, attr=item)
2024-06-06 03:46:41,316 - DEBUG - on stmt: v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,316 - DEBUG - on stmt: $216load_deref.7 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>)
2024-06-06 03:46:41,317 - DEBUG - on stmt: $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,317 - DEBUG - on stmt: bool228 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,317 - DEBUG - on stmt: $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,317 - DEBUG - on stmt: branch $228pred, 230, 238
2024-06-06 03:46:41,317 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:41,317 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fec0>
2024-06-06 03:46:41,317 - DEBUG - on stmt: $236return_value.2 = cast(value=v)
2024-06-06 03:46:41,317 - DEBUG - on stmt: return $236return_value.2
2024-06-06 03:46:41,317 - DEBUG - ==== SSA block rewrite pass on 238
2024-06-06 03:46:41,317 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fec0>
2024-06-06 03:46:41,317 - DEBUG - on stmt: $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>)
2024-06-06 03:46:41,317 - DEBUG - on stmt: $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,318 - DEBUG - on stmt: bool254 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,318 - DEBUG - on stmt: $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,318 - DEBUG - on stmt: branch $254pred, 258, 256
2024-06-06 03:46:41,318 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:41,318 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fec0>
2024-06-06 03:46:41,318 - DEBUG - on stmt: jump 265
2024-06-06 03:46:41,318 - DEBUG - ==== SSA block rewrite pass on 258
2024-06-06 03:46:41,318 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fec0>
2024-06-06 03:46:41,319 - DEBUG - on stmt: max_value = v
2024-06-06 03:46:41,319 - DEBUG - replaced with: max_value.1 = v
2024-06-06 03:46:41,319 - DEBUG - on stmt: jump 265
2024-06-06 03:46:41,319 - DEBUG - ==== SSA block rewrite pass on 264
2024-06-06 03:46:41,319 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fec0>
2024-06-06 03:46:41,319 - DEBUG - on stmt: $268return_value.3 = cast(value=max_value)
2024-06-06 03:46:41,319 - DEBUG - on stmt: return $268return_value.3
2024-06-06 03:46:41,319 - DEBUG - ==== SSA block rewrite pass on 265
2024-06-06 03:46:41,319 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fec0>
2024-06-06 03:46:41,320 - DEBUG - on stmt: jump 176
2024-06-06 03:46:41,320 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x7fe9b936f740>],
             258: [<numba.core.ir.Assign object at 0x7fe9b9354260>]})
2024-06-06 03:46:41,320 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:41,320 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fec0>
2024-06-06 03:46:41,320 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:41,320 - DEBUG - on stmt: $8load_attr.1 = getattr(value=a, attr=size)
2024-06-06 03:46:41,320 - DEBUG - on stmt: $const28.2 = const(int, 0)
2024-06-06 03:46:41,320 - DEBUG - on stmt: $30compare_op.3 = $8load_attr.1 == $const28.2
2024-06-06 03:46:41,320 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,321 - DEBUG - on stmt: $34pred = call bool34($30compare_op.3, func=bool34, args=(Var($30compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,321 - DEBUG - on stmt: branch $34pred, 36, 58
2024-06-06 03:46:41,321 - DEBUG - ==== SSA block rewrite pass on 36
2024-06-06 03:46:41,321 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fec0>
2024-06-06 03:46:41,321 - DEBUG - on stmt: $36load_global.0 = global(ValueError: <class 'ValueError'>)
2024-06-06 03:46:41,321 - DEBUG - on stmt: $const46.2 = const(str, zero-size array to reduction operation maximum which has no identity)
2024-06-06 03:46:41,321 - DEBUG - on stmt: $48call.3 = call $36load_global.0($const46.2, func=$36load_global.0, args=[Var($const46.2, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,321 - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
2024-06-06 03:46:41,321 - DEBUG - ==== SSA block rewrite pass on 58
2024-06-06 03:46:41,321 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fec0>
2024-06-06 03:46:41,322 - DEBUG - on stmt: $58load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,322 - DEBUG - on stmt: $68load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
2024-06-06 03:46:41,322 - DEBUG - on stmt: it = call $68load_attr.2(a, func=$68load_attr.2, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,322 - DEBUG - on stmt: $100load_global.5 = global(next: <built-in function next>)
2024-06-06 03:46:41,322 - DEBUG - on stmt: $112call.8 = call $100load_global.5(it, func=$100load_global.5, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,322 - DEBUG - on stmt: $120load_attr.10 = getattr(value=$112call.8, attr=take)
2024-06-06 03:46:41,322 - DEBUG - on stmt: $const140.11 = const(int, 0)
2024-06-06 03:46:41,322 - DEBUG - on stmt: max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,322 - DEBUG - on stmt: $154load_deref.14 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>)
2024-06-06 03:46:41,322 - DEBUG - on stmt: $158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,323 - DEBUG - find_def var='max_value' stmt=$158call.16 = call $154load_deref.14(max_value, func=$154load_deref.14, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,323 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,323 - DEBUG - on stmt: $166pred = call bool166($158call.16, func=bool166, args=(Var($158call.16, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,323 - DEBUG - on stmt: branch $166pred, 168, 172
2024-06-06 03:46:41,323 - DEBUG - ==== SSA block rewrite pass on 168
2024-06-06 03:46:41,323 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fec0>
2024-06-06 03:46:41,323 - DEBUG - on stmt: $170return_value.1 = cast(value=max_value)
2024-06-06 03:46:41,323 - DEBUG - find_def var='max_value' stmt=$170return_value.1 = cast(value=max_value)
2024-06-06 03:46:41,323 - DEBUG - find_def_from_top label 168
2024-06-06 03:46:41,323 - DEBUG - idom 58 from label 168
2024-06-06 03:46:41,324 - DEBUG - find_def_from_bottom label 58
2024-06-06 03:46:41,324 - DEBUG - on stmt: return $170return_value.1
2024-06-06 03:46:41,324 - DEBUG - ==== SSA block rewrite pass on 172
2024-06-06 03:46:41,324 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fec0>
2024-06-06 03:46:41,324 - DEBUG - on stmt: $174get_iter.1 = getiter(value=it)
2024-06-06 03:46:41,324 - DEBUG - on stmt: $phi176.0 = $174get_iter.1
2024-06-06 03:46:41,324 - DEBUG - on stmt: jump 176
2024-06-06 03:46:41,324 - DEBUG - ==== SSA block rewrite pass on 176
2024-06-06 03:46:41,324 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fec0>
2024-06-06 03:46:41,324 - DEBUG - on stmt: $176for_iter.1 = iternext(value=$phi176.0)
2024-06-06 03:46:41,324 - DEBUG - on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
2024-06-06 03:46:41,325 - DEBUG - on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
2024-06-06 03:46:41,325 - DEBUG - on stmt: $phi180.1 = $176for_iter.2
2024-06-06 03:46:41,325 - DEBUG - on stmt: branch $176for_iter.3, 180, 264
2024-06-06 03:46:41,325 - DEBUG - ==== SSA block rewrite pass on 180
2024-06-06 03:46:41,325 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fec0>
2024-06-06 03:46:41,325 - DEBUG - on stmt: view = $phi180.1
2024-06-06 03:46:41,325 - DEBUG - on stmt: $184load_attr.4 = getattr(value=view, attr=item)
2024-06-06 03:46:41,325 - DEBUG - on stmt: v = call $184load_attr.4(func=$184load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,325 - DEBUG - on stmt: $216load_deref.7 = freevar(pre_return_func: <function return_false at 0x7fe9d343e980>)
2024-06-06 03:46:41,325 - DEBUG - on stmt: $220call.9 = call $216load_deref.7(v, func=$216load_deref.7, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,325 - DEBUG - on stmt: bool228 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,326 - DEBUG - on stmt: $228pred = call bool228($220call.9, func=bool228, args=(Var($220call.9, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,326 - DEBUG - on stmt: branch $228pred, 230, 238
2024-06-06 03:46:41,326 - DEBUG - ==== SSA block rewrite pass on 230
2024-06-06 03:46:41,326 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fec0>
2024-06-06 03:46:41,326 - DEBUG - on stmt: $236return_value.2 = cast(value=v)
2024-06-06 03:46:41,326 - DEBUG - on stmt: return $236return_value.2
2024-06-06 03:46:41,326 - DEBUG - ==== SSA block rewrite pass on 238
2024-06-06 03:46:41,326 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fec0>
2024-06-06 03:46:41,326 - DEBUG - on stmt: $240load_deref.2 = freevar(comparator: <function max_comparator at 0x7fe9d343d9e0>)
2024-06-06 03:46:41,326 - DEBUG - on stmt: $246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,326 - DEBUG - find_def var='max_value' stmt=$246call.5 = call $240load_deref.2(v, max_value, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,326 - DEBUG - find_def_from_top label 238
2024-06-06 03:46:41,327 - DEBUG - idom 180 from label 238
2024-06-06 03:46:41,327 - DEBUG - find_def_from_bottom label 180
2024-06-06 03:46:41,327 - DEBUG - find_def_from_top label 180
2024-06-06 03:46:41,327 - DEBUG - idom 176 from label 180
2024-06-06 03:46:41,327 - DEBUG - find_def_from_bottom label 176
2024-06-06 03:46:41,327 - DEBUG - find_def_from_top label 176
2024-06-06 03:46:41,327 - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 176
2024-06-06 03:46:41,327 - DEBUG - find_def_from_bottom label 265
2024-06-06 03:46:41,327 - DEBUG - find_def_from_top label 265
2024-06-06 03:46:41,328 - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 265
2024-06-06 03:46:41,328 - DEBUG - find_def_from_bottom label 256
2024-06-06 03:46:41,328 - DEBUG - find_def_from_top label 256
2024-06-06 03:46:41,328 - DEBUG - idom 238 from label 256
2024-06-06 03:46:41,328 - DEBUG - find_def_from_bottom label 238
2024-06-06 03:46:41,328 - DEBUG - find_def_from_top label 238
2024-06-06 03:46:41,328 - DEBUG - idom 180 from label 238
2024-06-06 03:46:41,328 - DEBUG - find_def_from_bottom label 180
2024-06-06 03:46:41,329 - DEBUG - find_def_from_top label 180
2024-06-06 03:46:41,329 - DEBUG - idom 176 from label 180
2024-06-06 03:46:41,329 - DEBUG - find_def_from_bottom label 176
2024-06-06 03:46:41,329 - DEBUG - incoming_def max_value.2 = phi(incoming_values=[], incoming_blocks=[])
2024-06-06 03:46:41,329 - DEBUG - find_def_from_bottom label 258
2024-06-06 03:46:41,329 - DEBUG - incoming_def max_value.1 = v
2024-06-06 03:46:41,329 - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.2, arraymath.py:584), Var(max_value.1, arraymath.py:585)], incoming_blocks=[256, 258])
2024-06-06 03:46:41,329 - DEBUG - find_def_from_bottom label 172
2024-06-06 03:46:41,330 - DEBUG - find_def_from_top label 172
2024-06-06 03:46:41,330 - DEBUG - idom 58 from label 172
2024-06-06 03:46:41,330 - DEBUG - find_def_from_bottom label 58
2024-06-06 03:46:41,330 - DEBUG - incoming_def max_value = call $120load_attr.10($const140.11, func=$120load_attr.10, args=[Var($const140.11, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,330 - DEBUG - replaced with: $246call.5 = call $240load_deref.2(v, max_value.2, func=$240load_deref.2, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,330 - DEBUG - on stmt: bool254 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,330 - DEBUG - on stmt: $254pred = call bool254($246call.5, func=bool254, args=(Var($246call.5, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,331 - DEBUG - on stmt: branch $254pred, 258, 256
2024-06-06 03:46:41,331 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:41,331 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fec0>
2024-06-06 03:46:41,331 - DEBUG - on stmt: jump 265
2024-06-06 03:46:41,331 - DEBUG - ==== SSA block rewrite pass on 258
2024-06-06 03:46:41,331 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fec0>
2024-06-06 03:46:41,331 - DEBUG - on stmt: max_value.1 = v
2024-06-06 03:46:41,331 - DEBUG - on stmt: jump 265
2024-06-06 03:46:41,331 - DEBUG - ==== SSA block rewrite pass on 264
2024-06-06 03:46:41,331 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fec0>
2024-06-06 03:46:41,331 - DEBUG - on stmt: $268return_value.3 = cast(value=max_value)
2024-06-06 03:46:41,331 - DEBUG - find_def var='max_value' stmt=$268return_value.3 = cast(value=max_value)
2024-06-06 03:46:41,332 - DEBUG - find_def_from_top label 264
2024-06-06 03:46:41,332 - DEBUG - idom 176 from label 264
2024-06-06 03:46:41,332 - DEBUG - find_def_from_bottom label 176
2024-06-06 03:46:41,332 - DEBUG - replaced with: $268return_value.3 = cast(value=max_value.2)
2024-06-06 03:46:41,332 - DEBUG - on stmt: return $268return_value.3
2024-06-06 03:46:41,332 - DEBUG - ==== SSA block rewrite pass on 265
2024-06-06 03:46:41,332 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fec0>
2024-06-06 03:46:41,332 - DEBUG - on stmt: jump 176
2024-06-06 03:46:41,338 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4680)
           2	RESUME(arg=0, lineno=4680)
           4	LOAD_FAST(arg=1, lineno=4681)
           6	LOAD_FAST(arg=0, lineno=4681)
           8	LOAD_ATTR(arg=0, lineno=4681)
          28	LOAD_CONST(arg=1, lineno=4681)
          30	BINARY_OP(arg=10, lineno=4681)
          34	COMPARE_OP(arg=68, lineno=4681)
          38	POP_JUMP_IF_TRUE(arg=16, lineno=4681)
          40	LOAD_FAST(arg=1, lineno=4681)
          42	LOAD_FAST(arg=0, lineno=4681)
          44	LOAD_ATTR(arg=0, lineno=4681)
          64	UNARY_NEGATIVE(arg=None, lineno=4681)
          66	COMPARE_OP(arg=2, lineno=4681)
          70	POP_JUMP_IF_FALSE(arg=11, lineno=4681)
>         72	LOAD_GLOBAL(arg=3, lineno=4682)
          82	LOAD_CONST(arg=2, lineno=4682)
          84	CALL(arg=1, lineno=4682)
          92	RAISE_VARARGS(arg=1, lineno=4682)
>         94	LOAD_FAST(arg=0, lineno=4683)
          96	LOAD_ATTR(arg=5, lineno=4683)
         116	CALL(arg=0, lineno=4683)
         124	LOAD_FAST(arg=1, lineno=4683)
         126	BINARY_SUBSCR(arg=None, lineno=4683)
         130	RETURN_VALUE(arg=None, lineno=4683)
2024-06-06 03:46:41,339 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:41,339 - DEBUG - stack: []
2024-06-06 03:46:41,339 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:41,339 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4680)
2024-06-06 03:46:41,339 - DEBUG - stack []
2024-06-06 03:46:41,339 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4680)
2024-06-06 03:46:41,339 - DEBUG - stack []
2024-06-06 03:46:41,339 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4681)
2024-06-06 03:46:41,339 - DEBUG - stack []
2024-06-06 03:46:41,339 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4681)
2024-06-06 03:46:41,339 - DEBUG - stack ['$indices4.0']
2024-06-06 03:46:41,340 - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4681)
2024-06-06 03:46:41,340 - DEBUG - stack ['$indices4.0', '$a6.1']
2024-06-06 03:46:41,340 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=4681)
2024-06-06 03:46:41,340 - DEBUG - stack ['$indices4.0', '$8load_attr.2']
2024-06-06 03:46:41,340 - DEBUG - dispatch pc=30, inst=BINARY_OP(arg=10, lineno=4681)
2024-06-06 03:46:41,340 - DEBUG - stack ['$indices4.0', '$8load_attr.2', '$const28.3']
2024-06-06 03:46:41,340 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=68, lineno=4681)
2024-06-06 03:46:41,340 - DEBUG - stack ['$indices4.0', '$binop_sub30.4']
2024-06-06 03:46:41,340 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_TRUE(arg=16, lineno=4681)
2024-06-06 03:46:41,340 - DEBUG - stack ['$34compare_op.5']
2024-06-06 03:46:41,341 - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=72, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:41,341 - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=72 nstack_initial=0)])
2024-06-06 03:46:41,341 - DEBUG - stack: []
2024-06-06 03:46:41,341 - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2024-06-06 03:46:41,341 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=4681)
2024-06-06 03:46:41,341 - DEBUG - stack []
2024-06-06 03:46:41,341 - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=4681)
2024-06-06 03:46:41,341 - DEBUG - stack ['$indices40.0']
2024-06-06 03:46:41,341 - DEBUG - dispatch pc=44, inst=LOAD_ATTR(arg=0, lineno=4681)
2024-06-06 03:46:41,341 - DEBUG - stack ['$indices40.0', '$a42.1']
2024-06-06 03:46:41,342 - DEBUG - dispatch pc=64, inst=UNARY_NEGATIVE(arg=None, lineno=4681)
2024-06-06 03:46:41,342 - DEBUG - stack ['$indices40.0', '$44load_attr.2']
2024-06-06 03:46:41,342 - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=2, lineno=4681)
2024-06-06 03:46:41,342 - DEBUG - stack ['$indices40.0', '$64unary_negative.3']
2024-06-06 03:46:41,342 - DEBUG - dispatch pc=70, inst=POP_JUMP_IF_FALSE(arg=11, lineno=4681)
2024-06-06 03:46:41,342 - DEBUG - stack ['$66compare_op.4']
2024-06-06 03:46:41,342 - DEBUG - end state. edges=[Edge(pc=72, stack=(), blockstack=(), npush=0), Edge(pc=94, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:41,342 - DEBUG - pending: deque([State(pc_initial=72 nstack_initial=0), State(pc_initial=72 nstack_initial=0), State(pc_initial=94 nstack_initial=0)])
2024-06-06 03:46:41,342 - DEBUG - stack: []
2024-06-06 03:46:41,342 - DEBUG - state.pc_initial: State(pc_initial=72 nstack_initial=0)
2024-06-06 03:46:41,343 - DEBUG - dispatch pc=72, inst=LOAD_GLOBAL(arg=3, lineno=4682)
2024-06-06 03:46:41,343 - DEBUG - stack []
2024-06-06 03:46:41,343 - DEBUG - dispatch pc=82, inst=LOAD_CONST(arg=2, lineno=4682)
2024-06-06 03:46:41,343 - DEBUG - stack ['$null$72.1', '$72load_global.0']
2024-06-06 03:46:41,343 - DEBUG - dispatch pc=84, inst=CALL(arg=1, lineno=4682)
2024-06-06 03:46:41,343 - DEBUG - stack ['$null$72.1', '$72load_global.0', '$const82.2']
2024-06-06 03:46:41,343 - DEBUG - dispatch pc=92, inst=RAISE_VARARGS(arg=1, lineno=4682)
2024-06-06 03:46:41,343 - DEBUG - stack ['$84call.3']
2024-06-06 03:46:41,343 - DEBUG - end state. edges=[]
2024-06-06 03:46:41,343 - DEBUG - pending: deque([State(pc_initial=72 nstack_initial=0), State(pc_initial=94 nstack_initial=0)])
2024-06-06 03:46:41,343 - DEBUG - pending: deque([State(pc_initial=94 nstack_initial=0)])
2024-06-06 03:46:41,343 - DEBUG - stack: []
2024-06-06 03:46:41,344 - DEBUG - state.pc_initial: State(pc_initial=94 nstack_initial=0)
2024-06-06 03:46:41,344 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=4683)
2024-06-06 03:46:41,344 - DEBUG - stack []
2024-06-06 03:46:41,344 - DEBUG - dispatch pc=96, inst=LOAD_ATTR(arg=5, lineno=4683)
2024-06-06 03:46:41,344 - DEBUG - stack ['$a94.0']
2024-06-06 03:46:41,344 - DEBUG - dispatch pc=116, inst=CALL(arg=0, lineno=4683)
2024-06-06 03:46:41,344 - DEBUG - stack ['$null$96.1', '$96load_attr.2']
2024-06-06 03:46:41,344 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4683)
2024-06-06 03:46:41,344 - DEBUG - stack ['$116call.3']
2024-06-06 03:46:41,344 - DEBUG - dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4683)
2024-06-06 03:46:41,344 - DEBUG - stack ['$116call.3', '$indices124.4']
2024-06-06 03:46:41,345 - DEBUG - dispatch pc=130, inst=RETURN_VALUE(arg=None, lineno=4683)
2024-06-06 03:46:41,345 - DEBUG - stack ['$126binary_subscr.5']
2024-06-06 03:46:41,345 - DEBUG - end state. edges=[]
2024-06-06 03:46:41,345 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:41,345 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=72 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set()})
2024-06-06 03:46:41,345 - DEBUG - defmap: {}
2024-06-06 03:46:41,345 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:41,345 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:41,345 - DEBUG - keep phismap: {}
2024-06-06 03:46:41,346 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:41,346 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:41,346 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (28, {'res': '$const28.3'}), (30, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const28.3', 'res': '$binop_sub30.4'}), (34, {'lhs': '$indices4.0', 'rhs': '$binop_sub30.4', 'res': '$34compare_op.5'}), (38, {'pred': '$34compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 72: ()})
2024-06-06 03:46:41,346 - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$indices40.0'}), (42, {'res': '$a42.1'}), (44, {'item': '$a42.1', 'res': '$44load_attr.2'}), (64, {'value': '$44load_attr.2', 'res': '$64unary_negative.3'}), (66, {'lhs': '$indices40.0', 'rhs': '$64unary_negative.3', 'res': '$66compare_op.4'}), (70, {'pred': '$66compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={72: (), 94: ()})
2024-06-06 03:46:41,346 - DEBUG - block_infos State(pc_initial=72 nstack_initial=0):
AdaptBlockInfo(insts=((72, {'idx': 1, 'res': '$72load_global.0'}), (82, {'res': '$const82.2'}), (84, {'func': '$72load_global.0', 'args': ['$const82.2'], 'kw_names': None, 'res': '$84call.3'}), (92, {'exc': '$84call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:41,346 - DEBUG - block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$a94.0'}), (96, {'item': '$a94.0', 'res': '$96load_attr.2'}), (116, {'func': '$96load_attr.2', 'args': [], 'kw_names': None, 'res': '$116call.3'}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$116call.3', 'res': '$126binary_subscr.5'}), (130, {'retval': '$126binary_subscr.5', 'castval': '$130return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:41,347 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const28.3 = const(int, 1)               ['$const28.3']
    $binop_sub30.4 = $8load_attr.2 - $const28.3 ['$8load_attr.2', '$binop_sub30.4', '$const28.3']
    $34compare_op.5 = indices > $binop_sub30.4 ['$34compare_op.5', '$binop_sub30.4', 'indices']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
    $38pred = call bool38($34compare_op.5, func=bool38, args=(Var($34compare_op.5, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.5', '$38pred', 'bool38']
    branch $38pred, 72, 40                   ['$38pred']
label 40:
    $44load_attr.2 = getattr(value=a, attr=size) ['$44load_attr.2', 'a']
    $64unary_negative.3 = unary(fn=<built-in function neg>, value=$44load_attr.2) ['$44load_attr.2', '$64unary_negative.3']
    $66compare_op.4 = indices < $64unary_negative.3 ['$64unary_negative.3', '$66compare_op.4', 'indices']
    bool70 = global(bool: <class 'bool'>)    ['bool70']
    $70pred = call bool70($66compare_op.4, func=bool70, args=(Var($66compare_op.4, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.4', '$70pred', 'bool70']
    branch $70pred, 72, 94                   ['$70pred']
label 72:
    $72load_global.0 = global(IndexError: <class 'IndexError'>) ['$72load_global.0']
    $const82.2 = const(str, Index out of bounds) ['$const82.2']
    $84call.3 = call $72load_global.0($const82.2, func=$72load_global.0, args=[Var($const82.2, arrayobj.py:4682)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_global.0', '$84call.3', '$const82.2']
    raise $84call.3                          ['$84call.3']
label 94:
    $96load_attr.2 = getattr(value=a, attr=ravel) ['$96load_attr.2', 'a']
    $116call.3 = call $96load_attr.2(func=$96load_attr.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.3', '$96load_attr.2']
    $126binary_subscr.5 = getitem(value=$116call.3, index=indices, fn=<built-in function getitem>) ['$116call.3', '$126binary_subscr.5', 'indices']
    $130return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$130return_value.6']
    return $130return_value.6                ['$130return_value.6']

2024-06-06 03:46:41,355 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:41,355 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b94ff6e0>
2024-06-06 03:46:41,355 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:41,355 - DEBUG - on stmt: indices = arg(1, name=indices)
2024-06-06 03:46:41,355 - DEBUG - on stmt: $8load_attr.2 = getattr(value=a, attr=size)
2024-06-06 03:46:41,355 - DEBUG - on stmt: $const28.3 = const(int, 1)
2024-06-06 03:46:41,355 - DEBUG - on stmt: $binop_sub30.4 = $8load_attr.2 - $const28.3
2024-06-06 03:46:41,356 - DEBUG - on stmt: $34compare_op.5 = indices > $binop_sub30.4
2024-06-06 03:46:41,356 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,356 - DEBUG - on stmt: $38pred = call bool38($34compare_op.5, func=bool38, args=(Var($34compare_op.5, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,356 - DEBUG - on stmt: branch $38pred, 72, 40
2024-06-06 03:46:41,356 - DEBUG - ==== SSA block analysis pass on 40
2024-06-06 03:46:41,356 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b94ff6e0>
2024-06-06 03:46:41,356 - DEBUG - on stmt: $44load_attr.2 = getattr(value=a, attr=size)
2024-06-06 03:46:41,356 - DEBUG - on stmt: $64unary_negative.3 = unary(fn=<built-in function neg>, value=$44load_attr.2)
2024-06-06 03:46:41,357 - DEBUG - on stmt: $66compare_op.4 = indices < $64unary_negative.3
2024-06-06 03:46:41,357 - DEBUG - on stmt: bool70 = global(bool: <class 'bool'>)
2024-06-06 03:46:41,357 - DEBUG - on stmt: $70pred = call bool70($66compare_op.4, func=bool70, args=(Var($66compare_op.4, arrayobj.py:4681),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,357 - DEBUG - on stmt: branch $70pred, 72, 94
2024-06-06 03:46:41,357 - DEBUG - ==== SSA block analysis pass on 72
2024-06-06 03:46:41,357 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b94ff6e0>
2024-06-06 03:46:41,357 - DEBUG - on stmt: $72load_global.0 = global(IndexError: <class 'IndexError'>)
2024-06-06 03:46:41,357 - DEBUG - on stmt: $const82.2 = const(str, Index out of bounds)
2024-06-06 03:46:41,357 - DEBUG - on stmt: $84call.3 = call $72load_global.0($const82.2, func=$72load_global.0, args=[Var($const82.2, arrayobj.py:4682)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,357 - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
2024-06-06 03:46:41,357 - DEBUG - ==== SSA block analysis pass on 94
2024-06-06 03:46:41,358 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b94ff6e0>
2024-06-06 03:46:41,358 - DEBUG - on stmt: $96load_attr.2 = getattr(value=a, attr=ravel)
2024-06-06 03:46:41,358 - DEBUG - on stmt: $116call.3 = call $96load_attr.2(func=$96load_attr.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,358 - DEBUG - on stmt: $126binary_subscr.5 = getitem(value=$116call.3, index=indices, fn=<built-in function getitem>)
2024-06-06 03:46:41,358 - DEBUG - on stmt: $130return_value.6 = cast(value=$126binary_subscr.5)
2024-06-06 03:46:41,358 - DEBUG - on stmt: return $130return_value.6
2024-06-06 03:46:41,359 - DEBUG - defs defaultdict(<class 'list'>,
            {'$116call.3': [(<numba.core.ir.Assign object at 0x7fe9b94ff9e0>,
                             94)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x7fe9b94ffec0>,
                                      94)],
             '$130return_value.6': [(<numba.core.ir.Assign object at 0x7fe9b94fffb0>,
                                     94)],
             '$34compare_op.5': [(<numba.core.ir.Assign object at 0x7fe9b94c6930>,
                                  0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x7fe9b94c76b0>, 0)],
             '$44load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b94c48f0>,
                                 40)],
             '$64unary_negative.3': [(<numba.core.ir.Assign object at 0x7fe9b94c4a70>,
                                      40)],
             '$66compare_op.4': [(<numba.core.ir.Assign object at 0x7fe9b94c40b0>,
                                  40)],
             '$70pred': [(<numba.core.ir.Assign object at 0x7fe9b94c5790>, 40)],
             '$72load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b94c7980>,
                                   72)],
             '$84call.3': [(<numba.core.ir.Assign object at 0x7fe9b94c7080>,
                            72)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b94c6600>,
                                0)],
             '$96load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b94fff20>,
                                 94)],
             '$binop_sub30.4': [(<numba.core.ir.Assign object at 0x7fe9b94c6ae0>,
                                 0)],
             '$const28.3': [(<numba.core.ir.Assign object at 0x7fe9b94c67e0>,
                             0)],
             '$const82.2': [(<numba.core.ir.Assign object at 0x7fe9b94c4b60>,
                             72)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b94c4350>, 0)],
             'bool38': [(<numba.core.ir.Assign object at 0x7fe9b94c4b30>, 0)],
             'bool70': [(<numba.core.ir.Assign object at 0x7fe9b94c46e0>, 40)],
             'indices': [(<numba.core.ir.Assign object at 0x7fe9b94c4410>, 0)]})
2024-06-06 03:46:41,359 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b94ff6e0>
2024-06-06 03:46:41,379 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2229)
           2	RESUME(arg=0, lineno=2229)
           4	LOAD_FAST(arg=0, lineno=2231)
           6	LOAD_ATTR(arg=1, lineno=2231)
          26	LOAD_FAST(arg=0, lineno=2231)
          28	LOAD_ATTR(arg=2, lineno=2231)
          48	CALL(arg=1, lineno=2231)
          56	RETURN_VALUE(arg=None, lineno=2231)
2024-06-06 03:46:41,379 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:41,380 - DEBUG - stack: []
2024-06-06 03:46:41,380 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:41,380 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2229)
2024-06-06 03:46:41,380 - DEBUG - stack []
2024-06-06 03:46:41,380 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2229)
2024-06-06 03:46:41,380 - DEBUG - stack []
2024-06-06 03:46:41,380 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2231)
2024-06-06 03:46:41,380 - DEBUG - stack []
2024-06-06 03:46:41,380 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=2231)
2024-06-06 03:46:41,380 - DEBUG - stack ['$ary4.0']
2024-06-06 03:46:41,380 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=2231)
2024-06-06 03:46:41,380 - DEBUG - stack ['$null$6.1', '$6load_attr.2']
2024-06-06 03:46:41,381 - DEBUG - dispatch pc=28, inst=LOAD_ATTR(arg=2, lineno=2231)
2024-06-06 03:46:41,381 - DEBUG - stack ['$null$6.1', '$6load_attr.2', '$ary26.3']
2024-06-06 03:46:41,381 - DEBUG - dispatch pc=48, inst=CALL(arg=1, lineno=2231)
2024-06-06 03:46:41,381 - DEBUG - stack ['$null$6.1', '$6load_attr.2', '$28load_attr.4']
2024-06-06 03:46:41,381 - DEBUG - dispatch pc=56, inst=RETURN_VALUE(arg=None, lineno=2231)
2024-06-06 03:46:41,381 - DEBUG - stack ['$48call.5']
2024-06-06 03:46:41,381 - DEBUG - end state. edges=[]
2024-06-06 03:46:41,381 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:41,381 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:41,382 - DEBUG - defmap: {}
2024-06-06 03:46:41,382 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:41,382 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:41,382 - DEBUG - keep phismap: {}
2024-06-06 03:46:41,382 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:41,382 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:41,382 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_attr.2'}), (26, {'res': '$ary26.3'}), (28, {'item': '$ary26.3', 'res': '$28load_attr.4'}), (48, {'func': '$6load_attr.2', 'args': ['$28load_attr.4'], 'kw_names': None, 'res': '$48call.5'}), (56, {'retval': '$48call.5', 'castval': '$56return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:41,383 - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_attr.2 = getattr(value=ary, attr=reshape) ['$6load_attr.2', 'ary']
    $28load_attr.4 = getattr(value=ary, attr=size) ['$28load_attr.4', 'ary']
    $48call.5 = call $6load_attr.2($28load_attr.4, func=$6load_attr.2, args=[Var($28load_attr.4, arrayobj.py:2231)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_attr.4', '$48call.5', '$6load_attr.2']
    $56return_value.6 = cast(value=$48call.5) ['$48call.5', '$56return_value.6']
    return $56return_value.6                 ['$56return_value.6']

2024-06-06 03:46:41,388 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:41,388 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b94e0f20>
2024-06-06 03:46:41,388 - DEBUG - on stmt: ary = arg(0, name=ary)
2024-06-06 03:46:41,388 - DEBUG - on stmt: $6load_attr.2 = getattr(value=ary, attr=reshape)
2024-06-06 03:46:41,388 - DEBUG - on stmt: $28load_attr.4 = getattr(value=ary, attr=size)
2024-06-06 03:46:41,388 - DEBUG - on stmt: $48call.5 = call $6load_attr.2($28load_attr.4, func=$6load_attr.2, args=[Var($28load_attr.4, arrayobj.py:2231)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,388 - DEBUG - on stmt: $56return_value.6 = cast(value=$48call.5)
2024-06-06 03:46:41,389 - DEBUG - on stmt: return $56return_value.6
2024-06-06 03:46:41,389 - DEBUG - defs defaultdict(<class 'list'>,
            {'$28load_attr.4': [(<numba.core.ir.Assign object at 0x7fe9b94e3710>,
                                 0)],
             '$48call.5': [(<numba.core.ir.Assign object at 0x7fe9b94e3560>,
                            0)],
             '$56return_value.6': [(<numba.core.ir.Assign object at 0x7fe9b94e01d0>,
                                    0)],
             '$6load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b94e37d0>,
                                0)],
             'ary': [(<numba.core.ir.Assign object at 0x7fe9b94e1160>, 0)]})
2024-06-06 03:46:41,389 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b94fe540>
2024-06-06 03:46:41,470 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=486)
           2	RESUME(arg=0, lineno=486)
           4	RETURN_CONST(arg=1, lineno=488)
2024-06-06 03:46:41,470 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:41,470 - DEBUG - stack: []
2024-06-06 03:46:41,470 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:41,470 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=486)
2024-06-06 03:46:41,470 - DEBUG - stack []
2024-06-06 03:46:41,470 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=486)
2024-06-06 03:46:41,470 - DEBUG - stack []
2024-06-06 03:46:41,471 - DEBUG - dispatch pc=4, inst=RETURN_CONST(arg=1, lineno=488)
2024-06-06 03:46:41,471 - DEBUG - stack []
2024-06-06 03:46:41,471 - DEBUG - end state. edges=[]
2024-06-06 03:46:41,471 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:41,471 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:41,471 - DEBUG - defmap: {}
2024-06-06 03:46:41,471 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:41,471 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:41,472 - DEBUG - keep phismap: {}
2024-06-06 03:46:41,472 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:41,472 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:41,472 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'retval': '$const4.0', 'castval': '$4return_const.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:41,472 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $const4.0 = const(bool, False)           ['$const4.0']
    $4return_const.1 = cast(value=$const4.0) ['$4return_const.1', '$const4.0']
    return $4return_const.1                  ['$4return_const.1']

2024-06-06 03:46:41,477 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:41,477 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9357800>
2024-06-06 03:46:41,477 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:41,477 - DEBUG - on stmt: $const4.0 = const(bool, False)
2024-06-06 03:46:41,477 - DEBUG - on stmt: $4return_const.1 = cast(value=$const4.0)
2024-06-06 03:46:41,477 - DEBUG - on stmt: return $4return_const.1
2024-06-06 03:46:41,477 - DEBUG - defs defaultdict(<class 'list'>,
            {'$4return_const.1': [(<numba.core.ir.Assign object at 0x7fe9b9b6f7d0>,
                                   0)],
             '$const4.0': [(<numba.core.ir.Assign object at 0x7fe9b9b6c6e0>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b9b6f470>, 0)]})
2024-06-06 03:46:41,477 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9357800>
2024-06-06 03:46:41,497 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	RESUME(arg=0, lineno=481)
           4	LOAD_FAST(arg=0, lineno=483)
           6	LOAD_FAST(arg=1, lineno=483)
           8	COMPARE_OP(arg=68, lineno=483)
          12	RETURN_VALUE(arg=None, lineno=483)
2024-06-06 03:46:41,497 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:41,497 - DEBUG - stack: []
2024-06-06 03:46:41,497 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:41,497 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
2024-06-06 03:46:41,497 - DEBUG - stack []
2024-06-06 03:46:41,497 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=481)
2024-06-06 03:46:41,497 - DEBUG - stack []
2024-06-06 03:46:41,497 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=483)
2024-06-06 03:46:41,498 - DEBUG - stack []
2024-06-06 03:46:41,498 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=483)
2024-06-06 03:46:41,498 - DEBUG - stack ['$a4.0']
2024-06-06 03:46:41,498 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=68, lineno=483)
2024-06-06 03:46:41,498 - DEBUG - stack ['$a4.0', '$min_val6.1']
2024-06-06 03:46:41,498 - DEBUG - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=483)
2024-06-06 03:46:41,498 - DEBUG - stack ['$8compare_op.2']
2024-06-06 03:46:41,498 - DEBUG - end state. edges=[]
2024-06-06 03:46:41,498 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:41,498 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:41,499 - DEBUG - defmap: {}
2024-06-06 03:46:41,499 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:41,499 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:41,499 - DEBUG - keep phismap: {}
2024-06-06 03:46:41,499 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:41,499 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:41,499 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (12, {'retval': '$8compare_op.2', 'castval': '$12return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:41,500 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $12return_value.3 = cast(value=$8compare_op.2) ['$12return_value.3', '$8compare_op.2']
    return $12return_value.3                 ['$12return_value.3']

2024-06-06 03:46:41,504 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:41,504 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9a23410>
2024-06-06 03:46:41,505 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:41,505 - DEBUG - on stmt: min_val = arg(1, name=min_val)
2024-06-06 03:46:41,505 - DEBUG - on stmt: $8compare_op.2 = a > min_val
2024-06-06 03:46:41,505 - DEBUG - on stmt: $12return_value.3 = cast(value=$8compare_op.2)
2024-06-06 03:46:41,505 - DEBUG - on stmt: return $12return_value.3
2024-06-06 03:46:41,505 - DEBUG - defs defaultdict(<class 'list'>,
            {'$12return_value.3': [(<numba.core.ir.Assign object at 0x7fe9b97593a0>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x7fe9b9a23ec0>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b9a23650>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x7fe9b9a22d50>, 0)]})
2024-06-06 03:46:41,505 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9a23410>
2024-06-06 03:46:41,638 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          20	LOAD_ATTR(arg=2, lineno=441)
          40	LOAD_FAST(arg=0, lineno=441)
          42	CALL(arg=1, lineno=441)
          50	GET_ITER(arg=None, lineno=441)
>         52	FOR_ITER(arg=21, lineno=441)
          56	STORE_FAST(arg=2, lineno=441)
          58	LOAD_FAST(arg=1, lineno=442)
          60	LOAD_FAST(arg=2, lineno=442)
          62	LOAD_ATTR(arg=5, lineno=442)
          82	CALL(arg=0, lineno=442)
          90	BINARY_OP(arg=13, lineno=442)
          94	STORE_FAST(arg=1, lineno=442)
          96	JUMP_BACKWARD(arg=23, lineno=442)
>         98	END_FOR(arg=None, lineno=441)
         100	LOAD_FAST(arg=1, lineno=443)
         102	LOAD_FAST(arg=0, lineno=443)
         104	LOAD_ATTR(arg=6, lineno=443)
         124	BINARY_OP(arg=11, lineno=443)
         128	RETURN_VALUE(arg=None, lineno=443)
2024-06-06 03:46:41,638 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:41,638 - DEBUG - stack: []
2024-06-06 03:46:41,638 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:41,638 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2024-06-06 03:46:41,638 - DEBUG - stack []
2024-06-06 03:46:41,638 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2024-06-06 03:46:41,639 - DEBUG - stack []
2024-06-06 03:46:41,639 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2024-06-06 03:46:41,639 - DEBUG - stack []
2024-06-06 03:46:41,639 - DEBUG - dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2024-06-06 03:46:41,639 - DEBUG - stack []
2024-06-06 03:46:41,639 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2024-06-06 03:46:41,639 - DEBUG - stack ['$6load_deref.0']
2024-06-06 03:46:41,639 - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2024-06-06 03:46:41,639 - DEBUG - stack []
2024-06-06 03:46:41,640 - DEBUG - dispatch pc=20, inst=LOAD_ATTR(arg=2, lineno=441)
2024-06-06 03:46:41,640 - DEBUG - stack ['$null$10.2', '$10load_global.1']
2024-06-06 03:46:41,640 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=441)
2024-06-06 03:46:41,640 - DEBUG - stack ['$null$10.2', '$20load_attr.3']
2024-06-06 03:46:41,640 - DEBUG - dispatch pc=42, inst=CALL(arg=1, lineno=441)
2024-06-06 03:46:41,640 - DEBUG - stack ['$null$10.2', '$20load_attr.3', '$a40.4']
2024-06-06 03:46:41,640 - DEBUG - dispatch pc=50, inst=GET_ITER(arg=None, lineno=441)
2024-06-06 03:46:41,640 - DEBUG - stack ['$42call.5']
2024-06-06 03:46:41,641 - DEBUG - end state. edges=[Edge(pc=52, stack=('$50get_iter.6',), blockstack=(), npush=0)]
2024-06-06 03:46:41,641 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=1)])
2024-06-06 03:46:41,641 - DEBUG - stack: ['$phi52.0']
2024-06-06 03:46:41,641 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=1)
2024-06-06 03:46:41,641 - DEBUG - dispatch pc=52, inst=FOR_ITER(arg=21, lineno=441)
2024-06-06 03:46:41,641 - DEBUG - stack ['$phi52.0']
2024-06-06 03:46:41,641 - DEBUG - end state. edges=[Edge(pc=98, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0), Edge(pc=56, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0)]
2024-06-06 03:46:41,642 - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=2), State(pc_initial=56 nstack_initial=2)])
2024-06-06 03:46:41,642 - DEBUG - stack: ['$phi98.0', '$phi98.1']
2024-06-06 03:46:41,642 - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=2)
2024-06-06 03:46:41,642 - DEBUG - dispatch pc=98, inst=END_FOR(arg=None, lineno=441)
2024-06-06 03:46:41,642 - DEBUG - stack ['$phi98.0', '$phi98.1']
2024-06-06 03:46:41,642 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=1, lineno=443)
2024-06-06 03:46:41,642 - DEBUG - stack []
2024-06-06 03:46:41,642 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=443)
2024-06-06 03:46:41,642 - DEBUG - stack ['$c100.2']
2024-06-06 03:46:41,643 - DEBUG - dispatch pc=104, inst=LOAD_ATTR(arg=6, lineno=443)
2024-06-06 03:46:41,643 - DEBUG - stack ['$c100.2', '$a102.3']
2024-06-06 03:46:41,643 - DEBUG - dispatch pc=124, inst=BINARY_OP(arg=11, lineno=443)
2024-06-06 03:46:41,643 - DEBUG - stack ['$c100.2', '$104load_attr.4']
2024-06-06 03:46:41,643 - DEBUG - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=443)
2024-06-06 03:46:41,643 - DEBUG - stack ['$binop_truediv124.5']
2024-06-06 03:46:41,643 - DEBUG - end state. edges=[]
2024-06-06 03:46:41,643 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=2)])
2024-06-06 03:46:41,644 - DEBUG - stack: ['$phi56.0', '$phi56.1']
2024-06-06 03:46:41,644 - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=2)
2024-06-06 03:46:41,644 - DEBUG - dispatch pc=56, inst=STORE_FAST(arg=2, lineno=441)
2024-06-06 03:46:41,644 - DEBUG - stack ['$phi56.0', '$phi56.1']
2024-06-06 03:46:41,644 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=442)
2024-06-06 03:46:41,644 - DEBUG - stack ['$phi56.0']
2024-06-06 03:46:41,644 - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=2, lineno=442)
2024-06-06 03:46:41,644 - DEBUG - stack ['$phi56.0', '$c58.2']
2024-06-06 03:46:41,644 - DEBUG - dispatch pc=62, inst=LOAD_ATTR(arg=5, lineno=442)
2024-06-06 03:46:41,645 - DEBUG - stack ['$phi56.0', '$c58.2', '$v60.3']
2024-06-06 03:46:41,645 - DEBUG - dispatch pc=82, inst=CALL(arg=0, lineno=442)
2024-06-06 03:46:41,645 - DEBUG - stack ['$phi56.0', '$c58.2', '$null$62.4', '$62load_attr.5']
2024-06-06 03:46:41,645 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=13, lineno=442)
2024-06-06 03:46:41,645 - DEBUG - stack ['$phi56.0', '$c58.2', '$82call.6']
2024-06-06 03:46:41,645 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=1, lineno=442)
2024-06-06 03:46:41,645 - DEBUG - stack ['$phi56.0', '$binop_iadd90.7']
2024-06-06 03:46:41,645 - DEBUG - dispatch pc=96, inst=JUMP_BACKWARD(arg=23, lineno=442)
2024-06-06 03:46:41,645 - DEBUG - stack ['$phi56.0']
2024-06-06 03:46:41,645 - DEBUG - end state. edges=[Edge(pc=52, stack=('$phi56.0',), blockstack=(), npush=0)]
2024-06-06 03:46:41,645 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=1)])
2024-06-06 03:46:41,646 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:41,646 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=1): {'$phi52.0'},
             State(pc_initial=56 nstack_initial=2): {'$phi56.1'},
             State(pc_initial=98 nstack_initial=2): set()})
2024-06-06 03:46:41,646 - DEBUG - defmap: {'$phi52.0': State(pc_initial=0 nstack_initial=0),
 '$phi56.1': State(pc_initial=52 nstack_initial=1),
 '$phi98.1': State(pc_initial=52 nstack_initial=1)}
2024-06-06 03:46:41,646 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi56.0', State(pc_initial=56 nstack_initial=2))},
             '$phi56.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:41,647 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:41,648 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:41,648 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2024-06-06 03:46:41,649 - DEBUG - keep phismap: {'$phi52.0': {('$50get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi56.1': {('$52for_iter.2', State(pc_initial=52 nstack_initial=1))}}
2024-06-06 03:46:41,649 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi52.0': '$50get_iter.6'},
             State(pc_initial=52 nstack_initial=1): {'$phi56.1': '$52for_iter.2'}})
2024-06-06 03:46:41,650 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:41,650 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (20, {'item': '$10load_global.1', 'res': '$20load_attr.3'}), (40, {'res': '$a40.4'}), (42, {'func': '$20load_attr.3', 'args': ['$a40.4'], 'kw_names': None, 'res': '$42call.5'}), (50, {'value': '$42call.5', 'res': '$50get_iter.6'})), outgoing_phis={'$phi52.0': '$50get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$50get_iter.6',)})
2024-06-06 03:46:41,650 - DEBUG - block_infos State(pc_initial=52 nstack_initial=1):
AdaptBlockInfo(insts=((52, {'iterator': '$phi52.0', 'pair': '$52for_iter.1', 'indval': '$52for_iter.2', 'pred': '$52for_iter.3'}),), outgoing_phis={'$phi56.1': '$52for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi52.0', '$52for_iter.2'), 56: ('$phi52.0', '$52for_iter.2')})
2024-06-06 03:46:41,650 - DEBUG - block_infos State(pc_initial=56 nstack_initial=2):
AdaptBlockInfo(insts=((56, {'value': '$phi56.1'}), (58, {'res': '$c58.2'}), (60, {'res': '$v60.3'}), (62, {'item': '$v60.3', 'res': '$62load_attr.5'}), (82, {'func': '$62load_attr.5', 'args': [], 'kw_names': None, 'res': '$82call.6'}), (90, {'op': '+=', 'lhs': '$c58.2', 'rhs': '$82call.6', 'res': '$binop_iadd90.7'}), (94, {'value': '$binop_iadd90.7'}), (96, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$phi56.0',)})
2024-06-06 03:46:41,650 - DEBUG - block_infos State(pc_initial=98 nstack_initial=2):
AdaptBlockInfo(insts=((100, {'res': '$c100.2'}), (102, {'res': '$a102.3'}), (104, {'item': '$a102.3', 'res': '$104load_attr.4'}), (124, {'op': '/', 'lhs': '$c100.2', 'rhs': '$104load_attr.4', 'res': '$binop_truediv124.5'}), (128, {'retval': '$binop_truediv124.5', 'castval': '$128return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:41,651 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$10load_global.1']
    $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$20load_attr.3']
    $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_attr.3', '$42call.5', 'a']
    $50get_iter.6 = getiter(value=$42call.5) ['$42call.5', '$50get_iter.6']
    $phi52.0 = $50get_iter.6                 ['$50get_iter.6', '$phi52.0']
    jump 52                                  []
label 52:
    $52for_iter.1 = iternext(value=$phi52.0) ['$52for_iter.1', '$phi52.0']
    $52for_iter.2 = pair_first(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.2']
    $52for_iter.3 = pair_second(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.3']
    $phi56.1 = $52for_iter.2                 ['$52for_iter.2', '$phi56.1']
    branch $52for_iter.3, 56, 98             ['$52for_iter.3']
label 56:
    v = $phi56.1                             ['$phi56.1', 'v']
    $62load_attr.5 = getattr(value=v, attr=item) ['$62load_attr.5', 'v']
    $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$62load_attr.5', '$82call.6']
    $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined) ['$82call.6', '$binop_iadd90.7', 'c']
    c = $binop_iadd90.7                      ['$binop_iadd90.7', 'c']
    jump 52                                  []
label 98:
    $104load_attr.4 = getattr(value=a, attr=size) ['$104load_attr.4', 'a']
    $binop_truediv124.5 = c / $104load_attr.4 ['$104load_attr.4', '$binop_truediv124.5', 'c']
    $128return_value.6 = cast(value=$binop_truediv124.5) ['$128return_value.6', '$binop_truediv124.5']
    return $128return_value.6                ['$128return_value.6']

2024-06-06 03:46:41,658 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:41,658 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936fb00>
2024-06-06 03:46:41,658 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:41,658 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-06 03:46:41,659 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,659 - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-06 03:46:41,659 - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,659 - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2024-06-06 03:46:41,659 - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2024-06-06 03:46:41,659 - DEBUG - on stmt: jump 52
2024-06-06 03:46:41,659 - DEBUG - ==== SSA block analysis pass on 52
2024-06-06 03:46:41,659 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936fb00>
2024-06-06 03:46:41,659 - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2024-06-06 03:46:41,659 - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2024-06-06 03:46:41,659 - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2024-06-06 03:46:41,659 - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2024-06-06 03:46:41,660 - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2024-06-06 03:46:41,660 - DEBUG - ==== SSA block analysis pass on 56
2024-06-06 03:46:41,660 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936fb00>
2024-06-06 03:46:41,660 - DEBUG - on stmt: v = $phi56.1
2024-06-06 03:46:41,660 - DEBUG - on stmt: $62load_attr.5 = getattr(value=v, attr=item)
2024-06-06 03:46:41,660 - DEBUG - on stmt: $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,660 - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,660 - DEBUG - on stmt: c = $binop_iadd90.7
2024-06-06 03:46:41,660 - DEBUG - on stmt: jump 52
2024-06-06 03:46:41,660 - DEBUG - ==== SSA block analysis pass on 98
2024-06-06 03:46:41,660 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b936fb00>
2024-06-06 03:46:41,660 - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2024-06-06 03:46:41,661 - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:41,661 - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2024-06-06 03:46:41,661 - DEBUG - on stmt: return $128return_value.6
2024-06-06 03:46:41,662 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104load_attr.4': [(<numba.core.ir.Assign object at 0x7fe9b9763fb0>,
                                  98)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x7fe9b9999910>,
                                   0)],
             '$128return_value.6': [(<numba.core.ir.Assign object at 0x7fe9b97636e0>,
                                     98)],
             '$20load_attr.3': [(<numba.core.ir.Assign object at 0x7fe9b97cf620>,
                                 0)],
             '$42call.5': [(<numba.core.ir.Assign object at 0x7fe9b97cda00>,
                            0)],
             '$50get_iter.6': [(<numba.core.ir.Assign object at 0x7fe9b97cdf40>,
                                0)],
             '$52for_iter.1': [(<numba.core.ir.Assign object at 0x7fe9b97cce90>,
                                52)],
             '$52for_iter.2': [(<numba.core.ir.Assign object at 0x7fe9b97cc560>,
                                52)],
             '$52for_iter.3': [(<numba.core.ir.Assign object at 0x7fe9b97cc4a0>,
                                52)],
             '$62load_attr.5': [(<numba.core.ir.Assign object at 0x7fe9b9cb29c0>,
                                 56)],
             '$82call.6': [(<numba.core.ir.Assign object at 0x7fe9b9cb2780>,
                            56)],
             '$binop_iadd90.7': [(<numba.core.ir.Assign object at 0x7fe9b9763380>,
                                  56)],
             '$binop_truediv124.5': [(<numba.core.ir.Assign object at 0x7fe9b97621b0>,
                                      98)],
             '$phi52.0': [(<numba.core.ir.Assign object at 0x7fe9b9a23140>, 0)],
             '$phi56.1': [(<numba.core.ir.Assign object at 0x7fe9b97cc320>,
                           52)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b9a21610>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7fe9b99990a0>, 0),
                   (<numba.core.ir.Assign object at 0x7fe9b97607d0>, 56)],
             'v': [(<numba.core.ir.Assign object at 0x7fe9b97cc350>, 56)]})
2024-06-06 03:46:41,662 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b936fb00>
2024-06-06 03:46:41,662 - DEBUG - Fix SSA violator on var c
2024-06-06 03:46:41,662 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:41,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fe00>
2024-06-06 03:46:41,662 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:41,662 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-06 03:46:41,662 - DEBUG - first assign: c
2024-06-06 03:46:41,662 - DEBUG - replaced with: c = freevar(acc_init: 0.0)
2024-06-06 03:46:41,662 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,663 - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-06 03:46:41,663 - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,663 - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2024-06-06 03:46:41,663 - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2024-06-06 03:46:41,663 - DEBUG - on stmt: jump 52
2024-06-06 03:46:41,663 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-06 03:46:41,663 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fe00>
2024-06-06 03:46:41,663 - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2024-06-06 03:46:41,663 - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2024-06-06 03:46:41,663 - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2024-06-06 03:46:41,663 - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2024-06-06 03:46:41,663 - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2024-06-06 03:46:41,664 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:41,664 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fe00>
2024-06-06 03:46:41,664 - DEBUG - on stmt: v = $phi56.1
2024-06-06 03:46:41,664 - DEBUG - on stmt: $62load_attr.5 = getattr(value=v, attr=item)
2024-06-06 03:46:41,664 - DEBUG - on stmt: $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,664 - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,664 - DEBUG - on stmt: c = $binop_iadd90.7
2024-06-06 03:46:41,664 - DEBUG - replaced with: c.1 = $binop_iadd90.7
2024-06-06 03:46:41,664 - DEBUG - on stmt: jump 52
2024-06-06 03:46:41,664 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-06 03:46:41,664 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b936fe00>
2024-06-06 03:46:41,664 - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2024-06-06 03:46:41,665 - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:41,665 - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2024-06-06 03:46:41,665 - DEBUG - on stmt: return $128return_value.6
2024-06-06 03:46:41,665 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fe9b936eff0>],
             56: [<numba.core.ir.Assign object at 0x7fe9b936e390>]})
2024-06-06 03:46:41,665 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:41,665 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fe00>
2024-06-06 03:46:41,665 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:41,665 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2024-06-06 03:46:41,665 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:41,665 - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2024-06-06 03:46:41,665 - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,666 - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2024-06-06 03:46:41,666 - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2024-06-06 03:46:41,666 - DEBUG - on stmt: jump 52
2024-06-06 03:46:41,666 - DEBUG - ==== SSA block rewrite pass on 52
2024-06-06 03:46:41,666 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fe00>
2024-06-06 03:46:41,666 - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2024-06-06 03:46:41,666 - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2024-06-06 03:46:41,666 - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2024-06-06 03:46:41,666 - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2024-06-06 03:46:41,666 - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2024-06-06 03:46:41,666 - DEBUG - ==== SSA block rewrite pass on 56
2024-06-06 03:46:41,666 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fe00>
2024-06-06 03:46:41,667 - DEBUG - on stmt: v = $phi56.1
2024-06-06 03:46:41,667 - DEBUG - on stmt: $62load_attr.5 = getattr(value=v, attr=item)
2024-06-06 03:46:41,667 - DEBUG - on stmt: $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:41,667 - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,667 - DEBUG - find_def var='c' stmt=$binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,667 - DEBUG - find_def_from_top label 56
2024-06-06 03:46:41,667 - DEBUG - idom 52 from label 56
2024-06-06 03:46:41,667 - DEBUG - find_def_from_bottom label 52
2024-06-06 03:46:41,667 - DEBUG - find_def_from_top label 52
2024-06-06 03:46:41,667 - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 52
2024-06-06 03:46:41,667 - DEBUG - find_def_from_bottom label 0
2024-06-06 03:46:41,667 - DEBUG - incoming_def c = freevar(acc_init: 0.0)
2024-06-06 03:46:41,667 - DEBUG - find_def_from_bottom label 56
2024-06-06 03:46:41,668 - DEBUG - incoming_def c.1 = $binop_iadd90.7
2024-06-06 03:46:41,668 - DEBUG - replaced with: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:41,668 - DEBUG - on stmt: c.1 = $binop_iadd90.7
2024-06-06 03:46:41,668 - DEBUG - on stmt: jump 52
2024-06-06 03:46:41,668 - DEBUG - ==== SSA block rewrite pass on 98
2024-06-06 03:46:41,668 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b936fe00>
2024-06-06 03:46:41,668 - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2024-06-06 03:46:41,668 - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:41,668 - DEBUG - find_def var='c' stmt=$binop_truediv124.5 = c / $104load_attr.4
2024-06-06 03:46:41,668 - DEBUG - find_def_from_top label 98
2024-06-06 03:46:41,668 - DEBUG - idom 52 from label 98
2024-06-06 03:46:41,668 - DEBUG - find_def_from_bottom label 52
2024-06-06 03:46:41,669 - DEBUG - replaced with: $binop_truediv124.5 = c.2 / $104load_attr.4
2024-06-06 03:46:41,669 - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2024-06-06 03:46:41,669 - DEBUG - on stmt: return $128return_value.6
2024-06-06 03:46:42,366 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2452)
           2	RESUME(arg=0, lineno=2452)
           4	LOAD_FAST(arg=0, lineno=2457)
           6	LOAD_ATTR(arg=0, lineno=2457)
          26	LOAD_CONST(arg=1, lineno=2457)
          28	BINARY_OP(arg=8, lineno=2457)
          32	LOAD_FAST(arg=0, lineno=2457)
          34	LOAD_ATTR(arg=2, lineno=2457)
          54	LOAD_CONST(arg=1, lineno=2457)
          56	BINARY_OP(arg=8, lineno=2457)
          60	BINARY_OP(arg=0, lineno=2457)
          64	RETURN_VALUE(arg=None, lineno=2457)
2024-06-06 03:46:42,366 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:42,366 - DEBUG - stack: []
2024-06-06 03:46:42,366 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:42,366 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2452)
2024-06-06 03:46:42,366 - DEBUG - stack []
2024-06-06 03:46:42,366 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2452)
2024-06-06 03:46:42,366 - DEBUG - stack []
2024-06-06 03:46:42,366 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2457)
2024-06-06 03:46:42,367 - DEBUG - stack []
2024-06-06 03:46:42,367 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2457)
2024-06-06 03:46:42,367 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:42,367 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=2457)
2024-06-06 03:46:42,367 - DEBUG - stack ['$6load_attr.1']
2024-06-06 03:46:42,367 - DEBUG - dispatch pc=28, inst=BINARY_OP(arg=8, lineno=2457)
2024-06-06 03:46:42,367 - DEBUG - stack ['$6load_attr.1', '$const26.2']
2024-06-06 03:46:42,367 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=2457)
2024-06-06 03:46:42,367 - DEBUG - stack ['$binop_pow28.3']
2024-06-06 03:46:42,367 - DEBUG - dispatch pc=34, inst=LOAD_ATTR(arg=2, lineno=2457)
2024-06-06 03:46:42,367 - DEBUG - stack ['$binop_pow28.3', '$x32.4']
2024-06-06 03:46:42,367 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=2457)
2024-06-06 03:46:42,367 - DEBUG - stack ['$binop_pow28.3', '$34load_attr.5']
2024-06-06 03:46:42,368 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=8, lineno=2457)
2024-06-06 03:46:42,368 - DEBUG - stack ['$binop_pow28.3', '$34load_attr.5', '$const54.6']
2024-06-06 03:46:42,368 - DEBUG - dispatch pc=60, inst=BINARY_OP(arg=0, lineno=2457)
2024-06-06 03:46:42,368 - DEBUG - stack ['$binop_pow28.3', '$binop_pow56.7']
2024-06-06 03:46:42,368 - DEBUG - dispatch pc=64, inst=RETURN_VALUE(arg=None, lineno=2457)
2024-06-06 03:46:42,368 - DEBUG - stack ['$binop_add60.8']
2024-06-06 03:46:42,368 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,368 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:42,368 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:42,368 - DEBUG - defmap: {}
2024-06-06 03:46:42,368 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:42,368 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:42,369 - DEBUG - keep phismap: {}
2024-06-06 03:46:42,369 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:42,369 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:42,369 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'res': '$const26.2'}), (28, {'op': '**', 'lhs': '$6load_attr.1', 'rhs': '$const26.2', 'res': '$binop_pow28.3'}), (32, {'res': '$x32.4'}), (34, {'item': '$x32.4', 'res': '$34load_attr.5'}), (54, {'res': '$const54.6'}), (56, {'op': '**', 'lhs': '$34load_attr.5', 'rhs': '$const54.6', 'res': '$binop_pow56.7'}), (60, {'op': '+', 'lhs': '$binop_pow28.3', 'rhs': '$binop_pow56.7', 'res': '$binop_add60.8'}), (64, {'retval': '$binop_add60.8', 'castval': '$64return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,369 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $6load_attr.1 = getattr(value=x, attr=real) ['$6load_attr.1', 'x']
    $const26.2 = const(int, 2)               ['$const26.2']
    $binop_pow28.3 = $6load_attr.1 ** $const26.2 ['$6load_attr.1', '$binop_pow28.3', '$const26.2']
    $34load_attr.5 = getattr(value=x, attr=imag) ['$34load_attr.5', 'x']
    $const54.6 = const(int, 2)               ['$const54.6']
    $binop_pow56.7 = $34load_attr.5 ** $const54.6 ['$34load_attr.5', '$binop_pow56.7', '$const54.6']
    $binop_add60.8 = $binop_pow28.3 + $binop_pow56.7 ['$binop_add60.8', '$binop_pow28.3', '$binop_pow56.7']
    $64return_value.9 = cast(value=$binop_add60.8) ['$64return_value.9', '$binop_add60.8']
    return $64return_value.9                 ['$64return_value.9']

2024-06-06 03:46:42,374 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:42,374 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d222a8a0>
2024-06-06 03:46:42,374 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:42,374 - DEBUG - on stmt: $6load_attr.1 = getattr(value=x, attr=real)
2024-06-06 03:46:42,374 - DEBUG - on stmt: $const26.2 = const(int, 2)
2024-06-06 03:46:42,374 - DEBUG - on stmt: $binop_pow28.3 = $6load_attr.1 ** $const26.2
2024-06-06 03:46:42,374 - DEBUG - on stmt: $34load_attr.5 = getattr(value=x, attr=imag)
2024-06-06 03:46:42,375 - DEBUG - on stmt: $const54.6 = const(int, 2)
2024-06-06 03:46:42,375 - DEBUG - on stmt: $binop_pow56.7 = $34load_attr.5 ** $const54.6
2024-06-06 03:46:42,375 - DEBUG - on stmt: $binop_add60.8 = $binop_pow28.3 + $binop_pow56.7
2024-06-06 03:46:42,375 - DEBUG - on stmt: $64return_value.9 = cast(value=$binop_add60.8)
2024-06-06 03:46:42,375 - DEBUG - on stmt: return $64return_value.9
2024-06-06 03:46:42,375 - DEBUG - defs defaultdict(<class 'list'>,
            {'$34load_attr.5': [(<numba.core.ir.Assign object at 0x7fe9d241c3b0>,
                                 0)],
             '$64return_value.9': [(<numba.core.ir.Assign object at 0x7fe9d247ddf0>,
                                    0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x7fe9d241c350>,
                                0)],
             '$binop_add60.8': [(<numba.core.ir.Assign object at 0x7fe9d247d6d0>,
                                 0)],
             '$binop_pow28.3': [(<numba.core.ir.Assign object at 0x7fe9d241f6b0>,
                                 0)],
             '$binop_pow56.7': [(<numba.core.ir.Assign object at 0x7fe9d247e570>,
                                 0)],
             '$const26.2': [(<numba.core.ir.Assign object at 0x7fe9d241c410>,
                             0)],
             '$const54.6': [(<numba.core.ir.Assign object at 0x7fe9d247ff80>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b95a8ad0>, 0)]})
2024-06-06 03:46:42,375 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d222a8a0>
2024-06-06 03:46:42,385 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	COPY_FREE_VARS(arg=3, lineno=214)
           4	RESUME(arg=0, lineno=214)
           6	PUSH_NULL(arg=None, lineno=216)
           8	LOAD_DEREF(arg=6, lineno=216)
          10	LOAD_CONST(arg=1, lineno=216)
          12	CALL(arg=1, lineno=216)
          20	STORE_FAST(arg=2, lineno=216)
          22	PUSH_NULL(arg=None, lineno=217)
          24	LOAD_DEREF(arg=6, lineno=217)
          26	LOAD_FAST(arg=0, lineno=217)
          28	CALL(arg=1, lineno=217)
          36	STORE_FAST(arg=0, lineno=217)
          38	LOAD_FAST(arg=1, lineno=218)
          40	LOAD_CONST(arg=2, lineno=218)
          42	COMPARE_OP(arg=2, lineno=218)
          46	POP_JUMP_IF_FALSE(arg=49, lineno=218)
          48	LOAD_CONST(arg=3, lineno=219)
          50	STORE_FAST(arg=3, lineno=219)
          52	LOAD_FAST(arg=1, lineno=220)
          54	UNARY_NEGATIVE(arg=None, lineno=220)
          56	STORE_FAST(arg=4, lineno=220)
          58	LOAD_FAST(arg=4, lineno=221)
          60	LOAD_CONST(arg=2, lineno=221)
          62	COMPARE_OP(arg=2, lineno=221)
          66	POP_JUMP_IF_FALSE(arg=6, lineno=221)
          68	LOAD_GLOBAL(arg=0, lineno=222)
          78	RAISE_VARARGS(arg=1, lineno=222)
>         80	LOAD_DEREF(arg=5, lineno=223)
          82	POP_JUMP_IF_FALSE(arg=35, lineno=223)
          84	LOAD_FAST(arg=0, lineno=224)
          86	LOAD_CONST(arg=2, lineno=224)
          88	COMPARE_OP(arg=40, lineno=224)
          92	POP_JUMP_IF_FALSE(arg=15, lineno=224)
          94	LOAD_DEREF(arg=7, lineno=225)
          96	POP_JUMP_IF_FALSE(arg=2, lineno=225)
          98	LOAD_DEREF(arg=7, lineno=226)
         100	RETURN_VALUE(arg=None, lineno=226)
>        102	LOAD_GLOBAL(arg=3, lineno=228)
         112	LOAD_CONST(arg=4, lineno=228)
         114	CALL(arg=1, lineno=228)
         122	RAISE_VARARGS(arg=1, lineno=228)
>        124	LOAD_FAST(arg=0, lineno=229)
         126	LOAD_CONST(arg=1, lineno=229)
         128	COMPARE_OP(arg=55, lineno=229)
         132	POP_JUMP_IF_FALSE(arg=10, lineno=229)
         134	LOAD_FAST(arg=0, lineno=229)
         136	LOAD_CONST(arg=5, lineno=229)
         138	COMPARE_OP(arg=55, lineno=229)
         142	POP_JUMP_IF_FALSE(arg=5, lineno=229)
         144	RETURN_CONST(arg=2, lineno=230)
>        146	LOAD_CONST(arg=6, lineno=232)
         148	STORE_FAST(arg=3, lineno=232)
         150	LOAD_FAST(arg=1, lineno=233)
         152	STORE_FAST(arg=4, lineno=233)
>        154	LOAD_FAST(arg=4, lineno=234)
         156	LOAD_CONST(arg=7, lineno=234)
         158	COMPARE_OP(arg=68, lineno=234)
         162	POP_JUMP_IF_FALSE(arg=31, lineno=234)
         164	LOAD_GLOBAL(arg=5, lineno=236)
         174	LOAD_ATTR(arg=6, lineno=236)
         194	LOAD_FAST(arg=0, lineno=236)
         196	LOAD_GLOBAL(arg=9, lineno=236)
         206	LOAD_FAST(arg=1, lineno=236)
         208	CALL(arg=1, lineno=236)
         216	CALL(arg=2, lineno=236)
         224	RETURN_VALUE(arg=None, lineno=236)
>        226	LOAD_FAST(arg=4, lineno=237)
         228	LOAD_CONST(arg=2, lineno=237)
         230	COMPARE_OP(arg=55, lineno=237)
         234	POP_JUMP_IF_FALSE(arg=26, lineno=237)
>        236	LOAD_FAST(arg=4, lineno=238)
         238	LOAD_CONST(arg=1, lineno=238)
         240	BINARY_OP(arg=1, lineno=238)
         244	POP_JUMP_IF_FALSE(arg=5, lineno=238)
         246	LOAD_FAST(arg=2, lineno=239)
         248	LOAD_FAST(arg=0, lineno=239)
         250	BINARY_OP(arg=18, lineno=239)
         254	STORE_FAST(arg=2, lineno=239)
>        256	LOAD_FAST(arg=4, lineno=240)
         258	LOAD_CONST(arg=1, lineno=240)
         260	BINARY_OP(arg=22, lineno=240)
         264	STORE_FAST(arg=4, lineno=240)
         266	LOAD_FAST(arg=0, lineno=241)
         268	LOAD_FAST(arg=0, lineno=241)
         270	BINARY_OP(arg=18, lineno=241)
         274	STORE_FAST(arg=0, lineno=241)
         276	LOAD_FAST(arg=4, lineno=237)
         278	LOAD_CONST(arg=2, lineno=237)
         280	COMPARE_OP(arg=55, lineno=237)
         284	POP_JUMP_IF_FALSE(arg=1, lineno=237)
         286	JUMP_BACKWARD(arg=26, lineno=237)
>        288	LOAD_FAST(arg=3, lineno=243)
         290	POP_JUMP_IF_FALSE(arg=5, lineno=243)
         292	LOAD_CONST(arg=8, lineno=243)
         294	LOAD_FAST(arg=2, lineno=243)
         296	BINARY_OP(arg=11, lineno=243)
         300	RETURN_VALUE(arg=None, lineno=243)
>        302	LOAD_FAST(arg=2, lineno=243)
         304	RETURN_VALUE(arg=None, lineno=243)
2024-06-06 03:46:42,386 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:42,386 - DEBUG - stack: []
2024-06-06 03:46:42,386 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:42,386 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=214)
2024-06-06 03:46:42,386 - DEBUG - stack []
2024-06-06 03:46:42,386 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=3, lineno=214)
2024-06-06 03:46:42,386 - DEBUG - stack []
2024-06-06 03:46:42,386 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=214)
2024-06-06 03:46:42,386 - DEBUG - stack []
2024-06-06 03:46:42,386 - DEBUG - dispatch pc=6, inst=PUSH_NULL(arg=None, lineno=216)
2024-06-06 03:46:42,386 - DEBUG - stack []
2024-06-06 03:46:42,386 - DEBUG - dispatch pc=8, inst=LOAD_DEREF(arg=6, lineno=216)
2024-06-06 03:46:42,386 - DEBUG - stack ['$null$6.0']
2024-06-06 03:46:42,387 - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=216)
2024-06-06 03:46:42,387 - DEBUG - stack ['$null$6.0', '$8load_deref.1']
2024-06-06 03:46:42,387 - DEBUG - dispatch pc=12, inst=CALL(arg=1, lineno=216)
2024-06-06 03:46:42,387 - DEBUG - stack ['$null$6.0', '$8load_deref.1', '$const10.2']
2024-06-06 03:46:42,387 - DEBUG - dispatch pc=20, inst=STORE_FAST(arg=2, lineno=216)
2024-06-06 03:46:42,387 - DEBUG - stack ['$12call.3']
2024-06-06 03:46:42,387 - DEBUG - dispatch pc=22, inst=PUSH_NULL(arg=None, lineno=217)
2024-06-06 03:46:42,387 - DEBUG - stack []
2024-06-06 03:46:42,387 - DEBUG - dispatch pc=24, inst=LOAD_DEREF(arg=6, lineno=217)
2024-06-06 03:46:42,387 - DEBUG - stack ['$null$22.4']
2024-06-06 03:46:42,387 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=217)
2024-06-06 03:46:42,387 - DEBUG - stack ['$null$22.4', '$24load_deref.5']
2024-06-06 03:46:42,387 - DEBUG - dispatch pc=28, inst=CALL(arg=1, lineno=217)
2024-06-06 03:46:42,387 - DEBUG - stack ['$null$22.4', '$24load_deref.5', '$a26.6']
2024-06-06 03:46:42,388 - DEBUG - dispatch pc=36, inst=STORE_FAST(arg=0, lineno=217)
2024-06-06 03:46:42,388 - DEBUG - stack ['$28call.7']
2024-06-06 03:46:42,388 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=218)
2024-06-06 03:46:42,388 - DEBUG - stack []
2024-06-06 03:46:42,388 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=218)
2024-06-06 03:46:42,388 - DEBUG - stack ['$b38.8']
2024-06-06 03:46:42,388 - DEBUG - dispatch pc=42, inst=COMPARE_OP(arg=2, lineno=218)
2024-06-06 03:46:42,388 - DEBUG - stack ['$b38.8', '$const40.9']
2024-06-06 03:46:42,388 - DEBUG - dispatch pc=46, inst=POP_JUMP_IF_FALSE(arg=49, lineno=218)
2024-06-06 03:46:42,388 - DEBUG - stack ['$42compare_op.10']
2024-06-06 03:46:42,388 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=146, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,388 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=146 nstack_initial=0)])
2024-06-06 03:46:42,388 - DEBUG - stack: []
2024-06-06 03:46:42,389 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2024-06-06 03:46:42,389 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=3, lineno=219)
2024-06-06 03:46:42,389 - DEBUG - stack []
2024-06-06 03:46:42,389 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=219)
2024-06-06 03:46:42,389 - DEBUG - stack ['$const48.0']
2024-06-06 03:46:42,389 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=220)
2024-06-06 03:46:42,389 - DEBUG - stack []
2024-06-06 03:46:42,389 - DEBUG - dispatch pc=54, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2024-06-06 03:46:42,389 - DEBUG - stack ['$b52.1']
2024-06-06 03:46:42,389 - DEBUG - dispatch pc=56, inst=STORE_FAST(arg=4, lineno=220)
2024-06-06 03:46:42,389 - DEBUG - stack ['$54unary_negative.2']
2024-06-06 03:46:42,389 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=4, lineno=221)
2024-06-06 03:46:42,389 - DEBUG - stack []
2024-06-06 03:46:42,390 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=221)
2024-06-06 03:46:42,390 - DEBUG - stack ['$exp58.3']
2024-06-06 03:46:42,390 - DEBUG - dispatch pc=62, inst=COMPARE_OP(arg=2, lineno=221)
2024-06-06 03:46:42,390 - DEBUG - stack ['$exp58.3', '$const60.4']
2024-06-06 03:46:42,390 - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=6, lineno=221)
2024-06-06 03:46:42,390 - DEBUG - stack ['$62compare_op.5']
2024-06-06 03:46:42,390 - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=80, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,390 - DEBUG - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=80 nstack_initial=0)])
2024-06-06 03:46:42,390 - DEBUG - stack: []
2024-06-06 03:46:42,390 - DEBUG - state.pc_initial: State(pc_initial=146 nstack_initial=0)
2024-06-06 03:46:42,390 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=6, lineno=232)
2024-06-06 03:46:42,390 - DEBUG - stack []
2024-06-06 03:46:42,390 - DEBUG - dispatch pc=148, inst=STORE_FAST(arg=3, lineno=232)
2024-06-06 03:46:42,390 - DEBUG - stack ['$const146.0']
2024-06-06 03:46:42,391 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=1, lineno=233)
2024-06-06 03:46:42,391 - DEBUG - stack []
2024-06-06 03:46:42,391 - DEBUG - dispatch pc=152, inst=STORE_FAST(arg=4, lineno=233)
2024-06-06 03:46:42,391 - DEBUG - stack ['$b150.1']
2024-06-06 03:46:42,391 - DEBUG - end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,391 - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=80 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-06-06 03:46:42,391 - DEBUG - stack: []
2024-06-06 03:46:42,391 - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2024-06-06 03:46:42,391 - DEBUG - dispatch pc=68, inst=LOAD_GLOBAL(arg=0, lineno=222)
2024-06-06 03:46:42,391 - DEBUG - stack []
2024-06-06 03:46:42,391 - DEBUG - dispatch pc=78, inst=RAISE_VARARGS(arg=1, lineno=222)
2024-06-06 03:46:42,391 - DEBUG - stack ['$68load_global.0']
2024-06-06 03:46:42,391 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,392 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-06-06 03:46:42,392 - DEBUG - stack: []
2024-06-06 03:46:42,392 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=0)
2024-06-06 03:46:42,392 - DEBUG - dispatch pc=80, inst=LOAD_DEREF(arg=5, lineno=223)
2024-06-06 03:46:42,392 - DEBUG - stack []
2024-06-06 03:46:42,392 - DEBUG - dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=35, lineno=223)
2024-06-06 03:46:42,392 - DEBUG - stack ['$80load_deref.0']
2024-06-06 03:46:42,392 - DEBUG - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,392 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-06-06 03:46:42,392 - DEBUG - stack: []
2024-06-06 03:46:42,392 - DEBUG - state.pc_initial: State(pc_initial=154 nstack_initial=0)
2024-06-06 03:46:42,392 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=234)
2024-06-06 03:46:42,392 - DEBUG - stack []
2024-06-06 03:46:42,393 - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=7, lineno=234)
2024-06-06 03:46:42,393 - DEBUG - stack ['$exp154.0']
2024-06-06 03:46:42,393 - DEBUG - dispatch pc=158, inst=COMPARE_OP(arg=68, lineno=234)
2024-06-06 03:46:42,393 - DEBUG - stack ['$exp154.0', '$const156.1']
2024-06-06 03:46:42,393 - DEBUG - dispatch pc=162, inst=POP_JUMP_IF_FALSE(arg=31, lineno=234)
2024-06-06 03:46:42,393 - DEBUG - stack ['$158compare_op.2']
2024-06-06 03:46:42,393 - DEBUG - end state. edges=[Edge(pc=164, stack=(), blockstack=(), npush=0), Edge(pc=226, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,393 - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=226 nstack_initial=0)])
2024-06-06 03:46:42,393 - DEBUG - stack: []
2024-06-06 03:46:42,393 - DEBUG - state.pc_initial: State(pc_initial=84 nstack_initial=0)
2024-06-06 03:46:42,393 - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=224)
2024-06-06 03:46:42,393 - DEBUG - stack []
2024-06-06 03:46:42,393 - DEBUG - dispatch pc=86, inst=LOAD_CONST(arg=2, lineno=224)
2024-06-06 03:46:42,394 - DEBUG - stack ['$a84.0']
2024-06-06 03:46:42,394 - DEBUG - dispatch pc=88, inst=COMPARE_OP(arg=40, lineno=224)
2024-06-06 03:46:42,394 - DEBUG - stack ['$a84.0', '$const86.1']
2024-06-06 03:46:42,394 - DEBUG - dispatch pc=92, inst=POP_JUMP_IF_FALSE(arg=15, lineno=224)
2024-06-06 03:46:42,394 - DEBUG - stack ['$88compare_op.2']
2024-06-06 03:46:42,394 - DEBUG - end state. edges=[Edge(pc=94, stack=(), blockstack=(), npush=0), Edge(pc=124, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,394 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=226 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
2024-06-06 03:46:42,394 - DEBUG - pending: deque([State(pc_initial=164 nstack_initial=0), State(pc_initial=226 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
2024-06-06 03:46:42,394 - DEBUG - stack: []
2024-06-06 03:46:42,394 - DEBUG - state.pc_initial: State(pc_initial=164 nstack_initial=0)
2024-06-06 03:46:42,394 - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=5, lineno=236)
2024-06-06 03:46:42,395 - DEBUG - stack []
2024-06-06 03:46:42,395 - DEBUG - dispatch pc=174, inst=LOAD_ATTR(arg=6, lineno=236)
2024-06-06 03:46:42,395 - DEBUG - stack ['$null$164.1', '$164load_global.0']
2024-06-06 03:46:42,395 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=0, lineno=236)
2024-06-06 03:46:42,395 - DEBUG - stack ['$null$164.1', '$174load_attr.2']
2024-06-06 03:46:42,395 - DEBUG - dispatch pc=196, inst=LOAD_GLOBAL(arg=9, lineno=236)
2024-06-06 03:46:42,395 - DEBUG - stack ['$null$164.1', '$174load_attr.2', '$a194.3']
2024-06-06 03:46:42,395 - DEBUG - dispatch pc=206, inst=LOAD_FAST(arg=1, lineno=236)
2024-06-06 03:46:42,395 - DEBUG - stack ['$null$164.1', '$174load_attr.2', '$a194.3', '$null$196.5', '$196load_global.4']
2024-06-06 03:46:42,395 - DEBUG - dispatch pc=208, inst=CALL(arg=1, lineno=236)
2024-06-06 03:46:42,395 - DEBUG - stack ['$null$164.1', '$174load_attr.2', '$a194.3', '$null$196.5', '$196load_global.4', '$b206.6']
2024-06-06 03:46:42,395 - DEBUG - dispatch pc=216, inst=CALL(arg=2, lineno=236)
2024-06-06 03:46:42,395 - DEBUG - stack ['$null$164.1', '$174load_attr.2', '$a194.3', '$208call.7']
2024-06-06 03:46:42,396 - DEBUG - dispatch pc=224, inst=RETURN_VALUE(arg=None, lineno=236)
2024-06-06 03:46:42,396 - DEBUG - stack ['$216call.8']
2024-06-06 03:46:42,396 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,396 - DEBUG - pending: deque([State(pc_initial=226 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
2024-06-06 03:46:42,396 - DEBUG - stack: []
2024-06-06 03:46:42,396 - DEBUG - state.pc_initial: State(pc_initial=226 nstack_initial=0)
2024-06-06 03:46:42,396 - DEBUG - dispatch pc=226, inst=LOAD_FAST(arg=4, lineno=237)
2024-06-06 03:46:42,396 - DEBUG - stack []
2024-06-06 03:46:42,396 - DEBUG - dispatch pc=228, inst=LOAD_CONST(arg=2, lineno=237)
2024-06-06 03:46:42,396 - DEBUG - stack ['$exp226.0']
2024-06-06 03:46:42,396 - DEBUG - dispatch pc=230, inst=COMPARE_OP(arg=55, lineno=237)
2024-06-06 03:46:42,396 - DEBUG - stack ['$exp226.0', '$const228.1']
2024-06-06 03:46:42,396 - DEBUG - dispatch pc=234, inst=POP_JUMP_IF_FALSE(arg=26, lineno=237)
2024-06-06 03:46:42,397 - DEBUG - stack ['$230compare_op.2']
2024-06-06 03:46:42,397 - DEBUG - end state. edges=[Edge(pc=236, stack=(), blockstack=(), npush=0), Edge(pc=288, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,397 - DEBUG - pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=124 nstack_initial=0), State(pc_initial=236 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2024-06-06 03:46:42,397 - DEBUG - stack: []
2024-06-06 03:46:42,397 - DEBUG - state.pc_initial: State(pc_initial=94 nstack_initial=0)
2024-06-06 03:46:42,397 - DEBUG - dispatch pc=94, inst=LOAD_DEREF(arg=7, lineno=225)
2024-06-06 03:46:42,397 - DEBUG - stack []
2024-06-06 03:46:42,397 - DEBUG - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=2, lineno=225)
2024-06-06 03:46:42,397 - DEBUG - stack ['$94load_deref.0']
2024-06-06 03:46:42,397 - DEBUG - end state. edges=[Edge(pc=98, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,397 - DEBUG - pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=236 nstack_initial=0), State(pc_initial=288 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2024-06-06 03:46:42,397 - DEBUG - stack: []
2024-06-06 03:46:42,398 - DEBUG - state.pc_initial: State(pc_initial=124 nstack_initial=0)
2024-06-06 03:46:42,398 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=0, lineno=229)
2024-06-06 03:46:42,398 - DEBUG - stack []
2024-06-06 03:46:42,398 - DEBUG - dispatch pc=126, inst=LOAD_CONST(arg=1, lineno=229)
2024-06-06 03:46:42,398 - DEBUG - stack ['$a124.0']
2024-06-06 03:46:42,398 - DEBUG - dispatch pc=128, inst=COMPARE_OP(arg=55, lineno=229)
2024-06-06 03:46:42,398 - DEBUG - stack ['$a124.0', '$const126.1']
2024-06-06 03:46:42,398 - DEBUG - dispatch pc=132, inst=POP_JUMP_IF_FALSE(arg=10, lineno=229)
2024-06-06 03:46:42,398 - DEBUG - stack ['$128compare_op.2']
2024-06-06 03:46:42,398 - DEBUG - end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,398 - DEBUG - pending: deque([State(pc_initial=236 nstack_initial=0), State(pc_initial=288 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-06-06 03:46:42,398 - DEBUG - stack: []
2024-06-06 03:46:42,398 - DEBUG - state.pc_initial: State(pc_initial=236 nstack_initial=0)
2024-06-06 03:46:42,398 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=4, lineno=238)
2024-06-06 03:46:42,399 - DEBUG - stack []
2024-06-06 03:46:42,399 - DEBUG - dispatch pc=238, inst=LOAD_CONST(arg=1, lineno=238)
2024-06-06 03:46:42,399 - DEBUG - stack ['$exp236.0']
2024-06-06 03:46:42,399 - DEBUG - dispatch pc=240, inst=BINARY_OP(arg=1, lineno=238)
2024-06-06 03:46:42,399 - DEBUG - stack ['$exp236.0', '$const238.1']
2024-06-06 03:46:42,399 - DEBUG - dispatch pc=244, inst=POP_JUMP_IF_FALSE(arg=5, lineno=238)
2024-06-06 03:46:42,399 - DEBUG - stack ['$binop_and_240.2']
2024-06-06 03:46:42,399 - DEBUG - end state. edges=[Edge(pc=246, stack=(), blockstack=(), npush=0), Edge(pc=256, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,399 - DEBUG - pending: deque([State(pc_initial=288 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0)])
2024-06-06 03:46:42,399 - DEBUG - stack: []
2024-06-06 03:46:42,399 - DEBUG - state.pc_initial: State(pc_initial=288 nstack_initial=0)
2024-06-06 03:46:42,399 - DEBUG - dispatch pc=288, inst=LOAD_FAST(arg=3, lineno=243)
2024-06-06 03:46:42,399 - DEBUG - stack []
2024-06-06 03:46:42,400 - DEBUG - dispatch pc=290, inst=POP_JUMP_IF_FALSE(arg=5, lineno=243)
2024-06-06 03:46:42,400 - DEBUG - stack ['$invert288.0']
2024-06-06 03:46:42,400 - DEBUG - end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,400 - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-06-06 03:46:42,400 - DEBUG - stack: []
2024-06-06 03:46:42,400 - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=0)
2024-06-06 03:46:42,400 - DEBUG - dispatch pc=98, inst=LOAD_DEREF(arg=7, lineno=226)
2024-06-06 03:46:42,400 - DEBUG - stack []
2024-06-06 03:46:42,400 - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=226)
2024-06-06 03:46:42,400 - DEBUG - stack ['$98load_deref.0']
2024-06-06 03:46:42,400 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,400 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-06-06 03:46:42,401 - DEBUG - stack: []
2024-06-06 03:46:42,401 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-06-06 03:46:42,401 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=3, lineno=228)
2024-06-06 03:46:42,401 - DEBUG - stack []
2024-06-06 03:46:42,401 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=228)
2024-06-06 03:46:42,401 - DEBUG - stack ['$null$102.1', '$102load_global.0']
2024-06-06 03:46:42,401 - DEBUG - dispatch pc=114, inst=CALL(arg=1, lineno=228)
2024-06-06 03:46:42,401 - DEBUG - stack ['$null$102.1', '$102load_global.0', '$const112.2']
2024-06-06 03:46:42,401 - DEBUG - dispatch pc=122, inst=RAISE_VARARGS(arg=1, lineno=228)
2024-06-06 03:46:42,401 - DEBUG - stack ['$114call.3']
2024-06-06 03:46:42,401 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,401 - DEBUG - pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-06-06 03:46:42,401 - DEBUG - stack: []
2024-06-06 03:46:42,401 - DEBUG - state.pc_initial: State(pc_initial=134 nstack_initial=0)
2024-06-06 03:46:42,402 - DEBUG - dispatch pc=134, inst=LOAD_FAST(arg=0, lineno=229)
2024-06-06 03:46:42,402 - DEBUG - stack []
2024-06-06 03:46:42,402 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=5, lineno=229)
2024-06-06 03:46:42,402 - DEBUG - stack ['$a134.0']
2024-06-06 03:46:42,402 - DEBUG - dispatch pc=138, inst=COMPARE_OP(arg=55, lineno=229)
2024-06-06 03:46:42,402 - DEBUG - stack ['$a134.0', '$const136.1']
2024-06-06 03:46:42,402 - DEBUG - dispatch pc=142, inst=POP_JUMP_IF_FALSE(arg=5, lineno=229)
2024-06-06 03:46:42,402 - DEBUG - stack ['$138compare_op.2']
2024-06-06 03:46:42,402 - DEBUG - end state. edges=[Edge(pc=144, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,402 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-06-06 03:46:42,402 - DEBUG - pending: deque([State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-06-06 03:46:42,402 - DEBUG - stack: []
2024-06-06 03:46:42,402 - DEBUG - state.pc_initial: State(pc_initial=246 nstack_initial=0)
2024-06-06 03:46:42,403 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=2, lineno=239)
2024-06-06 03:46:42,403 - DEBUG - stack []
2024-06-06 03:46:42,403 - DEBUG - dispatch pc=248, inst=LOAD_FAST(arg=0, lineno=239)
2024-06-06 03:46:42,403 - DEBUG - stack ['$r246.0']
2024-06-06 03:46:42,403 - DEBUG - dispatch pc=250, inst=BINARY_OP(arg=18, lineno=239)
2024-06-06 03:46:42,403 - DEBUG - stack ['$r246.0', '$a248.1']
2024-06-06 03:46:42,403 - DEBUG - dispatch pc=254, inst=STORE_FAST(arg=2, lineno=239)
2024-06-06 03:46:42,403 - DEBUG - stack ['$binop_imul250.2']
2024-06-06 03:46:42,403 - DEBUG - end state. edges=[Edge(pc=256, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,403 - DEBUG - pending: deque([State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=256 nstack_initial=0)])
2024-06-06 03:46:42,403 - DEBUG - stack: []
2024-06-06 03:46:42,403 - DEBUG - state.pc_initial: State(pc_initial=256 nstack_initial=0)
2024-06-06 03:46:42,404 - DEBUG - dispatch pc=256, inst=LOAD_FAST(arg=4, lineno=240)
2024-06-06 03:46:42,404 - DEBUG - stack []
2024-06-06 03:46:42,404 - DEBUG - dispatch pc=258, inst=LOAD_CONST(arg=1, lineno=240)
2024-06-06 03:46:42,404 - DEBUG - stack ['$exp256.0']
2024-06-06 03:46:42,404 - DEBUG - dispatch pc=260, inst=BINARY_OP(arg=22, lineno=240)
2024-06-06 03:46:42,404 - DEBUG - stack ['$exp256.0', '$const258.1']
2024-06-06 03:46:42,404 - DEBUG - dispatch pc=264, inst=STORE_FAST(arg=4, lineno=240)
2024-06-06 03:46:42,404 - DEBUG - stack ['$binop_irshift260.2']
2024-06-06 03:46:42,404 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=0, lineno=241)
2024-06-06 03:46:42,404 - DEBUG - stack []
2024-06-06 03:46:42,404 - DEBUG - dispatch pc=268, inst=LOAD_FAST(arg=0, lineno=241)
2024-06-06 03:46:42,404 - DEBUG - stack ['$a266.3']
2024-06-06 03:46:42,404 - DEBUG - dispatch pc=270, inst=BINARY_OP(arg=18, lineno=241)
2024-06-06 03:46:42,404 - DEBUG - stack ['$a266.3', '$a268.4']
2024-06-06 03:46:42,405 - DEBUG - dispatch pc=274, inst=STORE_FAST(arg=0, lineno=241)
2024-06-06 03:46:42,405 - DEBUG - stack ['$binop_imul270.5']
2024-06-06 03:46:42,405 - DEBUG - dispatch pc=276, inst=LOAD_FAST(arg=4, lineno=237)
2024-06-06 03:46:42,405 - DEBUG - stack []
2024-06-06 03:46:42,405 - DEBUG - dispatch pc=278, inst=LOAD_CONST(arg=2, lineno=237)
2024-06-06 03:46:42,405 - DEBUG - stack ['$exp276.6']
2024-06-06 03:46:42,405 - DEBUG - dispatch pc=280, inst=COMPARE_OP(arg=55, lineno=237)
2024-06-06 03:46:42,405 - DEBUG - stack ['$exp276.6', '$const278.7']
2024-06-06 03:46:42,405 - DEBUG - dispatch pc=284, inst=POP_JUMP_IF_FALSE(arg=1, lineno=237)
2024-06-06 03:46:42,405 - DEBUG - stack ['$280compare_op.8']
2024-06-06 03:46:42,405 - DEBUG - end state. edges=[Edge(pc=286, stack=(), blockstack=(), npush=0), Edge(pc=288, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,405 - DEBUG - pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2024-06-06 03:46:42,405 - DEBUG - stack: []
2024-06-06 03:46:42,406 - DEBUG - state.pc_initial: State(pc_initial=292 nstack_initial=0)
2024-06-06 03:46:42,406 - DEBUG - dispatch pc=292, inst=LOAD_CONST(arg=8, lineno=243)
2024-06-06 03:46:42,406 - DEBUG - stack []
2024-06-06 03:46:42,406 - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=2, lineno=243)
2024-06-06 03:46:42,406 - DEBUG - stack ['$const292.0']
2024-06-06 03:46:42,406 - DEBUG - dispatch pc=296, inst=BINARY_OP(arg=11, lineno=243)
2024-06-06 03:46:42,406 - DEBUG - stack ['$const292.0', '$r294.1']
2024-06-06 03:46:42,406 - DEBUG - dispatch pc=300, inst=RETURN_VALUE(arg=None, lineno=243)
2024-06-06 03:46:42,406 - DEBUG - stack ['$binop_truediv296.2']
2024-06-06 03:46:42,406 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,406 - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2024-06-06 03:46:42,406 - DEBUG - stack: []
2024-06-06 03:46:42,406 - DEBUG - state.pc_initial: State(pc_initial=302 nstack_initial=0)
2024-06-06 03:46:42,406 - DEBUG - dispatch pc=302, inst=LOAD_FAST(arg=2, lineno=243)
2024-06-06 03:46:42,407 - DEBUG - stack []
2024-06-06 03:46:42,407 - DEBUG - dispatch pc=304, inst=RETURN_VALUE(arg=None, lineno=243)
2024-06-06 03:46:42,407 - DEBUG - stack ['$r302.0']
2024-06-06 03:46:42,407 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,407 - DEBUG - pending: deque([State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2024-06-06 03:46:42,407 - DEBUG - stack: []
2024-06-06 03:46:42,407 - DEBUG - state.pc_initial: State(pc_initial=144 nstack_initial=0)
2024-06-06 03:46:42,407 - DEBUG - dispatch pc=144, inst=RETURN_CONST(arg=2, lineno=230)
2024-06-06 03:46:42,407 - DEBUG - stack []
2024-06-06 03:46:42,407 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,407 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2024-06-06 03:46:42,407 - DEBUG - pending: deque([State(pc_initial=256 nstack_initial=0), State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2024-06-06 03:46:42,407 - DEBUG - pending: deque([State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2024-06-06 03:46:42,408 - DEBUG - stack: []
2024-06-06 03:46:42,408 - DEBUG - state.pc_initial: State(pc_initial=286 nstack_initial=0)
2024-06-06 03:46:42,408 - DEBUG - dispatch pc=286, inst=JUMP_BACKWARD(arg=26, lineno=237)
2024-06-06 03:46:42,408 - DEBUG - stack []
2024-06-06 03:46:42,408 - DEBUG - end state. edges=[Edge(pc=236, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,408 - DEBUG - pending: deque([State(pc_initial=288 nstack_initial=0), State(pc_initial=236 nstack_initial=0)])
2024-06-06 03:46:42,408 - DEBUG - pending: deque([State(pc_initial=236 nstack_initial=0)])
2024-06-06 03:46:42,408 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:42,408 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=124 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=144 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set(),
             State(pc_initial=226 nstack_initial=0): set(),
             State(pc_initial=236 nstack_initial=0): set(),
             State(pc_initial=246 nstack_initial=0): set(),
             State(pc_initial=256 nstack_initial=0): set(),
             State(pc_initial=286 nstack_initial=0): set(),
             State(pc_initial=288 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set()})
2024-06-06 03:46:42,409 - DEBUG - defmap: {}
2024-06-06 03:46:42,409 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:42,409 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:42,409 - DEBUG - keep phismap: {}
2024-06-06 03:46:42,409 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:42,409 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:42,409 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {}), (8, {'res': '$8load_deref.1'}), (10, {'res': '$const10.2'}), (12, {'func': '$8load_deref.1', 'args': ['$const10.2'], 'kw_names': None, 'res': '$12call.3'}), (20, {'value': '$12call.3'}), (22, {}), (24, {'res': '$24load_deref.5'}), (26, {'res': '$a26.6'}), (28, {'func': '$24load_deref.5', 'args': ['$a26.6'], 'kw_names': None, 'res': '$28call.7'}), (36, {'value': '$28call.7'}), (38, {'res': '$b38.8'}), (40, {'res': '$const40.9'}), (42, {'lhs': '$b38.8', 'rhs': '$const40.9', 'res': '$42compare_op.10'}), (46, {'pred': '$42compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 146: ()})
2024-06-06 03:46:42,410 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0'}), (50, {'value': '$const48.0'}), (52, {'res': '$b52.1'}), (54, {'value': '$b52.1', 'res': '$54unary_negative.2'}), (56, {'value': '$54unary_negative.2'}), (58, {'res': '$exp58.3'}), (60, {'res': '$const60.4'}), (62, {'lhs': '$exp58.3', 'rhs': '$const60.4', 'res': '$62compare_op.5'}), (66, {'pred': '$62compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 80: ()})
2024-06-06 03:46:42,410 - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'idx': 0, 'res': '$68load_global.0'}), (78, {'exc': '$68load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,410 - DEBUG - block_infos State(pc_initial=80 nstack_initial=0):
AdaptBlockInfo(insts=((80, {'res': '$80load_deref.0'}), (82, {'pred': '$80load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 154: ()})
2024-06-06 03:46:42,410 - DEBUG - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (92, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={94: (), 124: ()})
2024-06-06 03:46:42,410 - DEBUG - block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$94load_deref.0'}), (96, {'pred': '$94load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: (), 102: ()})
2024-06-06 03:46:42,410 - DEBUG - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$98load_deref.0'}), (100, {'retval': '$98load_deref.0', 'castval': '$100return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,410 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'idx': 1, 'res': '$102load_global.0'}), (112, {'res': '$const112.2'}), (114, {'func': '$102load_global.0', 'args': ['$const112.2'], 'kw_names': None, 'res': '$114call.3'}), (122, {'exc': '$114call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,411 - DEBUG - block_infos State(pc_initial=124 nstack_initial=0):
AdaptBlockInfo(insts=((124, {'res': '$a124.0'}), (126, {'res': '$const126.1'}), (128, {'lhs': '$a124.0', 'rhs': '$const126.1', 'res': '$128compare_op.2'}), (132, {'pred': '$128compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: (), 154: ()})
2024-06-06 03:46:42,411 - DEBUG - block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$a134.0'}), (136, {'res': '$const136.1'}), (138, {'lhs': '$a134.0', 'rhs': '$const136.1', 'res': '$138compare_op.2'}), (142, {'pred': '$138compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={144: (), 154: ()})
2024-06-06 03:46:42,411 - DEBUG - block_infos State(pc_initial=144 nstack_initial=0):
AdaptBlockInfo(insts=((144, {'retval': '$const144.0', 'castval': '$144return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,411 - DEBUG - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$const146.0'}), (148, {'value': '$const146.0'}), (150, {'res': '$b150.1'}), (152, {'value': '$b150.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
2024-06-06 03:46:42,411 - DEBUG - block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158compare_op.2'}), (162, {'pred': '$158compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: (), 226: ()})
2024-06-06 03:46:42,411 - DEBUG - block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((164, {'idx': 2, 'res': '$164load_global.0'}), (174, {'item': '$164load_global.0', 'res': '$174load_attr.2'}), (194, {'res': '$a194.3'}), (196, {'idx': 4, 'res': '$196load_global.4'}), (206, {'res': '$b206.6'}), (208, {'func': '$196load_global.4', 'args': ['$b206.6'], 'kw_names': None, 'res': '$208call.7'}), (216, {'func': '$174load_attr.2', 'args': ['$a194.3', '$208call.7'], 'kw_names': None, 'res': '$216call.8'}), (224, {'retval': '$216call.8', 'castval': '$224return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,411 - DEBUG - block_infos State(pc_initial=226 nstack_initial=0):
AdaptBlockInfo(insts=((226, {'res': '$exp226.0'}), (228, {'res': '$const228.1'}), (230, {'lhs': '$exp226.0', 'rhs': '$const228.1', 'res': '$230compare_op.2'}), (234, {'pred': '$230compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={236: (), 288: ()})
2024-06-06 03:46:42,411 - DEBUG - block_infos State(pc_initial=236 nstack_initial=0):
AdaptBlockInfo(insts=((236, {'res': '$exp236.0'}), (238, {'res': '$const238.1'}), (240, {'op': '&', 'lhs': '$exp236.0', 'rhs': '$const238.1', 'res': '$binop_and_240.2'}), (244, {'pred': '$binop_and_240.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={246: (), 256: ()})
2024-06-06 03:46:42,412 - DEBUG - block_infos State(pc_initial=246 nstack_initial=0):
AdaptBlockInfo(insts=((246, {'res': '$r246.0'}), (248, {'res': '$a248.1'}), (250, {'op': '*=', 'lhs': '$r246.0', 'rhs': '$a248.1', 'res': '$binop_imul250.2'}), (254, {'value': '$binop_imul250.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={256: ()})
2024-06-06 03:46:42,412 - DEBUG - block_infos State(pc_initial=256 nstack_initial=0):
AdaptBlockInfo(insts=((256, {'res': '$exp256.0'}), (258, {'res': '$const258.1'}), (260, {'op': '>>=', 'lhs': '$exp256.0', 'rhs': '$const258.1', 'res': '$binop_irshift260.2'}), (264, {'value': '$binop_irshift260.2'}), (266, {'res': '$a266.3'}), (268, {'res': '$a268.4'}), (270, {'op': '*=', 'lhs': '$a266.3', 'rhs': '$a268.4', 'res': '$binop_imul270.5'}), (274, {'value': '$binop_imul270.5'}), (276, {'res': '$exp276.6'}), (278, {'res': '$const278.7'}), (280, {'lhs': '$exp276.6', 'rhs': '$const278.7', 'res': '$280compare_op.8'}), (284, {'pred': '$280compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={286: (), 288: ()})
2024-06-06 03:46:42,412 - DEBUG - block_infos State(pc_initial=286 nstack_initial=0):
AdaptBlockInfo(insts=((286, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={236: ()})
2024-06-06 03:46:42,412 - DEBUG - block_infos State(pc_initial=288 nstack_initial=0):
AdaptBlockInfo(insts=((288, {'res': '$invert288.0'}), (290, {'pred': '$invert288.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
2024-06-06 03:46:42,412 - DEBUG - block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$const292.0'}), (294, {'res': '$r294.1'}), (296, {'op': '/', 'lhs': '$const292.0', 'rhs': '$r294.1', 'res': '$binop_truediv296.2'}), (300, {'retval': '$binop_truediv296.2', 'castval': '$300return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,412 - DEBUG - block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$r302.0'}), (304, {'retval': '$r302.0', 'castval': '$304return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,417 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $8load_deref.1 = freevar(tp: float32)    ['$8load_deref.1']
    $const10.2 = const(int, 1)               ['$const10.2']
    r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$8load_deref.1', '$const10.2', 'r']
    $24load_deref.5 = freevar(tp: float32)   ['$24load_deref.5']
    a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_deref.5', 'a', 'a.1']
    $const40.9 = const(int, 0)               ['$const40.9']
    $42compare_op.10 = b < $const40.9        ['$42compare_op.10', '$const40.9', 'b']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.10', '$46pred', 'bool46']
    branch $46pred, 48, 146                  ['$46pred']
label 48:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const60.4 = const(int, 0)               ['$const60.4']
    $62compare_op.5 = exp < $const60.4       ['$62compare_op.5', '$const60.4', 'exp']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.5', '$66pred', 'bool66']
    branch $66pred, 68, 80                   ['$66pred']
label 68:
    $68load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$68load_global.0']
    raise $68load_global.0                   ['$68load_global.0']
label 80:
    $80load_deref.0 = freevar(is_integer: False) ['$80load_deref.0']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$80load_deref.0', '$82pred', 'bool82']
    branch $82pred, 84, 154                  ['$82pred']
label 84:
    $const86.1 = const(int, 0)               ['$const86.1']
    $88compare_op.2 = a.1 == $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
    $92pred = call bool92($88compare_op.2, func=bool92, args=(Var($88compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$92pred', 'bool92']
    branch $92pred, 94, 124                  ['$92pred']
label 94:
    $94load_deref.0 = freevar(zerodiv_return: False) ['$94load_deref.0']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94load_deref.0, func=bool96, args=(Var($94load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$94load_deref.0', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
label 98:
    $98load_deref.0 = freevar(zerodiv_return: False) ['$98load_deref.0']
    $100return_value.1 = cast(value=$98load_deref.0) ['$100return_value.1', '$98load_deref.0']
    return $100return_value.1                ['$100return_value.1']
label 102:
    $102load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$102load_global.0']
    $const112.2 = const(str, 0 cannot be raised to a negative power) ['$const112.2']
    $114call.3 = call $102load_global.0($const112.2, func=$102load_global.0, args=[Var($const112.2, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$102load_global.0', '$114call.3', '$const112.2']
    raise $114call.3                         ['$114call.3']
label 124:
    $const126.1 = const(int, 1)              ['$const126.1']
    $128compare_op.2 = a.1 != $const126.1    ['$128compare_op.2', '$const126.1', 'a.1']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($128compare_op.2, func=bool132, args=(Var($128compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$128compare_op.2', '$132pred', 'bool132']
    branch $132pred, 134, 154                ['$132pred']
label 134:
    $const136.1 = const(int, -1)             ['$const136.1']
    $138compare_op.2 = a.1 != $const136.1    ['$138compare_op.2', '$const136.1', 'a.1']
    bool142 = global(bool: <class 'bool'>)   ['bool142']
    $142pred = call bool142($138compare_op.2, func=bool142, args=(Var($138compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$138compare_op.2', '$142pred', 'bool142']
    branch $142pred, 144, 154                ['$142pred']
label 144:
    $const144.0 = const(int, 0)              ['$const144.0']
    $144return_const.1 = cast(value=$const144.0) ['$144return_const.1', '$const144.0']
    return $144return_const.1                ['$144return_const.1']
label 146:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 65536)          ['$const156.1']
    $158compare_op.2 = exp > $const156.1     ['$158compare_op.2', '$const156.1', 'exp']
    bool162 = global(bool: <class 'bool'>)   ['bool162']
    $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$158compare_op.2', '$162pred', 'bool162']
    branch $162pred, 164, 226                ['$162pred']
label 164:
    $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>) ['$164load_global.0']
    $174load_attr.2 = getattr(value=$164load_global.0, attr=pow) ['$164load_global.0', '$174load_attr.2']
    $196load_global.4 = global(float: <class 'float'>) ['$196load_global.4']
    $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$196load_global.4', '$208call.7', 'b']
    $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$174load_attr.2', '$208call.7', '$216call.8', 'a.1']
    $224return_value.9 = cast(value=$216call.8) ['$216call.8', '$224return_value.9']
    return $224return_value.9                ['$224return_value.9']
label 226:
    $const228.1 = const(int, 0)              ['$const228.1']
    $230compare_op.2 = exp != $const228.1    ['$230compare_op.2', '$const228.1', 'exp']
    bool234 = global(bool: <class 'bool'>)   ['bool234']
    $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$230compare_op.2', '$234pred', 'bool234']
    branch $234pred, 236, 288                ['$234pred']
label 236:
    $const238.1 = const(int, 1)              ['$const238.1']
    $binop_and_240.2 = exp & $const238.1     ['$binop_and_240.2', '$const238.1', 'exp']
    bool244 = global(bool: <class 'bool'>)   ['bool244']
    $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$244pred', '$binop_and_240.2', 'bool244']
    branch $244pred, 246, 256                ['$244pred']
label 246:
    $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul250.2', 'a.1', 'r']
    r = $binop_imul250.2                     ['$binop_imul250.2', 'r']
    jump 256                                 []
label 256:
    $const258.1 = const(int, 1)              ['$const258.1']
    $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_irshift260.2', '$const258.1', 'exp']
    exp = $binop_irshift260.2                ['$binop_irshift260.2', 'exp']
    $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul270.5', 'a.1', 'a.1']
    a.1 = $binop_imul270.5                   ['$binop_imul270.5', 'a.1']
    $const278.7 = const(int, 0)              ['$const278.7']
    $280compare_op.8 = exp != $const278.7    ['$280compare_op.8', '$const278.7', 'exp']
    bool284 = global(bool: <class 'bool'>)   ['bool284']
    $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$280compare_op.8', '$284pred', 'bool284']
    branch $284pred, 286, 288                ['$284pred']
label 286:
    jump 236                                 []
label 288:
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$290pred', 'bool290', 'invert']
    branch $290pred, 292, 302                ['$290pred']
label 292:
    $const292.0 = const(float, 1.0)          ['$const292.0']
    $binop_truediv296.2 = $const292.0 / r    ['$binop_truediv296.2', '$const292.0', 'r']
    $300return_value.3 = cast(value=$binop_truediv296.2) ['$300return_value.3', '$binop_truediv296.2']
    return $300return_value.3                ['$300return_value.3']
label 302:
    $304return_value.1 = cast(value=r)       ['$304return_value.1', 'r']
    return $304return_value.1                ['$304return_value.1']

2024-06-06 03:46:42,449 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:42,449 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b95ab890>
2024-06-06 03:46:42,449 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,449 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,449 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-06 03:46:42,449 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,450 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,450 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float32)
2024-06-06 03:46:42,450 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,450 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,450 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,450 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,450 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,450 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,450 - DEBUG - ==== SSA block analysis pass on 48
2024-06-06 03:46:42,450 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b95ab890>
2024-06-06 03:46:42,450 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,450 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,451 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,451 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,451 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,451 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,451 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,451 - DEBUG - ==== SSA block analysis pass on 68
2024-06-06 03:46:42,451 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b95ab890>
2024-06-06 03:46:42,451 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,451 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,451 - DEBUG - ==== SSA block analysis pass on 80
2024-06-06 03:46:42,451 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b95ab890>
2024-06-06 03:46:42,451 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,451 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,451 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,452 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,452 - DEBUG - ==== SSA block analysis pass on 146
2024-06-06 03:46:42,452 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b95ab890>
2024-06-06 03:46:42,452 - DEBUG - on stmt: invert = const(bool, False)
2024-06-06 03:46:42,452 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,452 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,452 - DEBUG - ==== SSA block analysis pass on 154
2024-06-06 03:46:42,452 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b95ab890>
2024-06-06 03:46:42,452 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,452 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,452 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,452 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,452 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,453 - DEBUG - ==== SSA block analysis pass on 164
2024-06-06 03:46:42,453 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b95ab890>
2024-06-06 03:46:42,453 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,453 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,453 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,453 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,453 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,453 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,453 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,453 - DEBUG - ==== SSA block analysis pass on 226
2024-06-06 03:46:42,453 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b95ab890>
2024-06-06 03:46:42,453 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,454 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,454 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,454 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,454 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,454 - DEBUG - ==== SSA block analysis pass on 236
2024-06-06 03:46:42,454 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b95ab890>
2024-06-06 03:46:42,454 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,454 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,454 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,454 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,454 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,454 - DEBUG - ==== SSA block analysis pass on 246
2024-06-06 03:46:42,455 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b95ab890>
2024-06-06 03:46:42,455 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,455 - DEBUG - on stmt: r = $binop_imul250.2
2024-06-06 03:46:42,455 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,455 - DEBUG - ==== SSA block analysis pass on 256
2024-06-06 03:46:42,455 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b95ab890>
2024-06-06 03:46:42,455 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,455 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,455 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,455 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,455 - DEBUG - on stmt: a.1 = $binop_imul270.5
2024-06-06 03:46:42,455 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,455 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,456 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,456 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,456 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,456 - DEBUG - ==== SSA block analysis pass on 286
2024-06-06 03:46:42,456 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b95ab890>
2024-06-06 03:46:42,456 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,456 - DEBUG - ==== SSA block analysis pass on 288
2024-06-06 03:46:42,456 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b95ab890>
2024-06-06 03:46:42,456 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,456 - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,456 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,456 - DEBUG - ==== SSA block analysis pass on 292
2024-06-06 03:46:42,457 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b95ab890>
2024-06-06 03:46:42,457 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,457 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r
2024-06-06 03:46:42,457 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,457 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,457 - DEBUG - ==== SSA block analysis pass on 302
2024-06-06 03:46:42,457 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b95ab890>
2024-06-06 03:46:42,457 - DEBUG - on stmt: $304return_value.1 = cast(value=r)
2024-06-06 03:46:42,457 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,459 - DEBUG - defs defaultdict(<class 'list'>,
            {'$158compare_op.2': [(<numba.core.ir.Assign object at 0x7fe9b9a68620>,
                                   154)],
             '$162pred': [(<numba.core.ir.Assign object at 0x7fe9b9a68320>,
                           154)],
             '$164load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9a681a0>,
                                    164)],
             '$174load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b9a6a150>,
                                  164)],
             '$196load_global.4': [(<numba.core.ir.Assign object at 0x7fe9b9a6b950>,
                                    164)],
             '$208call.7': [(<numba.core.ir.Assign object at 0x7fe9b9a6aa80>,
                             164)],
             '$216call.8': [(<numba.core.ir.Assign object at 0x7fe9b9a6b770>,
                             164)],
             '$224return_value.9': [(<numba.core.ir.Assign object at 0x7fe9b9a6a4e0>,
                                     164)],
             '$230compare_op.2': [(<numba.core.ir.Assign object at 0x7fe9d2143cb0>,
                                   226)],
             '$234pred': [(<numba.core.ir.Assign object at 0x7fe9d2143f20>,
                           226)],
             '$244pred': [(<numba.core.ir.Assign object at 0x7fe9d2142300>,
                           236)],
             '$24load_deref.5': [(<numba.core.ir.Assign object at 0x7fe9d22e7980>,
                                  0)],
             '$280compare_op.8': [(<numba.core.ir.Assign object at 0x7fe9b95a9d30>,
                                   256)],
             '$284pred': [(<numba.core.ir.Assign object at 0x7fe9b95a8ec0>,
                           256)],
             '$290pred': [(<numba.core.ir.Assign object at 0x7fe9b95a9df0>,
                           288)],
             '$300return_value.3': [(<numba.core.ir.Assign object at 0x7fe9b95ab920>,
                                     292)],
             '$304return_value.1': [(<numba.core.ir.Assign object at 0x7fe9b95ab2c0>,
                                     302)],
             '$42compare_op.10': [(<numba.core.ir.Assign object at 0x7fe9d22e63f0>,
                                   0)],
             '$46pred': [(<numba.core.ir.Assign object at 0x7fe9d22e5790>, 0)],
             '$62compare_op.5': [(<numba.core.ir.Assign object at 0x7fe9d22e7c50>,
                                  48)],
             '$66pred': [(<numba.core.ir.Assign object at 0x7fe9d22e5e80>, 48)],
             '$68load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d22e4830>,
                                   68)],
             '$80load_deref.0': [(<numba.core.ir.Assign object at 0x7fe9d22e59d0>,
                                  80)],
             '$82pred': [(<numba.core.ir.Assign object at 0x7fe9d22e4ce0>, 80)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x7fe9d22e6c30>,
                                 0)],
             '$binop_and_240.2': [(<numba.core.ir.Assign object at 0x7fe9d2143350>,
                                   236)],
             '$binop_imul250.2': [(<numba.core.ir.Assign object at 0x7fe9d2140da0>,
                                   246)],
             '$binop_imul270.5': [(<numba.core.ir.Assign object at 0x7fe9d2142120>,
                                   256)],
             '$binop_irshift260.2': [(<numba.core.ir.Assign object at 0x7fe9d2143530>,
                                      256)],
             '$binop_truediv296.2': [(<numba.core.ir.Assign object at 0x7fe9b95ab080>,
                                      292)],
             '$const10.2': [(<numba.core.ir.Assign object at 0x7fe9d22e76e0>,
                             0)],
             '$const156.1': [(<numba.core.ir.Assign object at 0x7fe9b9a6a4b0>,
                              154)],
             '$const228.1': [(<numba.core.ir.Assign object at 0x7fe9d2141670>,
                              226)],
             '$const238.1': [(<numba.core.ir.Assign object at 0x7fe9d2142f60>,
                              236)],
             '$const258.1': [(<numba.core.ir.Assign object at 0x7fe9d2143e00>,
                              256)],
             '$const278.7': [(<numba.core.ir.Assign object at 0x7fe9b95abcb0>,
                              256)],
             '$const292.0': [(<numba.core.ir.Assign object at 0x7fe9b95aa630>,
                              292)],
             '$const40.9': [(<numba.core.ir.Assign object at 0x7fe9d22e6ae0>,
                             0)],
             '$const60.4': [(<numba.core.ir.Assign object at 0x7fe9d22e4f80>,
                             48)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9d22e6360>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x7fe9d22e6a50>, 0),
                     (<numba.core.ir.Assign object at 0x7fe9b9a6b350>, 256)],
             'b': [(<numba.core.ir.Assign object at 0x7fe9d22e72c0>, 0)],
             'bool162': [(<numba.core.ir.Assign object at 0x7fe9b9a68500>,
                          154)],
             'bool234': [(<numba.core.ir.Assign object at 0x7fe9d2143560>,
                          226)],
             'bool244': [(<numba.core.ir.Assign object at 0x7fe9d2143230>,
                          236)],
             'bool284': [(<numba.core.ir.Assign object at 0x7fe9b95aa270>,
                          256)],
             'bool290': [(<numba.core.ir.Assign object at 0x7fe9b95aaa20>,
                          288)],
             'bool46': [(<numba.core.ir.Assign object at 0x7fe9d22e6ab0>, 0)],
             'bool66': [(<numba.core.ir.Assign object at 0x7fe9d22e5e50>, 48)],
             'bool82': [(<numba.core.ir.Assign object at 0x7fe9d22e4cb0>, 80)],
             'exp': [(<numba.core.ir.Assign object at 0x7fe9d22e4fe0>, 48),
                     (<numba.core.ir.Assign object at 0x7fe9b9a69730>, 146),
                     (<numba.core.ir.Assign object at 0x7fe9d2141550>, 256)],
             'invert': [(<numba.core.ir.Assign object at 0x7fe9d22e4770>, 48),
                        (<numba.core.ir.Assign object at 0x7fe9b9a69100>, 146)],
             'r': [(<numba.core.ir.Assign object at 0x7fe9d22e6840>, 0),
                   (<numba.core.ir.Assign object at 0x7fe9d2143e60>, 246)]})
2024-06-06 03:46:42,459 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d247e810>
2024-06-06 03:46:42,459 - DEBUG - Fix SSA violator on var r
2024-06-06 03:46:42,459 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,459 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443b00>
2024-06-06 03:46:42,459 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,460 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,460 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-06 03:46:42,460 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,460 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,460 - DEBUG - first assign: r
2024-06-06 03:46:42,460 - DEBUG - replaced with: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,460 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float32)
2024-06-06 03:46:42,460 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,460 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,460 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,460 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,460 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,461 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,461 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,461 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443b00>
2024-06-06 03:46:42,461 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,461 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,461 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,461 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,461 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,461 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,461 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,461 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,461 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443b00>
2024-06-06 03:46:42,462 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,462 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,462 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,462 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443b00>
2024-06-06 03:46:42,462 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,462 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,462 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,462 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,462 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,462 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443b00>
2024-06-06 03:46:42,462 - DEBUG - on stmt: invert = const(bool, False)
2024-06-06 03:46:42,462 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,462 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,462 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,463 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443b00>
2024-06-06 03:46:42,463 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,463 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,463 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,463 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,463 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,463 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,463 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443b00>
2024-06-06 03:46:42,463 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,463 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,463 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,463 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,463 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,464 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,464 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,464 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,464 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443b00>
2024-06-06 03:46:42,464 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,464 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,464 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,464 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,464 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,464 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,464 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443b00>
2024-06-06 03:46:42,464 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,464 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,465 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,465 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,465 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,465 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,465 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443b00>
2024-06-06 03:46:42,465 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,465 - DEBUG - on stmt: r = $binop_imul250.2
2024-06-06 03:46:42,465 - DEBUG - replaced with: r.1 = $binop_imul250.2
2024-06-06 03:46:42,465 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,465 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,465 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443b00>
2024-06-06 03:46:42,465 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,465 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,466 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,466 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,466 - DEBUG - on stmt: a.1 = $binop_imul270.5
2024-06-06 03:46:42,466 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,466 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,466 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,466 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,466 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,466 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,466 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443b00>
2024-06-06 03:46:42,466 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,466 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,467 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443b00>
2024-06-06 03:46:42,467 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,467 - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,467 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,467 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,467 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443b00>
2024-06-06 03:46:42,467 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,467 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r
2024-06-06 03:46:42,467 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,467 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,467 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,467 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443b00>
2024-06-06 03:46:42,467 - DEBUG - on stmt: $304return_value.1 = cast(value=r)
2024-06-06 03:46:42,467 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,468 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fe9b95aa5d0>],
             246: [<numba.core.ir.Assign object at 0x7fe9b95ab470>]})
2024-06-06 03:46:42,468 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,468 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2443b00>
2024-06-06 03:46:42,468 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,468 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,468 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-06 03:46:42,468 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,468 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,468 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float32)
2024-06-06 03:46:42,468 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,468 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,469 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,469 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,469 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,469 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,469 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,469 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2443b00>
2024-06-06 03:46:42,469 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,469 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,469 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,469 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,469 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,469 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,470 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,470 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,470 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2443b00>
2024-06-06 03:46:42,470 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,470 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,470 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,470 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2443b00>
2024-06-06 03:46:42,470 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,470 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,470 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,470 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,470 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,470 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2443b00>
2024-06-06 03:46:42,471 - DEBUG - on stmt: invert = const(bool, False)
2024-06-06 03:46:42,471 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,471 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,471 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,471 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2443b00>
2024-06-06 03:46:42,471 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,471 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,471 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,471 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,471 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,471 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,471 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2443b00>
2024-06-06 03:46:42,471 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,472 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,472 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,472 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,472 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,472 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,472 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,472 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,472 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2443b00>
2024-06-06 03:46:42,472 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,472 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,472 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,472 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,473 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,473 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,473 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2443b00>
2024-06-06 03:46:42,473 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,473 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,473 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,473 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,473 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,473 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,473 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2443b00>
2024-06-06 03:46:42,473 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,474 - DEBUG - find_def var='r' stmt=$binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,474 - DEBUG - find_def_from_top label 246
2024-06-06 03:46:42,474 - DEBUG - idom 236 from label 246
2024-06-06 03:46:42,474 - DEBUG - find_def_from_bottom label 236
2024-06-06 03:46:42,474 - DEBUG - find_def_from_top label 236
2024-06-06 03:46:42,474 - DEBUG - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 236
2024-06-06 03:46:42,474 - DEBUG - find_def_from_bottom label 226
2024-06-06 03:46:42,474 - DEBUG - find_def_from_top label 226
2024-06-06 03:46:42,474 - DEBUG - idom 154 from label 226
2024-06-06 03:46:42,474 - DEBUG - find_def_from_bottom label 154
2024-06-06 03:46:42,475 - DEBUG - find_def_from_top label 154
2024-06-06 03:46:42,475 - DEBUG - idom 0 from label 154
2024-06-06 03:46:42,475 - DEBUG - find_def_from_bottom label 0
2024-06-06 03:46:42,475 - DEBUG - incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,475 - DEBUG - find_def_from_bottom label 286
2024-06-06 03:46:42,475 - DEBUG - find_def_from_top label 286
2024-06-06 03:46:42,475 - DEBUG - idom 256 from label 286
2024-06-06 03:46:42,475 - DEBUG - find_def_from_bottom label 256
2024-06-06 03:46:42,475 - DEBUG - find_def_from_top label 256
2024-06-06 03:46:42,475 - DEBUG - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 256
2024-06-06 03:46:42,475 - DEBUG - find_def_from_bottom label 236
2024-06-06 03:46:42,476 - DEBUG - incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:216)], incoming_blocks=[226])
2024-06-06 03:46:42,476 - DEBUG - find_def_from_bottom label 246
2024-06-06 03:46:42,476 - DEBUG - incoming_def r.1 = $binop_imul250.2
2024-06-06 03:46:42,476 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,476 - DEBUG - replaced with: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,476 - DEBUG - on stmt: r.1 = $binop_imul250.2
2024-06-06 03:46:42,476 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,476 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,476 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2443b00>
2024-06-06 03:46:42,476 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,476 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,477 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,477 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,477 - DEBUG - on stmt: a.1 = $binop_imul270.5
2024-06-06 03:46:42,477 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,477 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,477 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,477 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,477 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,477 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,477 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2443b00>
2024-06-06 03:46:42,477 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,477 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,478 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2443b00>
2024-06-06 03:46:42,478 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,478 - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,478 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,478 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,478 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2443b00>
2024-06-06 03:46:42,478 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,478 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r
2024-06-06 03:46:42,478 - DEBUG - find_def var='r' stmt=$binop_truediv296.2 = $const292.0 / r
2024-06-06 03:46:42,478 - DEBUG - find_def_from_top label 292
2024-06-06 03:46:42,478 - DEBUG - idom 288 from label 292
2024-06-06 03:46:42,478 - DEBUG - find_def_from_bottom label 288
2024-06-06 03:46:42,478 - DEBUG - find_def_from_top label 288
2024-06-06 03:46:42,479 - DEBUG - insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 288
2024-06-06 03:46:42,479 - DEBUG - find_def_from_bottom label 256
2024-06-06 03:46:42,479 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,479 - DEBUG - find_def_from_bottom label 226
2024-06-06 03:46:42,479 - DEBUG - find_def_from_top label 226
2024-06-06 03:46:42,479 - DEBUG - idom 154 from label 226
2024-06-06 03:46:42,479 - DEBUG - find_def_from_bottom label 154
2024-06-06 03:46:42,479 - DEBUG - find_def_from_top label 154
2024-06-06 03:46:42,479 - DEBUG - idom 0 from label 154
2024-06-06 03:46:42,479 - DEBUG - find_def_from_bottom label 0
2024-06-06 03:46:42,479 - DEBUG - incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,479 - DEBUG - replaced with: $binop_truediv296.2 = $const292.0 / r.4
2024-06-06 03:46:42,480 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,480 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,480 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,480 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9d2443b00>
2024-06-06 03:46:42,480 - DEBUG - on stmt: $304return_value.1 = cast(value=r)
2024-06-06 03:46:42,480 - DEBUG - find_def var='r' stmt=$304return_value.1 = cast(value=r)
2024-06-06 03:46:42,480 - DEBUG - find_def_from_top label 302
2024-06-06 03:46:42,480 - DEBUG - idom 288 from label 302
2024-06-06 03:46:42,480 - DEBUG - find_def_from_bottom label 288
2024-06-06 03:46:42,480 - DEBUG - replaced with: $304return_value.1 = cast(value=r.4)
2024-06-06 03:46:42,480 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,480 - DEBUG - Fix SSA violator on var a.1
2024-06-06 03:46:42,481 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,481 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443a40>
2024-06-06 03:46:42,481 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,481 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,481 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-06 03:46:42,481 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,481 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,481 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float32)
2024-06-06 03:46:42,481 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,481 - DEBUG - first assign: a.1
2024-06-06 03:46:42,481 - DEBUG - replaced with: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,481 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,482 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,482 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,482 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,482 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,482 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,482 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443a40>
2024-06-06 03:46:42,482 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,482 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,482 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,482 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,482 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,482 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,482 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,483 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,483 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443a40>
2024-06-06 03:46:42,483 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,483 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,483 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,483 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443a40>
2024-06-06 03:46:42,483 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,483 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,483 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,483 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,483 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,483 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443a40>
2024-06-06 03:46:42,483 - DEBUG - on stmt: invert = const(bool, False)
2024-06-06 03:46:42,484 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,484 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,484 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,484 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443a40>
2024-06-06 03:46:42,484 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,484 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,484 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,484 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,484 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,484 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,484 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443a40>
2024-06-06 03:46:42,484 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,484 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,485 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,485 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,485 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,485 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,485 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,485 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,485 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443a40>
2024-06-06 03:46:42,485 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,485 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,485 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,485 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,485 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,485 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,486 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443a40>
2024-06-06 03:46:42,486 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,486 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,486 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,486 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,486 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,486 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,486 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,486 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443a40>
2024-06-06 03:46:42,486 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,486 - DEBUG - on stmt: r.1 = $binop_imul250.2
2024-06-06 03:46:42,486 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,486 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,487 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443a40>
2024-06-06 03:46:42,487 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,487 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,487 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,487 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,487 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,487 - DEBUG - on stmt: a.1 = $binop_imul270.5
2024-06-06 03:46:42,487 - DEBUG - replaced with: a.1.1 = $binop_imul270.5
2024-06-06 03:46:42,487 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,487 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,487 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,487 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,487 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,488 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,488 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443a40>
2024-06-06 03:46:42,488 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,488 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,488 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443a40>
2024-06-06 03:46:42,488 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2024-06-06 03:46:42,488 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,488 - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,488 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,488 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,488 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443a40>
2024-06-06 03:46:42,488 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,488 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2024-06-06 03:46:42,489 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,489 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,489 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,489 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9d2443a40>
2024-06-06 03:46:42,489 - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2024-06-06 03:46:42,489 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,489 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fe9b95a8140>],
             256: [<numba.core.ir.Assign object at 0x7fe9b95abbc0>]})
2024-06-06 03:46:42,489 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,489 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab350>
2024-06-06 03:46:42,489 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,489 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,490 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-06 03:46:42,490 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,490 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,490 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float32)
2024-06-06 03:46:42,490 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,490 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,490 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,490 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,490 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,490 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,490 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,490 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab350>
2024-06-06 03:46:42,491 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,491 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,491 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,491 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,491 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,491 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,491 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,491 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,491 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab350>
2024-06-06 03:46:42,491 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,491 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,491 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,492 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab350>
2024-06-06 03:46:42,492 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,492 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,492 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,492 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,492 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,492 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab350>
2024-06-06 03:46:42,492 - DEBUG - on stmt: invert = const(bool, False)
2024-06-06 03:46:42,492 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,492 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,492 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,492 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab350>
2024-06-06 03:46:42,492 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,492 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,493 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,493 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,493 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,493 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,493 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab350>
2024-06-06 03:46:42,493 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,493 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,493 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,493 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,493 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,493 - DEBUG - find_def var='a.1' stmt=$216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,493 - DEBUG - find_def_from_top label 164
2024-06-06 03:46:42,494 - DEBUG - idom 154 from label 164
2024-06-06 03:46:42,494 - DEBUG - find_def_from_bottom label 154
2024-06-06 03:46:42,494 - DEBUG - find_def_from_top label 154
2024-06-06 03:46:42,494 - DEBUG - idom 0 from label 154
2024-06-06 03:46:42,494 - DEBUG - find_def_from_bottom label 0
2024-06-06 03:46:42,494 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,494 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,494 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,494 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab350>
2024-06-06 03:46:42,494 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,494 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,494 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,494 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,495 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,495 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,495 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab350>
2024-06-06 03:46:42,495 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,495 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,495 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,495 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,495 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,495 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,495 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,495 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab350>
2024-06-06 03:46:42,495 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,496 - DEBUG - find_def var='a.1' stmt=$binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,496 - DEBUG - find_def_from_top label 246
2024-06-06 03:46:42,496 - DEBUG - idom 236 from label 246
2024-06-06 03:46:42,496 - DEBUG - find_def_from_bottom label 236
2024-06-06 03:46:42,496 - DEBUG - find_def_from_top label 236
2024-06-06 03:46:42,496 - DEBUG - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 236
2024-06-06 03:46:42,496 - DEBUG - find_def_from_bottom label 226
2024-06-06 03:46:42,496 - DEBUG - find_def_from_top label 226
2024-06-06 03:46:42,496 - DEBUG - idom 154 from label 226
2024-06-06 03:46:42,496 - DEBUG - find_def_from_bottom label 154
2024-06-06 03:46:42,496 - DEBUG - find_def_from_top label 154
2024-06-06 03:46:42,496 - DEBUG - idom 0 from label 154
2024-06-06 03:46:42,496 - DEBUG - find_def_from_bottom label 0
2024-06-06 03:46:42,496 - DEBUG - incoming_def a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,497 - DEBUG - find_def_from_bottom label 286
2024-06-06 03:46:42,497 - DEBUG - find_def_from_top label 286
2024-06-06 03:46:42,497 - DEBUG - idom 256 from label 286
2024-06-06 03:46:42,497 - DEBUG - find_def_from_bottom label 256
2024-06-06 03:46:42,497 - DEBUG - incoming_def a.1.1 = $binop_imul270.5
2024-06-06 03:46:42,497 - DEBUG - replaced with: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,497 - DEBUG - on stmt: r.1 = $binop_imul250.2
2024-06-06 03:46:42,497 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,497 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,497 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab350>
2024-06-06 03:46:42,497 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,497 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,497 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,498 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,498 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,498 - DEBUG - find_def var='a.1' stmt=$binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,498 - DEBUG - find_def_from_top label 256
2024-06-06 03:46:42,498 - DEBUG - idom 236 from label 256
2024-06-06 03:46:42,498 - DEBUG - find_def_from_bottom label 236
2024-06-06 03:46:42,498 - DEBUG - replaced with: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,498 - DEBUG - on stmt: a.1.1 = $binop_imul270.5
2024-06-06 03:46:42,498 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,498 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,498 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,498 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,499 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,499 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,499 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab350>
2024-06-06 03:46:42,499 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,499 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,499 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab350>
2024-06-06 03:46:42,499 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2024-06-06 03:46:42,499 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,499 - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,499 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,499 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,499 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab350>
2024-06-06 03:46:42,499 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,500 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2024-06-06 03:46:42,500 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,500 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,500 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,500 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab350>
2024-06-06 03:46:42,500 - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2024-06-06 03:46:42,500 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,500 - DEBUG - Fix SSA violator on var invert
2024-06-06 03:46:42,500 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,500 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95a80e0>
2024-06-06 03:46:42,500 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,500 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,501 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-06 03:46:42,501 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,501 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,501 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float32)
2024-06-06 03:46:42,501 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,501 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,501 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,501 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,501 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,501 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,501 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,501 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95a80e0>
2024-06-06 03:46:42,502 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,502 - DEBUG - first assign: invert
2024-06-06 03:46:42,502 - DEBUG - replaced with: invert = const(bool, True)
2024-06-06 03:46:42,502 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,502 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,502 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,502 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,502 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,502 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,502 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,502 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95a80e0>
2024-06-06 03:46:42,502 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,502 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,503 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,503 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95a80e0>
2024-06-06 03:46:42,503 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,503 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,503 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,503 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,503 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,503 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95a80e0>
2024-06-06 03:46:42,503 - DEBUG - on stmt: invert = const(bool, False)
2024-06-06 03:46:42,503 - DEBUG - replaced with: invert.1 = const(bool, False)
2024-06-06 03:46:42,503 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,503 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,503 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,504 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95a80e0>
2024-06-06 03:46:42,504 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,504 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,504 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,504 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,504 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,504 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,504 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95a80e0>
2024-06-06 03:46:42,504 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,504 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,504 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,504 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,504 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,505 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,505 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,505 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,505 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95a80e0>
2024-06-06 03:46:42,505 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,505 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,505 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,505 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,505 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,505 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,505 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95a80e0>
2024-06-06 03:46:42,506 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,506 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,506 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,506 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,506 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,506 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,506 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,506 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,506 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95a80e0>
2024-06-06 03:46:42,506 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,506 - DEBUG - on stmt: r.1 = $binop_imul250.2
2024-06-06 03:46:42,506 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,507 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,507 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95a80e0>
2024-06-06 03:46:42,507 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,507 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,507 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,507 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,507 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,507 - DEBUG - on stmt: a.1.1 = $binop_imul270.5
2024-06-06 03:46:42,507 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,507 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,507 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,507 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,507 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,508 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,508 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95a80e0>
2024-06-06 03:46:42,508 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,508 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,508 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95a80e0>
2024-06-06 03:46:42,508 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2024-06-06 03:46:42,508 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,508 - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,508 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,508 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,508 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95a80e0>
2024-06-06 03:46:42,508 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,508 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2024-06-06 03:46:42,509 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,509 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,509 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,509 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95a80e0>
2024-06-06 03:46:42,509 - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2024-06-06 03:46:42,509 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,509 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {48: [<numba.core.ir.Assign object at 0x7fe9b95a8260>],
             146: [<numba.core.ir.Assign object at 0x7fe9b95a8650>]})
2024-06-06 03:46:42,509 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,509 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab6e0>
2024-06-06 03:46:42,509 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,509 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,509 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-06 03:46:42,510 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,510 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,510 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float32)
2024-06-06 03:46:42,510 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,510 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,510 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,510 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,510 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,510 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,510 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,510 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab6e0>
2024-06-06 03:46:42,510 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,511 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,511 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,511 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,511 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,511 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,511 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,511 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,511 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab6e0>
2024-06-06 03:46:42,511 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,511 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,511 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,511 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab6e0>
2024-06-06 03:46:42,511 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,512 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,512 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,512 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,512 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,512 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab6e0>
2024-06-06 03:46:42,512 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-06 03:46:42,512 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,512 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,512 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,512 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab6e0>
2024-06-06 03:46:42,512 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,512 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,512 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,513 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,513 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,513 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,513 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab6e0>
2024-06-06 03:46:42,513 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,513 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,513 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,513 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,513 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,513 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,513 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,513 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,514 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab6e0>
2024-06-06 03:46:42,514 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,514 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,514 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,514 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,514 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,514 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,514 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab6e0>
2024-06-06 03:46:42,514 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,514 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,514 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,514 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,515 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,515 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,515 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,515 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,515 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab6e0>
2024-06-06 03:46:42,515 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,515 - DEBUG - on stmt: r.1 = $binop_imul250.2
2024-06-06 03:46:42,515 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,515 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,515 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab6e0>
2024-06-06 03:46:42,515 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,515 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,515 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,516 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,516 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,516 - DEBUG - on stmt: a.1.1 = $binop_imul270.5
2024-06-06 03:46:42,516 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,516 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,516 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,516 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,516 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,516 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,516 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab6e0>
2024-06-06 03:46:42,516 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,516 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,517 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab6e0>
2024-06-06 03:46:42,517 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2024-06-06 03:46:42,517 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,517 - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,517 - DEBUG - find_def var='invert' stmt=$290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,517 - DEBUG - find_def_from_top label 288
2024-06-06 03:46:42,517 - DEBUG - idom 226 from label 288
2024-06-06 03:46:42,517 - DEBUG - find_def_from_bottom label 226
2024-06-06 03:46:42,517 - DEBUG - find_def_from_top label 226
2024-06-06 03:46:42,517 - DEBUG - idom 154 from label 226
2024-06-06 03:46:42,517 - DEBUG - find_def_from_bottom label 154
2024-06-06 03:46:42,517 - DEBUG - find_def_from_top label 154
2024-06-06 03:46:42,517 - DEBUG - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 154
2024-06-06 03:46:42,518 - DEBUG - find_def_from_bottom label 80
2024-06-06 03:46:42,518 - DEBUG - find_def_from_top label 80
2024-06-06 03:46:42,518 - DEBUG - idom 48 from label 80
2024-06-06 03:46:42,518 - DEBUG - find_def_from_bottom label 48
2024-06-06 03:46:42,518 - DEBUG - incoming_def invert = const(bool, True)
2024-06-06 03:46:42,518 - DEBUG - find_def_from_bottom label 146
2024-06-06 03:46:42,518 - DEBUG - incoming_def invert.1 = const(bool, False)
2024-06-06 03:46:42,518 - DEBUG - replaced with: $290pred = call bool290(invert.2, func=bool290, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,518 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,518 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,518 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab6e0>
2024-06-06 03:46:42,519 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,519 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2024-06-06 03:46:42,519 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,519 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,519 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,519 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95ab6e0>
2024-06-06 03:46:42,519 - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2024-06-06 03:46:42,519 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,519 - DEBUG - Fix SSA violator on var exp
2024-06-06 03:46:42,519 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,519 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95ab170>
2024-06-06 03:46:42,519 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,519 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,520 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-06 03:46:42,520 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,520 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,520 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float32)
2024-06-06 03:46:42,520 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,520 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,520 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,520 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,520 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,520 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,520 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,520 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95ab170>
2024-06-06 03:46:42,521 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,521 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,521 - DEBUG - first assign: exp
2024-06-06 03:46:42,521 - DEBUG - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,521 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,521 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,521 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,521 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,521 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,521 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,521 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95ab170>
2024-06-06 03:46:42,522 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,522 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,522 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,522 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95ab170>
2024-06-06 03:46:42,522 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,522 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,522 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,522 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,522 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,522 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95ab170>
2024-06-06 03:46:42,522 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-06 03:46:42,522 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,523 - DEBUG - replaced with: exp.1 = b
2024-06-06 03:46:42,523 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,523 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,523 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95ab170>
2024-06-06 03:46:42,523 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[80, 146])
2024-06-06 03:46:42,523 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,523 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,523 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,523 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,523 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,523 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,523 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95ab170>
2024-06-06 03:46:42,524 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,524 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,524 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,524 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,524 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,524 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,524 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,524 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,524 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95ab170>
2024-06-06 03:46:42,524 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,524 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,524 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,524 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,525 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,525 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,525 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95ab170>
2024-06-06 03:46:42,525 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,525 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,525 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,525 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,525 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,525 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,525 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,525 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,525 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95ab170>
2024-06-06 03:46:42,526 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,526 - DEBUG - on stmt: r.1 = $binop_imul250.2
2024-06-06 03:46:42,526 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,526 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,526 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95ab170>
2024-06-06 03:46:42,526 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,526 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,526 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,526 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,526 - DEBUG - replaced with: exp.2 = $binop_irshift260.2
2024-06-06 03:46:42,526 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,526 - DEBUG - on stmt: a.1.1 = $binop_imul270.5
2024-06-06 03:46:42,526 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,527 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,527 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,527 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,527 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,527 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,527 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95ab170>
2024-06-06 03:46:42,527 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,527 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,527 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95ab170>
2024-06-06 03:46:42,527 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2024-06-06 03:46:42,527 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,527 - DEBUG - on stmt: $290pred = call bool290(invert.2, func=bool290, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,527 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,528 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,528 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95ab170>
2024-06-06 03:46:42,528 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,528 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2024-06-06 03:46:42,528 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,528 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,528 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,528 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b95ab170>
2024-06-06 03:46:42,528 - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2024-06-06 03:46:42,528 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,528 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {48: [<numba.core.ir.Assign object at 0x7fe9b95a9280>],
             146: [<numba.core.ir.Assign object at 0x7fe9b95a8410>],
             256: [<numba.core.ir.Assign object at 0x7fe9d1f53f80>]})
2024-06-06 03:46:42,528 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,529 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95abe60>
2024-06-06 03:46:42,529 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,529 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,529 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float32)
2024-06-06 03:46:42,529 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,529 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,529 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float32)
2024-06-06 03:46:42,529 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,529 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,529 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,529 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,529 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,530 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,530 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,530 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95abe60>
2024-06-06 03:46:42,530 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,530 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,530 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,530 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,530 - DEBUG - find_def var='exp' stmt=$62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,530 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,530 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,530 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,530 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,530 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95abe60>
2024-06-06 03:46:42,531 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,531 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,531 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,531 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95abe60>
2024-06-06 03:46:42,531 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,531 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,531 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,531 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,531 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,531 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95abe60>
2024-06-06 03:46:42,531 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-06 03:46:42,531 - DEBUG - on stmt: exp.1 = b
2024-06-06 03:46:42,532 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,532 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,532 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95abe60>
2024-06-06 03:46:42,532 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[80, 146])
2024-06-06 03:46:42,532 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,532 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,532 - DEBUG - find_def var='exp' stmt=$158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,532 - DEBUG - find_def_from_top label 154
2024-06-06 03:46:42,532 - DEBUG - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
2024-06-06 03:46:42,532 - DEBUG - find_def_from_bottom label 80
2024-06-06 03:46:42,532 - DEBUG - find_def_from_top label 80
2024-06-06 03:46:42,532 - DEBUG - idom 48 from label 80
2024-06-06 03:46:42,533 - DEBUG - find_def_from_bottom label 48
2024-06-06 03:46:42,533 - DEBUG - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,533 - DEBUG - find_def_from_bottom label 146
2024-06-06 03:46:42,533 - DEBUG - incoming_def exp.1 = b
2024-06-06 03:46:42,533 - DEBUG - replaced with: $158compare_op.2 = exp.3 > $const156.1
2024-06-06 03:46:42,533 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,533 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,533 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,533 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,533 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95abe60>
2024-06-06 03:46:42,533 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,533 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,534 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,534 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,534 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,534 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,534 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,534 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,534 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95abe60>
2024-06-06 03:46:42,534 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,534 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,534 - DEBUG - find_def var='exp' stmt=$230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,534 - DEBUG - find_def_from_top label 226
2024-06-06 03:46:42,534 - DEBUG - idom 154 from label 226
2024-06-06 03:46:42,535 - DEBUG - find_def_from_bottom label 154
2024-06-06 03:46:42,535 - DEBUG - replaced with: $230compare_op.2 = exp.3 != $const228.1
2024-06-06 03:46:42,535 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,535 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,535 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,535 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,535 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95abe60>
2024-06-06 03:46:42,535 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,535 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,535 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,535 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,535 - DEBUG - find_def var='exp' stmt=$binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,536 - DEBUG - find_def_from_top label 236
2024-06-06 03:46:42,536 - DEBUG - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 236
2024-06-06 03:46:42,536 - DEBUG - find_def_from_bottom label 226
2024-06-06 03:46:42,536 - DEBUG - find_def_from_top label 226
2024-06-06 03:46:42,536 - DEBUG - idom 154 from label 226
2024-06-06 03:46:42,536 - DEBUG - find_def_from_bottom label 154
2024-06-06 03:46:42,536 - DEBUG - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[80, 146])
2024-06-06 03:46:42,536 - DEBUG - find_def_from_bottom label 286
2024-06-06 03:46:42,536 - DEBUG - find_def_from_top label 286
2024-06-06 03:46:42,536 - DEBUG - idom 256 from label 286
2024-06-06 03:46:42,536 - DEBUG - find_def_from_bottom label 256
2024-06-06 03:46:42,536 - DEBUG - incoming_def exp.2 = $binop_irshift260.2
2024-06-06 03:46:42,537 - DEBUG - replaced with: $binop_and_240.2 = exp.4 & $const238.1
2024-06-06 03:46:42,537 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,537 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,537 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,537 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,537 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95abe60>
2024-06-06 03:46:42,537 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,537 - DEBUG - on stmt: r.1 = $binop_imul250.2
2024-06-06 03:46:42,537 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,538 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,538 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95abe60>
2024-06-06 03:46:42,538 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,538 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,538 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,538 - DEBUG - find_def var='exp' stmt=$binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,538 - DEBUG - find_def_from_top label 256
2024-06-06 03:46:42,538 - DEBUG - idom 236 from label 256
2024-06-06 03:46:42,538 - DEBUG - find_def_from_bottom label 236
2024-06-06 03:46:42,538 - DEBUG - replaced with: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,538 - DEBUG - on stmt: exp.2 = $binop_irshift260.2
2024-06-06 03:46:42,538 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,539 - DEBUG - on stmt: a.1.1 = $binop_imul270.5
2024-06-06 03:46:42,539 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,539 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,539 - DEBUG - find_def var='exp' stmt=$280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,539 - DEBUG - replaced with: $280compare_op.8 = exp.2 != $const278.7
2024-06-06 03:46:42,539 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,539 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,539 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,539 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,539 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95abe60>
2024-06-06 03:46:42,539 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,539 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,540 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95abe60>
2024-06-06 03:46:42,540 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2024-06-06 03:46:42,540 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,540 - DEBUG - on stmt: $290pred = call bool290(invert.2, func=bool290, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,540 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,540 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,540 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95abe60>
2024-06-06 03:46:42,540 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,540 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2024-06-06 03:46:42,540 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,540 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,540 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,541 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b95abe60>
2024-06-06 03:46:42,541 - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2024-06-06 03:46:42,541 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,658 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2452)
           2	RESUME(arg=0, lineno=2452)
           4	LOAD_FAST(arg=0, lineno=2457)
           6	LOAD_ATTR(arg=0, lineno=2457)
          26	LOAD_CONST(arg=1, lineno=2457)
          28	BINARY_OP(arg=8, lineno=2457)
          32	LOAD_FAST(arg=0, lineno=2457)
          34	LOAD_ATTR(arg=2, lineno=2457)
          54	LOAD_CONST(arg=1, lineno=2457)
          56	BINARY_OP(arg=8, lineno=2457)
          60	BINARY_OP(arg=0, lineno=2457)
          64	RETURN_VALUE(arg=None, lineno=2457)
2024-06-06 03:46:42,658 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:42,658 - DEBUG - stack: []
2024-06-06 03:46:42,658 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:42,658 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2452)
2024-06-06 03:46:42,658 - DEBUG - stack []
2024-06-06 03:46:42,658 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2452)
2024-06-06 03:46:42,658 - DEBUG - stack []
2024-06-06 03:46:42,658 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2457)
2024-06-06 03:46:42,659 - DEBUG - stack []
2024-06-06 03:46:42,659 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2457)
2024-06-06 03:46:42,659 - DEBUG - stack ['$x4.0']
2024-06-06 03:46:42,659 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=2457)
2024-06-06 03:46:42,659 - DEBUG - stack ['$6load_attr.1']
2024-06-06 03:46:42,659 - DEBUG - dispatch pc=28, inst=BINARY_OP(arg=8, lineno=2457)
2024-06-06 03:46:42,659 - DEBUG - stack ['$6load_attr.1', '$const26.2']
2024-06-06 03:46:42,659 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=2457)
2024-06-06 03:46:42,659 - DEBUG - stack ['$binop_pow28.3']
2024-06-06 03:46:42,659 - DEBUG - dispatch pc=34, inst=LOAD_ATTR(arg=2, lineno=2457)
2024-06-06 03:46:42,659 - DEBUG - stack ['$binop_pow28.3', '$x32.4']
2024-06-06 03:46:42,659 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=2457)
2024-06-06 03:46:42,659 - DEBUG - stack ['$binop_pow28.3', '$34load_attr.5']
2024-06-06 03:46:42,660 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=8, lineno=2457)
2024-06-06 03:46:42,660 - DEBUG - stack ['$binop_pow28.3', '$34load_attr.5', '$const54.6']
2024-06-06 03:46:42,660 - DEBUG - dispatch pc=60, inst=BINARY_OP(arg=0, lineno=2457)
2024-06-06 03:46:42,660 - DEBUG - stack ['$binop_pow28.3', '$binop_pow56.7']
2024-06-06 03:46:42,660 - DEBUG - dispatch pc=64, inst=RETURN_VALUE(arg=None, lineno=2457)
2024-06-06 03:46:42,660 - DEBUG - stack ['$binop_add60.8']
2024-06-06 03:46:42,660 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,660 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:42,660 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:42,660 - DEBUG - defmap: {}
2024-06-06 03:46:42,660 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:42,660 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:42,661 - DEBUG - keep phismap: {}
2024-06-06 03:46:42,661 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:42,661 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:42,661 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (26, {'res': '$const26.2'}), (28, {'op': '**', 'lhs': '$6load_attr.1', 'rhs': '$const26.2', 'res': '$binop_pow28.3'}), (32, {'res': '$x32.4'}), (34, {'item': '$x32.4', 'res': '$34load_attr.5'}), (54, {'res': '$const54.6'}), (56, {'op': '**', 'lhs': '$34load_attr.5', 'rhs': '$const54.6', 'res': '$binop_pow56.7'}), (60, {'op': '+', 'lhs': '$binop_pow28.3', 'rhs': '$binop_pow56.7', 'res': '$binop_add60.8'}), (64, {'retval': '$binop_add60.8', 'castval': '$64return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,661 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $6load_attr.1 = getattr(value=x, attr=real) ['$6load_attr.1', 'x']
    $const26.2 = const(int, 2)               ['$const26.2']
    $binop_pow28.3 = $6load_attr.1 ** $const26.2 ['$6load_attr.1', '$binop_pow28.3', '$const26.2']
    $34load_attr.5 = getattr(value=x, attr=imag) ['$34load_attr.5', 'x']
    $const54.6 = const(int, 2)               ['$const54.6']
    $binop_pow56.7 = $34load_attr.5 ** $const54.6 ['$34load_attr.5', '$binop_pow56.7', '$const54.6']
    $binop_add60.8 = $binop_pow28.3 + $binop_pow56.7 ['$binop_add60.8', '$binop_pow28.3', '$binop_pow56.7']
    $64return_value.9 = cast(value=$binop_add60.8) ['$64return_value.9', '$binop_add60.8']
    return $64return_value.9                 ['$64return_value.9']

2024-06-06 03:46:42,667 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:42,667 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9aceb70>
2024-06-06 03:46:42,667 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:42,667 - DEBUG - on stmt: $6load_attr.1 = getattr(value=x, attr=real)
2024-06-06 03:46:42,667 - DEBUG - on stmt: $const26.2 = const(int, 2)
2024-06-06 03:46:42,667 - DEBUG - on stmt: $binop_pow28.3 = $6load_attr.1 ** $const26.2
2024-06-06 03:46:42,667 - DEBUG - on stmt: $34load_attr.5 = getattr(value=x, attr=imag)
2024-06-06 03:46:42,667 - DEBUG - on stmt: $const54.6 = const(int, 2)
2024-06-06 03:46:42,667 - DEBUG - on stmt: $binop_pow56.7 = $34load_attr.5 ** $const54.6
2024-06-06 03:46:42,667 - DEBUG - on stmt: $binop_add60.8 = $binop_pow28.3 + $binop_pow56.7
2024-06-06 03:46:42,668 - DEBUG - on stmt: $64return_value.9 = cast(value=$binop_add60.8)
2024-06-06 03:46:42,668 - DEBUG - on stmt: return $64return_value.9
2024-06-06 03:46:42,668 - DEBUG - defs defaultdict(<class 'list'>,
            {'$34load_attr.5': [(<numba.core.ir.Assign object at 0x7fe9b9acd5b0>,
                                 0)],
             '$64return_value.9': [(<numba.core.ir.Assign object at 0x7fe9b9ace0f0>,
                                    0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x7fe9b9aced20>,
                                0)],
             '$binop_add60.8': [(<numba.core.ir.Assign object at 0x7fe9b9acdb80>,
                                 0)],
             '$binop_pow28.3': [(<numba.core.ir.Assign object at 0x7fe9b9acec90>,
                                 0)],
             '$binop_pow56.7': [(<numba.core.ir.Assign object at 0x7fe9b9aceab0>,
                                 0)],
             '$const26.2': [(<numba.core.ir.Assign object at 0x7fe9b9acd1c0>,
                             0)],
             '$const54.6': [(<numba.core.ir.Assign object at 0x7fe9b9aced80>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b9acdcd0>, 0)]})
2024-06-06 03:46:42,668 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9aceb70>
2024-06-06 03:46:42,678 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	COPY_FREE_VARS(arg=3, lineno=214)
           4	RESUME(arg=0, lineno=214)
           6	PUSH_NULL(arg=None, lineno=216)
           8	LOAD_DEREF(arg=6, lineno=216)
          10	LOAD_CONST(arg=1, lineno=216)
          12	CALL(arg=1, lineno=216)
          20	STORE_FAST(arg=2, lineno=216)
          22	PUSH_NULL(arg=None, lineno=217)
          24	LOAD_DEREF(arg=6, lineno=217)
          26	LOAD_FAST(arg=0, lineno=217)
          28	CALL(arg=1, lineno=217)
          36	STORE_FAST(arg=0, lineno=217)
          38	LOAD_FAST(arg=1, lineno=218)
          40	LOAD_CONST(arg=2, lineno=218)
          42	COMPARE_OP(arg=2, lineno=218)
          46	POP_JUMP_IF_FALSE(arg=49, lineno=218)
          48	LOAD_CONST(arg=3, lineno=219)
          50	STORE_FAST(arg=3, lineno=219)
          52	LOAD_FAST(arg=1, lineno=220)
          54	UNARY_NEGATIVE(arg=None, lineno=220)
          56	STORE_FAST(arg=4, lineno=220)
          58	LOAD_FAST(arg=4, lineno=221)
          60	LOAD_CONST(arg=2, lineno=221)
          62	COMPARE_OP(arg=2, lineno=221)
          66	POP_JUMP_IF_FALSE(arg=6, lineno=221)
          68	LOAD_GLOBAL(arg=0, lineno=222)
          78	RAISE_VARARGS(arg=1, lineno=222)
>         80	LOAD_DEREF(arg=5, lineno=223)
          82	POP_JUMP_IF_FALSE(arg=35, lineno=223)
          84	LOAD_FAST(arg=0, lineno=224)
          86	LOAD_CONST(arg=2, lineno=224)
          88	COMPARE_OP(arg=40, lineno=224)
          92	POP_JUMP_IF_FALSE(arg=15, lineno=224)
          94	LOAD_DEREF(arg=7, lineno=225)
          96	POP_JUMP_IF_FALSE(arg=2, lineno=225)
          98	LOAD_DEREF(arg=7, lineno=226)
         100	RETURN_VALUE(arg=None, lineno=226)
>        102	LOAD_GLOBAL(arg=3, lineno=228)
         112	LOAD_CONST(arg=4, lineno=228)
         114	CALL(arg=1, lineno=228)
         122	RAISE_VARARGS(arg=1, lineno=228)
>        124	LOAD_FAST(arg=0, lineno=229)
         126	LOAD_CONST(arg=1, lineno=229)
         128	COMPARE_OP(arg=55, lineno=229)
         132	POP_JUMP_IF_FALSE(arg=10, lineno=229)
         134	LOAD_FAST(arg=0, lineno=229)
         136	LOAD_CONST(arg=5, lineno=229)
         138	COMPARE_OP(arg=55, lineno=229)
         142	POP_JUMP_IF_FALSE(arg=5, lineno=229)
         144	RETURN_CONST(arg=2, lineno=230)
>        146	LOAD_CONST(arg=6, lineno=232)
         148	STORE_FAST(arg=3, lineno=232)
         150	LOAD_FAST(arg=1, lineno=233)
         152	STORE_FAST(arg=4, lineno=233)
>        154	LOAD_FAST(arg=4, lineno=234)
         156	LOAD_CONST(arg=7, lineno=234)
         158	COMPARE_OP(arg=68, lineno=234)
         162	POP_JUMP_IF_FALSE(arg=31, lineno=234)
         164	LOAD_GLOBAL(arg=5, lineno=236)
         174	LOAD_ATTR(arg=6, lineno=236)
         194	LOAD_FAST(arg=0, lineno=236)
         196	LOAD_GLOBAL(arg=9, lineno=236)
         206	LOAD_FAST(arg=1, lineno=236)
         208	CALL(arg=1, lineno=236)
         216	CALL(arg=2, lineno=236)
         224	RETURN_VALUE(arg=None, lineno=236)
>        226	LOAD_FAST(arg=4, lineno=237)
         228	LOAD_CONST(arg=2, lineno=237)
         230	COMPARE_OP(arg=55, lineno=237)
         234	POP_JUMP_IF_FALSE(arg=26, lineno=237)
>        236	LOAD_FAST(arg=4, lineno=238)
         238	LOAD_CONST(arg=1, lineno=238)
         240	BINARY_OP(arg=1, lineno=238)
         244	POP_JUMP_IF_FALSE(arg=5, lineno=238)
         246	LOAD_FAST(arg=2, lineno=239)
         248	LOAD_FAST(arg=0, lineno=239)
         250	BINARY_OP(arg=18, lineno=239)
         254	STORE_FAST(arg=2, lineno=239)
>        256	LOAD_FAST(arg=4, lineno=240)
         258	LOAD_CONST(arg=1, lineno=240)
         260	BINARY_OP(arg=22, lineno=240)
         264	STORE_FAST(arg=4, lineno=240)
         266	LOAD_FAST(arg=0, lineno=241)
         268	LOAD_FAST(arg=0, lineno=241)
         270	BINARY_OP(arg=18, lineno=241)
         274	STORE_FAST(arg=0, lineno=241)
         276	LOAD_FAST(arg=4, lineno=237)
         278	LOAD_CONST(arg=2, lineno=237)
         280	COMPARE_OP(arg=55, lineno=237)
         284	POP_JUMP_IF_FALSE(arg=1, lineno=237)
         286	JUMP_BACKWARD(arg=26, lineno=237)
>        288	LOAD_FAST(arg=3, lineno=243)
         290	POP_JUMP_IF_FALSE(arg=5, lineno=243)
         292	LOAD_CONST(arg=8, lineno=243)
         294	LOAD_FAST(arg=2, lineno=243)
         296	BINARY_OP(arg=11, lineno=243)
         300	RETURN_VALUE(arg=None, lineno=243)
>        302	LOAD_FAST(arg=2, lineno=243)
         304	RETURN_VALUE(arg=None, lineno=243)
2024-06-06 03:46:42,678 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:42,678 - DEBUG - stack: []
2024-06-06 03:46:42,678 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:42,678 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=214)
2024-06-06 03:46:42,678 - DEBUG - stack []
2024-06-06 03:46:42,678 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=3, lineno=214)
2024-06-06 03:46:42,678 - DEBUG - stack []
2024-06-06 03:46:42,678 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=214)
2024-06-06 03:46:42,678 - DEBUG - stack []
2024-06-06 03:46:42,679 - DEBUG - dispatch pc=6, inst=PUSH_NULL(arg=None, lineno=216)
2024-06-06 03:46:42,679 - DEBUG - stack []
2024-06-06 03:46:42,679 - DEBUG - dispatch pc=8, inst=LOAD_DEREF(arg=6, lineno=216)
2024-06-06 03:46:42,679 - DEBUG - stack ['$null$6.0']
2024-06-06 03:46:42,679 - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=216)
2024-06-06 03:46:42,679 - DEBUG - stack ['$null$6.0', '$8load_deref.1']
2024-06-06 03:46:42,679 - DEBUG - dispatch pc=12, inst=CALL(arg=1, lineno=216)
2024-06-06 03:46:42,679 - DEBUG - stack ['$null$6.0', '$8load_deref.1', '$const10.2']
2024-06-06 03:46:42,679 - DEBUG - dispatch pc=20, inst=STORE_FAST(arg=2, lineno=216)
2024-06-06 03:46:42,679 - DEBUG - stack ['$12call.3']
2024-06-06 03:46:42,679 - DEBUG - dispatch pc=22, inst=PUSH_NULL(arg=None, lineno=217)
2024-06-06 03:46:42,679 - DEBUG - stack []
2024-06-06 03:46:42,679 - DEBUG - dispatch pc=24, inst=LOAD_DEREF(arg=6, lineno=217)
2024-06-06 03:46:42,679 - DEBUG - stack ['$null$22.4']
2024-06-06 03:46:42,680 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=217)
2024-06-06 03:46:42,680 - DEBUG - stack ['$null$22.4', '$24load_deref.5']
2024-06-06 03:46:42,680 - DEBUG - dispatch pc=28, inst=CALL(arg=1, lineno=217)
2024-06-06 03:46:42,680 - DEBUG - stack ['$null$22.4', '$24load_deref.5', '$a26.6']
2024-06-06 03:46:42,680 - DEBUG - dispatch pc=36, inst=STORE_FAST(arg=0, lineno=217)
2024-06-06 03:46:42,680 - DEBUG - stack ['$28call.7']
2024-06-06 03:46:42,680 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=218)
2024-06-06 03:46:42,680 - DEBUG - stack []
2024-06-06 03:46:42,680 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=218)
2024-06-06 03:46:42,680 - DEBUG - stack ['$b38.8']
2024-06-06 03:46:42,680 - DEBUG - dispatch pc=42, inst=COMPARE_OP(arg=2, lineno=218)
2024-06-06 03:46:42,680 - DEBUG - stack ['$b38.8', '$const40.9']
2024-06-06 03:46:42,680 - DEBUG - dispatch pc=46, inst=POP_JUMP_IF_FALSE(arg=49, lineno=218)
2024-06-06 03:46:42,681 - DEBUG - stack ['$42compare_op.10']
2024-06-06 03:46:42,681 - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=146, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,681 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=146 nstack_initial=0)])
2024-06-06 03:46:42,681 - DEBUG - stack: []
2024-06-06 03:46:42,681 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2024-06-06 03:46:42,681 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=3, lineno=219)
2024-06-06 03:46:42,681 - DEBUG - stack []
2024-06-06 03:46:42,681 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=219)
2024-06-06 03:46:42,681 - DEBUG - stack ['$const48.0']
2024-06-06 03:46:42,681 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=220)
2024-06-06 03:46:42,681 - DEBUG - stack []
2024-06-06 03:46:42,681 - DEBUG - dispatch pc=54, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2024-06-06 03:46:42,681 - DEBUG - stack ['$b52.1']
2024-06-06 03:46:42,682 - DEBUG - dispatch pc=56, inst=STORE_FAST(arg=4, lineno=220)
2024-06-06 03:46:42,682 - DEBUG - stack ['$54unary_negative.2']
2024-06-06 03:46:42,682 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=4, lineno=221)
2024-06-06 03:46:42,682 - DEBUG - stack []
2024-06-06 03:46:42,682 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=221)
2024-06-06 03:46:42,682 - DEBUG - stack ['$exp58.3']
2024-06-06 03:46:42,682 - DEBUG - dispatch pc=62, inst=COMPARE_OP(arg=2, lineno=221)
2024-06-06 03:46:42,682 - DEBUG - stack ['$exp58.3', '$const60.4']
2024-06-06 03:46:42,682 - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=6, lineno=221)
2024-06-06 03:46:42,682 - DEBUG - stack ['$62compare_op.5']
2024-06-06 03:46:42,682 - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=80, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,682 - DEBUG - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=80 nstack_initial=0)])
2024-06-06 03:46:42,682 - DEBUG - stack: []
2024-06-06 03:46:42,683 - DEBUG - state.pc_initial: State(pc_initial=146 nstack_initial=0)
2024-06-06 03:46:42,683 - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=6, lineno=232)
2024-06-06 03:46:42,683 - DEBUG - stack []
2024-06-06 03:46:42,683 - DEBUG - dispatch pc=148, inst=STORE_FAST(arg=3, lineno=232)
2024-06-06 03:46:42,683 - DEBUG - stack ['$const146.0']
2024-06-06 03:46:42,683 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=1, lineno=233)
2024-06-06 03:46:42,683 - DEBUG - stack []
2024-06-06 03:46:42,683 - DEBUG - dispatch pc=152, inst=STORE_FAST(arg=4, lineno=233)
2024-06-06 03:46:42,683 - DEBUG - stack ['$b150.1']
2024-06-06 03:46:42,683 - DEBUG - end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,683 - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=80 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-06-06 03:46:42,683 - DEBUG - stack: []
2024-06-06 03:46:42,683 - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2024-06-06 03:46:42,684 - DEBUG - dispatch pc=68, inst=LOAD_GLOBAL(arg=0, lineno=222)
2024-06-06 03:46:42,684 - DEBUG - stack []
2024-06-06 03:46:42,684 - DEBUG - dispatch pc=78, inst=RAISE_VARARGS(arg=1, lineno=222)
2024-06-06 03:46:42,684 - DEBUG - stack ['$68load_global.0']
2024-06-06 03:46:42,684 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,684 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-06-06 03:46:42,684 - DEBUG - stack: []
2024-06-06 03:46:42,684 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=0)
2024-06-06 03:46:42,684 - DEBUG - dispatch pc=80, inst=LOAD_DEREF(arg=5, lineno=223)
2024-06-06 03:46:42,684 - DEBUG - stack []
2024-06-06 03:46:42,684 - DEBUG - dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=35, lineno=223)
2024-06-06 03:46:42,684 - DEBUG - stack ['$80load_deref.0']
2024-06-06 03:46:42,684 - DEBUG - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,685 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-06-06 03:46:42,685 - DEBUG - stack: []
2024-06-06 03:46:42,685 - DEBUG - state.pc_initial: State(pc_initial=154 nstack_initial=0)
2024-06-06 03:46:42,685 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=234)
2024-06-06 03:46:42,685 - DEBUG - stack []
2024-06-06 03:46:42,685 - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=7, lineno=234)
2024-06-06 03:46:42,685 - DEBUG - stack ['$exp154.0']
2024-06-06 03:46:42,685 - DEBUG - dispatch pc=158, inst=COMPARE_OP(arg=68, lineno=234)
2024-06-06 03:46:42,685 - DEBUG - stack ['$exp154.0', '$const156.1']
2024-06-06 03:46:42,685 - DEBUG - dispatch pc=162, inst=POP_JUMP_IF_FALSE(arg=31, lineno=234)
2024-06-06 03:46:42,685 - DEBUG - stack ['$158compare_op.2']
2024-06-06 03:46:42,685 - DEBUG - end state. edges=[Edge(pc=164, stack=(), blockstack=(), npush=0), Edge(pc=226, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,685 - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=226 nstack_initial=0)])
2024-06-06 03:46:42,686 - DEBUG - stack: []
2024-06-06 03:46:42,686 - DEBUG - state.pc_initial: State(pc_initial=84 nstack_initial=0)
2024-06-06 03:46:42,686 - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=224)
2024-06-06 03:46:42,686 - DEBUG - stack []
2024-06-06 03:46:42,686 - DEBUG - dispatch pc=86, inst=LOAD_CONST(arg=2, lineno=224)
2024-06-06 03:46:42,686 - DEBUG - stack ['$a84.0']
2024-06-06 03:46:42,686 - DEBUG - dispatch pc=88, inst=COMPARE_OP(arg=40, lineno=224)
2024-06-06 03:46:42,686 - DEBUG - stack ['$a84.0', '$const86.1']
2024-06-06 03:46:42,686 - DEBUG - dispatch pc=92, inst=POP_JUMP_IF_FALSE(arg=15, lineno=224)
2024-06-06 03:46:42,686 - DEBUG - stack ['$88compare_op.2']
2024-06-06 03:46:42,686 - DEBUG - end state. edges=[Edge(pc=94, stack=(), blockstack=(), npush=0), Edge(pc=124, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,686 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=226 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
2024-06-06 03:46:42,686 - DEBUG - pending: deque([State(pc_initial=164 nstack_initial=0), State(pc_initial=226 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
2024-06-06 03:46:42,687 - DEBUG - stack: []
2024-06-06 03:46:42,687 - DEBUG - state.pc_initial: State(pc_initial=164 nstack_initial=0)
2024-06-06 03:46:42,687 - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=5, lineno=236)
2024-06-06 03:46:42,687 - DEBUG - stack []
2024-06-06 03:46:42,687 - DEBUG - dispatch pc=174, inst=LOAD_ATTR(arg=6, lineno=236)
2024-06-06 03:46:42,687 - DEBUG - stack ['$null$164.1', '$164load_global.0']
2024-06-06 03:46:42,687 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=0, lineno=236)
2024-06-06 03:46:42,687 - DEBUG - stack ['$null$164.1', '$174load_attr.2']
2024-06-06 03:46:42,687 - DEBUG - dispatch pc=196, inst=LOAD_GLOBAL(arg=9, lineno=236)
2024-06-06 03:46:42,687 - DEBUG - stack ['$null$164.1', '$174load_attr.2', '$a194.3']
2024-06-06 03:46:42,687 - DEBUG - dispatch pc=206, inst=LOAD_FAST(arg=1, lineno=236)
2024-06-06 03:46:42,687 - DEBUG - stack ['$null$164.1', '$174load_attr.2', '$a194.3', '$null$196.5', '$196load_global.4']
2024-06-06 03:46:42,687 - DEBUG - dispatch pc=208, inst=CALL(arg=1, lineno=236)
2024-06-06 03:46:42,688 - DEBUG - stack ['$null$164.1', '$174load_attr.2', '$a194.3', '$null$196.5', '$196load_global.4', '$b206.6']
2024-06-06 03:46:42,688 - DEBUG - dispatch pc=216, inst=CALL(arg=2, lineno=236)
2024-06-06 03:46:42,688 - DEBUG - stack ['$null$164.1', '$174load_attr.2', '$a194.3', '$208call.7']
2024-06-06 03:46:42,688 - DEBUG - dispatch pc=224, inst=RETURN_VALUE(arg=None, lineno=236)
2024-06-06 03:46:42,688 - DEBUG - stack ['$216call.8']
2024-06-06 03:46:42,688 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,688 - DEBUG - pending: deque([State(pc_initial=226 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
2024-06-06 03:46:42,688 - DEBUG - stack: []
2024-06-06 03:46:42,688 - DEBUG - state.pc_initial: State(pc_initial=226 nstack_initial=0)
2024-06-06 03:46:42,688 - DEBUG - dispatch pc=226, inst=LOAD_FAST(arg=4, lineno=237)
2024-06-06 03:46:42,688 - DEBUG - stack []
2024-06-06 03:46:42,688 - DEBUG - dispatch pc=228, inst=LOAD_CONST(arg=2, lineno=237)
2024-06-06 03:46:42,688 - DEBUG - stack ['$exp226.0']
2024-06-06 03:46:42,689 - DEBUG - dispatch pc=230, inst=COMPARE_OP(arg=55, lineno=237)
2024-06-06 03:46:42,689 - DEBUG - stack ['$exp226.0', '$const228.1']
2024-06-06 03:46:42,689 - DEBUG - dispatch pc=234, inst=POP_JUMP_IF_FALSE(arg=26, lineno=237)
2024-06-06 03:46:42,689 - DEBUG - stack ['$230compare_op.2']
2024-06-06 03:46:42,689 - DEBUG - end state. edges=[Edge(pc=236, stack=(), blockstack=(), npush=0), Edge(pc=288, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,689 - DEBUG - pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=124 nstack_initial=0), State(pc_initial=236 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2024-06-06 03:46:42,689 - DEBUG - stack: []
2024-06-06 03:46:42,689 - DEBUG - state.pc_initial: State(pc_initial=94 nstack_initial=0)
2024-06-06 03:46:42,689 - DEBUG - dispatch pc=94, inst=LOAD_DEREF(arg=7, lineno=225)
2024-06-06 03:46:42,689 - DEBUG - stack []
2024-06-06 03:46:42,689 - DEBUG - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=2, lineno=225)
2024-06-06 03:46:42,689 - DEBUG - stack ['$94load_deref.0']
2024-06-06 03:46:42,689 - DEBUG - end state. edges=[Edge(pc=98, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,690 - DEBUG - pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=236 nstack_initial=0), State(pc_initial=288 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2024-06-06 03:46:42,690 - DEBUG - stack: []
2024-06-06 03:46:42,690 - DEBUG - state.pc_initial: State(pc_initial=124 nstack_initial=0)
2024-06-06 03:46:42,690 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=0, lineno=229)
2024-06-06 03:46:42,690 - DEBUG - stack []
2024-06-06 03:46:42,690 - DEBUG - dispatch pc=126, inst=LOAD_CONST(arg=1, lineno=229)
2024-06-06 03:46:42,690 - DEBUG - stack ['$a124.0']
2024-06-06 03:46:42,690 - DEBUG - dispatch pc=128, inst=COMPARE_OP(arg=55, lineno=229)
2024-06-06 03:46:42,690 - DEBUG - stack ['$a124.0', '$const126.1']
2024-06-06 03:46:42,690 - DEBUG - dispatch pc=132, inst=POP_JUMP_IF_FALSE(arg=10, lineno=229)
2024-06-06 03:46:42,690 - DEBUG - stack ['$128compare_op.2']
2024-06-06 03:46:42,690 - DEBUG - end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,690 - DEBUG - pending: deque([State(pc_initial=236 nstack_initial=0), State(pc_initial=288 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-06-06 03:46:42,691 - DEBUG - stack: []
2024-06-06 03:46:42,691 - DEBUG - state.pc_initial: State(pc_initial=236 nstack_initial=0)
2024-06-06 03:46:42,691 - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=4, lineno=238)
2024-06-06 03:46:42,691 - DEBUG - stack []
2024-06-06 03:46:42,691 - DEBUG - dispatch pc=238, inst=LOAD_CONST(arg=1, lineno=238)
2024-06-06 03:46:42,691 - DEBUG - stack ['$exp236.0']
2024-06-06 03:46:42,691 - DEBUG - dispatch pc=240, inst=BINARY_OP(arg=1, lineno=238)
2024-06-06 03:46:42,691 - DEBUG - stack ['$exp236.0', '$const238.1']
2024-06-06 03:46:42,691 - DEBUG - dispatch pc=244, inst=POP_JUMP_IF_FALSE(arg=5, lineno=238)
2024-06-06 03:46:42,691 - DEBUG - stack ['$binop_and_240.2']
2024-06-06 03:46:42,691 - DEBUG - end state. edges=[Edge(pc=246, stack=(), blockstack=(), npush=0), Edge(pc=256, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,691 - DEBUG - pending: deque([State(pc_initial=288 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0)])
2024-06-06 03:46:42,691 - DEBUG - stack: []
2024-06-06 03:46:42,692 - DEBUG - state.pc_initial: State(pc_initial=288 nstack_initial=0)
2024-06-06 03:46:42,692 - DEBUG - dispatch pc=288, inst=LOAD_FAST(arg=3, lineno=243)
2024-06-06 03:46:42,692 - DEBUG - stack []
2024-06-06 03:46:42,692 - DEBUG - dispatch pc=290, inst=POP_JUMP_IF_FALSE(arg=5, lineno=243)
2024-06-06 03:46:42,692 - DEBUG - stack ['$invert288.0']
2024-06-06 03:46:42,692 - DEBUG - end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,692 - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-06-06 03:46:42,692 - DEBUG - stack: []
2024-06-06 03:46:42,692 - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=0)
2024-06-06 03:46:42,692 - DEBUG - dispatch pc=98, inst=LOAD_DEREF(arg=7, lineno=226)
2024-06-06 03:46:42,692 - DEBUG - stack []
2024-06-06 03:46:42,692 - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=226)
2024-06-06 03:46:42,692 - DEBUG - stack ['$98load_deref.0']
2024-06-06 03:46:42,693 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,693 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-06-06 03:46:42,693 - DEBUG - stack: []
2024-06-06 03:46:42,693 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2024-06-06 03:46:42,693 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=3, lineno=228)
2024-06-06 03:46:42,693 - DEBUG - stack []
2024-06-06 03:46:42,693 - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=228)
2024-06-06 03:46:42,693 - DEBUG - stack ['$null$102.1', '$102load_global.0']
2024-06-06 03:46:42,693 - DEBUG - dispatch pc=114, inst=CALL(arg=1, lineno=228)
2024-06-06 03:46:42,693 - DEBUG - stack ['$null$102.1', '$102load_global.0', '$const112.2']
2024-06-06 03:46:42,693 - DEBUG - dispatch pc=122, inst=RAISE_VARARGS(arg=1, lineno=228)
2024-06-06 03:46:42,693 - DEBUG - stack ['$114call.3']
2024-06-06 03:46:42,693 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,694 - DEBUG - pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2024-06-06 03:46:42,694 - DEBUG - stack: []
2024-06-06 03:46:42,694 - DEBUG - state.pc_initial: State(pc_initial=134 nstack_initial=0)
2024-06-06 03:46:42,694 - DEBUG - dispatch pc=134, inst=LOAD_FAST(arg=0, lineno=229)
2024-06-06 03:46:42,694 - DEBUG - stack []
2024-06-06 03:46:42,694 - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=5, lineno=229)
2024-06-06 03:46:42,694 - DEBUG - stack ['$a134.0']
2024-06-06 03:46:42,694 - DEBUG - dispatch pc=138, inst=COMPARE_OP(arg=55, lineno=229)
2024-06-06 03:46:42,694 - DEBUG - stack ['$a134.0', '$const136.1']
2024-06-06 03:46:42,694 - DEBUG - dispatch pc=142, inst=POP_JUMP_IF_FALSE(arg=5, lineno=229)
2024-06-06 03:46:42,694 - DEBUG - stack ['$138compare_op.2']
2024-06-06 03:46:42,694 - DEBUG - end state. edges=[Edge(pc=144, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,695 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-06-06 03:46:42,695 - DEBUG - pending: deque([State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2024-06-06 03:46:42,695 - DEBUG - stack: []
2024-06-06 03:46:42,695 - DEBUG - state.pc_initial: State(pc_initial=246 nstack_initial=0)
2024-06-06 03:46:42,695 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=2, lineno=239)
2024-06-06 03:46:42,695 - DEBUG - stack []
2024-06-06 03:46:42,695 - DEBUG - dispatch pc=248, inst=LOAD_FAST(arg=0, lineno=239)
2024-06-06 03:46:42,695 - DEBUG - stack ['$r246.0']
2024-06-06 03:46:42,695 - DEBUG - dispatch pc=250, inst=BINARY_OP(arg=18, lineno=239)
2024-06-06 03:46:42,695 - DEBUG - stack ['$r246.0', '$a248.1']
2024-06-06 03:46:42,695 - DEBUG - dispatch pc=254, inst=STORE_FAST(arg=2, lineno=239)
2024-06-06 03:46:42,695 - DEBUG - stack ['$binop_imul250.2']
2024-06-06 03:46:42,696 - DEBUG - end state. edges=[Edge(pc=256, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,696 - DEBUG - pending: deque([State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=256 nstack_initial=0)])
2024-06-06 03:46:42,696 - DEBUG - stack: []
2024-06-06 03:46:42,696 - DEBUG - state.pc_initial: State(pc_initial=256 nstack_initial=0)
2024-06-06 03:46:42,696 - DEBUG - dispatch pc=256, inst=LOAD_FAST(arg=4, lineno=240)
2024-06-06 03:46:42,696 - DEBUG - stack []
2024-06-06 03:46:42,696 - DEBUG - dispatch pc=258, inst=LOAD_CONST(arg=1, lineno=240)
2024-06-06 03:46:42,696 - DEBUG - stack ['$exp256.0']
2024-06-06 03:46:42,696 - DEBUG - dispatch pc=260, inst=BINARY_OP(arg=22, lineno=240)
2024-06-06 03:46:42,696 - DEBUG - stack ['$exp256.0', '$const258.1']
2024-06-06 03:46:42,696 - DEBUG - dispatch pc=264, inst=STORE_FAST(arg=4, lineno=240)
2024-06-06 03:46:42,696 - DEBUG - stack ['$binop_irshift260.2']
2024-06-06 03:46:42,697 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=0, lineno=241)
2024-06-06 03:46:42,697 - DEBUG - stack []
2024-06-06 03:46:42,697 - DEBUG - dispatch pc=268, inst=LOAD_FAST(arg=0, lineno=241)
2024-06-06 03:46:42,697 - DEBUG - stack ['$a266.3']
2024-06-06 03:46:42,697 - DEBUG - dispatch pc=270, inst=BINARY_OP(arg=18, lineno=241)
2024-06-06 03:46:42,697 - DEBUG - stack ['$a266.3', '$a268.4']
2024-06-06 03:46:42,697 - DEBUG - dispatch pc=274, inst=STORE_FAST(arg=0, lineno=241)
2024-06-06 03:46:42,697 - DEBUG - stack ['$binop_imul270.5']
2024-06-06 03:46:42,697 - DEBUG - dispatch pc=276, inst=LOAD_FAST(arg=4, lineno=237)
2024-06-06 03:46:42,697 - DEBUG - stack []
2024-06-06 03:46:42,697 - DEBUG - dispatch pc=278, inst=LOAD_CONST(arg=2, lineno=237)
2024-06-06 03:46:42,697 - DEBUG - stack ['$exp276.6']
2024-06-06 03:46:42,697 - DEBUG - dispatch pc=280, inst=COMPARE_OP(arg=55, lineno=237)
2024-06-06 03:46:42,697 - DEBUG - stack ['$exp276.6', '$const278.7']
2024-06-06 03:46:42,698 - DEBUG - dispatch pc=284, inst=POP_JUMP_IF_FALSE(arg=1, lineno=237)
2024-06-06 03:46:42,698 - DEBUG - stack ['$280compare_op.8']
2024-06-06 03:46:42,698 - DEBUG - end state. edges=[Edge(pc=286, stack=(), blockstack=(), npush=0), Edge(pc=288, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,698 - DEBUG - pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2024-06-06 03:46:42,698 - DEBUG - stack: []
2024-06-06 03:46:42,698 - DEBUG - state.pc_initial: State(pc_initial=292 nstack_initial=0)
2024-06-06 03:46:42,698 - DEBUG - dispatch pc=292, inst=LOAD_CONST(arg=8, lineno=243)
2024-06-06 03:46:42,698 - DEBUG - stack []
2024-06-06 03:46:42,698 - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=2, lineno=243)
2024-06-06 03:46:42,698 - DEBUG - stack ['$const292.0']
2024-06-06 03:46:42,698 - DEBUG - dispatch pc=296, inst=BINARY_OP(arg=11, lineno=243)
2024-06-06 03:46:42,698 - DEBUG - stack ['$const292.0', '$r294.1']
2024-06-06 03:46:42,699 - DEBUG - dispatch pc=300, inst=RETURN_VALUE(arg=None, lineno=243)
2024-06-06 03:46:42,699 - DEBUG - stack ['$binop_truediv296.2']
2024-06-06 03:46:42,699 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,699 - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2024-06-06 03:46:42,699 - DEBUG - stack: []
2024-06-06 03:46:42,699 - DEBUG - state.pc_initial: State(pc_initial=302 nstack_initial=0)
2024-06-06 03:46:42,699 - DEBUG - dispatch pc=302, inst=LOAD_FAST(arg=2, lineno=243)
2024-06-06 03:46:42,699 - DEBUG - stack []
2024-06-06 03:46:42,699 - DEBUG - dispatch pc=304, inst=RETURN_VALUE(arg=None, lineno=243)
2024-06-06 03:46:42,699 - DEBUG - stack ['$r302.0']
2024-06-06 03:46:42,699 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,699 - DEBUG - pending: deque([State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2024-06-06 03:46:42,699 - DEBUG - stack: []
2024-06-06 03:46:42,700 - DEBUG - state.pc_initial: State(pc_initial=144 nstack_initial=0)
2024-06-06 03:46:42,700 - DEBUG - dispatch pc=144, inst=RETURN_CONST(arg=2, lineno=230)
2024-06-06 03:46:42,700 - DEBUG - stack []
2024-06-06 03:46:42,700 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,700 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2024-06-06 03:46:42,700 - DEBUG - pending: deque([State(pc_initial=256 nstack_initial=0), State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2024-06-06 03:46:42,700 - DEBUG - pending: deque([State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2024-06-06 03:46:42,700 - DEBUG - stack: []
2024-06-06 03:46:42,700 - DEBUG - state.pc_initial: State(pc_initial=286 nstack_initial=0)
2024-06-06 03:46:42,700 - DEBUG - dispatch pc=286, inst=JUMP_BACKWARD(arg=26, lineno=237)
2024-06-06 03:46:42,700 - DEBUG - stack []
2024-06-06 03:46:42,700 - DEBUG - end state. edges=[Edge(pc=236, stack=(), blockstack=(), npush=0)]
2024-06-06 03:46:42,700 - DEBUG - pending: deque([State(pc_initial=288 nstack_initial=0), State(pc_initial=236 nstack_initial=0)])
2024-06-06 03:46:42,701 - DEBUG - pending: deque([State(pc_initial=236 nstack_initial=0)])
2024-06-06 03:46:42,701 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:42,701 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=124 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=144 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set(),
             State(pc_initial=226 nstack_initial=0): set(),
             State(pc_initial=236 nstack_initial=0): set(),
             State(pc_initial=246 nstack_initial=0): set(),
             State(pc_initial=256 nstack_initial=0): set(),
             State(pc_initial=286 nstack_initial=0): set(),
             State(pc_initial=288 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set()})
2024-06-06 03:46:42,701 - DEBUG - defmap: {}
2024-06-06 03:46:42,701 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:42,702 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:42,702 - DEBUG - keep phismap: {}
2024-06-06 03:46:42,702 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:42,702 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:42,702 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {}), (8, {'res': '$8load_deref.1'}), (10, {'res': '$const10.2'}), (12, {'func': '$8load_deref.1', 'args': ['$const10.2'], 'kw_names': None, 'res': '$12call.3'}), (20, {'value': '$12call.3'}), (22, {}), (24, {'res': '$24load_deref.5'}), (26, {'res': '$a26.6'}), (28, {'func': '$24load_deref.5', 'args': ['$a26.6'], 'kw_names': None, 'res': '$28call.7'}), (36, {'value': '$28call.7'}), (38, {'res': '$b38.8'}), (40, {'res': '$const40.9'}), (42, {'lhs': '$b38.8', 'rhs': '$const40.9', 'res': '$42compare_op.10'}), (46, {'pred': '$42compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 146: ()})
2024-06-06 03:46:42,702 - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0'}), (50, {'value': '$const48.0'}), (52, {'res': '$b52.1'}), (54, {'value': '$b52.1', 'res': '$54unary_negative.2'}), (56, {'value': '$54unary_negative.2'}), (58, {'res': '$exp58.3'}), (60, {'res': '$const60.4'}), (62, {'lhs': '$exp58.3', 'rhs': '$const60.4', 'res': '$62compare_op.5'}), (66, {'pred': '$62compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 80: ()})
2024-06-06 03:46:42,702 - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'idx': 0, 'res': '$68load_global.0'}), (78, {'exc': '$68load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,702 - DEBUG - block_infos State(pc_initial=80 nstack_initial=0):
AdaptBlockInfo(insts=((80, {'res': '$80load_deref.0'}), (82, {'pred': '$80load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 154: ()})
2024-06-06 03:46:42,702 - DEBUG - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (92, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={94: (), 124: ()})
2024-06-06 03:46:42,703 - DEBUG - block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$94load_deref.0'}), (96, {'pred': '$94load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: (), 102: ()})
2024-06-06 03:46:42,703 - DEBUG - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$98load_deref.0'}), (100, {'retval': '$98load_deref.0', 'castval': '$100return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,703 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'idx': 1, 'res': '$102load_global.0'}), (112, {'res': '$const112.2'}), (114, {'func': '$102load_global.0', 'args': ['$const112.2'], 'kw_names': None, 'res': '$114call.3'}), (122, {'exc': '$114call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,703 - DEBUG - block_infos State(pc_initial=124 nstack_initial=0):
AdaptBlockInfo(insts=((124, {'res': '$a124.0'}), (126, {'res': '$const126.1'}), (128, {'lhs': '$a124.0', 'rhs': '$const126.1', 'res': '$128compare_op.2'}), (132, {'pred': '$128compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: (), 154: ()})
2024-06-06 03:46:42,703 - DEBUG - block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$a134.0'}), (136, {'res': '$const136.1'}), (138, {'lhs': '$a134.0', 'rhs': '$const136.1', 'res': '$138compare_op.2'}), (142, {'pred': '$138compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={144: (), 154: ()})
2024-06-06 03:46:42,703 - DEBUG - block_infos State(pc_initial=144 nstack_initial=0):
AdaptBlockInfo(insts=((144, {'retval': '$const144.0', 'castval': '$144return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,703 - DEBUG - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$const146.0'}), (148, {'value': '$const146.0'}), (150, {'res': '$b150.1'}), (152, {'value': '$b150.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
2024-06-06 03:46:42,703 - DEBUG - block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158compare_op.2'}), (162, {'pred': '$158compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: (), 226: ()})
2024-06-06 03:46:42,703 - DEBUG - block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((164, {'idx': 2, 'res': '$164load_global.0'}), (174, {'item': '$164load_global.0', 'res': '$174load_attr.2'}), (194, {'res': '$a194.3'}), (196, {'idx': 4, 'res': '$196load_global.4'}), (206, {'res': '$b206.6'}), (208, {'func': '$196load_global.4', 'args': ['$b206.6'], 'kw_names': None, 'res': '$208call.7'}), (216, {'func': '$174load_attr.2', 'args': ['$a194.3', '$208call.7'], 'kw_names': None, 'res': '$216call.8'}), (224, {'retval': '$216call.8', 'castval': '$224return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,703 - DEBUG - block_infos State(pc_initial=226 nstack_initial=0):
AdaptBlockInfo(insts=((226, {'res': '$exp226.0'}), (228, {'res': '$const228.1'}), (230, {'lhs': '$exp226.0', 'rhs': '$const228.1', 'res': '$230compare_op.2'}), (234, {'pred': '$230compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={236: (), 288: ()})
2024-06-06 03:46:42,703 - DEBUG - block_infos State(pc_initial=236 nstack_initial=0):
AdaptBlockInfo(insts=((236, {'res': '$exp236.0'}), (238, {'res': '$const238.1'}), (240, {'op': '&', 'lhs': '$exp236.0', 'rhs': '$const238.1', 'res': '$binop_and_240.2'}), (244, {'pred': '$binop_and_240.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={246: (), 256: ()})
2024-06-06 03:46:42,704 - DEBUG - block_infos State(pc_initial=246 nstack_initial=0):
AdaptBlockInfo(insts=((246, {'res': '$r246.0'}), (248, {'res': '$a248.1'}), (250, {'op': '*=', 'lhs': '$r246.0', 'rhs': '$a248.1', 'res': '$binop_imul250.2'}), (254, {'value': '$binop_imul250.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={256: ()})
2024-06-06 03:46:42,704 - DEBUG - block_infos State(pc_initial=256 nstack_initial=0):
AdaptBlockInfo(insts=((256, {'res': '$exp256.0'}), (258, {'res': '$const258.1'}), (260, {'op': '>>=', 'lhs': '$exp256.0', 'rhs': '$const258.1', 'res': '$binop_irshift260.2'}), (264, {'value': '$binop_irshift260.2'}), (266, {'res': '$a266.3'}), (268, {'res': '$a268.4'}), (270, {'op': '*=', 'lhs': '$a266.3', 'rhs': '$a268.4', 'res': '$binop_imul270.5'}), (274, {'value': '$binop_imul270.5'}), (276, {'res': '$exp276.6'}), (278, {'res': '$const278.7'}), (280, {'lhs': '$exp276.6', 'rhs': '$const278.7', 'res': '$280compare_op.8'}), (284, {'pred': '$280compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={286: (), 288: ()})
2024-06-06 03:46:42,704 - DEBUG - block_infos State(pc_initial=286 nstack_initial=0):
AdaptBlockInfo(insts=((286, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={236: ()})
2024-06-06 03:46:42,704 - DEBUG - block_infos State(pc_initial=288 nstack_initial=0):
AdaptBlockInfo(insts=((288, {'res': '$invert288.0'}), (290, {'pred': '$invert288.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
2024-06-06 03:46:42,704 - DEBUG - block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$const292.0'}), (294, {'res': '$r294.1'}), (296, {'op': '/', 'lhs': '$const292.0', 'rhs': '$r294.1', 'res': '$binop_truediv296.2'}), (300, {'retval': '$binop_truediv296.2', 'castval': '$300return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,704 - DEBUG - block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$r302.0'}), (304, {'retval': '$r302.0', 'castval': '$304return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,707 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $8load_deref.1 = freevar(tp: float64)    ['$8load_deref.1']
    $const10.2 = const(int, 1)               ['$const10.2']
    r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$8load_deref.1', '$const10.2', 'r']
    $24load_deref.5 = freevar(tp: float64)   ['$24load_deref.5']
    a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_deref.5', 'a', 'a.1']
    $const40.9 = const(int, 0)               ['$const40.9']
    $42compare_op.10 = b < $const40.9        ['$42compare_op.10', '$const40.9', 'b']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.10', '$46pred', 'bool46']
    branch $46pred, 48, 146                  ['$46pred']
label 48:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const60.4 = const(int, 0)               ['$const60.4']
    $62compare_op.5 = exp < $const60.4       ['$62compare_op.5', '$const60.4', 'exp']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.5', '$66pred', 'bool66']
    branch $66pred, 68, 80                   ['$66pred']
label 68:
    $68load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$68load_global.0']
    raise $68load_global.0                   ['$68load_global.0']
label 80:
    $80load_deref.0 = freevar(is_integer: False) ['$80load_deref.0']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$80load_deref.0', '$82pred', 'bool82']
    branch $82pred, 84, 154                  ['$82pred']
label 84:
    $const86.1 = const(int, 0)               ['$const86.1']
    $88compare_op.2 = a.1 == $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
    $92pred = call bool92($88compare_op.2, func=bool92, args=(Var($88compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$92pred', 'bool92']
    branch $92pred, 94, 124                  ['$92pred']
label 94:
    $94load_deref.0 = freevar(zerodiv_return: False) ['$94load_deref.0']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94load_deref.0, func=bool96, args=(Var($94load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$94load_deref.0', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
label 98:
    $98load_deref.0 = freevar(zerodiv_return: False) ['$98load_deref.0']
    $100return_value.1 = cast(value=$98load_deref.0) ['$100return_value.1', '$98load_deref.0']
    return $100return_value.1                ['$100return_value.1']
label 102:
    $102load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$102load_global.0']
    $const112.2 = const(str, 0 cannot be raised to a negative power) ['$const112.2']
    $114call.3 = call $102load_global.0($const112.2, func=$102load_global.0, args=[Var($const112.2, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$102load_global.0', '$114call.3', '$const112.2']
    raise $114call.3                         ['$114call.3']
label 124:
    $const126.1 = const(int, 1)              ['$const126.1']
    $128compare_op.2 = a.1 != $const126.1    ['$128compare_op.2', '$const126.1', 'a.1']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($128compare_op.2, func=bool132, args=(Var($128compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$128compare_op.2', '$132pred', 'bool132']
    branch $132pred, 134, 154                ['$132pred']
label 134:
    $const136.1 = const(int, -1)             ['$const136.1']
    $138compare_op.2 = a.1 != $const136.1    ['$138compare_op.2', '$const136.1', 'a.1']
    bool142 = global(bool: <class 'bool'>)   ['bool142']
    $142pred = call bool142($138compare_op.2, func=bool142, args=(Var($138compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$138compare_op.2', '$142pred', 'bool142']
    branch $142pred, 144, 154                ['$142pred']
label 144:
    $const144.0 = const(int, 0)              ['$const144.0']
    $144return_const.1 = cast(value=$const144.0) ['$144return_const.1', '$const144.0']
    return $144return_const.1                ['$144return_const.1']
label 146:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 65536)          ['$const156.1']
    $158compare_op.2 = exp > $const156.1     ['$158compare_op.2', '$const156.1', 'exp']
    bool162 = global(bool: <class 'bool'>)   ['bool162']
    $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$158compare_op.2', '$162pred', 'bool162']
    branch $162pred, 164, 226                ['$162pred']
label 164:
    $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>) ['$164load_global.0']
    $174load_attr.2 = getattr(value=$164load_global.0, attr=pow) ['$164load_global.0', '$174load_attr.2']
    $196load_global.4 = global(float: <class 'float'>) ['$196load_global.4']
    $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$196load_global.4', '$208call.7', 'b']
    $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$174load_attr.2', '$208call.7', '$216call.8', 'a.1']
    $224return_value.9 = cast(value=$216call.8) ['$216call.8', '$224return_value.9']
    return $224return_value.9                ['$224return_value.9']
label 226:
    $const228.1 = const(int, 0)              ['$const228.1']
    $230compare_op.2 = exp != $const228.1    ['$230compare_op.2', '$const228.1', 'exp']
    bool234 = global(bool: <class 'bool'>)   ['bool234']
    $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$230compare_op.2', '$234pred', 'bool234']
    branch $234pred, 236, 288                ['$234pred']
label 236:
    $const238.1 = const(int, 1)              ['$const238.1']
    $binop_and_240.2 = exp & $const238.1     ['$binop_and_240.2', '$const238.1', 'exp']
    bool244 = global(bool: <class 'bool'>)   ['bool244']
    $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$244pred', '$binop_and_240.2', 'bool244']
    branch $244pred, 246, 256                ['$244pred']
label 246:
    $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul250.2', 'a.1', 'r']
    r = $binop_imul250.2                     ['$binop_imul250.2', 'r']
    jump 256                                 []
label 256:
    $const258.1 = const(int, 1)              ['$const258.1']
    $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_irshift260.2', '$const258.1', 'exp']
    exp = $binop_irshift260.2                ['$binop_irshift260.2', 'exp']
    $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul270.5', 'a.1', 'a.1']
    a.1 = $binop_imul270.5                   ['$binop_imul270.5', 'a.1']
    $const278.7 = const(int, 0)              ['$const278.7']
    $280compare_op.8 = exp != $const278.7    ['$280compare_op.8', '$const278.7', 'exp']
    bool284 = global(bool: <class 'bool'>)   ['bool284']
    $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$280compare_op.8', '$284pred', 'bool284']
    branch $284pred, 286, 288                ['$284pred']
label 286:
    jump 236                                 []
label 288:
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$290pred', 'bool290', 'invert']
    branch $290pred, 292, 302                ['$290pred']
label 292:
    $const292.0 = const(float, 1.0)          ['$const292.0']
    $binop_truediv296.2 = $const292.0 / r    ['$binop_truediv296.2', '$const292.0', 'r']
    $300return_value.3 = cast(value=$binop_truediv296.2) ['$300return_value.3', '$binop_truediv296.2']
    return $300return_value.3                ['$300return_value.3']
label 302:
    $304return_value.1 = cast(value=r)       ['$304return_value.1', 'r']
    return $304return_value.1                ['$304return_value.1']

2024-06-06 03:46:42,723 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:42,723 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b11940>
2024-06-06 03:46:42,723 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,723 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,723 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-06 03:46:42,723 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,723 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,723 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2024-06-06 03:46:42,723 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,723 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,724 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,724 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,724 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,724 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,724 - DEBUG - ==== SSA block analysis pass on 48
2024-06-06 03:46:42,724 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b11940>
2024-06-06 03:46:42,724 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,724 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,724 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,724 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,724 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,724 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,725 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,725 - DEBUG - ==== SSA block analysis pass on 68
2024-06-06 03:46:42,725 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b11940>
2024-06-06 03:46:42,725 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,725 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,725 - DEBUG - ==== SSA block analysis pass on 80
2024-06-06 03:46:42,725 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b11940>
2024-06-06 03:46:42,725 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,725 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,725 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,725 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,725 - DEBUG - ==== SSA block analysis pass on 146
2024-06-06 03:46:42,725 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b11940>
2024-06-06 03:46:42,726 - DEBUG - on stmt: invert = const(bool, False)
2024-06-06 03:46:42,726 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,726 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,726 - DEBUG - ==== SSA block analysis pass on 154
2024-06-06 03:46:42,726 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b11940>
2024-06-06 03:46:42,726 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,726 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,726 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,726 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,726 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,726 - DEBUG - ==== SSA block analysis pass on 164
2024-06-06 03:46:42,727 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b11940>
2024-06-06 03:46:42,727 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,727 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,727 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,727 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,727 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,727 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,727 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,727 - DEBUG - ==== SSA block analysis pass on 226
2024-06-06 03:46:42,727 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b11940>
2024-06-06 03:46:42,727 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,727 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,728 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,728 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,728 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,728 - DEBUG - ==== SSA block analysis pass on 236
2024-06-06 03:46:42,728 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b11940>
2024-06-06 03:46:42,728 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,728 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,728 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,728 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,728 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,728 - DEBUG - ==== SSA block analysis pass on 246
2024-06-06 03:46:42,728 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b11940>
2024-06-06 03:46:42,729 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,729 - DEBUG - on stmt: r = $binop_imul250.2
2024-06-06 03:46:42,729 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,729 - DEBUG - ==== SSA block analysis pass on 256
2024-06-06 03:46:42,729 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b11940>
2024-06-06 03:46:42,729 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,729 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,729 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,729 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,729 - DEBUG - on stmt: a.1 = $binop_imul270.5
2024-06-06 03:46:42,729 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,729 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,730 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,730 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,730 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,730 - DEBUG - ==== SSA block analysis pass on 286
2024-06-06 03:46:42,730 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b11940>
2024-06-06 03:46:42,730 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,730 - DEBUG - ==== SSA block analysis pass on 288
2024-06-06 03:46:42,730 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b11940>
2024-06-06 03:46:42,730 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,730 - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,730 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,730 - DEBUG - ==== SSA block analysis pass on 292
2024-06-06 03:46:42,730 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b11940>
2024-06-06 03:46:42,731 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,731 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r
2024-06-06 03:46:42,731 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,731 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,731 - DEBUG - ==== SSA block analysis pass on 302
2024-06-06 03:46:42,731 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9b9b11940>
2024-06-06 03:46:42,731 - DEBUG - on stmt: $304return_value.1 = cast(value=r)
2024-06-06 03:46:42,731 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,732 - DEBUG - defs defaultdict(<class 'list'>,
            {'$158compare_op.2': [(<numba.core.ir.Assign object at 0x7fe9b9b11580>,
                                   154)],
             '$162pred': [(<numba.core.ir.Assign object at 0x7fe9b9ace4e0>,
                           154)],
             '$164load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9b19d00>,
                                    164)],
             '$174load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b9b18d40>,
                                  164)],
             '$196load_global.4': [(<numba.core.ir.Assign object at 0x7fe9b9b19c10>,
                                    164)],
             '$208call.7': [(<numba.core.ir.Assign object at 0x7fe9b9b1bec0>,
                             164)],
             '$216call.8': [(<numba.core.ir.Assign object at 0x7fe9b9b1bfe0>,
                             164)],
             '$224return_value.9': [(<numba.core.ir.Assign object at 0x7fe9b9b1ba40>,
                                     164)],
             '$230compare_op.2': [(<numba.core.ir.Assign object at 0x7fe9b9b1b4a0>,
                                   226)],
             '$234pred': [(<numba.core.ir.Assign object at 0x7fe9b9b1b1a0>,
                           226)],
             '$244pred': [(<numba.core.ir.Assign object at 0x7fe9b9dbdee0>,
                           236)],
             '$24load_deref.5': [(<numba.core.ir.Assign object at 0x7fe9b9b101d0>,
                                  0)],
             '$280compare_op.8': [(<numba.core.ir.Assign object at 0x7fe9b9dbf9e0>,
                                   256)],
             '$284pred': [(<numba.core.ir.Assign object at 0x7fe9b9dbcd40>,
                           256)],
             '$290pred': [(<numba.core.ir.Assign object at 0x7fe9b9dbccb0>,
                           288)],
             '$300return_value.3': [(<numba.core.ir.Assign object at 0x7fe9b9dbe840>,
                                     292)],
             '$304return_value.1': [(<numba.core.ir.Assign object at 0x7fe9b9dbcbc0>,
                                     302)],
             '$42compare_op.10': [(<numba.core.ir.Assign object at 0x7fe9b9b121b0>,
                                   0)],
             '$46pred': [(<numba.core.ir.Assign object at 0x7fe9b9b12a80>, 0)],
             '$62compare_op.5': [(<numba.core.ir.Assign object at 0x7fe9b926c890>,
                                  48)],
             '$66pred': [(<numba.core.ir.Assign object at 0x7fe9b9528a70>, 48)],
             '$68load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b934a960>,
                                   68)],
             '$80load_deref.0': [(<numba.core.ir.Assign object at 0x7fe9b934b770>,
                                  80)],
             '$82pred': [(<numba.core.ir.Assign object at 0x7fe9b9349730>, 80)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x7fe9b9b119a0>,
                                 0)],
             '$binop_and_240.2': [(<numba.core.ir.Assign object at 0x7fe9b9dbd2e0>,
                                   236)],
             '$binop_imul250.2': [(<numba.core.ir.Assign object at 0x7fe9b9dbf3e0>,
                                   246)],
             '$binop_imul270.5': [(<numba.core.ir.Assign object at 0x7fe9b9dbfad0>,
                                   256)],
             '$binop_irshift260.2': [(<numba.core.ir.Assign object at 0x7fe9b9dbf140>,
                                      256)],
             '$binop_truediv296.2': [(<numba.core.ir.Assign object at 0x7fe9b9dbe1b0>,
                                      292)],
             '$const10.2': [(<numba.core.ir.Assign object at 0x7fe9b9b11a60>,
                             0)],
             '$const156.1': [(<numba.core.ir.Assign object at 0x7fe9b9b18e30>,
                              154)],
             '$const228.1': [(<numba.core.ir.Assign object at 0x7fe9b9b1b680>,
                              226)],
             '$const238.1': [(<numba.core.ir.Assign object at 0x7fe9b9b1a270>,
                              236)],
             '$const258.1': [(<numba.core.ir.Assign object at 0x7fe9b9dbe450>,
                              256)],
             '$const278.7': [(<numba.core.ir.Assign object at 0x7fe9b9dbfce0>,
                              256)],
             '$const292.0': [(<numba.core.ir.Assign object at 0x7fe9b9dbc1a0>,
                              292)],
             '$const40.9': [(<numba.core.ir.Assign object at 0x7fe9b9b11850>,
                             0)],
             '$const60.4': [(<numba.core.ir.Assign object at 0x7fe9b94a6c90>,
                             48)],
             'a': [(<numba.core.ir.Assign object at 0x7fe9b9b12960>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x7fe9b9b10260>, 0),
                     (<numba.core.ir.Assign object at 0x7fe9b9dbc3b0>, 256)],
             'b': [(<numba.core.ir.Assign object at 0x7fe9b9b11970>, 0)],
             'bool162': [(<numba.core.ir.Assign object at 0x7fe9b9acdaf0>,
                          154)],
             'bool234': [(<numba.core.ir.Assign object at 0x7fe9b9b1b110>,
                          226)],
             'bool244': [(<numba.core.ir.Assign object at 0x7fe9b9dbe330>,
                          236)],
             'bool284': [(<numba.core.ir.Assign object at 0x7fe9b9dbf650>,
                          256)],
             'bool290': [(<numba.core.ir.Assign object at 0x7fe9b9dbce90>,
                          288)],
             'bool46': [(<numba.core.ir.Assign object at 0x7fe9b9b12ed0>, 0)],
             'bool66': [(<numba.core.ir.Assign object at 0x7fe9b952bf20>, 48)],
             'bool82': [(<numba.core.ir.Assign object at 0x7fe9b9348ad0>, 80)],
             'exp': [(<numba.core.ir.Assign object at 0x7fe9b9b13050>, 48),
                     (<numba.core.ir.Assign object at 0x7fe9b9b182f0>, 146),
                     (<numba.core.ir.Assign object at 0x7fe9b9dbf0e0>, 256)],
             'invert': [(<numba.core.ir.Assign object at 0x7fe9b9b12f30>, 48),
                        (<numba.core.ir.Assign object at 0x7fe9b9b19f40>, 146)],
             'r': [(<numba.core.ir.Assign object at 0x7fe9b9b12a50>, 0),
                   (<numba.core.ir.Assign object at 0x7fe9b9dbf470>, 246)]})
2024-06-06 03:46:42,733 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9b9accda0>
2024-06-06 03:46:42,733 - DEBUG - Fix SSA violator on var r
2024-06-06 03:46:42,733 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,733 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,733 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,733 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,733 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-06 03:46:42,733 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,733 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,733 - DEBUG - first assign: r
2024-06-06 03:46:42,734 - DEBUG - replaced with: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,734 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2024-06-06 03:46:42,734 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,734 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,734 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,734 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,734 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,734 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,734 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,734 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,734 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,734 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,735 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,735 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,735 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,735 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,735 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,735 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,735 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,735 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,735 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,735 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,735 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,735 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,735 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,736 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,736 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,736 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,736 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,736 - DEBUG - on stmt: invert = const(bool, False)
2024-06-06 03:46:42,736 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,736 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,736 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,736 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,736 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,736 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,736 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,736 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,737 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,737 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,737 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,737 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,737 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,737 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,737 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,737 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,737 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,737 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,737 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,737 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,737 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,738 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,738 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,738 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,738 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,738 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,738 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,738 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,738 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,738 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,738 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,738 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,738 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,738 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,739 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,739 - DEBUG - on stmt: r = $binop_imul250.2
2024-06-06 03:46:42,739 - DEBUG - replaced with: r.1 = $binop_imul250.2
2024-06-06 03:46:42,739 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,739 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,739 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,739 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,739 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,739 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,739 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,739 - DEBUG - on stmt: a.1 = $binop_imul270.5
2024-06-06 03:46:42,739 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,739 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,740 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,740 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,740 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,740 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,740 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,740 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,740 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,740 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,740 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,740 - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,740 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,740 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,740 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,741 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,741 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r
2024-06-06 03:46:42,741 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,741 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,741 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,741 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,741 - DEBUG - on stmt: $304return_value.1 = cast(value=r)
2024-06-06 03:46:42,741 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,741 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fe9b9b12240>],
             246: [<numba.core.ir.Assign object at 0x7fe9b9dbe5a0>]})
2024-06-06 03:46:42,741 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,741 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,741 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,742 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,742 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-06 03:46:42,742 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,742 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,742 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2024-06-06 03:46:42,742 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,742 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,742 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,742 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,742 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,742 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,743 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,743 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,743 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,743 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,743 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,743 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,743 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,743 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,743 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,743 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,743 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,743 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,744 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,744 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,744 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,744 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,744 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,744 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,744 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,744 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,744 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,744 - DEBUG - on stmt: invert = const(bool, False)
2024-06-06 03:46:42,744 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,744 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,744 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,745 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,745 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,745 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,745 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,745 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,745 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,745 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,745 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,745 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,745 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,745 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,745 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,746 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,746 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,746 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,746 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,746 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,746 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,746 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,746 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,746 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,746 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,746 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,747 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,747 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,747 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,747 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,747 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,747 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,747 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,747 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,747 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,747 - DEBUG - find_def var='r' stmt=$binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,747 - DEBUG - find_def_from_top label 246
2024-06-06 03:46:42,748 - DEBUG - idom 236 from label 246
2024-06-06 03:46:42,748 - DEBUG - find_def_from_bottom label 236
2024-06-06 03:46:42,748 - DEBUG - find_def_from_top label 236
2024-06-06 03:46:42,748 - DEBUG - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 236
2024-06-06 03:46:42,748 - DEBUG - find_def_from_bottom label 226
2024-06-06 03:46:42,748 - DEBUG - find_def_from_top label 226
2024-06-06 03:46:42,748 - DEBUG - idom 154 from label 226
2024-06-06 03:46:42,748 - DEBUG - find_def_from_bottom label 154
2024-06-06 03:46:42,748 - DEBUG - find_def_from_top label 154
2024-06-06 03:46:42,748 - DEBUG - idom 0 from label 154
2024-06-06 03:46:42,748 - DEBUG - find_def_from_bottom label 0
2024-06-06 03:46:42,748 - DEBUG - incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,748 - DEBUG - find_def_from_bottom label 286
2024-06-06 03:46:42,749 - DEBUG - find_def_from_top label 286
2024-06-06 03:46:42,749 - DEBUG - idom 256 from label 286
2024-06-06 03:46:42,749 - DEBUG - find_def_from_bottom label 256
2024-06-06 03:46:42,749 - DEBUG - find_def_from_top label 256
2024-06-06 03:46:42,749 - DEBUG - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 256
2024-06-06 03:46:42,749 - DEBUG - find_def_from_bottom label 236
2024-06-06 03:46:42,749 - DEBUG - incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:216)], incoming_blocks=[226])
2024-06-06 03:46:42,749 - DEBUG - find_def_from_bottom label 246
2024-06-06 03:46:42,749 - DEBUG - incoming_def r.1 = $binop_imul250.2
2024-06-06 03:46:42,749 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,749 - DEBUG - replaced with: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,750 - DEBUG - on stmt: r.1 = $binop_imul250.2
2024-06-06 03:46:42,750 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,750 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,750 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,750 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,750 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,750 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,750 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,750 - DEBUG - on stmt: a.1 = $binop_imul270.5
2024-06-06 03:46:42,750 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,750 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,750 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,751 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,751 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,751 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,751 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,751 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,751 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,751 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,751 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,751 - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,751 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,751 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,752 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,752 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,752 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r
2024-06-06 03:46:42,752 - DEBUG - find_def var='r' stmt=$binop_truediv296.2 = $const292.0 / r
2024-06-06 03:46:42,752 - DEBUG - find_def_from_top label 292
2024-06-06 03:46:42,752 - DEBUG - idom 288 from label 292
2024-06-06 03:46:42,752 - DEBUG - find_def_from_bottom label 288
2024-06-06 03:46:42,752 - DEBUG - find_def_from_top label 288
2024-06-06 03:46:42,752 - DEBUG - insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 288
2024-06-06 03:46:42,752 - DEBUG - find_def_from_bottom label 256
2024-06-06 03:46:42,752 - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,752 - DEBUG - find_def_from_bottom label 226
2024-06-06 03:46:42,752 - DEBUG - find_def_from_top label 226
2024-06-06 03:46:42,753 - DEBUG - idom 154 from label 226
2024-06-06 03:46:42,753 - DEBUG - find_def_from_bottom label 154
2024-06-06 03:46:42,753 - DEBUG - find_def_from_top label 154
2024-06-06 03:46:42,753 - DEBUG - idom 0 from label 154
2024-06-06 03:46:42,753 - DEBUG - find_def_from_bottom label 0
2024-06-06 03:46:42,753 - DEBUG - incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,753 - DEBUG - replaced with: $binop_truediv296.2 = $const292.0 / r.4
2024-06-06 03:46:42,753 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,753 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,753 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,753 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,753 - DEBUG - on stmt: $304return_value.1 = cast(value=r)
2024-06-06 03:46:42,754 - DEBUG - find_def var='r' stmt=$304return_value.1 = cast(value=r)
2024-06-06 03:46:42,754 - DEBUG - find_def_from_top label 302
2024-06-06 03:46:42,754 - DEBUG - idom 288 from label 302
2024-06-06 03:46:42,754 - DEBUG - find_def_from_bottom label 288
2024-06-06 03:46:42,754 - DEBUG - replaced with: $304return_value.1 = cast(value=r.4)
2024-06-06 03:46:42,754 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,754 - DEBUG - Fix SSA violator on var a.1
2024-06-06 03:46:42,754 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,754 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b10860>
2024-06-06 03:46:42,754 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,754 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,754 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-06 03:46:42,754 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,755 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,755 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2024-06-06 03:46:42,755 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,755 - DEBUG - first assign: a.1
2024-06-06 03:46:42,755 - DEBUG - replaced with: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,755 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,755 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,755 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,755 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,755 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,755 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,756 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b10860>
2024-06-06 03:46:42,756 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,756 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,756 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,756 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,756 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,756 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,756 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,756 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,756 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b10860>
2024-06-06 03:46:42,756 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,756 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,757 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,757 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b10860>
2024-06-06 03:46:42,757 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,757 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,757 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,757 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,757 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,757 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b10860>
2024-06-06 03:46:42,757 - DEBUG - on stmt: invert = const(bool, False)
2024-06-06 03:46:42,757 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,757 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,758 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,758 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b10860>
2024-06-06 03:46:42,758 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,758 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,758 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,758 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,758 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,758 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,758 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b10860>
2024-06-06 03:46:42,758 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,758 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,758 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,758 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,759 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,759 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,759 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,759 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,759 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b10860>
2024-06-06 03:46:42,759 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,759 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,759 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,759 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,759 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,759 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,760 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b10860>
2024-06-06 03:46:42,760 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,760 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,760 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,760 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,760 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,760 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,760 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,760 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b10860>
2024-06-06 03:46:42,760 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,760 - DEBUG - on stmt: r.1 = $binop_imul250.2
2024-06-06 03:46:42,760 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,761 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,761 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b10860>
2024-06-06 03:46:42,761 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,761 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,761 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,761 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,761 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,761 - DEBUG - on stmt: a.1 = $binop_imul270.5
2024-06-06 03:46:42,761 - DEBUG - replaced with: a.1.1 = $binop_imul270.5
2024-06-06 03:46:42,761 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,761 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,761 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,762 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,762 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,762 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,762 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b10860>
2024-06-06 03:46:42,762 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,762 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,762 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b10860>
2024-06-06 03:46:42,762 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2024-06-06 03:46:42,762 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,762 - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,762 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,762 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,762 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b10860>
2024-06-06 03:46:42,763 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,763 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2024-06-06 03:46:42,763 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,763 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,763 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,763 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b10860>
2024-06-06 03:46:42,763 - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2024-06-06 03:46:42,763 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,763 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fe9b9b122d0>],
             256: [<numba.core.ir.Assign object at 0x7fe9b9dbfa40>]})
2024-06-06 03:46:42,763 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,763 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,763 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,764 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,764 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-06 03:46:42,764 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,764 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,764 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2024-06-06 03:46:42,764 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,764 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,764 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,764 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,764 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,764 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,764 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,765 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,765 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,765 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,765 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,765 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,765 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,765 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,765 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,765 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,765 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,765 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,765 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,766 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,766 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,766 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,766 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,766 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,766 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,766 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,766 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,766 - DEBUG - on stmt: invert = const(bool, False)
2024-06-06 03:46:42,766 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,766 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,766 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,766 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,767 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,767 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,767 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,767 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,767 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,767 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,767 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,767 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,767 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,767 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,767 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,767 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,768 - DEBUG - find_def var='a.1' stmt=$216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,768 - DEBUG - find_def_from_top label 164
2024-06-06 03:46:42,768 - DEBUG - idom 154 from label 164
2024-06-06 03:46:42,768 - DEBUG - find_def_from_bottom label 154
2024-06-06 03:46:42,768 - DEBUG - find_def_from_top label 154
2024-06-06 03:46:42,768 - DEBUG - idom 0 from label 154
2024-06-06 03:46:42,768 - DEBUG - find_def_from_bottom label 0
2024-06-06 03:46:42,768 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,768 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,768 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,768 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,768 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,768 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,769 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,769 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,769 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,769 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,769 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,769 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,769 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,769 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,769 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,769 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,770 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,770 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,770 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,770 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,770 - DEBUG - find_def var='a.1' stmt=$binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,770 - DEBUG - find_def_from_top label 246
2024-06-06 03:46:42,770 - DEBUG - idom 236 from label 246
2024-06-06 03:46:42,770 - DEBUG - find_def_from_bottom label 236
2024-06-06 03:46:42,770 - DEBUG - find_def_from_top label 236
2024-06-06 03:46:42,770 - DEBUG - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 236
2024-06-06 03:46:42,770 - DEBUG - find_def_from_bottom label 226
2024-06-06 03:46:42,770 - DEBUG - find_def_from_top label 226
2024-06-06 03:46:42,771 - DEBUG - idom 154 from label 226
2024-06-06 03:46:42,771 - DEBUG - find_def_from_bottom label 154
2024-06-06 03:46:42,771 - DEBUG - find_def_from_top label 154
2024-06-06 03:46:42,771 - DEBUG - idom 0 from label 154
2024-06-06 03:46:42,771 - DEBUG - find_def_from_bottom label 0
2024-06-06 03:46:42,771 - DEBUG - incoming_def a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,771 - DEBUG - find_def_from_bottom label 286
2024-06-06 03:46:42,771 - DEBUG - find_def_from_top label 286
2024-06-06 03:46:42,771 - DEBUG - idom 256 from label 286
2024-06-06 03:46:42,771 - DEBUG - find_def_from_bottom label 256
2024-06-06 03:46:42,771 - DEBUG - incoming_def a.1.1 = $binop_imul270.5
2024-06-06 03:46:42,771 - DEBUG - replaced with: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,771 - DEBUG - on stmt: r.1 = $binop_imul250.2
2024-06-06 03:46:42,772 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,772 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,772 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,772 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,772 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,772 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,772 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,772 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,772 - DEBUG - find_def var='a.1' stmt=$binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,772 - DEBUG - find_def_from_top label 256
2024-06-06 03:46:42,772 - DEBUG - idom 236 from label 256
2024-06-06 03:46:42,772 - DEBUG - find_def_from_bottom label 236
2024-06-06 03:46:42,773 - DEBUG - replaced with: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,773 - DEBUG - on stmt: a.1.1 = $binop_imul270.5
2024-06-06 03:46:42,773 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,773 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,773 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,773 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,773 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,773 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,773 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,773 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,774 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,774 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,774 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2024-06-06 03:46:42,774 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,774 - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,774 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,774 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,774 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,774 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,774 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2024-06-06 03:46:42,774 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,775 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,775 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,775 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b114c0>
2024-06-06 03:46:42,775 - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2024-06-06 03:46:42,775 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,775 - DEBUG - Fix SSA violator on var invert
2024-06-06 03:46:42,775 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,775 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b11bb0>
2024-06-06 03:46:42,775 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,775 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,775 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-06 03:46:42,776 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,776 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,776 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2024-06-06 03:46:42,776 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,776 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,776 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,776 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,776 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,776 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,776 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,776 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b11bb0>
2024-06-06 03:46:42,776 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,777 - DEBUG - first assign: invert
2024-06-06 03:46:42,777 - DEBUG - replaced with: invert = const(bool, True)
2024-06-06 03:46:42,777 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,777 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,777 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,777 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,777 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,777 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,777 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,777 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b11bb0>
2024-06-06 03:46:42,777 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,777 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,778 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,778 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b11bb0>
2024-06-06 03:46:42,778 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,778 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,778 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,778 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,778 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,778 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b11bb0>
2024-06-06 03:46:42,778 - DEBUG - on stmt: invert = const(bool, False)
2024-06-06 03:46:42,778 - DEBUG - replaced with: invert.1 = const(bool, False)
2024-06-06 03:46:42,778 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,778 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,779 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,779 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b11bb0>
2024-06-06 03:46:42,779 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,779 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,779 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,779 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,779 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,779 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,779 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b11bb0>
2024-06-06 03:46:42,779 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,779 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,779 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,779 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,780 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,780 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,780 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,780 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,780 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b11bb0>
2024-06-06 03:46:42,780 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,780 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,780 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,780 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,780 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,780 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,780 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b11bb0>
2024-06-06 03:46:42,781 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,781 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,781 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,781 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,781 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,781 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,781 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,781 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,781 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b11bb0>
2024-06-06 03:46:42,781 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,781 - DEBUG - on stmt: r.1 = $binop_imul250.2
2024-06-06 03:46:42,781 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,782 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,782 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b11bb0>
2024-06-06 03:46:42,782 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,782 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,782 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,782 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,782 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,782 - DEBUG - on stmt: a.1.1 = $binop_imul270.5
2024-06-06 03:46:42,782 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,782 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,782 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,782 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,783 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,783 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,783 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b11bb0>
2024-06-06 03:46:42,783 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,783 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,783 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b11bb0>
2024-06-06 03:46:42,783 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2024-06-06 03:46:42,783 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,783 - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,783 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,783 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,783 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b11bb0>
2024-06-06 03:46:42,784 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,784 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2024-06-06 03:46:42,784 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,784 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,784 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,784 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b11bb0>
2024-06-06 03:46:42,784 - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2024-06-06 03:46:42,784 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,784 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {48: [<numba.core.ir.Assign object at 0x7fe9b9b125d0>],
             146: [<numba.core.ir.Assign object at 0x7fe9b9b11fa0>]})
2024-06-06 03:46:42,784 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,784 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,784 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,785 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,785 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-06 03:46:42,785 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,785 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,785 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2024-06-06 03:46:42,785 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,785 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,785 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,785 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,785 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,785 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,786 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,786 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,786 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,786 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,786 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,786 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,786 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,786 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,786 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,786 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,786 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,786 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,787 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,787 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,787 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,787 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,787 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,787 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,787 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,787 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,787 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,787 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-06 03:46:42,787 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,788 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,788 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,788 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,788 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,788 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,788 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,788 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,788 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,788 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,788 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,788 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,788 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,789 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,789 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,789 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,789 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,789 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,789 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,789 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,789 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,789 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,789 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,789 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,790 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,790 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,790 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,790 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,790 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,790 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,790 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,790 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,790 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,790 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,790 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,791 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,791 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,791 - DEBUG - on stmt: r.1 = $binop_imul250.2
2024-06-06 03:46:42,791 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,791 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,791 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,791 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,791 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,791 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,791 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,791 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,791 - DEBUG - on stmt: a.1.1 = $binop_imul270.5
2024-06-06 03:46:42,792 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,792 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,792 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,792 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,792 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,792 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,792 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,792 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,792 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,792 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,792 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2024-06-06 03:46:42,793 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,793 - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,793 - DEBUG - find_def var='invert' stmt=$290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,793 - DEBUG - find_def_from_top label 288
2024-06-06 03:46:42,793 - DEBUG - idom 226 from label 288
2024-06-06 03:46:42,793 - DEBUG - find_def_from_bottom label 226
2024-06-06 03:46:42,793 - DEBUG - find_def_from_top label 226
2024-06-06 03:46:42,793 - DEBUG - idom 154 from label 226
2024-06-06 03:46:42,793 - DEBUG - find_def_from_bottom label 154
2024-06-06 03:46:42,793 - DEBUG - find_def_from_top label 154
2024-06-06 03:46:42,793 - DEBUG - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 154
2024-06-06 03:46:42,794 - DEBUG - find_def_from_bottom label 80
2024-06-06 03:46:42,794 - DEBUG - find_def_from_top label 80
2024-06-06 03:46:42,794 - DEBUG - idom 48 from label 80
2024-06-06 03:46:42,794 - DEBUG - find_def_from_bottom label 48
2024-06-06 03:46:42,794 - DEBUG - incoming_def invert = const(bool, True)
2024-06-06 03:46:42,794 - DEBUG - find_def_from_bottom label 146
2024-06-06 03:46:42,794 - DEBUG - incoming_def invert.1 = const(bool, False)
2024-06-06 03:46:42,794 - DEBUG - replaced with: $290pred = call bool290(invert.2, func=bool290, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,794 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,794 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,794 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,795 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,795 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2024-06-06 03:46:42,795 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,795 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,795 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,795 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,795 - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2024-06-06 03:46:42,795 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,795 - DEBUG - Fix SSA violator on var exp
2024-06-06 03:46:42,795 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,795 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b12570>
2024-06-06 03:46:42,796 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,796 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,796 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-06 03:46:42,796 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,796 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,796 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2024-06-06 03:46:42,796 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,796 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,796 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,796 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,796 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,796 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,796 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,797 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b12570>
2024-06-06 03:46:42,797 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,797 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,797 - DEBUG - first assign: exp
2024-06-06 03:46:42,797 - DEBUG - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,797 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,797 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,797 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,797 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,797 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,797 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,797 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b12570>
2024-06-06 03:46:42,798 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,798 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,798 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,798 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b12570>
2024-06-06 03:46:42,798 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,798 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,798 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,798 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,798 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,798 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b12570>
2024-06-06 03:46:42,798 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-06 03:46:42,798 - DEBUG - on stmt: exp = b
2024-06-06 03:46:42,799 - DEBUG - replaced with: exp.1 = b
2024-06-06 03:46:42,799 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,799 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,799 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b12570>
2024-06-06 03:46:42,799 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[80, 146])
2024-06-06 03:46:42,799 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,799 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,799 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,799 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,799 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,799 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,799 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b12570>
2024-06-06 03:46:42,800 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,800 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,800 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,800 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,800 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,800 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,800 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,800 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,800 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b12570>
2024-06-06 03:46:42,800 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,800 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,800 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,801 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,801 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,801 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,801 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b12570>
2024-06-06 03:46:42,801 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,801 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,801 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,801 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,801 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,801 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,801 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,801 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,802 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b12570>
2024-06-06 03:46:42,802 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,802 - DEBUG - on stmt: r.1 = $binop_imul250.2
2024-06-06 03:46:42,802 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,802 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,802 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b12570>
2024-06-06 03:46:42,802 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,802 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,802 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,802 - DEBUG - on stmt: exp = $binop_irshift260.2
2024-06-06 03:46:42,802 - DEBUG - replaced with: exp.2 = $binop_irshift260.2
2024-06-06 03:46:42,802 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,803 - DEBUG - on stmt: a.1.1 = $binop_imul270.5
2024-06-06 03:46:42,803 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,803 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,803 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,803 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,803 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,803 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,804 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b12570>
2024-06-06 03:46:42,804 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,804 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,804 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b12570>
2024-06-06 03:46:42,804 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2024-06-06 03:46:42,804 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,804 - DEBUG - on stmt: $290pred = call bool290(invert.2, func=bool290, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,804 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,804 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,804 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b12570>
2024-06-06 03:46:42,804 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,805 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2024-06-06 03:46:42,805 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,805 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,805 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,805 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7fe9b9b12570>
2024-06-06 03:46:42,805 - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2024-06-06 03:46:42,805 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,805 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {48: [<numba.core.ir.Assign object at 0x7fe9b9b123c0>],
             146: [<numba.core.ir.Assign object at 0x7fe9b9dbd4f0>],
             256: [<numba.core.ir.Assign object at 0x7fe9b9dbdaf0>]})
2024-06-06 03:46:42,806 - DEBUG - ==== SSA block rewrite pass on 0
2024-06-06 03:46:42,806 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,806 - DEBUG - on stmt: a = arg(0, name=a)
2024-06-06 03:46:42,806 - DEBUG - on stmt: b = arg(1, name=b)
2024-06-06 03:46:42,806 - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2024-06-06 03:46:42,806 - DEBUG - on stmt: $const10.2 = const(int, 1)
2024-06-06 03:46:42,806 - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,806 - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2024-06-06 03:46:42,806 - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,807 - DEBUG - on stmt: $const40.9 = const(int, 0)
2024-06-06 03:46:42,807 - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2024-06-06 03:46:42,807 - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,807 - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,807 - DEBUG - on stmt: branch $46pred, 48, 146
2024-06-06 03:46:42,807 - DEBUG - ==== SSA block rewrite pass on 48
2024-06-06 03:46:42,807 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,807 - DEBUG - on stmt: invert = const(bool, True)
2024-06-06 03:46:42,807 - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,807 - DEBUG - on stmt: $const60.4 = const(int, 0)
2024-06-06 03:46:42,808 - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,808 - DEBUG - find_def var='exp' stmt=$62compare_op.5 = exp < $const60.4
2024-06-06 03:46:42,808 - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,808 - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,808 - DEBUG - on stmt: branch $66pred, 68, 80
2024-06-06 03:46:42,808 - DEBUG - ==== SSA block rewrite pass on 68
2024-06-06 03:46:42,808 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,808 - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2024-06-06 03:46:42,808 - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2024-06-06 03:46:42,809 - DEBUG - ==== SSA block rewrite pass on 80
2024-06-06 03:46:42,809 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,809 - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2024-06-06 03:46:42,809 - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,809 - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,809 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,809 - DEBUG - ==== SSA block rewrite pass on 146
2024-06-06 03:46:42,809 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,809 - DEBUG - on stmt: invert.1 = const(bool, False)
2024-06-06 03:46:42,809 - DEBUG - on stmt: exp.1 = b
2024-06-06 03:46:42,809 - DEBUG - on stmt: jump 154
2024-06-06 03:46:42,810 - DEBUG - ==== SSA block rewrite pass on 154
2024-06-06 03:46:42,810 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,810 - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[80, 146])
2024-06-06 03:46:42,810 - DEBUG - on stmt: $const156.1 = const(int, 65536)
2024-06-06 03:46:42,810 - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,810 - DEBUG - find_def var='exp' stmt=$158compare_op.2 = exp > $const156.1
2024-06-06 03:46:42,810 - DEBUG - find_def_from_top label 154
2024-06-06 03:46:42,810 - DEBUG - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
2024-06-06 03:46:42,810 - DEBUG - find_def_from_bottom label 80
2024-06-06 03:46:42,810 - DEBUG - find_def_from_top label 80
2024-06-06 03:46:42,810 - DEBUG - idom 48 from label 80
2024-06-06 03:46:42,811 - DEBUG - find_def_from_bottom label 48
2024-06-06 03:46:42,811 - DEBUG - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2024-06-06 03:46:42,811 - DEBUG - find_def_from_bottom label 146
2024-06-06 03:46:42,811 - DEBUG - incoming_def exp.1 = b
2024-06-06 03:46:42,811 - DEBUG - replaced with: $158compare_op.2 = exp.3 > $const156.1
2024-06-06 03:46:42,811 - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,811 - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,811 - DEBUG - on stmt: branch $162pred, 164, 226
2024-06-06 03:46:42,811 - DEBUG - ==== SSA block rewrite pass on 164
2024-06-06 03:46:42,811 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,811 - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' from '/usr/local/lib/python3.12/lib-dynload/math.cpython-312-x86_64-linux-gnu.so'>)
2024-06-06 03:46:42,812 - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2024-06-06 03:46:42,812 - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2024-06-06 03:46:42,812 - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,812 - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,812 - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2024-06-06 03:46:42,812 - DEBUG - on stmt: return $224return_value.9
2024-06-06 03:46:42,812 - DEBUG - ==== SSA block rewrite pass on 226
2024-06-06 03:46:42,812 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,812 - DEBUG - on stmt: $const228.1 = const(int, 0)
2024-06-06 03:46:42,812 - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,812 - DEBUG - find_def var='exp' stmt=$230compare_op.2 = exp != $const228.1
2024-06-06 03:46:42,813 - DEBUG - find_def_from_top label 226
2024-06-06 03:46:42,813 - DEBUG - idom 154 from label 226
2024-06-06 03:46:42,813 - DEBUG - find_def_from_bottom label 154
2024-06-06 03:46:42,813 - DEBUG - replaced with: $230compare_op.2 = exp.3 != $const228.1
2024-06-06 03:46:42,813 - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,813 - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,813 - DEBUG - on stmt: branch $234pred, 236, 288
2024-06-06 03:46:42,813 - DEBUG - ==== SSA block rewrite pass on 236
2024-06-06 03:46:42,813 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,813 - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,813 - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2024-06-06 03:46:42,814 - DEBUG - on stmt: $const238.1 = const(int, 1)
2024-06-06 03:46:42,814 - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,814 - DEBUG - find_def var='exp' stmt=$binop_and_240.2 = exp & $const238.1
2024-06-06 03:46:42,814 - DEBUG - find_def_from_top label 236
2024-06-06 03:46:42,814 - DEBUG - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 236
2024-06-06 03:46:42,814 - DEBUG - find_def_from_bottom label 226
2024-06-06 03:46:42,814 - DEBUG - find_def_from_top label 226
2024-06-06 03:46:42,814 - DEBUG - idom 154 from label 226
2024-06-06 03:46:42,814 - DEBUG - find_def_from_bottom label 154
2024-06-06 03:46:42,814 - DEBUG - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[80, 146])
2024-06-06 03:46:42,814 - DEBUG - find_def_from_bottom label 286
2024-06-06 03:46:42,815 - DEBUG - find_def_from_top label 286
2024-06-06 03:46:42,815 - DEBUG - idom 256 from label 286
2024-06-06 03:46:42,815 - DEBUG - find_def_from_bottom label 256
2024-06-06 03:46:42,815 - DEBUG - incoming_def exp.2 = $binop_irshift260.2
2024-06-06 03:46:42,815 - DEBUG - replaced with: $binop_and_240.2 = exp.4 & $const238.1
2024-06-06 03:46:42,815 - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,815 - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,815 - DEBUG - on stmt: branch $244pred, 246, 256
2024-06-06 03:46:42,815 - DEBUG - ==== SSA block rewrite pass on 246
2024-06-06 03:46:42,815 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,815 - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,816 - DEBUG - on stmt: r.1 = $binop_imul250.2
2024-06-06 03:46:42,816 - DEBUG - on stmt: jump 256
2024-06-06 03:46:42,816 - DEBUG - ==== SSA block rewrite pass on 256
2024-06-06 03:46:42,816 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,816 - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2024-06-06 03:46:42,816 - DEBUG - on stmt: $const258.1 = const(int, 1)
2024-06-06 03:46:42,816 - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,816 - DEBUG - find_def var='exp' stmt=$binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,816 - DEBUG - find_def_from_top label 256
2024-06-06 03:46:42,816 - DEBUG - idom 236 from label 256
2024-06-06 03:46:42,816 - DEBUG - find_def_from_bottom label 236
2024-06-06 03:46:42,816 - DEBUG - replaced with: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,817 - DEBUG - on stmt: exp.2 = $binop_irshift260.2
2024-06-06 03:46:42,817 - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2024-06-06 03:46:42,817 - DEBUG - on stmt: a.1.1 = $binop_imul270.5
2024-06-06 03:46:42,817 - DEBUG - on stmt: $const278.7 = const(int, 0)
2024-06-06 03:46:42,817 - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,817 - DEBUG - find_def var='exp' stmt=$280compare_op.8 = exp != $const278.7
2024-06-06 03:46:42,817 - DEBUG - replaced with: $280compare_op.8 = exp.2 != $const278.7
2024-06-06 03:46:42,817 - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,817 - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,817 - DEBUG - on stmt: branch $284pred, 286, 288
2024-06-06 03:46:42,817 - DEBUG - ==== SSA block rewrite pass on 286
2024-06-06 03:46:42,818 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,818 - DEBUG - on stmt: jump 236
2024-06-06 03:46:42,818 - DEBUG - ==== SSA block rewrite pass on 288
2024-06-06 03:46:42,818 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,818 - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2024-06-06 03:46:42,818 - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2024-06-06 03:46:42,818 - DEBUG - on stmt: $290pred = call bool290(invert.2, func=bool290, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,818 - DEBUG - on stmt: branch $290pred, 292, 302
2024-06-06 03:46:42,818 - DEBUG - ==== SSA block rewrite pass on 292
2024-06-06 03:46:42,818 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,818 - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2024-06-06 03:46:42,819 - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2024-06-06 03:46:42,819 - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2024-06-06 03:46:42,819 - DEBUG - on stmt: return $300return_value.3
2024-06-06 03:46:42,819 - DEBUG - ==== SSA block rewrite pass on 302
2024-06-06 03:46:42,819 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7fe9b9b10860>
2024-06-06 03:46:42,819 - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2024-06-06 03:46:42,819 - DEBUG - on stmt: return $304return_value.1
2024-06-06 03:46:42,953 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2504)
           2	RESUME(arg=0, lineno=2504)
           4	LOAD_GLOBAL(arg=1, lineno=2508)
          14	LOAD_ATTR(arg=2, lineno=2508)
          34	LOAD_FAST(arg=0, lineno=2508)
          36	CALL(arg=1, lineno=2508)
          44	LOAD_CONST(arg=1, lineno=2508)
          46	LOAD_GLOBAL(arg=1, lineno=2508)
          56	LOAD_ATTR(arg=4, lineno=2508)
          76	LOAD_FAST(arg=0, lineno=2508)
          78	CALL(arg=1, lineno=2508)
          86	BINARY_OP(arg=5, lineno=2508)
          90	BINARY_OP(arg=0, lineno=2508)
          94	RETURN_VALUE(arg=None, lineno=2508)
2024-06-06 03:46:42,953 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:42,953 - DEBUG - stack: []
2024-06-06 03:46:42,953 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:42,953 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2504)
2024-06-06 03:46:42,953 - DEBUG - stack []
2024-06-06 03:46:42,953 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2504)
2024-06-06 03:46:42,954 - DEBUG - stack []
2024-06-06 03:46:42,954 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-06-06 03:46:42,954 - DEBUG - stack []
2024-06-06 03:46:42,954 - DEBUG - dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=2508)
2024-06-06 03:46:42,954 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:42,954 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=2508)
2024-06-06 03:46:42,954 - DEBUG - stack ['$null$4.1', '$14load_attr.2']
2024-06-06 03:46:42,954 - DEBUG - dispatch pc=36, inst=CALL(arg=1, lineno=2508)
2024-06-06 03:46:42,954 - DEBUG - stack ['$null$4.1', '$14load_attr.2', '$x34.3']
2024-06-06 03:46:42,954 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=2508)
2024-06-06 03:46:42,954 - DEBUG - stack ['$36call.4']
2024-06-06 03:46:42,954 - DEBUG - dispatch pc=46, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-06-06 03:46:42,955 - DEBUG - stack ['$36call.4', '$const44.5']
2024-06-06 03:46:42,955 - DEBUG - dispatch pc=56, inst=LOAD_ATTR(arg=4, lineno=2508)
2024-06-06 03:46:42,955 - DEBUG - stack ['$36call.4', '$const44.5', '$null$46.7', '$46load_global.6']
2024-06-06 03:46:42,955 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=2508)
2024-06-06 03:46:42,955 - DEBUG - stack ['$36call.4', '$const44.5', '$null$46.7', '$56load_attr.8']
2024-06-06 03:46:42,955 - DEBUG - dispatch pc=78, inst=CALL(arg=1, lineno=2508)
2024-06-06 03:46:42,955 - DEBUG - stack ['$36call.4', '$const44.5', '$null$46.7', '$56load_attr.8', '$x76.9']
2024-06-06 03:46:42,955 - DEBUG - dispatch pc=86, inst=BINARY_OP(arg=5, lineno=2508)
2024-06-06 03:46:42,955 - DEBUG - stack ['$36call.4', '$const44.5', '$78call.10']
2024-06-06 03:46:42,955 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=0, lineno=2508)
2024-06-06 03:46:42,955 - DEBUG - stack ['$36call.4', '$binop_mul86.11']
2024-06-06 03:46:42,956 - DEBUG - dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=2508)
2024-06-06 03:46:42,956 - DEBUG - stack ['$binop_add90.12']
2024-06-06 03:46:42,956 - DEBUG - end state. edges=[]
2024-06-06 03:46:42,956 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:42,956 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:42,956 - DEBUG - defmap: {}
2024-06-06 03:46:42,956 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:42,956 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:42,956 - DEBUG - keep phismap: {}
2024-06-06 03:46:42,956 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:42,957 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:42,957 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'item': '$4load_global.0', 'res': '$14load_attr.2'}), (34, {'res': '$x34.3'}), (36, {'func': '$14load_attr.2', 'args': ['$x34.3'], 'kw_names': None, 'res': '$36call.4'}), (44, {'res': '$const44.5'}), (46, {'idx': 0, 'res': '$46load_global.6'}), (56, {'item': '$46load_global.6', 'res': '$56load_attr.8'}), (76, {'res': '$x76.9'}), (78, {'func': '$56load_attr.8', 'args': ['$x76.9'], 'kw_names': None, 'res': '$78call.10'}), (86, {'op': '*', 'lhs': '$const44.5', 'rhs': '$78call.10', 'res': '$binop_mul86.11'}), (90, {'op': '+', 'lhs': '$36call.4', 'rhs': '$binop_mul86.11', 'res': '$binop_add90.12'}), (94, {'retval': '$binop_add90.12', 'castval': '$94return_value.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:42,957 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $4load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$4load_global.0']
    $14load_attr.2 = getattr(value=$4load_global.0, attr=cos) ['$14load_attr.2', '$4load_global.0']
    $36call.4 = call $14load_attr.2(x, func=$14load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_attr.2', '$36call.4', 'x']
    $const44.5 = const(complex, 1j)          ['$const44.5']
    $46load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$46load_global.6']
    $56load_attr.8 = getattr(value=$46load_global.6, attr=sin) ['$46load_global.6', '$56load_attr.8']
    $78call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_attr.8', '$78call.10', 'x']
    $binop_mul86.11 = $const44.5 * $78call.10 ['$78call.10', '$binop_mul86.11', '$const44.5']
    $binop_add90.12 = $36call.4 + $binop_mul86.11 ['$36call.4', '$binop_add90.12', '$binop_mul86.11']
    $94return_value.13 = cast(value=$binop_add90.12) ['$94return_value.13', '$binop_add90.12']
    return $94return_value.13                ['$94return_value.13']

2024-06-06 03:46:42,963 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:42,963 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d21245f0>
2024-06-06 03:46:42,964 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:42,964 - DEBUG - on stmt: $4load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:42,964 - DEBUG - on stmt: $14load_attr.2 = getattr(value=$4load_global.0, attr=cos)
2024-06-06 03:46:42,964 - DEBUG - on stmt: $36call.4 = call $14load_attr.2(x, func=$14load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,964 - DEBUG - on stmt: $const44.5 = const(complex, 1j)
2024-06-06 03:46:42,964 - DEBUG - on stmt: $46load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:42,964 - DEBUG - on stmt: $56load_attr.8 = getattr(value=$46load_global.6, attr=sin)
2024-06-06 03:46:42,964 - DEBUG - on stmt: $78call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:42,964 - DEBUG - on stmt: $binop_mul86.11 = $const44.5 * $78call.10
2024-06-06 03:46:42,965 - DEBUG - on stmt: $binop_add90.12 = $36call.4 + $binop_mul86.11
2024-06-06 03:46:42,965 - DEBUG - on stmt: $94return_value.13 = cast(value=$binop_add90.12)
2024-06-06 03:46:42,965 - DEBUG - on stmt: return $94return_value.13
2024-06-06 03:46:42,965 - DEBUG - defs defaultdict(<class 'list'>,
            {'$14load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9b9720740>,
                                 0)],
             '$36call.4': [(<numba.core.ir.Assign object at 0x7fe9b9723500>,
                            0)],
             '$46load_global.6': [(<numba.core.ir.Assign object at 0x7fe9b9720e00>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9b9722690>,
                                  0)],
             '$56load_attr.8': [(<numba.core.ir.Assign object at 0x7fe9d21279e0>,
                                 0)],
             '$78call.10': [(<numba.core.ir.Assign object at 0x7fe9d21277a0>,
                             0)],
             '$94return_value.13': [(<numba.core.ir.Assign object at 0x7fe9d21248c0>,
                                     0)],
             '$binop_add90.12': [(<numba.core.ir.Assign object at 0x7fe9d2124890>,
                                  0)],
             '$binop_mul86.11': [(<numba.core.ir.Assign object at 0x7fe9d2126960>,
                                  0)],
             '$const44.5': [(<numba.core.ir.Assign object at 0x7fe9b9721d00>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9b97213a0>, 0)]})
2024-06-06 03:46:42,965 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d21245f0>
2024-06-06 03:46:43,037 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2504)
           2	RESUME(arg=0, lineno=2504)
           4	LOAD_GLOBAL(arg=1, lineno=2508)
          14	LOAD_ATTR(arg=2, lineno=2508)
          34	LOAD_FAST(arg=0, lineno=2508)
          36	CALL(arg=1, lineno=2508)
          44	LOAD_CONST(arg=1, lineno=2508)
          46	LOAD_GLOBAL(arg=1, lineno=2508)
          56	LOAD_ATTR(arg=4, lineno=2508)
          76	LOAD_FAST(arg=0, lineno=2508)
          78	CALL(arg=1, lineno=2508)
          86	BINARY_OP(arg=5, lineno=2508)
          90	BINARY_OP(arg=0, lineno=2508)
          94	RETURN_VALUE(arg=None, lineno=2508)
2024-06-06 03:46:43,037 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2024-06-06 03:46:43,037 - DEBUG - stack: []
2024-06-06 03:46:43,037 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2024-06-06 03:46:43,037 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2504)
2024-06-06 03:46:43,037 - DEBUG - stack []
2024-06-06 03:46:43,037 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2504)
2024-06-06 03:46:43,037 - DEBUG - stack []
2024-06-06 03:46:43,037 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-06-06 03:46:43,037 - DEBUG - stack []
2024-06-06 03:46:43,037 - DEBUG - dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=2508)
2024-06-06 03:46:43,038 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2024-06-06 03:46:43,038 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=2508)
2024-06-06 03:46:43,038 - DEBUG - stack ['$null$4.1', '$14load_attr.2']
2024-06-06 03:46:43,038 - DEBUG - dispatch pc=36, inst=CALL(arg=1, lineno=2508)
2024-06-06 03:46:43,038 - DEBUG - stack ['$null$4.1', '$14load_attr.2', '$x34.3']
2024-06-06 03:46:43,038 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=2508)
2024-06-06 03:46:43,038 - DEBUG - stack ['$36call.4']
2024-06-06 03:46:43,038 - DEBUG - dispatch pc=46, inst=LOAD_GLOBAL(arg=1, lineno=2508)
2024-06-06 03:46:43,038 - DEBUG - stack ['$36call.4', '$const44.5']
2024-06-06 03:46:43,038 - DEBUG - dispatch pc=56, inst=LOAD_ATTR(arg=4, lineno=2508)
2024-06-06 03:46:43,038 - DEBUG - stack ['$36call.4', '$const44.5', '$null$46.7', '$46load_global.6']
2024-06-06 03:46:43,038 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=2508)
2024-06-06 03:46:43,038 - DEBUG - stack ['$36call.4', '$const44.5', '$null$46.7', '$56load_attr.8']
2024-06-06 03:46:43,039 - DEBUG - dispatch pc=78, inst=CALL(arg=1, lineno=2508)
2024-06-06 03:46:43,039 - DEBUG - stack ['$36call.4', '$const44.5', '$null$46.7', '$56load_attr.8', '$x76.9']
2024-06-06 03:46:43,039 - DEBUG - dispatch pc=86, inst=BINARY_OP(arg=5, lineno=2508)
2024-06-06 03:46:43,039 - DEBUG - stack ['$36call.4', '$const44.5', '$78call.10']
2024-06-06 03:46:43,039 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=0, lineno=2508)
2024-06-06 03:46:43,039 - DEBUG - stack ['$36call.4', '$binop_mul86.11']
2024-06-06 03:46:43,039 - DEBUG - dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=2508)
2024-06-06 03:46:43,039 - DEBUG - stack ['$binop_add90.12']
2024-06-06 03:46:43,039 - DEBUG - end state. edges=[]
2024-06-06 03:46:43,039 - DEBUG - -------------------------Prune PHIs-------------------------
2024-06-06 03:46:43,039 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2024-06-06 03:46:43,040 - DEBUG - defmap: {}
2024-06-06 03:46:43,040 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:43,040 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2024-06-06 03:46:43,040 - DEBUG - keep phismap: {}
2024-06-06 03:46:43,040 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2024-06-06 03:46:43,040 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2024-06-06 03:46:43,040 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'item': '$4load_global.0', 'res': '$14load_attr.2'}), (34, {'res': '$x34.3'}), (36, {'func': '$14load_attr.2', 'args': ['$x34.3'], 'kw_names': None, 'res': '$36call.4'}), (44, {'res': '$const44.5'}), (46, {'idx': 0, 'res': '$46load_global.6'}), (56, {'item': '$46load_global.6', 'res': '$56load_attr.8'}), (76, {'res': '$x76.9'}), (78, {'func': '$56load_attr.8', 'args': ['$x76.9'], 'kw_names': None, 'res': '$78call.10'}), (86, {'op': '*', 'lhs': '$const44.5', 'rhs': '$78call.10', 'res': '$binop_mul86.11'}), (90, {'op': '+', 'lhs': '$36call.4', 'rhs': '$binop_mul86.11', 'res': '$binop_add90.12'}), (94, {'retval': '$binop_add90.12', 'castval': '$94return_value.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2024-06-06 03:46:43,043 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $4load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$4load_global.0']
    $14load_attr.2 = getattr(value=$4load_global.0, attr=cos) ['$14load_attr.2', '$4load_global.0']
    $36call.4 = call $14load_attr.2(x, func=$14load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_attr.2', '$36call.4', 'x']
    $const44.5 = const(complex, 1j)          ['$const44.5']
    $46load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>) ['$46load_global.6']
    $56load_attr.8 = getattr(value=$46load_global.6, attr=sin) ['$46load_global.6', '$56load_attr.8']
    $78call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_attr.8', '$78call.10', 'x']
    $binop_mul86.11 = $const44.5 * $78call.10 ['$78call.10', '$binop_mul86.11', '$const44.5']
    $binop_add90.12 = $36call.4 + $binop_mul86.11 ['$36call.4', '$binop_add90.12', '$binop_mul86.11']
    $94return_value.13 = cast(value=$binop_add90.12) ['$94return_value.13', '$binop_add90.12']
    return $94return_value.13                ['$94return_value.13']

2024-06-06 03:46:43,049 - DEBUG - ==== SSA block analysis pass on 0
2024-06-06 03:46:43,049 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7fe9d2418410>
2024-06-06 03:46:43,049 - DEBUG - on stmt: x = arg(0, name=x)
2024-06-06 03:46:43,049 - DEBUG - on stmt: $4load_global.0 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:43,049 - DEBUG - on stmt: $14load_attr.2 = getattr(value=$4load_global.0, attr=cos)
2024-06-06 03:46:43,049 - DEBUG - on stmt: $36call.4 = call $14load_attr.2(x, func=$14load_attr.2, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:43,049 - DEBUG - on stmt: $const44.5 = const(complex, 1j)
2024-06-06 03:46:43,049 - DEBUG - on stmt: $46load_global.6 = global(np: <module 'numpy' from '/usr/local/lib/python3.12/site-packages/numpy/__init__.py'>)
2024-06-06 03:46:43,049 - DEBUG - on stmt: $56load_attr.8 = getattr(value=$46load_global.6, attr=sin)
2024-06-06 03:46:43,050 - DEBUG - on stmt: $78call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
2024-06-06 03:46:43,050 - DEBUG - on stmt: $binop_mul86.11 = $const44.5 * $78call.10
2024-06-06 03:46:43,050 - DEBUG - on stmt: $binop_add90.12 = $36call.4 + $binop_mul86.11
2024-06-06 03:46:43,050 - DEBUG - on stmt: $94return_value.13 = cast(value=$binop_add90.12)
2024-06-06 03:46:43,050 - DEBUG - on stmt: return $94return_value.13
2024-06-06 03:46:43,050 - DEBUG - defs defaultdict(<class 'list'>,
            {'$14load_attr.2': [(<numba.core.ir.Assign object at 0x7fe9d2444c50>,
                                 0)],
             '$36call.4': [(<numba.core.ir.Assign object at 0x7fe9d2446570>,
                            0)],
             '$46load_global.6': [(<numba.core.ir.Assign object at 0x7fe9d24440b0>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7fe9d2446b10>,
                                  0)],
             '$56load_attr.8': [(<numba.core.ir.Assign object at 0x7fe9d2444560>,
                                 0)],
             '$78call.10': [(<numba.core.ir.Assign object at 0x7fe9d243b7a0>,
                             0)],
             '$94return_value.13': [(<numba.core.ir.Assign object at 0x7fe9d2438410>,
                                     0)],
             '$binop_add90.12': [(<numba.core.ir.Assign object at 0x7fe9d24380b0>,
                                  0)],
             '$binop_mul86.11': [(<numba.core.ir.Assign object at 0x7fe9d243ab70>,
                                  0)],
             '$const44.5': [(<numba.core.ir.Assign object at 0x7fe9d2444260>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7fe9d2446900>, 0)]})
2024-06-06 03:46:43,050 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7fe9d2418410>
2024-06-06 03:46:43,129 - INFO - Resampled audio file to 16000 Hz
2024-06-06 03:46:43,129 - INFO - Loading VAD model...
2024-06-06 03:46:43,130 - INFO - Fetch hyperparams.yaml: Delegating to Huggingface hub, source speechbrain/vad-crdnn-libriparty.
2024-06-06 03:46:43,190 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/vad-crdnn-libriparty/resolve/main/hyperparams.yaml HTTP/1.1" 200 0
2024-06-06 03:46:43,192 - DEBUG - Attempting to acquire lock 140642231715360 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/2997745c077a2f053fc448b906506e42c002fbab.lock
2024-06-06 03:46:43,192 - DEBUG - Lock 140642231715360 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/2997745c077a2f053fc448b906506e42c002fbab.lock
2024-06-06 03:46:43,244 - DEBUG - https://huggingface.co:443 "GET /speechbrain/vad-crdnn-libriparty/resolve/main/hyperparams.yaml HTTP/1.1" 200 2286
2024-06-06 03:46:43,247 - DEBUG - Attempting to release lock 140642231715360 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/2997745c077a2f053fc448b906506e42c002fbab.lock
2024-06-06 03:46:43,247 - DEBUG - Lock 140642231715360 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/2997745c077a2f053fc448b906506e42c002fbab.lock
2024-06-06 03:46:43,247 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--vad-crdnn-libriparty/snapshots/c5d5ae4fce161d94c3ab0286e32fb4a041a21a04/hyperparams.yaml
2024-06-06 03:46:43,248 - INFO - Fetch custom.py: Delegating to Huggingface hub, source speechbrain/vad-crdnn-libriparty.
2024-06-06 03:46:43,292 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/vad-crdnn-libriparty/resolve/main/custom.py HTTP/1.1" 404 0
2024-06-06 03:46:43,361 - DEBUG - Collecting files (or symlinks) for pretraining in pretrained_models/vad-crdnn-libriparty.
2024-06-06 03:46:43,361 - INFO - Fetch model.ckpt: Delegating to Huggingface hub, source speechbrain/vad-crdnn-libriparty.
2024-06-06 03:46:43,429 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/vad-crdnn-libriparty/resolve/main/model.ckpt HTTP/1.1" 200 0
2024-06-06 03:46:43,430 - DEBUG - Attempting to acquire lock 140642226603936 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/ed5e10d285f444bc88dc562de5ee5adbd1e99419.lock
2024-06-06 03:46:43,430 - DEBUG - Lock 140642226603936 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/ed5e10d285f444bc88dc562de5ee5adbd1e99419.lock
2024-06-06 03:46:43,484 - DEBUG - https://huggingface.co:443 "GET /speechbrain/vad-crdnn-libriparty/resolve/main/model.ckpt HTTP/1.1" 200 452671
2024-06-06 03:46:43,597 - DEBUG - Attempting to release lock 140642226603936 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/ed5e10d285f444bc88dc562de5ee5adbd1e99419.lock
2024-06-06 03:46:43,597 - DEBUG - Lock 140642226603936 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/ed5e10d285f444bc88dc562de5ee5adbd1e99419.lock
2024-06-06 03:46:43,597 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--vad-crdnn-libriparty/snapshots/c5d5ae4fce161d94c3ab0286e32fb4a041a21a04/model.ckpt
2024-06-06 03:46:43,600 - INFO - Fetch mean_var_norm.ckpt: Delegating to Huggingface hub, source speechbrain/vad-crdnn-libriparty.
2024-06-06 03:46:43,674 - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/vad-crdnn-libriparty/resolve/main/mean_var_norm.ckpt HTTP/1.1" 200 0
2024-06-06 03:46:43,676 - DEBUG - Attempting to acquire lock 140641820689280 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/02440345e121a9bb398511be55774d0ed1d004ae.lock
2024-06-06 03:46:43,677 - DEBUG - Lock 140641820689280 acquired on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/02440345e121a9bb398511be55774d0ed1d004ae.lock
2024-06-06 03:46:43,727 - DEBUG - https://huggingface.co:443 "GET /speechbrain/vad-crdnn-libriparty/resolve/main/mean_var_norm.ckpt HTTP/1.1" 200 1063
2024-06-06 03:46:43,728 - DEBUG - Attempting to release lock 140641820689280 on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/02440345e121a9bb398511be55774d0ed1d004ae.lock
2024-06-06 03:46:43,728 - DEBUG - Lock 140641820689280 released on /root/.cache/huggingface/hub/.locks/models--speechbrain--vad-crdnn-libriparty/02440345e121a9bb398511be55774d0ed1d004ae.lock
2024-06-06 03:46:43,728 - INFO - HF fetch: /root/.cache/huggingface/hub/models--speechbrain--vad-crdnn-libriparty/snapshots/c5d5ae4fce161d94c3ab0286e32fb4a041a21a04/mean_var_norm.ckpt
2024-06-06 03:46:43,729 - INFO - Loading pretrained files for: model, mean_var_norm
2024-06-06 03:46:43,735 - INFO - VAD model loaded successfully.
2024-06-06 03:46:43,735 - INFO - Starting voice activity detection...
2024-06-06 03:46:43,735 - INFO - Destination tmp1k292ve3.wav: local file in /tmp/tmp1k292ve3.wav.
2024-06-06 03:46:43,927 - INFO - Voice activity detection completed.
2024-06-06 03:46:43,928 - INFO - 172.17.0.1 - - [06/Jun/2024 03:46:43] "POST /detect_voice_activity HTTP/1.1" 200 -
